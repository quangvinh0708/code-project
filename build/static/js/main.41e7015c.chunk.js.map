{"version":3,"sources":["actions/code.js","constant/localStorage.js","common/LocalStorage/setLocal.js","hooks/useLocalStorage.js","components/Code.js","actions/modal.js","constant/modal.js","components/NameProject.js","components/AuthPage/styles.js","actions/login.js","constant/login.js","actions/tutorial.js","contentLibrary/css/GetStarted/GetStarted.js","contentLibrary/css/Introduction/Introduction.js","common/constants/CSSconstants.js","constant/axios.js","contentLibrary/js/GetStarted/GetStarted.js","contentLibrary/js/Introduction/Introduction.js","common/constants/JSconstants.js","components/Direct.js","contentLibrary/html/Introduction/styles.js","components/LineDivider.js","contentLibrary/html/GetStarted/example.js","contentLibrary/html/GetStarted/GetStarted.js","contentLibrary/html/Introduction/example.js","contentLibrary/html/Introduction/Introduction.js","contentLibrary/html/Basic/example.js","contentLibrary/html/Basic/Basic.js","contentLibrary/html/HTMLElements/example.js","contentLibrary/html/HTMLElements/HTMLElements.js","contentLibrary/html/Attributes/example.js","contentLibrary/html/Heading/example.js","contentLibrary/html/Attributes/Attributes.js","contentLibrary/html/Heading/Heading.js","contentLibrary/html/Paragraphs/example.js","contentLibrary/html/Paragraphs/Paragraphs.js","contentLibrary/html/HTML Styles/example.js","contentLibrary/html/HTML Styles/Styles.js","contentLibrary/html/Formatting/example.js","contentLibrary/html/Formatting/Formatting.js","contentLibrary/html/HTMLCSS/example.js","contentLibrary/html/HTMLCSS/HTMLCSS.js","contentLibrary/html/Links/example.js","contentLibrary/html/Links/Links.js","contentLibrary/html/Images/example.js","contentLibrary/html/Images/Images.js","common/constants/HTMLconstants.js","actions/modalShareCode.js","actions/view.js","components/Nav.js","components/AuthPage/Login.js","components/Navbar.js","actions/direct.js","components/AuthPage/DirectHelper.js","components/Loading/Loading.js","components/ModalShare/ModalShare.js","components/MainPage.js","components/NotFound.js","components/Sidebar/styles.js","components/Sidebar/Sidebar.js","pages/tutorials/styles.js","pages/tutorials/Tutorial.js","common/layout/TutorialLayout.js","components/TutorialList.js","components/AuthPage/Register.js","components/AuthPage/ForgotPassword.js","components/AuthPage/RecoveryPassword.js","components/AuthPage/Profile.js/styles.js","actions/profile.js","components/AuthPage/Profile.js/Profile.js","actions/getShareCode.js","components/GetShareCode.js","components/App.js","common/axios/axios.js","common/LocalStorage/getLocal.js","saga/rootSaga.js","constant/code.js","redux/reducers/codeReducer.js","redux/reducers/loginReducer.js","redux/reducers/modalReducer.js","redux/reducers/modalShareReducer.js","redux/reducers/tutorialReducer.js","redux/reducers/directReducer.js","redux/reducers/profileReducer.js","redux/reducers/getShareCodeReducer.js","redux/reducers/viewReducer.js","redux/store.js","common/theme/theme.js","index.js"],"names":["updateCode","name","type","payload","setError","err","setUrl","url","setCode","val","getProjects","setIsChanging","setIsDeleting","JS","setLocal","key","value","localStorage","setItem","JSON","stringify","useLocalStorage","initialValue","FULLKEY","useState","jsonValue","getItem","parse","setValue","useEffect","useStyles","makeStyles","theme","codeBlock","overflowY","height","edit","mapActionsToProps","updateCodeCreator","connect","props","language","displayName","onChange","color","pro","q","open","setOpen","status","useSelector","state","view","classes","className","cs","style","fontWeight","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","autoCloseBrackets","autoCloseTags","autoFormat","autoCorrect","closeModal","setProgress","modal","top","left","transform","position","width","backgroundColor","palette","background","paper","border","boxShadow","shadows","outline","padding","borderRadius","header","textColor","spacing","display","alignItems","justifyContent","title","content","textField","textFieldOld","minWidth","box","margin","typography1","fontSize","error","progress","typography2","textTransform","typography3","textDecoration","box1","marginLeft","marginTop","box2","cursor","setCodeCreator","changeNameCreator","setIsChangingCreator","deleteProjectCreator","setIsDeletingCreator","setErrorCreator","closeModalCreator","isAuthenticated","auth","errCode","code","nameCode","isChanging","isDeleting","modalIsOpen","handleCloseModal","handleClose","Modal","Alert","severity","sx","marginBottom","Tooltip","arrow","placement","TextField","readOnly","id","label","placeholder","disabled","required","e","target","Typography","component","Box","gutterBottom","to","flexDirection","mt","Button","variant","mr","LinearProgress","styles","zIndex","textAlign","flex","background1","background2","alert","btn","login1","link","link1","register","createActions","registerRequest","registerSuccess","registerFailure","login","acc","loginSuccess","setPicture","setPictureRequest","loginFailed","setErrorLogin","setNameCode","ggLogin","ggLoginRequest","ggLoginSuccess","ggLoginFailure","fbLogin","fbLoginRequest","fbLoginSuccess","fbLoginFailure","setErrorStatus","setErrorStatusRequest","checkLastPwd","checkLastPwdRequest","checkLastPwdSuccess","checkLastPwdFailure","recoverPassword","recoverPasswordRequest","recoverPasswordSuccess","recoverPasswordFailure","updateFID","updateFIDRequest","updateGID","updateGIDRequest","updateUID","updateUIDRequest","setListTutorial","setLocation","setSidebar","GetStarted","Introduction","CSS_TUTORIALS","path","exact","GET","POST","CODES_ONLINE","CODE","SHARE_CODE","API","API_LOGIN","API_USER","API_GG","clientId","buttonText","onSuccess","res","console","log","sessionStorage","tokenId","onFailure","cookiePolicy","JS_TUTORIALS","Direct","tutorial","location","dispatch","useDispatch","prevUrl","l","window","href","toString","list","HTML_TUTORIALS","concat","map","x","filter","lesson","indexOf","slice","lastIndexOf","i","findIndex","prevPage","nextUrl","length","nextPage","size","persist","push","handlePrevPage","handleNextPage","dividerB","dividerS","withStyles","Divider","text","ex","showLineNumbers","googlecode","wrapLines","src","alt","introduction","structural","exTag1","exTag2","HTMLCSS","openModalShare","openModalShareRequest","openModalShareSuccess","openModalShareFailure","setView","setViewRequest","setViewSuccess","setViewFailure","setFullScreen","setFullScreenRequest","setFullScreenSuccess","setFullScreenFailure","setLargeScreen","setLargeScreenRequest","setLargeScreenSuccess","setLargeScreenFailure","openModalSuccessCreator","directToCodeCreator","logoutCreator","getProjectsCreator","account","projects","React","openSidebar","picture","fullScreen","largeScreen","projectsFiltered","setProjectsFiltered","keySearch","setKeySearch","toLowerCase","onSearch","IconButton","edge","aria-label","setTimeout","handleToggleSidebar","preventDefault","data-toggle","data-target","aria-controls","aria-expanded","marginRight","role","aria-haspopup","whiteSpace","overflow","textOverflow","maxWidth","maxHeight","overflowX","newProject","borderRight","project","_id","paddingRight","handleSave","alignSelf","heigh","render","renderProps","removeItem","handleLogout","onLogoutSuccess","paddingBottom","loginCreator","setProgressCreator","setErrorLoginCreator","withConnect","compose","email","password","setAccount","Card","CardContent","action","fullWidth","appId","autoLoad","fields","cssClass","callback","flexGrow","AppBar","Toolbar","direct","directRequest","directSuccess","directFailure","verifyUrlRecover","verifyUrlRecoverRequest","verifyUrlRecoverSuccess","verifyUrlRecoverFailure","DirectHelper","time","timeRun","setTimeRun","CircularProgress","disableShrink","bottom","right","Loading","isWaiting","appear","message","data-text","textRef","useRef","modalShareIsOpen","modalShare","isLoading","inputRef","current","navigator","clipboard","writeText","_wrapperState","them","codeContainer","transitionTimingFunction","transition","opacity","topPane","float","animation","fullHeight","minHeight","getCodeCreator","openModalCreator","codeData","errLogin","match","useStyles2","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","isLoad","classes2","timeout","clearTimeout","alertUser","returnValue","addEventListener","removeEventListener","sandbox","frameBorder","NotFound","objStyleLinkActive","objStyleLink","drawerPaper","backgroundPosition","backgroundRepeat","backgroundSize","boxSizing","onToggleSidebar","showSidebar","tutorialList","defTutorials","Drawer","onClose","tutorialListRender","List","ListItem","renderList","container","transitions","create","easing","sharp","duration","enteringScreen","turnLeft","easeOut","leavingScreen","children","routerProps","cn","TutorialLayout","Component","rest","Transition","ref","Slide","direction","TutorialList","Dialog","TransitionComponent","ml","autoFocus","button","confirmPassword","errorStatus","jsx","recentPassword","handleCheckLastPwd","loginFailedCreator","newPassword","isVerify","handleRecoverPassword","contain","imageBox","labelImage","cardProfile","borderBottom","fontFamily","profile","avatar","field","textInfo","getProfile","getProfileRequest","getProfileSuccess","getProfileFailure","updateProfile","updateProfileRequest","updateProfileSuccess","updateProfileFailure","fid","fbAccountInfo","gid","ggAccountInfo","uid","Number","Grid","item","xs","sm","CardHeader","htmlFor","CardMedia","image","file","reader","FileReader","readAsDataURL","onloadend","result","previewFile","files","InputProps","country","phone","job","mb","getShareCode","getShareCodeRequest","getShareCodeSuccess","getShareCodeFailure","GetShareCode","params","history","createBrowserHistory","checkLoginCreator","ForgotPassword","Register","route","setAuth","token","axios","defaults","headers","common","thisAxios","method","endPoint","body","get","post","put","delete","getLocal","handleCheckLogin","handleGetCode","handleRegister","handleLogin","handleOpenModal","handleUpdate","handleDirect","handleGetProjects","handleChangeName","handleDelete","handleGGLogin","handleFBLogin","handleVerifyUrl","handleGetProfile","handleUpdateProfile","handleOpenModalShare","handleGetShareCode","rootSaga","select","call","success","user","objId","res1","take","split","trim","delay","response","accessToken","profileObj","imageUrl","googleId","access_token","redirect","Math","random","endLink","fork","takeLatest","initialState","codeReducer","loginReducer","modalReducer","modalShareReducer","tutorialReducer","notify","directReducer","profileReducer","getShareCodeReducer","viewReducer","sagaMiddleware","createSagaMiddleware","reducer","combineReducers","router","connectRouter","store","configureStore","middleware","routerMiddleware","run","config","createTheme","primary","secondary","defaultTextColor","hover","typoraphy","shape","borderColor","createGenerateClassName","productionPrefix","seed","ReactDOM","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.41e7015c.chunk.js","sourcesContent":["export const getCode = (q) => ({\r\n    type: \"GET_CODE\",\r\n    payload: {\r\n        q,\r\n    },\r\n});\r\n\r\nexport const updateCode = (name) => ({\r\n    type: \"UPDATE_CODE\",\r\n    payload: name,\r\n});\r\n\r\nexport const setAuthenticated = (val) => ({\r\n    type: \"SET_AUTH\",\r\n    payload: val,\r\n});\r\n\r\nexport const setError = (err) => ({\r\n    type: \"SET_ERROR\",\r\n    payload: err,\r\n});\r\n\r\nexport const setUrl = (url) => ({\r\n    type: \"SET_URL\",\r\n    payload: url,\r\n});\r\n\r\nexport const setCode = (val) => ({\r\n    type: \"SET_CODE\",\r\n    payload: val,\r\n});\r\n\r\nexport const directToCode = () => ({\r\n    type: \"DIRECT_TO_CODE\",\r\n    payload: null,\r\n});\r\n\r\nexport const getProjects = () => ({\r\n    type: \"GET_PROJECTS\",\r\n    payload: null,\r\n});\r\n\r\nexport const getProjectsSuccess = (value) => ({\r\n    type: \"GET_PROJECTS_SUCCESS\",\r\n    payload: value,\r\n});\r\n\r\nexport const changeName = (val) => ({\r\n    type: \"CHANGE_NAME\",\r\n    payload: val,\r\n});\r\n\r\nexport const changeNameSuccess = (val) => ({\r\n    type: \"CHANGE_NAME_SUCCESS\",\r\n    payload: val,\r\n});\r\n\r\nexport const setIsChanging = (val) => ({\r\n    type: \"SET_IS_CHANGING\",\r\n    payload: val,\r\n});\r\n\r\nexport const deleteProject = () => ({\r\n    type: \"DELETE_PROJECT\",\r\n    payload: null,\r\n});\r\n\r\nexport const deleteProjectSuccess = (val) => ({\r\n    type: \"DELETE_PROJECT\",\r\n    payload: val,\r\n});\r\n\r\nexport const setIsDeleting = (val) => ({\r\n    type: \"SET_IS_DELETING\",\r\n    payload: val,\r\n});\r\n","export const CODE = 'code-';\r\nexport const HTML = \"html\";\r\nexport const CSS = \"css\";\r\nexport const JS = \"js\";","import { CODE } from \"../../constant/localStorage\"\r\n\r\nexport const setLocal = (key, value) => {\r\n    localStorage.setItem(`${CODE}${key}`, JSON.stringify(value));\r\n}","import { useEffect, useState } from 'react'\nimport { setLocal } from '../common/LocalStorage/setLocal';\nimport { CODE } from '../constant/localStorage';\n\nexport default function useLocalStorage(key, initialValue) {\n  const FULLKEY = CODE + key\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(FULLKEY)\n    if (jsonValue != null) return JSON.parse(jsonValue)\n\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  })\n  \n  useEffect(() => {\n    localStorage.setItem(FULLKEY, JSON.stringify(value))\n   \n  }, [FULLKEY, value])\n\n  return [value, setValue]\n}\n","import { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"codemirror/addon/edit/closebrackets\";\nimport \"codemirror/addon/edit/closetag\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/theme/material.css\";\nimport React, { useState } from \"react\";\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\nimport { connect, useSelector } from \"react-redux\";\nimport { updateCode } from \"../actions/code\";\nimport cs from \"classnames\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    codeBlock: {\n        overflowY: `visible !important`,\n        height: `300px !important`,\n    },\n    edit: {\n        height: `39px !important`,\n        // \"&.collapsed .CodeMirror-scroll\": {\n        //     position: `absolute !important`,\n        //     overflow: `hidden !important`,\n        // },\n    },\n}));\n\nconst Code = (props) => {\n    const {\n        language,\n        displayName,\n        value,\n        onChange,\n        color,\n        pro,\n        updateCodeCreator,\n        q,\n    } = props;\n    const [open, setOpen] = useState(true);\n\n    function handleChange(editor, data, value) {\n        onChange(value);\n    }\n\n    const status = useSelector((state) => state.view.status);\n    const classes = useStyles();\n\n    return (\n        <div\n            className={cs(`editor-container ${open ? \"\" : \"collapsed\"}`, {\n                [classes.edit]: open === false && status === true,\n            })}\n        >\n            <div className=\"editor-title\" style={{ color, fontWeight: 650 }}>\n                {displayName}\n                <button\n                    type=\"button\"\n                    className=\"expand-collapse-btn\"\n                    onClick={() => {\n                        setOpen((prevOpen) => !prevOpen);\n                    }}\n                >\n                    <FontAwesomeIcon\n                        icon={open ? faCompressAlt : faExpandAlt}\n                    />\n                </button>\n            </div>\n            <ControlledEditor\n                onBeforeChange={handleChange}\n                value={value}\n                className={cs(\"code-mirror-wrapper\", {\n                    [classes.codeBlock]: status === true,\n                })}\n                options={{\n                    lineWrapping: true,\n                    lint: true,\n                    mode: language,\n                    theme: \"material\",\n                    lineNumbers: true,\n                    autoCloseBrackets: true,\n                    autoCloseTags: true,\n                    autoFormat: true,\n                    autoCorrect: true,\n                }}\n            />\n        </div>\n    );\n};\n\nconst mapActionsToProps = {\n    updateCodeCreator: updateCode,\n};\n\nexport default connect(null, mapActionsToProps)(Code);\n","import { CLOSE_MODAL, OPEN_MODAL, OPEN_MODAL_SUCCESS, SET_PROGRESS } from \"../constant/modal\";\r\n\r\nexport const openModal = () => ({\r\n    type: OPEN_MODAL,\r\n    payload: null,\r\n});\r\n\r\nexport const openModalSuccess = () => ({\r\n    type: OPEN_MODAL_SUCCESS,\r\n    payload: null,\r\n});\r\n\r\nexport const closeModal = () => ({\r\n    type: CLOSE_MODAL,\r\n    payload: null,\r\n});\r\n\r\nexport const setProgress = (val) => ({\r\n    type: SET_PROGRESS,\r\n    payload: val,\r\n});\r\n\r\nexport const clickModal = (name) => ({\r\n    type: 'CLICK_MODAL',\r\n    payload: name,\r\n});\r\n\r\nexport const setLoading = (val) => ({\r\n    type: \"SET_LOADING\",\r\n    payload: val,\r\n})\r\n","const OPEN_MODAL = \"OPEN_MODAL\";\r\nconst OPEN_MODAL_SUCCESS = \"OPEN_MODAL_SUCCESS\";\r\nconst CLOSE_MODAL = \"CLOSE_MODAL\";\r\nconst SET_PROGRESS = \"SET_PROGRESS\";\r\n\r\nexport { OPEN_MODAL, CLOSE_MODAL, OPEN_MODAL_SUCCESS, SET_PROGRESS };\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport {\r\n    Modal,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    LinearProgress,\r\n    Alert,\r\n    Tooltip,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    changeName,\r\n    deleteProject,\r\n    setCode,\r\n    setError,\r\n    setIsChanging,\r\n    setIsDeleting,\r\n    updateCode,\r\n} from \"../actions/code\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport { closeModal } from \"../actions/modal\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        top: `57%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -90%)`,\r\n        position: `absolute`,\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: `2px solid rgb(167, 202, 237)`,\r\n        boxShadow: theme.shadows[5],\r\n        // padding: theme.spacing(2, 4, 4),\r\n        outline: `none`,\r\n        padding: 0,\r\n        borderRadius: `8px 8px`,\r\n    },\r\n    header: {\r\n        backgroundColor: theme.color.textColor,\r\n        color: theme.color.textColor,\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    title: {\r\n        color: theme.color.textColor,\r\n        fontWeight: 700,\r\n\r\n        width: `100%`,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    textField: {\r\n        width: `100%`,\r\n    },\r\n    textFieldOld: {\r\n        display: `block`,\r\n        minWidth: `100%`,\r\n        // marginBottom: `50px`,\r\n    },\r\n    box: {\r\n        margin: `0 15px 10px 0`,\r\n    },\r\n    typography1: {\r\n        margin: `5px 0 0 0px`,\r\n        fontSize: `15.5px`,\r\n        color: theme.color.error,\r\n    },\r\n    progress: {\r\n        color: \"#ff6278\",\r\n    },\r\n    typography2: {\r\n        textTransform: `none`,\r\n        width: `max-content`,\r\n        color: `#1ba700`,\r\n        fontWeight: `bold`,\r\n        fontSize: `13px !important`,\r\n    },\r\n    typography3: {\r\n        textTransform: `none`,\r\n        width: `max-content`,\r\n        color: `#29b117`,\r\n        fontSize: `16px !important`,\r\n        textDecoration: `none`,\r\n        \"& > a:hover\": {\r\n            color: `#5dd0e8`,\r\n        },\r\n    },\r\n    box1: {\r\n        marginLeft: `7px`,\r\n        marginTop: `9x`,\r\n    },\r\n    box2: {\r\n        marginTop: `9x`,\r\n        marginLeft: `5px`,\r\n    },\r\n    icon: {\r\n        marginTop: 5,\r\n        cursor: `pointer`,\r\n    },\r\n}));\r\n\r\nconst NameProject = (props) => {\r\n    const classes = useStyles();\r\n    const {\r\n        modalIsOpen,\r\n        handleCloseModal,\r\n        isAuthenticated,\r\n        err,\r\n        progress,\r\n        updateCodeCreator,\r\n        errCode,\r\n        setCodeCreator,\r\n        nameCode,\r\n        isChanging,\r\n        changeNameCreator,\r\n        setIsChangingCreator,\r\n        isDeleting,\r\n        deleteProjectCreator,\r\n        setIsDeletingCreator,\r\n        setErrorCreator,\r\n        closeModalCreator,\r\n    } = props;\r\n\r\n    const renderCheck = () => {\r\n        let jsx = null;\r\n        jsx = (\r\n            <Fragment>\r\n                {errCode && (\r\n                    <Typography className={classes.typography1} component=\"div\">\r\n                        <span style={{ margin: `2px 0 0 6px` }}>\r\n                            {errCode ? errCode : \"\"}\r\n                        </span>\r\n                    </Typography>\r\n                )}\r\n                {nameCode && !errCode ? (\r\n                    <Box className={classes.box1}>\r\n                        <Typography\r\n                            component=\"div\"\r\n                            gutterBottom\r\n                            className={classes.typography2}\r\n                        >\r\n                            {!isDeleting\r\n                                ? \"Click SAVE to continue to update\"\r\n                                : \"Click DELETE if you really want to delete\"}\r\n                        </Typography>\r\n                    </Box>\r\n                ) : null}\r\n                {!isAuthenticated && (\r\n                    <Box className={classes.box2}>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            gutterBottom\r\n                            className={classes.typography3}\r\n                        >\r\n                            <Link\r\n                                style={{ textDecoration: `none` }}\r\n                                to=\"/login\"\r\n                            >\r\n                                LOGIN?{\" \"}\r\n                            </Link>{\" \"}\r\n                            <span\r\n                                style={{\r\n                                    color: `#000`,\r\n                                    fontSize: `13px`,\r\n                                    fontWeight: 401,\r\n                                }}\r\n                            >\r\n                                Don't worry, your code will still be here!\r\n                            </span>\r\n                        </Typography>\r\n                    </Box>\r\n                )}\r\n            </Fragment>\r\n        );\r\n        return jsx;\r\n    };\r\n\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (nameCode && isChanging) {\r\n            setValue(\"\");\r\n        } else if (nameCode) {\r\n            setValue(nameCode);\r\n        } else setValue(\"\");\r\n\r\n        // setValue(\"\");\r\n    }, [isChanging, nameCode]);\r\n\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value);\r\n        // setValue(value);\r\n    };\r\n\r\n    const handleUpdate = () => {\r\n        updateCodeCreator(value);\r\n    };\r\n\r\n    const handleChangeName = () => {\r\n        changeNameCreator(value);\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        deleteProjectCreator();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setErrorCreator(null);\r\n        setIsChangingCreator(false);\r\n        setIsDeletingCreator(false);\r\n        closeModalCreator();\r\n        if (nameCode && !isChanging) {\r\n            setValue(nameCode);\r\n        } else setValue(\"\");\r\n        handleCloseModal();\r\n    };\r\n\r\n    return (\r\n        <Modal open={modalIsOpen}>\r\n            <div className={classes.modal}>\r\n                <div\r\n                    style={{\r\n                        display: `flex`,\r\n\r\n                        padding: 0,\r\n                        margin: 0,\r\n                    }}\r\n                >\r\n                    {/* <div style={{ display: `flex`, justifyContent: `space-between`, background: `#1565C0`, height: `35px`, padding: 0, margin: 0 }}>NOTE</div> */}\r\n                    <Alert\r\n                        icon={false}\r\n                        severity=\"success\"\r\n                        sx={{\r\n                            width: `100%`,\r\n                            display: `block`,\r\n                        }}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                display: `flex`,\r\n                                justifyContent: `space-between`,\r\n                            }}\r\n                        >\r\n                            <p\r\n                                style={{\r\n                                    fontWeight: `700`,\r\n                                    fontSize: `17px`,\r\n                                    marginBottom: `3px`,\r\n                                }}\r\n                            >\r\n                                {!isDeleting ? \"Save your work\" : \"DELETE\"}\r\n                            </p>\r\n                            <CancelIcon\r\n                                className={classes.icon}\r\n                                onClick={() => handleClose()}\r\n                            />\r\n                        </div>\r\n                    </Alert>\r\n                </div>\r\n                <div className={classes.header} style={{ marginTop: `7px` }}>\r\n                    <span className={classes.title}>\r\n                        {isChanging && nameCode && (\r\n                            <Tooltip\r\n                                arrow\r\n                                title={\"Previous Project Name\"}\r\n                                placement={nameCode ? \"top\" : \"top\"}\r\n                            >\r\n                                <TextField\r\n                                    readOnly={true}\r\n                                    id=\"outlined-required\"\r\n                                    label={\"Current Project Name\"}\r\n                                    placeholder=\"Your Project Name\"\r\n                                    placeholder=\"Your Project Name\"\r\n                                    className={classes.textField}\r\n                                    value={nameCode}\r\n                                    sx={{ marginBottom: `15px` }}\r\n                                />\r\n                            </Tooltip>\r\n                        )}\r\n                        <Tooltip\r\n                            arrow\r\n                            title={\r\n                                nameCode && isAuthenticated && !isChanging\r\n                                    ? \"Name cannot be change in here\"\r\n                                    : !nameCode &&\r\n                                      isAuthenticated &&\r\n                                      !isChanging\r\n                                    ? \"Enter a name\"\r\n                                    : nameCode && isAuthenticated && isChanging\r\n                                    ? \"Give your new project name\"\r\n                                    : \"You need to log in to use this feature\"\r\n                            }\r\n                            placement={nameCode ? \"top\" : \"top\"}\r\n                        >\r\n                            <TextField\r\n                                disabled={isAuthenticated ? false : true}\r\n                                required\r\n                                readOnly={\r\n                                    nameCode && !isChanging ? true : false\r\n                                }\r\n                                id=\"outlined-required\"\r\n                                label={\r\n                                    !nameCode && isAuthenticated && !isChanging\r\n                                        ? \"Give a name for your project\"\r\n                                        : isChanging\r\n                                        ? \"Give a new name you want in here\"\r\n                                        : \"Your Project Name\"\r\n                                }\r\n                                placeholder=\"Your Project Name\"\r\n                                className={classes.textField}\r\n                                value={\r\n                                    nameCode && !isChanging\r\n                                        ? nameCode\r\n                                        : isChanging\r\n                                        ? value\r\n                                        : nameCode\r\n                                        ? nameCode\r\n                                        : value\r\n                                }\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Tooltip>\r\n\r\n                        {renderCheck()}\r\n                    </span>\r\n                </div>\r\n                <Box\r\n                    display=\"flex\"\r\n                    flexDirection=\"row-reverse\"\r\n                    mt={2}\r\n                    className={classes.box}\r\n                >\r\n                    <Box>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={!isAuthenticated || err ? true : false}\r\n                            onClick={\r\n                                !isChanging && !isDeleting\r\n                                    ? handleUpdate\r\n                                    : isChanging\r\n                                    ? handleChangeName\r\n                                    : handleDelete\r\n                            }\r\n                        >\r\n                            {!nameCode && !isChanging && !isDeleting\r\n                                ? \"SAVE\"\r\n                                : isDeleting\r\n                                ? \"DELETE\"\r\n                                : \"UPDATE\"}\r\n                        </Button>\r\n                    </Box>\r\n                    <Box mr={1}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            onClick={() => handleClose()}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n\r\n                {/* <div className={classes.content}>{component}</div> */}\r\n                {progress && (\r\n                    <Box sx={{ width: \"100%\" }}>\r\n                        <LinearProgress />\r\n                    </Box>\r\n                )}\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // codeData: state.code.codeData,\r\n    // modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    errCode: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    nameCode: state.auth.nameCode,\r\n    isChanging: state.code.isChanging,\r\n    isDeleting: state.code.isDeleting,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    updateCodeCreator: updateCode,\r\n    setCodeCreator: setCode,\r\n    changeNameCreator: changeName,\r\n    setIsChangingCreator: setIsChanging,\r\n    deleteProjectCreator: deleteProject,\r\n    setIsDeletingCreator: setIsDeleting,\r\n    setErrorCreator: setError,\r\n    // getCodeCreator: getCode,\r\n    // openModalCreator: openModal,\r\n    closeModalCreator: closeModal,\r\n    // loginCreator: login,\r\n    // setProgressCreator: setProgress,\r\n    // setErrorLoginCreator: setErrorLogin,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(NameProject);\r\n","const styles = (theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        top: `52.9%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n        width: \"100%\",\r\n        height: `100%`,\r\n        zIndex: 99,\r\n        padding: 40,\r\n        display: `flex`,\r\n        flexDirection: `column`,\r\n        alignItems: `center`,\r\n        justifyContent: `center`,\r\n        textAlign: `center`,\r\n        flex: `1 0 auto`,\r\n        [\"@media(max-width:500px)\"]: {\r\n            marginTop: `5% !important`,\r\n        },\r\n        [\"@media(max-width:387px)\"]: {\r\n            marginTop: `12% !important`,\r\n        },\r\n        [\"@media(max-width:353px)\"]: {\r\n            marginTop: `17% !important`,\r\n        },\r\n        [\"@media(max-width:196px)\"]: {\r\n            marginTop: `20% !important`,\r\n        },\r\n    },\r\n    background1: {\r\n        position: \"absolute\",\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n        width: \"100%\",\r\n        height: `100%`,\r\n        zIndex: 99,\r\n        padding: 40,\r\n        display: `flex`,\r\n        flexDirection: `column`,\r\n        alignItems: `center`,\r\n        justifyContent: `center`,\r\n        textAlign: `center`,\r\n        flex: `1 0 auto`,\r\n        [\"@media(max-width:500px)\"]: {\r\n            marginTop: `5% !important`,\r\n        },\r\n        [\"@media(max-width:387px)\"]: {\r\n            marginTop: `12% !important`,\r\n        },\r\n        [\"@media(max-width:353px)\"]: {\r\n            marginTop: `17% !important`,\r\n            display: `table`,\r\n        },\r\n        [\"@media(max-width:196px)\"]: {\r\n            marginTop: `20% !important`,\r\n        },\r\n    },\r\n    background2: {\r\n        position: \"absolute\",\r\n        top: `52.9%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n        width: \"45.7%\",\r\n        height: `100%`,\r\n        zIndex: 99,\r\n        padding: 40,\r\n        display: `flex`,\r\n        flexDirection: `column`,\r\n        alignItems: `center`,\r\n        justifyContent: `center`,\r\n        textAlign: `center`,\r\n        flex: `1 0 auto`,\r\n        [\"@media(max-width:980px)\"]: {\r\n            marginTop: `5% !important`,\r\n            width: \"70%\",\r\n        },\r\n        [\"@media(max-width:700px)\"]: {\r\n            marginTop: `5% !important`,\r\n            width: \"90%\",\r\n        },\r\n        [\"@media(max-width:500px)\"]: {\r\n            marginTop: `5% !important`,\r\n            width: \"100%\",\r\n        },\r\n        [\"@media(max-width:387px)\"]: {\r\n            marginTop: `12% !important`,\r\n            width: \"100%\",\r\n        },\r\n        [\"@media(max-width:353px)\"]: {\r\n            marginTop: `17% !important`,\r\n            width: \"100%\",\r\n        },\r\n        [\"@media(max-width:196px)\"]: {\r\n            marginTop: `20% !important`,\r\n            width: \"100%\",\r\n        },\r\n    },\r\n    alert: {\r\n        [\"@media(max-width:500px)\"]: {\r\n            width: `100% !important`,\r\n        },\r\n        [\"@media(max-width:387px)\"]: {\r\n            width: `100% !important`,\r\n        },\r\n        [\"@media(max-width:353px)\"]: {\r\n            width: `100% !important`,\r\n        },\r\n    },\r\n    btn: {\r\n        marginTop: 0,\r\n        fontSize: `16px`,\r\n    },\r\n    login1: {\r\n        width: `45%`,\r\n        [\"@media(max-width:850px)\"]: {\r\n            width: `100% !important`,\r\n        },\r\n    },\r\n    link: {\r\n        display: `block`,\r\n        width: `max-content`,\r\n        marginLeft: `auto`,\r\n    },\r\n    link1: {\r\n        // display: `block`,\r\n        // width: `max-content`,\r\n        // textAlign: `center`,\r\n    },\r\n});\r\n\r\nexport default styles;\r\n","import {\r\n    LOGIN,\r\n    LOGIN_FAILED,\r\n    LOGIN_SUCCESS,\r\n    SET_ERROR_LOGIN,\r\n} from \"../constant/login\";\r\nimport { createActions } from \"redux-actions\";\r\n\r\nexport const register = createActions({\r\n    registerRequest: (val) => val,\r\n    registerSuccess: (val) => val,\r\n    registerFailure: (val) => val,\r\n});\r\n\r\nexport const login = (acc) => ({\r\n    type: LOGIN,\r\n    payload: acc,\r\n});\r\n\r\nexport const loginSuccess = (name = null) => ({\r\n    type: LOGIN_SUCCESS,\r\n    payload: name,\r\n});\r\n\r\nexport const setPicture = createActions({\r\n    setPictureRequest: (val) => val,\r\n});\r\n\r\nexport const loginFailed = (err = null) => ({\r\n    type: LOGIN_FAILED,\r\n    payload: err,\r\n});\r\n\r\nexport const setErrorLogin = (err) => ({\r\n    type: SET_ERROR_LOGIN,\r\n    payload: err,\r\n});\r\n\r\nexport const setNameCode = (val) => ({\r\n    type: \"SET_NAME_CODE\",\r\n    payload: val,\r\n});\r\n\r\nexport const logout = () => ({\r\n    type: \"LOGOUT\",\r\n    payload: null,\r\n});\r\n\r\nexport const logoutSuccess = () => ({\r\n    type: \"LOGOUT_SUCCESS\",\r\n    payload: null,\r\n});\r\n\r\nexport const checkLogin = () => ({\r\n    type: \"CHECK_LOGIN\",\r\n    payload: null,\r\n});\r\n\r\nexport const ggLogin = createActions({\r\n    ggLoginRequest: (val) => val,\r\n    ggLoginSuccess: (val) => val,\r\n    ggLoginFailure: (val) => val,\r\n});\r\n\r\nexport const fbLogin = createActions({\r\n    fbLoginRequest: (val) => val,\r\n    fbLoginSuccess: (val) => val,\r\n    fbLoginFailure: (val) => val,\r\n});\r\n\r\nexport const setErrorStatus = createActions({\r\n    setErrorStatusRequest: (val) => val,\r\n});\r\nexport const checkLastPwd = createActions({\r\n    checkLastPwdRequest: (val) => val,\r\n    checkLastPwdSuccess: (val) => val,\r\n    checkLastPwdFailure: (val) => val,\r\n});\r\n\r\nexport const recoverPassword = createActions({\r\n    recoverPasswordRequest: (val) => val,\r\n    recoverPasswordSuccess: (val) => val,\r\n    recoverPasswordFailure: (val) => val,\r\n});\r\n\r\nexport const updateFID = createActions({\r\n    updateFIDRequest: (val) => val,\r\n});\r\nexport const updateGID = createActions({\r\n    updateGIDRequest: (val) => val,\r\n});\r\nexport const updateUID = createActions({\r\n    updateUIDRequest: (val) => val,\r\n});\r\n","const LOGIN = \"LOGIN\";\r\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nconst LOGIN_FAILED = \"LOGIN_FAILED\";\r\nconst SET_ERROR_LOGIN = \"SET_ERROR_LOGIN\"\r\n\r\nexport { LOGIN, LOGIN_SUCCESS, LOGIN_FAILED, SET_ERROR_LOGIN };\r\n","import { createActions } from \"redux-actions\";\r\n\r\nexport const setOpen = createActions({\r\n    setOpen: (val) => val,\r\n});\r\n\r\nexport const setListTutorial = createActions({\r\n    setListTutorial: (val) => val,\r\n});\r\n\r\nexport const setLocation = createActions({\r\n    setLocation: (val) => val,\r\n});\r\n\r\nexport const setSidebar = createActions({\r\n    setSidebar: (val) => val,\r\n});\r\n","import React from 'react'\r\n\r\nconst GetStarted = () => {\r\n    return (\r\n        <div>\r\n            Get Started\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GetStarted\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst Introduction = () => {\r\n    return (\r\n        <div className=\"container container-content\">\r\n            Introduction Lorem, ipsum dolor sit amet consectetur adipisicing\r\n            elit. Vitae ullam rem rerum. Tempore aut temporibus fugiat corrupti\r\n            commodi debitis! Maiores consectetur, consequatur tempora quibusdam\r\n            ratione placeat distinctio perferendis omnis reprehenderit?\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Introduction;\r\n","import GetStarted from \"../../contentLibrary/css/GetStarted/GetStarted\";\r\nimport Introduction from \"../../contentLibrary/css/Introduction/Introduction\";\r\nimport React from \"react\";\r\n\r\nexport const CSS_TUTORIALS = [\r\n    {\r\n        path: \"/tutorials/css/introduction\",\r\n        name: \"Introduction\",\r\n        exact: true,\r\n        component: (props) => <Introduction {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/css/get-started\",\r\n        name: \"Get Started\",\r\n        exact: true,\r\n        component: (props) => <GetStarted {...props} />,\r\n    },\r\n];\r\n","export const GET = \"GET\";\r\nexport const POST = \"POST\";\r\nexport const PUT = \"PUT\";\r\nexport const DELETE = \"DELETE\";\r\n\r\nexport const CODES_ONLINE = \"CODES ONLINE\";\r\n\r\n/** LOCAL */\r\nexport const CODE = \"http://localhost:3000/code\";\r\n/** HOST */\r\n// export const CODE = \"https://focused-ritchie-73a1e5.netlify.app/code\";\r\n/** DOMAIN */\r\n// export const CODE = \"https://codesonline.netlify.app/code\";\r\n\r\n/** LOCAL */\r\nexport const SHARE_CODE = \"http://localhost:3000/cs/share\";\r\n/** HOST */\r\n// export const SHARE_CODE = \"https://focused-ritchie-73a1e5.netlify.app/cs/share\";\r\n/** DOMAIN */\r\n// export const SHARE_CODE = \"https://codesonline.netlify.app/cs/share\";\r\n\r\n/** LOCAL */\r\nexport const API = \"http://localhost:5000/codes\";\r\nexport const API_LOGIN = \"http://localhost:5000/auth\";\r\nexport const API_USER = \"http://localhost:5000/users\";\r\n/** HOST */\r\n// export const API = \"https://code-project-app.herokuapp.com/codes\";\r\n// export const API_LOGIN = \"https://code-project-app.herokuapp.com/auth\";\r\n// export const API_USER = \"https://code-project-app.herokuapp.com/users\";\r\n\r\n/** LOCAL */\r\nexport const API_GG =\r\n    \"611618134293-o12vgbqu47jkpjec3o9frup2qk5ivaiq.apps.googleusercontent.com\";\r\n/** HOST */\r\n// export const API_GG =\r\n//     \"611618134293-pvnp50vd2gr5bug0n8cp8blapq8l13lf.apps.googleusercontent.com\";\r\n/** DOMAIN CODESONLINE */\r\n// export const API_GG =\r\n//     \"611618134293-ku6l99dlitthhqk3hdvd179155ina3nr.apps.googleusercontent.com\";\r\n","import React from \"react\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { API_GG } from \"../../../constant/axios\";\r\n\r\nconst GetStarted = () => {\r\n    const responseGoogle = (res) => {\r\n        console.log(res);\r\n        sessionStorage.setItem(\"accessTokenViaGG\", res.tokenId);\r\n    };\r\n    const responseFailureGoogle = (res) => {\r\n        console.log(\"Just failed:\", res);\r\n    };\r\n    const check = () => {\r\n        console.log(\"CHECK!!!\");\r\n    };\r\n    const logout = () => {\r\n        const key = \"accessTokenViaGoogle\";\r\n        console.log(key);\r\n    };\r\n    return (\r\n        <div>\r\n            <GoogleLogin\r\n                clientId={API_GG}\r\n                buttonText=\"Login with Google\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseFailureGoogle}\r\n                cookiePolicy={\"single_host_origin\"}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GetStarted;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst Introduction = () => {\r\n    return (\r\n        <div className=\"container container-content\">\r\n            Introduction Lorem, ipsum dolor sit amet consectetur adipisicing\r\n            elit. Vitae ullam rem rerum. Tempore aut temporibus fugiat corrupti\r\n            commodi debitis! Maiores consectetur, consequatur tempora quibusdam\r\n            ratione placeat distinctio perferendis omnis reprehenderit?\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Introduction;\r\n","import GetStarted from \"../../contentLibrary/js/GetStarted/GetStarted\";\r\nimport Introduction from \"../../contentLibrary/js/Introduction/Introduction\";\r\nimport React from \"react\";\r\n\r\nexport const JS_TUTORIALS = [\r\n    {\r\n        path: \"/tutorials/js/introduction\",\r\n        name: \"Introduction\",\r\n        exact: true,\r\n        component: (props) => <Introduction {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/js/get-started\",\r\n        name: \"Get Started\",\r\n        exact: true,\r\n        component: (props) => <GetStarted {...props} />,\r\n    },\r\n];\r\n","import { Button } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { HTML_TUTORIALS } from \"../common/constants/HTMLconstants\";\r\nimport { CSS_TUTORIALS } from \"../common/constants/CSSconstants\";\r\nimport { JS_TUTORIALS } from \"../common/constants/JSconstants\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nconst Direct = () => {\r\n    const location = useSelector((state) => state.tutorial.location);\r\n    const dispatch = useDispatch();\r\n\r\n    const prevPage = () => {\r\n        const l = window.location.href.toString();\r\n        const tutorialsRoute = HTML_TUTORIALS.concat(\r\n            CSS_TUTORIALS,\r\n            JS_TUTORIALS\r\n        );\r\n        const list = tutorialsRoute\r\n            .map((x) => x.path)\r\n            .filter(\r\n                (lesson) =>\r\n                    l.indexOf(lesson.slice(0, lesson.lastIndexOf(\"/\"))) > 0\r\n            );\r\n        const i = list.findIndex((x) => l.indexOf(x) > 0);\r\n        const url = i - 1 < 0 ? null : list[i - 1];\r\n        return url;\r\n    };\r\n    const prevUrl = prevPage();\r\n\r\n    const handlePrevPage = (e) => {\r\n        e.persist();\r\n        dispatch(push(prevUrl));\r\n    };\r\n\r\n    const nextPage = () => {\r\n        const l = window.location.href.toString();\r\n        const tutorialsRoute = HTML_TUTORIALS.concat(\r\n            CSS_TUTORIALS,\r\n            JS_TUTORIALS\r\n        );\r\n        const list = tutorialsRoute\r\n            .map((x) => x.path)\r\n            .filter(\r\n                (lesson) =>\r\n                    l.indexOf(lesson.slice(0, lesson.lastIndexOf(\"/\"))) > 0\r\n            );\r\n        const i = list.findIndex((x) => l.indexOf(x) > 0);\r\n        const url = i + 1 === list.length ? null : list[i + 1];\r\n        return url;\r\n    };\r\n    const nextUrl = nextPage();\r\n\r\n    const handleNextPage = (e) => {\r\n        e.persist();\r\n        dispatch(push(nextUrl));\r\n    };\r\n    return (\r\n        <div className=\"d-flex justify-content-around btn-gr\">\r\n            <Button\r\n                variant=\"contained\"\r\n                disabled={prevUrl ? false : true}\r\n                sx={{\r\n                    fontSize: `18px`,\r\n                    background: `inherit`,\r\n                    border: prevUrl\r\n                        ? `2px solid #8167a9 !important`\r\n                        : `2px solid #777`,\r\n                    // outline: `1px solid black !important`,\r\n                    color: `#8167a9`,\r\n                    fontWeight: `bold`,\r\n                    zIndex: `992 !important`,\r\n                    \"&:hover\": { background: `#8167a9`, color: `#fff` },\r\n                    margin: `5px 0px 13px 0px`,\r\n                }}\r\n                size=\"medium\"\r\n                onClick={(e) => handlePrevPage(e)}\r\n                className=\"button-direct\"\r\n            >\r\n                <ArrowBackIosNewIcon\r\n                    sx={{ fontSize: `21px`, margin: `0 5px 0 0` }}\r\n                    className=\"prev-icon\"\r\n                />\r\n                Prev\r\n            </Button>\r\n            <Button\r\n                variant=\"contained\"\r\n                disabled={nextUrl ? false : true}\r\n                sx={{\r\n                    fontSize: `18px`,\r\n                    background: `inherit`,\r\n                    border: nextUrl\r\n                        ? `2px solid #8167a9 !important`\r\n                        : `2px solid #777`,\r\n                    // outline: `1px solid black !important`,\r\n                    color: `#8167a9`,\r\n                    fontWeight: `bold`,\r\n                    zIndex: `992 !important`,\r\n                    \"&:hover\": { background: `#8167a9`, color: `#fff` },\r\n                    margin: `5px 0px 13px 0px`,\r\n                }}\r\n                size=\"medium\"\r\n                onClick={(e) => handleNextPage(e)}\r\n                className=\"button-direct\"\r\n            >\r\n                Next\r\n                <ArrowForwardIosIcon\r\n                    sx={{ fontSize: `21px`, margin: `0 0 0 5px` }}\r\n                    className=\"next-icon\"\r\n                />\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Direct;\r\n","export const styles = (theme) => ({\r\n    dividerB: {\r\n        color: `#8167a9`,\r\n        background: `#8167a9`,\r\n        margin: `8px 0`,\r\n        height: `7px`,\r\n        borderRadius: `7px 7px`,\r\n    },\r\n    dividerS: {\r\n        color: `#8167a9`,\r\n        background: `#8167a9`,\r\n        margin: `8px 0 15px 0`,\r\n        height: `3px`,\r\n        borderRadius: `7px 7px`,\r\n    },\r\n});\r\n","import { Divider } from \"@mui/material\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport React, { Fragment } from \"react\";\r\nimport { styles } from \"../contentLibrary/html/Introduction/styles\";\r\n\r\nconst LineDivider = ({ size, classes }) => {\r\n    return (\r\n        <Fragment>\r\n            {size === \"big\" ? (\r\n                <Divider className={classes.dividerB} />\r\n            ) : size === \"small\" ? (\r\n                <Divider className={classes.dividerS} />\r\n            ) : (\r\n                <Divider className={classes.dividerS} />\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(LineDivider);\r\n","export default {\r\n    getStarted: `<html>\r\n  <!-- Get Started in HTML -->\r\n  <head>\r\n    <title>Get Started!</title>\r\n  </head>\r\n  <body>\r\n    <h1>My First Heading</h1>\r\n\r\n    <p>My first paragraph.</p>\r\n  </body>\r\n</html>`,\r\n    structural: `<html>\r\n    <head>\r\n    </head>\r\n    <body>\r\n    </body>\r\n</html>`,\r\n    exTag1: `<h1>My Code So Strong...</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE } from \"../../../constant/axios\";\r\n\r\nconst GetStarted = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">Get Started</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    A simple text editor is all you need to learn HTML.\r\n                </div>\r\n            </nav>\r\n            <div className=\"h4\">Learn HTML Using Notepad or TextEdit</div>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item \">\r\n                    Web pages can be created and modified by using professional\r\n                    HTML editors.\r\n                </li>\r\n                <li className=\"list-group-item \">\r\n                    However, for learning HTML we recommend a simple text editor\r\n                    like Notepad (PC) or TextEdit (Mac).\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    We believe in that using a simple text editor is a good way\r\n                    to learn HTML.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    Follow the steps below to create your first web page with\r\n                    Notepad or TextEdit.\r\n                </li>\r\n            </ul>\r\n            <div className=\"h4 mt-3\">Step 1: Open Notepad (PC)</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb  mt-3 \">\r\n                <div className=\"b-guide\">Windows 8 or later:</div>\r\n                <div className=\" b-guide\">\r\n                    Open the Start Screen (the window symbol at the bottom left\r\n                    on your screen). Type Notepad.\r\n                </div>\r\n                <div className=\" b-guide\">Windows 7 or earlier:</div>\r\n                <div className=\"b-guide\">\r\n                    Open Start &gt; Programs &gt; Accessories &gt; Notepad\r\n                </div>\r\n            </nav>\r\n\r\n            <div className=\"h4 mt-3\"> Step 1: Open TextEdit (Mac)</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb\">\r\n                <div className=\"mt-3 b-guide\">\r\n                    {\" \"}\r\n                    Open Finder &gt; Applications &gt; TextEdit\r\n                </div>{\" \"}\r\n                <div className=\"guide\">\r\n                    Also change some preferences to get the application to save\r\n                    files correctly. In Preferences &gt; Format &gt; choose\r\n                    \"Plain Text\"\r\n                </div>\r\n                <div className=\"guide\">\r\n                    Then under \"Open and Save\", check the box that says \"Display\r\n                    HTML files as HTML code instead of formatted text\".\r\n                </div>\r\n            </nav>\r\n\r\n            <div className=\"h4 mt-3\">Step 2: Write Some HTML</div>\r\n            <LineDivider size=\"small\" />\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <img src=\"https://www.w3schools.com/html/img_notepad.png\" alt=\"\" />\r\n            <div className=\"h4 mt-3\">Step 3: Save the HTML Page</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <div className=\"b-guide\">\r\n                    Save the file on your computer. Select File {\">\"} Save as in\r\n                    the Notepad menu.\r\n                </div>\r\n                <div className=\"b-guide\">\r\n                    Name the file \"index.htm\" and set the encoding to UTF-8\r\n                    (which is the preferred encoding for HTML files).\r\n                </div>\r\n            </nav>\r\n            <img src=\"https://www.w3schools.com/html/img_saveas.png\" alt=\"\" />\r\n            <nav className=\"breadcrumb mt-3 font-weight-bold h5\">\r\n                Tip: You can use either .htm or .html as file extension. There\r\n                is no difference, it is up to you.\r\n            </nav>\r\n            <div className=\"h4 mt-3\">\r\n                Step 4: View the HTML Page in Your Browser\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <div className=\"guide\">\r\n                Open the saved HTML file in your favorite browser (double click\r\n                on the file, or right-click - and choose \"Open with\").\r\n            </div>\r\n            <div className=\"guide h5\">The result will look much like this:</div>\r\n            <img src=\"https://www.w3schools.com/html/img_chrome.png\" alt=\"\" />\r\n            <div className=\"title\">\r\n                Code Yourself Online Editor - \"Code Yourself\"\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <div className=\"guide\">\r\n                    With our free online editor, you can edit the HTML code and\r\n                    view the result in your browser.\r\n                </div>\r\n                <div className=\"guide\">\r\n                    It is the perfect tool when you want to learn and test code\r\n                    fast. It also has color coding and the ability to save code\r\n                </div>\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a href={CODE} target=\"_blank\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    Code Yourself\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <div className=\"guide\">\r\n                    Click on the <code>\"Code Yourself\"</code> above button to\r\n                    see how it works.\r\n                </div>\r\n            </nav>\r\n            <img\r\n                src=\"https://scontent.fdad3-3.fna.fbcdn.net/v/t1.15752-9/261537404_304204264886606_6315770954394700458_n.png?_nc_cat=109&ccb=1-5&_nc_sid=ae9488&_nc_ohc=lQNpNiq-Y9gAX_OTUPq&_nc_ht=scontent.fdad3-3.fna&oh=03bb06970bc0c30f7d0be298eb411250&oe=61C6CAB2\"\r\n                alt=\"\"\r\n            />\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(GetStarted);\r\n","export default {\r\n    introduction: `<html>\r\n  <!-- Hello World in HTML -->\r\n  <head>\r\n    <title>Hello World!</title>\r\n  </head>\r\n  <body>\r\n    Hello World!\r\n  </body>\r\n</html>`,\r\n    structural: `<html>\r\n    <head>\r\n    </head>\r\n    <body>\r\n    </body>\r\n</html>`,\r\n    exTag1: `<h1>My Code So Strong...</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@mui/styles\";\r\nimport { CopyBlock, dracula, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport \"./Introduction.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { styles } from \"./styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport Direct from \"../../../components/Direct\";\r\n\r\nconst Introduction = (props) => {\r\n    const [language, changeLanguage] = useState(\"html\");\r\n    const [languageDemo, changeDemo] = useState(ex[\"html\"]);\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">Introduction</p>\r\n            <Direct />\r\n\r\n            <Divider className={classes.dividerB} />\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n\r\n            <p className=\"guide\">\r\n                The HyperText Markup Language, or HTML is the standard markup\r\n                language for documents designed to be displayed in a web\r\n                browser. It can be assisted by technologies such as Cascading\r\n                Style Sheets (CSS) and scripting languages such as JavaScript.\r\n                Web browsers receive HTML documents from a web server or from\r\n                local storage and render the documents into multimedia web\r\n                pages. HTML describes the structure of a web page semantically\r\n                and originally included cues for the appearance of the document.\r\n                HTML elements are the building blocks of HTML pages. With HTML\r\n                constructs, images and other objects such as interactive forms\r\n                may be embedded into the rendered page.\r\n            </p>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <p className=\"guide\">\r\n                HTML provides a means to create structured documents by denoting\r\n                structural semantics for text such as headings, paragraphs,\r\n                lists, links, quotes and other items. HTML elements are\r\n                delineated by tags, written using angle brackets. Tags such as{\" \"}\r\n                <code className=\"code\"> {\" <img /> and <input /> \"}</code>\r\n                directly introduce content into the page.\r\n            </p>\r\n            <div className=\"title\">What is an HTML Element?</div>\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"guide\">\r\n                An HTML element is defined by a start tag, some content, and an\r\n                end tag. The HTML element is everything from the start tag to\r\n                the end tag:\r\n                <div className=\"h4 mt-2 \">\r\n                    <nav className=\"breadcrumb\">\r\n                        <div className=\"guide font-weight-bold\">\r\n                            <code className=\"h4\">{`<tagname>Contents in here...</tagname>`}</code>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"guide font-weight-bold\">\r\n                    An example for you:{\" \"}\r\n                </div>\r\n                <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag1\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>\r\n                <p className=\"font-weight-bold h5 text-left\">or</p>\r\n                <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag2\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        Note: Some HTML elements have no content (like the{\" \"}\r\n                        {\"<br>\"} element). These elements are called empty\r\n                        elements. Empty elements do not have an end tag!\r\n                    </div>\r\n                </nav>\r\n                <div className=\"title\">With browser</div>\r\n                <Divider className={classes.dividerS} />\r\n                <div className=\"guide\">\r\n                    The purpose of a web browser (Chrome, Edge, Firefox, Safari)\r\n                    is to read HTML documents and display them correctly\r\n                </div>\r\n                <div className=\"guide\">\r\n                    A browser does not display the HTML tags, but uses them to\r\n                    determine how to display the document:\r\n                </div>\r\n                <img\r\n                    src=\"https://www.w3schools.com/html/img_chrome.png\"\r\n                    className=\"mt-4\"\r\n                    width={700}\r\n                    height=\"450\"\r\n                    alt=\"\"\r\n                />\r\n                <p className=\"h4 font-weight-bold text-left mt-2\">\r\n                    HTML Page Structure\r\n                </p>\r\n                <div className=\"guide mb-3 mt-3\">\r\n                    Below is a visualization of an HTML page structure:\r\n                </div>\r\n                <img\r\n                    src=\"https://i.ytimg.com/vi/90kC1YLNF3U/maxresdefault.jpg\"\r\n                    alt=\"\"\r\n                    width=\"700\"\r\n                    height=\"400\"\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <div className=\"guide font-weight-bold\">\r\n                    Note: The content inside the {\"<body>\"} section (the white\r\n                    area above) will be displayed in a browser. The content\r\n                    inside the {\"<title>\"} element will be shown in the\r\n                    browser's title bar or in the page's tab.\r\n                </div>\r\n            </nav>\r\n            <div className=\"title\">Conclusion</div>\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"guide\">\r\n                If you have followed all the instructions in this article, you\r\n                should end up with a page that looks like the one below (you can\r\n                also{\" \"}\r\n                <a\r\n                    href=\"https://mdn.github.io/beginner-html-site/\"\r\n                    target=\"_blank\"\r\n                >\r\n                    {\" \"}\r\n                    <span className=\"text-decoration text-primary\">\r\n                        view it in here\r\n                    </span>\r\n                </a>\r\n                ):\r\n            </div>\r\n            <img\r\n                src=\"https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics/finished-test-page-small.png\"\r\n                alt=\"\"\r\n                height=\"300\"\r\n            />\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Introduction);\r\n","export default {\r\n    introduction: `<html>\r\n  <!-- Hello World in HTML -->\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <title>Hello World!</title>\r\n  </head>\r\n  <body>\r\n    Hello World!\r\n  </body>\r\n</html>`,\r\n    structural: ` <head>\r\n    meta charset=\"utf-8\">\r\n    <title>My test page</title>\r\n</head>\r\n`,\r\n    exTag1: `<meta charset=utf-8>`,\r\n    exTag2: `<p>Japanese example: ご飯が熱い。</p>`,\r\n    exTag7: `<link rel=\"stylesheet\" href=\"my-css-file.css\">`,\r\n    exTag5: `<link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\">`,\r\n    exTag8: `<script src=\"my-js-file.js\" defer></script>`,\r\n    exTag6: `<script src=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\" integrity=\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js\" integrity=\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"></script>`,\r\n    exTag3: `<meta name=author content=Chris Mills>\r\n<meta name=description content=The  Web Docs Learning Area aims to provide\r\ncomplete beginners to the Web with all they need to know to get\r\nstarted with developing web sites and applications.>`,\r\n    exTag4: `<meta property=\"og:image\" content=\"https://developer.mozilla.org/static/img/opengraph-logo.png\">\r\n<meta property=\"og:description\" content=\"The Mozilla Developer Network (MDN) provides\r\ninformation about Open Web technologies including HTML, CSS, and APIs for both Web sites\r\nand HTML5 Apps. It also documents Mozilla products, like Firefox OS.\">\r\n<meta property=\"og:title\" content=\"Mozilla Developer Network\">`,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@mui/styles\";\r\nimport { CopyBlock, dracula, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport { CODE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Basic = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Basic</p>\r\n            <Direct />\r\n            <Divider className={classes.dividerB} />\r\n            <div className=\"title\">What’s in the head?</div>\r\n            <p className=\"guide\">Metadata in HTML</p>\r\n            <p className=\"guide\">\r\n                The head of an HTML document is the part that is not displayed\r\n                in the web browser when the page is loaded. It contains\r\n                information such as the page <code>{`<title>`}</code>, links to\r\n                CSS (if you choose to style your HTML content with CSS), links\r\n                to custom favicons, and other metadata (data about the HTML,\r\n                such as the author, and important keywords that describe the\r\n                document.) In this article we'll cover all of the above and\r\n                more, in order to give you a good basis for working with markup.\r\n            </p>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <p className=\"guide\">\r\n                The HTML head is the contents of the{\" \"}\r\n                <code>\r\n                    {\"<head> element — unlike the contents of the <body>\"}\r\n                </code>{\" \"}\r\n                element (which are displayed on the page when loaded in a\r\n                browser), the head's content is not displayed on the page.\r\n                Instead, the head's job is to contain metadata about the\r\n                document. In the above example, the head is quite small:\r\n            </p>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <p className=\"guide\">\r\n                In larger pages however, the head can get quite full. Try going\r\n                to some of your favorite websites and use the developer tools to\r\n                check out their head contents. Our aim here is not to show you\r\n                how to use everything that can possibly be put in the head, but\r\n                rather to teach you how to use the major elements that you'll\r\n                want to include in the head, and give you some familiarity.\r\n                Let's get started.\r\n            </p>\r\n            <div className=\"title\">Adding a title</div>\r\n            <Divider className={classes.dividerS} />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                We've already seen the <code>{\"<title>\"}</code> element in\r\n                action — this can be used to add a title to the document. This\r\n                however can get confused with the <code>{\"<h1>\"}</code> element,\r\n                which is used to add a top level heading to your body content —\r\n                this is also sometimes referred to as the page title. But they\r\n                are different things! The <code>{\" <h1> \"}</code> element\r\n                appears on the page when loaded in the browser — generally this\r\n                should be used once per page, to mark up the title of your page\r\n                content (the story title, or news headline, or whatever is\r\n                appropriate to your usage.) The <code>{\"<title>\"}</code> element\r\n                is metadata that represents the title of the overall HTML\r\n                document (not the document's content.)\r\n            </nav>\r\n            <div className=\"guide\">\r\n                Active learning: Inspecting a simple example\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                To start off this active learning, we'd like you to go to our\r\n                code-online page. To do this, Copy and paste the code out of the\r\n                page and into a new in your project, then you can register and\r\n                login to save it in a sensible place.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Press the \"Code - Online\" button on the below, which causes\r\n                direct to our CODE - ONLINE and appear (possibly in a new\r\n                browser tab). You can type and code anything on it and it\r\n                automatically refresh\r\n            </nav>\r\n            <a\r\n                href={`${SHARE_CODE}/1nqOUROuiQeblC0NWHBsdLRLrEqD02`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    Code Yourself\r\n                </button>\r\n            </a>\r\n            <img\r\n                className=\"mt-4\"\r\n                src=\"https://scontent.fdad3-4.fna.fbcdn.net/v/t1.15752-9/263454209_1345619352563167_680954481838721000_n.png?_nc_cat=101&ccb=1-5&_nc_sid=ae9488&_nc_ohc=MwbP724yHmkAX_SNSlw&tn=AHJTDg93Zew1RfnP&_nc_ht=scontent.fdad3-4.fna&oh=50c7d84fae720070cfd4671ff7c2b573&oe=61D21931\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"title\">\r\n                Metadata: the <code>{\"<meta>\"}</code> element\r\n            </div>\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"guide\">\r\n                Metadata is data that describes data, and HTML has an \"official\"\r\n                way of adding metadata to a document — the{\" \"}\r\n                <code>{\"<meta>\"}</code> element. Of course, the other stuff we\r\n                are talking about in this article could also be thought of as\r\n                metadata too. There are a lot of different types of{\" \"}\r\n                <code>{\"<meta>\"}</code> elements that can be included in your\r\n                page's <code>{\"<head>\"}</code>, but we won't try to explain them\r\n                all at this stage, as it would just get too confusing. Instead,\r\n                we'll explain a few things that you might commonly see, just to\r\n                give you an idea.\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <div className=\"guide\">\r\n                    Specifying your document's character encoding\r\n                </div>\r\n                <div className=\"guide\">\r\n                    In the example we saw above, this line was included:\r\n                </div>\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                This element specifies the document's character encoding — the\r\n                character set that the document is permitted to use. utf-8 is a\r\n                universal character set that includes pretty much any character\r\n                from any human language. This means that your web page will be\r\n                able to handle displaying any language; it's therefore a good\r\n                idea to set this on every web page you create! For example, your\r\n                page could handle English and Japanese just fine:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>Note</b>Some browsers (like Chrome) automatically fix\r\n                incorrect encodings, so depending on what browser you use, you\r\n                may not see this problem. You should still set an encoding of\r\n                utf-8 on your page anyway to avoid any potential problems in\r\n                other browsers.\r\n            </nav>\r\n            <div className=\"title\">\r\n                Active learning: Experiment with character encoding\r\n            </div>\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            Adding an author and description\r\n            <div className=\"guide\">\r\n                Many {\"<meta>\"} elements include name and content attributes:\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                name specifies the type of meta element it is; what type of\r\n                information it contains.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                content specifies the actual meta content.\r\n            </nav>\r\n            <div className=\"guide\">\r\n                Two such meta elements that are useful to include on your page\r\n                define the author of the page, and provide a concise description\r\n                of the page. Let's look at an example:\r\n                <div className=\"h4 mt-2 \">\r\n                    <nav className=\"breadcrumb\">\r\n                        <div className=\"guide font-weight-bold\">\r\n                            <div className=\"example\">\r\n                                <CopyBlock\r\n                                    language={\"html\"}\r\n                                    text={ex[\"exTag3\"]}\r\n                                    showLineNumbers={true}\r\n                                    theme={googlecode}\r\n                                    wrapLines={true}\r\n                                    codeBlock\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                Specifying an author is beneficial in many ways: it is useful to\r\n                be able to understand who wrote the page, if you have any\r\n                questions about the content and you would like to contact them.\r\n                Some content management systems have facilities to automatically\r\n                extract page author information and make it available for such\r\n                purposes.\r\n                <div className=\"\">\r\n                    Specifying a description that includes keywords relating to\r\n                    the content of your page is useful as it has the potential\r\n                    to make your page appear higher in relevant searches\r\n                    performed in search engines (such activities are termed\r\n                    Search Engine Optimization, or SEO.)\r\n                </div>\r\n                <div className=\"title mt-3\">Other types of metadata</div>\r\n                <Divider className={classes.dividerS} />\r\n                <div className=\"guide\">\r\n                    As you travel around the web, you'll find other types of\r\n                    metadata, too. A lot of the features you'll see on websites\r\n                    are proprietary creations, designed to provide certain sites\r\n                    (such as social networking sites) with specific pieces of\r\n                    information they can use.\r\n                </div>\r\n                <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag4\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>\r\n                <div className=\"title mt-3\">\r\n                    Adding custom icons to your site\r\n                </div>\r\n                <Divider className={classes.dividerS} />\r\n                To further enrich your site design, you can add references to\r\n                custom icons in your metadata, and these will be displayed in\r\n                certain contexts. The most commonly used of these is the favicon\r\n                (short for \"favorites icon\", referring to its use in the\r\n                \"favorites\" or \"bookmarks\" lists in browsers).\r\n                <div>\r\n                    The humble favicon has been around for many years. It is the\r\n                    first icon of this type: a 16-pixel square icon used in\r\n                    multiple places. You may see (depending on the browser)\r\n                    favicons displayed in the browser tab containing each open\r\n                    page, and next to bookmarked pages in the bookmarks panel.\r\n                </div>\r\n                <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag6\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>\r\n                <nav className=\"breadcrumb mt-3\">\r\n                    Don't worry too much about implementing all these types of\r\n                    icon right now — this is a fairly advanced feature, and you\r\n                    won't be expected to have knowledge of this to progress\r\n                    through the course. The main purpose here is to let you know\r\n                    what such things are, in case you come across them while\r\n                    browsing other websites' source code.\r\n                </nav>\r\n                <div className=\"title mt-3\">\r\n                    Applying CSS and JavaScript to HTML\r\n                </div>\r\n                <Divider className={classes.dividerS} />\r\n                <div className=\"guide\">\r\n                    The <code>{\"<link>\"}</code> element should always go inside\r\n                    the head of your document. This takes two attributes,\r\n                    rel=\"stylesheet\", which indicates that it is the document's\r\n                    stylesheet, and href, which contains the path to the\r\n                    stylesheet file:\r\n                </div>\r\n                <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag7\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        The <code>{\"<script>\"}</code> element should also go\r\n                        into the head, and should include a src attribute\r\n                        containing the path to the JavaScript you want to load,\r\n                        and defer, which basically instructs the browser to load\r\n                        the JavaScript after the page has finished parsing the\r\n                        HTML. This is useful as it makes sure that the HTML is\r\n                        all loaded before the JavaScript runs, so that you don't\r\n                        get errors resulting from JavaScript trying to access an\r\n                        HTML element that doesn't exist on the page yet. There\r\n                        are actually a number of ways to handle loading\r\n                        JavaScript on your page, but this is the most foolproof\r\n                        one to use for modern browsers\r\n                    </div>\r\n                </nav>\r\n                <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag8\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>\r\n            </div>\r\n            <Divider className={classes.dividerS} />\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Basic);\r\n","export default {\r\n    getStarted: `<tagname>Content goes here...</tagname>`,\r\n    structural: `<html>\r\n    <head>\r\n    </head>\r\n    <body>\r\n    </body>\r\n</html>`,\r\n    exTag1: `<h1>My Code So Strong...</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n    exTag4: `<html>\r\n    <body>\r\n    \r\n        <p>This is a paragraph\r\n        <p>This is a paragraph\r\n    </body>\r\n</html>`,\r\n    exTag3: `<!DOCTYPE html>\r\n<html>\r\n<body>\r\n\r\n<h1>My First Heading</h1>\r\n<p>My first paragraph.</p>\r\n\r\n</body>\r\n</html>`,\r\n\r\n    exTag7: `<p>This is a <br> paragraph with a line break.</p>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst HTMLElements = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Elements</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    An HTML element is defined by a start tag, some content, and\r\n                    an end tag.\r\n                </div>\r\n            </nav>\r\n            <div className=\"h4 mt-3 title\">HTML Elements</div>\r\n            <LineDivider size=\"small\" />\r\n            <p>\r\n                The HTML element is everything from the start tag to the end\r\n                tag:\r\n            </p>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            Examples of some HTML elements:\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag1\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>{\" \"}\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag2\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Note: Some HTML elements have no content (like the {\"<br>\"}{\" \"}\r\n                element). These elements are called empty elements. Empty\r\n                elements do not have an end tag!\r\n            </nav>\r\n            <div className=\"h4 mt-3 title\"> Nested HTML Elements</div>\r\n            <LineDivider size=\"small\" />\r\n            HTML elements can be nested (this means that elements can contain\r\n            other elements).\r\n            <p>\r\n                All HTML documents consist of nested HTML elements. The\r\n                following example contains four HTML elements{\" \"}\r\n                <code>{\"(<html>, <body>, <h1> and <p>)\"}</code>:\r\n            </p>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/5gcwHODTx3OMmJG1bGFvZw0r1GpRlc`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    Code Yourself\r\n                </button>\r\n            </a>\r\n            <div className=\"title mt-3\">Example Explained</div>\r\n            <LineDivider size=\"small\" />\r\n            The <code>{`<html>`}</code> element is the root element and it\r\n            defines the whole HTML document.\r\n            <div>\r\n                {\" \"}\r\n                It has a start tag{\" \"}\r\n                <code>{`<html> and an end tag </html>`}</code>.\r\n            </div>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The <code>{` <body>`}</code> element defines the document's\r\n                body.\r\n                <div>\r\n                    It has a start tag{\" \"}\r\n                    <code>{`<body> and an end tag </body>`}</code>.\r\n                </div>\r\n                <div>\r\n                    Then, inside the{\" \"}\r\n                    <code>{`<body> element there are two other elements: <h1> and <p>`}</code>\r\n                    :\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The <code>{`<h1>`}</code> element defines a heading.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                It has a start tag <code>{`<h1> and an end tag </h1>`}</code>:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The <code>{`<p>`}</code> element defines a paragraph.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                It has a start tag <code>{`<p> and an end tag </p>`}</code>:\r\n            </nav>\r\n            <img\r\n                src=\"https://scontent.fdad3-4.fna.fbcdn.net/v/t1.15752-9/263700163_601183577632808_3819042381537253585_n.png?_nc_cat=105&ccb=1-5&_nc_sid=ae9488&_nc_ohc=XM0tY5newwUAX8gnLaR&_nc_ht=scontent.fdad3-4.fna&oh=1a946b7163d4c5af81298ab43c7961ab&oe=61D39141\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"title mt-3\">Never Skip the End Tag</div>\r\n            <LineDivider size=\"small\" />\r\n            Some HTML elements will display correctly, even if you forget the\r\n            end tag:\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"title mt-3\">Empty HTML Elements</div>\r\n            <LineDivider size=\"small\" />\r\n            HTML elements with no content are called empty elements. The{\" \"}\r\n            {\"<br>\"} tag defines a line break, and is an empty element without a\r\n            closing tag:\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"title mt-3\">HTML is Not Case Sensitive</div>\r\n            <LineDivider size=\"small\" />\r\n            HTML tags are not case sensitive: {\"<P>\"} means the same as {\"<p>\"}.\r\n            closing tag:\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <img\r\n                src=\"https://scontent.fdad3-3.fna.fbcdn.net/v/t1.15752-9/261537404_304204264886606_6315770954394700458_n.png?_nc_cat=109&ccb=1-5&_nc_sid=ae9488&_nc_ohc=lQNpNiq-Y9gAX_OTUPq&_nc_ht=scontent.fdad3-3.fna&oh=03bb06970bc0c30f7d0be298eb411250&oe=61C6CAB2\"\r\n                alt=\"\"\r\n            />\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(HTMLElements);\r\n","export default {\r\n    getStarted: `<!DOCTYPE html>\r\n<html>\r\n    <body>\r\n\r\n        <a href=\"https://youtube.com\">Youtube.com</a>\r\n\r\n    </body>\r\n</html>`,\r\n    structural: `<html>\r\n    <head>\r\n    </head>\r\n    <body>\r\n    </body>\r\n</html>`,\r\n    exTag1: `<h1>My Code So Strong...</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n    exTag3: `<h2>The src Attribute</h2>\r\n<p>HTML images are defined with the img tag</p>\r\n<img src=\"my-image.png...\">`,\r\n    exTag4: `<img src=\"img_girl.jpg\" width=\"500\" height=\"600\">`,\r\n    exTag5: `<img src=\"img_girl.jpg\" alt=\"Girl In Conan Anime\">`,\r\n    exTag6: `<p style=\"color:red;\">This is a red paragraph.</p>`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p title=\"I'm a tooltip\">This is a paragraph.</p>`,\r\n    exTag10: `<a href=\"https://youtube.com/\">Visit youtube</a>`,\r\n    exTag11: `<a href=https://youtube.com/>Visit youtube</a>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","export default {\r\n    getStarted: `<h1>Heading 1</h1>\r\n<h2>Heading 2</h2>\r\n<h3>Heading 3</h3>\r\n<h4>Heading 4</h4>\r\n<h5>Heading 5</h5>\r\n<h6>Heading 6</h6>`,\r\n    exTag1: `<h1 style=\"font-size:60px;\">Heading 1</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n    exTag3: `<h2>The src Attribute</h2>\r\n<p>HTML images are defined with the img tag</p>\r\n<img src=\"my-image.png...\">`,\r\n    exTag4: `<img src=\"img_girl.jpg\" width=\"500\" height=\"600\">`,\r\n    exTag5: `<img src=\"img_girl.jpg\" alt=\"Girl In Conan Anime\">`,\r\n    exTag6: `<p style=\"color:red;\">This is a red paragraph.</p>`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p title=\"I'm a tooltip\">This is a paragraph.</p>`,\r\n    exTag10: `<a href=\"https://youtube.com/\">Visit youtube</a>`,\r\n    exTag11: `<a href=https://youtube.com/>Visit youtube</a>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Attributes = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Attributes</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    HTML attributes provide additional information about HTML\r\n                    elements.\r\n                </div>\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">HTML Attributes</div>\r\n            <LineDivider size=\"small\" />\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item \">\r\n                    All HTML elements can have attributes\r\n                </li>\r\n                <li className=\"list-group-item \">\r\n                    Attributes provide additional information about elements\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    Attributes are always specified in the start tag\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    Attributes usually come in name/value pairs like:\r\n                    name=\"value\"\r\n                </li>\r\n            </ul>\r\n            <div className=\"title h5 mt-5\">The href Attribute</div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The {\"<a>\"} tag defines a hyperlink. The href attribute\r\n                specifies the URL of the page the link goes to:\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/VPdNvkNrfnZsvoc7iPdl8QhUg9343E`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">The src Attribute</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The <code>{`<img>`}</code> tag is used to embed an image in an\r\n                HTML page. The src attribute specifies the path to the image to\r\n                be displayed:\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/BuiTtqwWhYT9C1v1S7JE0aO2bs04T6`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                You can also copy an image address online like above:\r\n            </nav>\r\n            <img\r\n                src=\"https://scontent.fdad3-3.fna.fbcdn.net/v/t1.15752-9/263310097_1257859551360113_4490305699331198709_n.png?_nc_cat=111&ccb=1-5&_nc_sid=ae9488&_nc_ohc=PDwy9C0tDy8AX-a_OkD&_nc_ht=scontent.fdad3-3.fna&oh=059320e6e5cb657caad8b7b566f08ed8&oe=61D4FDFF\"\r\n                alt=\"\"\r\n            />\r\n            <nav className=\"breadcrumb mt-3\">And paste it into the href...</nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                {\" \"}\r\n                It should display like above on the browser screen:\r\n            </nav>\r\n            <img\r\n                className=\"mt-5\"\r\n                src=\"https://scontent.fdad3-2.fna.fbcdn.net/v/t1.15752-9/263628681_707424356887617_3179033584814532379_n.png?_nc_cat=107&ccb=1-5&_nc_sid=ae9488&_nc_ohc=OOYaiiaXzMEAX-hWdAR&_nc_ht=scontent.fdad3-2.fna&oh=6b8e7186079eca0b0b259cf64cc59391&oe=61D3379D\"\r\n                alt=\"\"\r\n                width=\"500px\"\r\n                height=\"450px\"\r\n            />\r\n            <div className=\"mt-5\">\r\n                There are two ways to specify the URL in the src attribute:\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Absolute URL - Links to an external image that is hosted on\r\n                another website. Example:\r\n                <code>\r\n                    {\" \"}\r\n                    src=\"https://www.conan-img.com/images/img_girl.jpg\".\r\n                </code>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Notes: External images might be under copyright. If you do not\r\n                get permission to use it, you may be in violation of copyright\r\n                laws. In addition, you cannot control external images; it can\r\n                suddenly be removed or changed.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Relative URL - Links to an image that is hosted within the\r\n                website. Here, the URL does not include the domain name. If the\r\n                URL begins without a slash, it will be relative to the current\r\n                page. Example: <code>src=\"img_girl.jpg\"</code>. If the URL\r\n                begins with a slash, it will be relative to the domain. Example:\r\n                src=\"/images/img_girl.jpg\".\r\n            </nav>\r\n            <div className=\"title h5 mt-5\">The width and height Attributes</div>\r\n            <LineDivider size=\"small\" />\r\n            <div>\r\n                <b>\r\n                    The <code>{\"<img>\"}</code> tag should also contain the width\r\n                    and height attributes, which specifies the width and height\r\n                    of the image (in pixels):\r\n                </b>\r\n            </div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/KyhKtKUcGznIt9xEquxRLisuDHnTxr`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">The alt Attribute</div>\r\n            <LineDivider size=\"small\" />\r\n            <div>\r\n                <b>\r\n                    The required alt attribute for the <code>{`<img>`}</code>{\" \"}\r\n                    tag specifies an alternate text for an image, if the image\r\n                    for some reason cannot be displayed. This can be due to slow\r\n                    connection, or an error in the src attribute, or if the user\r\n                    uses a screen reader.\r\n                </b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/BAed7waozdYprIms6gWeWT4SpjNSgH`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    The width and height Attributes\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                The <code>style</code> attribute is used to add styles to an\r\n                element, such as color, font, size, and more.\r\n            </nav>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/SVvl6WIVJvsu0YkhLgEE8Z6T3mbDhV`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">The lang Attribute</div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                You should always include the lang attribute inside the{\" \"}\r\n                <code>{`<html>`}</code> tag, to declare the language of the Web\r\n                page. This is meant to assist search engines and browsers.\r\n            </nav>\r\n            <b>The following example specifies English as the language:</b>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-5\">\r\n                Country codes can also be added to the language code in the lang\r\n                attribute. So, the first two characters define the language of\r\n                the HTML page, and the last two characters define the country.\r\n            </nav>\r\n            <b>\r\n                The following example specifies English as the language and\r\n                United States as the country:\r\n            </b>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag8\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">The title Attribute</div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                The title attribute defines some extra information about an\r\n                element.\r\n            </nav>\r\n            <div>\r\n                <b>\r\n                    The value of the title attribute will be displayed as a\r\n                    tooltip when you mouse over the element:\r\n                </b>\r\n            </div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag9\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/k3ogOruOI7ANlcRRVd9cSzENR4wSog`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                <div>\r\n                    <b>NOTE</b>\r\n                </div>\r\n                The HTML standard does not require lowercase attribute names.\r\n                The title attribute (and all other attributes) can be written\r\n                with uppercase or lowercase like title or TITLE. However,\r\n                recommends lowercase attributes in HTML, and demands lowercase\r\n                attributes for stricter document types like XHTML.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                {\" \"}\r\n                <div>\r\n                    The HTML standard does not require quotes around attribute\r\n                    values.\r\n                </div>\r\n                <b>\r\n                    However, recommends quotes in HTML, and demands quotes for\r\n                    stricter document types like XHTML. Good:\r\n                </b>\r\n            </nav>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An good example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag10\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                <div className=\"example mt-3\">\r\n                    <div className=\"guide\">Bad example</div>\r\n\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag11\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>\r\n            </nav>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">Single or Double Quotes?</div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                Double quotes around attribute values are the most common in\r\n                HTML, but single quotes can also be used.\r\n            </nav>\r\n            <div>\r\n                <b>\r\n                    In some situations, when the attribute value itself contains\r\n                    double quotes, it is necessary to use single quotes:\r\n                </b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">Bad example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag12\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Attributes);\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Heading = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">Heading</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    HTML headings are defined with the{\" \"}\r\n                    <code>{`<h1> to <h6> `}</code>tags.\r\n                </div>\r\n            </nav>\r\n            <b>\r\n                <coded>{`<h1> defines the most important heading. <h6>`}</coded>{\" \"}\r\n                defines the least important heading.\r\n            </b>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/kLTjUsvo2KiJ4geUlReY1Dlxh0RtgI`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Headings Are Important</div>\r\n            <LineDivider size=\"small\" />\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item \">\r\n                    Search engines use the headings to index the structure and\r\n                    content of your web pages.\r\n                </li>\r\n                <li className=\"list-group-item \">\r\n                    Users often skim a page by its headings. It is important to\r\n                    use headings to show the document structure.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<h1>`}</code> headings should be used for main\r\n                    headings, followed by{\" \"}\r\n                    <code>{`<h2> headings, then the less important <h3>`}</code>\r\n                    , and so on.\r\n                </li>\r\n            </ul>\r\n            <div className=\"title h5 mt-5\">Bigger Headings</div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Each HTML heading has a default size. However, you can specify\r\n                the size for any heading with the style attribute, using the CSS\r\n                font-size property:\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/lXVKl4IDk3eLkbUX0W98WijFJNRLfi`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Heading);\r\n","export default {\r\n    getStarted: `<p>This is paragraph element</p>`,\r\n    exTag1: `<p>This is a paragraph.</p>\r\n<p>This is another paragraph.</p>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n    exTag3: `<p>\r\nThis paragraph\r\ncontains a lot of lines\r\nin the source code,\r\nbut the browser \r\nignores it.\r\n</p>\r\n\r\n<p>\r\nThis paragraph\r\ncontains      a lot of spaces\r\nin the source     code,\r\nbut the    browser \r\nignores it.\r\n</p>\r\n\r\n<p>\r\nThe number of lines in a paragraph depends on the size of the browser window. If you resize the browser window, the number of lines in this paragraph will change.\r\n</p>`,\r\n    exTag4: `<h1>This is heading 1</h1>\r\n<p>This is some text.</p>\r\n<hr>\r\n<h2>This is heading 2</h2>\r\n<p>This is some other text.</p>\r\n<hr>`,\r\n    exTag5: `<p>This is<br>a paragraph<br>with line breaks.</p>`,\r\n    exTag6: `<p>\r\nMy Bonnie lies over the ocean.\r\n\r\nMy Bonnie lies over the sea.\r\n\r\nMy Bonnie lies over the ocean.\r\n\r\nOh, bring back my Bonnie to me.\r\n</p>`,\r\n    exTag7: `<pre>\r\nMy Bonnie lies over the ocean.\r\n\r\nMy Bonnie lies over the sea.\r\n\r\nMy Bonnie lies over the ocean.\r\n\r\nOh, bring back my Bonnie to me.\r\n</pre>`,\r\n    exTag8: `<pre>\r\nMy       Bonni      e lies   over t he ocean.\r\n\r\nMy   Bonni  e lies     over the    sea.\r\n\r\nMy B    onnie   lies    over the ocean.\r\n\r\nOh, bring back my Bonnie to me.\r\n</pre>`,\r\n    exTag9: `<pre>\r\nMy       Bonni      e lies   over t he ocean.\r\n\r\n\r\n\r\nMy   Bonni  e lies     over the    sea.\r\n\r\n\r\n\r\nMy B    onnie   lies    over the ocean.\r\n\r\nOh, bring back my Bonnie to me.\r\n</pre>`,\r\n    exTag10: `<pre>\r\nMy       Bonni      e lies   over t he ocean.\r\n\r\nMy   \r\nBonni  e lies     over the    sea.\r\n\r\nMy B    \r\nonnie   lies    over the ocean.\r\n\r\nOh, bring back my Bonnie to me.\r\n</pre>`,\r\n    exTag11: `<a href=https://youtube.com/>Visit youtube</a>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Paragraphs = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Paragraphs</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    A paragraph always starts on a new line, and is usually a\r\n                    block of text like <code>{`div`}</code> element\r\n                </div>\r\n            </nav>\r\n            <b>\r\n                <coded>{`<p> defines the most important paragraph. <p>`}</coded>\r\n            </b>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/yidVBThPrdGOrReEUCEf49lRONN2bH`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">HTML Paragraphs</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-5\">\r\n                <ul className=\"list-group mt-3\">\r\n                    <li className=\"list-group-item \">\r\n                        The HTML <code>{`<p>`}</code> element defines a\r\n                        paragraph.\r\n                    </li>\r\n                    <li className=\"list-group-item \">\r\n                        A paragraph always starts on a new line, and browsers\r\n                        automatically add some white space (a margin) before and\r\n                        after a paragraph.\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/wmLSd6KUzBOn6kf8cZo4ORWWBEgaDB`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">HTML Display</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                You cannot be sure how HTML will be displayed.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Large or small screens, and resized windows will create\r\n                different results.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                With HTML, you cannot change the display by adding extra spaces\r\n                or extra lines in your HTML code.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The browser will automatically remove any extra spaces and lines\r\n                when the page is displayed:\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/LJIHabYGvheJrwtRryZzL9VzlG3JGr`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Almost case use <code>{`<p></p>`}</code> tags for common text\r\n            </nav>\r\n            <div className=\"title h5 mt-5\">HTML Horizontal Rules</div>\r\n            <LineDivider size=\"small\" />\r\n            <div>\r\n                <b>\r\n                    The <code>{`<hr>`}</code> tag defines a thematic break in an\r\n                    HTML page, and is most often displayed as a horizontal rule.\r\n                    The<code>{`<hr>`}</code>element is used to separate content\r\n                    (or define a change) in an HTML page:\r\n                </b>\r\n            </div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/70b6rZBvYw5FEhJfOldaeNethFMdz1`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                {\" \"}\r\n                <b>\r\n                    The <code>{`<hr>`}</code> tag is an empty tag, which means\r\n                    that it has no end tag.\r\n                </b>\r\n            </nav>\r\n            <div className=\"title h5 mt-5\">HTML Line Breaks</div>\r\n            <LineDivider size=\"small\" />\r\n            <div>\r\n                <b>\r\n                    The HTML <code>{`<br>`}</code> element defines a line break.\r\n                </b>\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-2\">\r\n                Use <code>{`<br>`}</code> if you want a line break (a new line)\r\n                without starting a new paragraph:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/SDbM321JjNCGJXE1Hn6TIHJPVEVDuS`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    The <code>{` <br>`}</code> tag is an empty tag, which means\r\n                    that it has no end tag.\r\n                </b>\r\n            </nav>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">The Poem Problem</div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                This poem will display on a single line:\r\n            </nav>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/Pxq1BPoi3m1HQ9CjysoyGLGXu4sd0s`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    Solution - The HTML <code>{`<pre>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                The HTML <code>{`<pre>`}</code> element defines preformatted\r\n                text.\r\n            </nav>\r\n            <b>\r\n                The text inside a <code>{`<pre>`}</code> element is displayed in\r\n                a fixed-width font (usually Courier), and it preserves both\r\n                spaces and line breaks:\r\n            </b>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/O7MI6gPf7P6FzxXLzZ5akpN5PMdh9l`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag8\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag9\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag10\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Paragraphs);\r\n","export default {\r\n    getStarted: `<pre style=\"background: #face30\">\r\nMy Bonnie lies over the ocean.\r\n\r\nMy Bonnie lies over the sea.\r\n\r\nMy Bonnie lies over the ocean.\r\n\r\nOh, bring back my Bonnie to me.\r\n\r\nI know this every time\r\n</pre>`,\r\n    exTag0: `<div style=\"font-size:60px;color: #face30, background: #ffd\">More style on this div element</div>`,\r\n    exTag1: `<body style=\"background-color:powderblue;\">\r\n    <h1>This is a heading</h1>\r\n    <p>This is a paragraph.</p>\r\n</body>`,\r\n    exTag2: `<h1 style=\"background-color:powderblue;\">This is a heading</h1>\r\n<p style=\"background-color:tomato;\">This is a paragraph.</p>`,\r\n    exTag3: `<h1 style=\"color:blue;\">This is a heading</h1>\r\n<p style=\"color:red;\">This is a paragraph.</p>`,\r\n    exTag4: `<h1 style=\"font-family:verdana;\">This is a heading</h1>\r\n<p style=\"font-family:courier;\">This is a paragraph.</p>`,\r\n    exTag5: `<h1 style=\"font-size:300%;\">This is a heading</h1>\r\n<p style=\"font-size:160%;\">This is a paragraph.</p>`,\r\n    exTag6: `<h1 style=\"text-align:center;\">Centered Heading</h1>\r\n<p style=\"text-align:center;\">Centered paragraph.</p>`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p title=\"I'm a tooltip\">This is a paragraph.</p>`,\r\n    exTag10: `<a href=\"https://youtube.com/\">Visit youtube</a>`,\r\n    exTag11: `<a href=https://youtube.com/>Visit youtube</a>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Styles = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Styles</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    The HTML style attribute is used to add styles to an\r\n                    element, such as color, font, size, and more.\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                {\" \"}\r\n                <code>{`<a style=\"something in here...\" href=\"\">Some text...</a>`}</code>{\" \"}\r\n                tags.\r\n            </nav>\r\n            <b>\r\n                <coded>{`<h1> defines the most important heading. <h6>`}</coded>{\" \"}\r\n                defines the least important heading.\r\n            </b>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/4QIp3swnMkWNGILFbjXTyt5UDBEemf`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">The HTML Style Attribute</div>\r\n            <LineDivider size=\"small\" />\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item \">\r\n                    And so on..., not just one style, you can define more style\r\n                    on style attribute on each tag\r\n                </li>\r\n                <li className=\"list-group-item \">\r\n                    Setting the style of an HTML element, can be done with the\r\n                    style attribute.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    The HTML style attribute has the following syntax:\r\n                </li>\r\n            </ul>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag0\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"title h5 mt-5\">Background Color</div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS background-color property defines the background color\r\n                for an HTML element.\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/3uzB6cwWYuC2bsm0M6CU1vhOcPk21x`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/7jpea0kGuIOLKBjwMkGZN4dCiCH0vG`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Text Color</div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                The CSS color property defines the text color for an HTML\r\n                element:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/L7Uqs1d0cZOg2ib9OclleIc7Zm0omn`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Fonts</div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                The CSS font-family property defines the font to be used for an\r\n                HTML element:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/HnAYEhvMo9JDkUY3BpyqNjwjuTR5qX`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Text Size</div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                The CSS font-size property defines the text size for an HTML\r\n                element:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/EMLH8yWy9D4UkWmNhezTR0UMLmsuda`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Text Alignment</div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                The CSS text-align property defines the horizontal text\r\n                alignment for an HTML element:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/6Xh1kilej8CazF3tEMwerpwj8mKyYR`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <LineDivider size=\"small\" />\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Styles);\r\n","export default {\r\n    getStarted: `This text is bold\r\nThis text is italic\r\nThis is subscript and superscript`,\r\n    structural: `<b>This text is bold</b>`,\r\n    exTag1: `<h1>My Code So Strong...</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n    exTag3: `<strong>This text is important!</strong>`,\r\n    exTag4: `<i>This text is italic</i>`,\r\n    exTag5: `<em>This text is emphasized</em>`,\r\n    exTag6: `<p>My favorite color is <del>blue</del> red.</p>`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Formatting = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Text Formatting</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    HTML contains several elements for defining text with a\r\n                    special meaning.\r\n                </div>\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/Bc9miZ6tNk9FnIGyJNRPu9bxa0KQu8`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">HTML Formatting Elements</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Formatting elements were designed to display special types of\r\n                text:\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item \">\r\n                    <code>{` <b>`}</code> - Bold text\r\n                </li>\r\n                <li className=\"list-group-item \">\r\n                    <code>{`<strong> - Important text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<i> - Italic text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<em> - Emphasized text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<mark> - Marked text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<small> - Smaller text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<del> - Deleted text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<ins> - Inserted text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<sub> - Subscript text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<sup> - Superscript text`}</code>\r\n                </li>\r\n            </ul>\r\n            <div className=\"title h5 mt-5\">\r\n                <code>{`HTML <b> and <strong> Elements`}</code>\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<b>`}</code> element defines bold text, without\r\n                any extra importance.\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/KwRUFwcBDJX92qpnMU5jdN22mDMxoI`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">The strong Attribute</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<strong>`}</code> element defines text with\r\n                strong importance. The content inside is typically displayed in\r\n                bold.\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/BuiTtqwWhYT9C1v1S7JE0aO2bs04T6`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                {\" \"}\r\n                HTML <code>{`<i> and <em>`}</code> Elements\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<i>`}</code> element defines a part of text in\r\n                an alternate voice or mood. The content inside is typically\r\n                displayed in italic.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Tip: The <code>{`<i>`}</code> tag is often used to indicate a\r\n                technical term, a phrase from another language, a thought, a\r\n                ship name, etc.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<em>`}</code> element defines emphasized text.\r\n                The content inside is typically displayed in italic.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Tip: A screen reader will pronounce the words in{\" \"}\r\n                <code>{`<em>`}</code> with an emphasis, using verbal stress.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"title h5 mt-5\">\r\n                HTML <code>{`<small>`}</code> Element\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <div>\r\n                <b>\r\n                    <code>{`The HTML <small> element defines smaller text:`}</code>\r\n                </b>\r\n            </div>\r\n            <small>This is some smaller text.</small>\r\n            <div className=\"title h5 mt-5\">\r\n                HTML <code>{`<mark>`}</code> Element\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<mark>`}</code> element defines text that\r\n                should be marked or highlighted:\r\n            </nav>\r\n            <div>\r\n                <b>\r\n                    <code>{`<p>Do not forget to buy <mark>milk</mark> today.</p>`}</code>\r\n                </b>\r\n            </div>\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    HTML <code>{`<del>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<del>`}</code> element defines text that has\r\n                been deleted from a document. Browsers will usually strike a\r\n                line through deleted text:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    HTML <code>{`<ins>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<ins>`}</code> element defines text that has\r\n                been deleted from a document. Browsers will usually strike a\r\n                line through deleted text:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag9\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>{\" \"}\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    HTML <code>{`<sub>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<sub>`}</code> element defines subscript text.\r\n                Subscript text appears half a character below the normal line,\r\n                and is sometimes rendered in a smaller font. Subscript text can\r\n                be used for chemical formulas, like H2O:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag10\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    HTML <code>{`<sup>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<sup>`}</code> element defines superscript\r\n                text. Superscript text appears half a character above the normal\r\n                line, and is sometimes rendered in a smaller font. Superscript\r\n                text can be used for footnotes, like WWW[1]:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag11\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Formatting);\r\n","export default {\r\n    getStarted: `<style>\r\nbody {background-color: powderblue;}\r\nh1   {color: blue;}\r\np    {color: red;}\r\n</style>\r\n</head>\r\n<body>\r\n\r\n<h1>This is a heading</h1>\r\n<p>This is a paragraph.</p>\r\n\r\n</body>`,\r\n    structural: `<head>\r\n<link rel=\"stylesheet\" href=\"styles.css\">\r\n</head>\r\n<body>\r\n\r\n<h1>This is a heading</h1>\r\n<p>This is a paragraph.</p>\r\n\r\n</body>`,\r\n    exTag1: `body {\r\nbackground-color: powderblue;\r\n}\r\nh1 {\r\ncolor: blue;\r\n}\r\np {\r\ncolor: red;\r\n}`,\r\n    exTag2: `<style>\r\nh1 {\r\n    color: blue;\r\n    font-family: verdana;\r\n    font-size: 300%;\r\n}\r\np {\r\n    color: red;\r\n    font-family: courier;\r\n    font-size: 160%;\r\n}\r\n</style>\r\n</head>\r\n<body>\r\n\r\n<h1>This is a heading</h1>\r\n<p>This is a paragraph.</p>\r\n\r\n</body>`,\r\n    exTag3: `p {\r\nborder: 2px solid powderblue;\r\n}`,\r\n    exTag4: `p {\r\nborder: 2px solid powderblue;\r\npadding: 30px;\r\n}`,\r\n    exTag5: `p {\r\nborder: 2px solid powderblue;\r\nmargin: 50px;\r\n}`,\r\n    exTag6: `<link rel=\"stylesheet\" href=\"https://www.w3schools.com/html/styles.css\">`,\r\n    exTag7: `<link rel=\"stylesheet\" href=\"/html/styles.css\">`,\r\n    exTag8: `<link rel=\"stylesheet\" href=\"styles.css\">`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Formatting = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Styles - CSS</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    CSS stands for Cascading Style Sheets.\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    CSS saves a lot of work. It can control the layout of\r\n                    multiple web pages all at once.\r\n                </div>\r\n            </nav>\r\n            <img\r\n                src=\"https://leecy.me/content/images/2021/06/image.png\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"h4 title mt-5\">What is CSS?</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Cascading Style Sheets (CSS) is used to format the layout of a\r\n                webpage.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                With CSS, you can control the color, font, the size of text, the\r\n                spacing between elements, how elements are positioned and laid\r\n                out, what background images or background colors are to be used,\r\n                different displays for different devices and screen sizes, and\r\n                much more!\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    Tip: The word cascading means that a style applied to a\r\n                    parent element will also apply to all children elements\r\n                    within the parent. So, if you set the color of the body text\r\n                    to \"blue\", all headings, paragraphs, and other text elements\r\n                    within the body will also get the same color (unless you\r\n                    specify something else)!\r\n                </b>\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">Using CSS</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                CSS can be added to HTML documents in 3 ways:\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    Inline - by using the style attribute inside HTML elements\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    Internal - by using a <code>{`<style>`}</code> element in\r\n                    the <code>{`<head>`}</code> section\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    External - by using a <code>{`<link>`}</code> element to\r\n                    link to an external CSS file\r\n                </li>\r\n            </ul>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The most common way to add CSS, is to keep the styles in\r\n                external CSS files. However, in this tutorial we will use inline\r\n                and internal styles, because this is easier to demonstrate, and\r\n                easier for you to try it yourself. The most common way to add\r\n                CSS, is to keep the styles in external CSS files. However, in\r\n                this tutorial we will use inline and internal styles, because\r\n                this is easier to demonstrate, and easier for you to try it\r\n                yourself.\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">Internal CSS</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                An internal CSS is used to define a style for a single HTML\r\n                page.\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    An internal CSS is defined in the{\" \"}\r\n                    <code>{`<head> section of an HTML page, within a <style>`}</code>{\" \"}\r\n                    element.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    Internal - by using a <code>{`<style>`}</code> element in\r\n                    the <code>{`<head>`}</code> section\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    The following example sets the text color of ALL the\r\n                    <code>{` <h1> elements (on that page) to blue, and the text color of ALL the <p>`}</code>{\" \"}\r\n                    elements to red. In addition, the page will be displayed\r\n                    with a \"powderblue\" background color:\r\n                </li>\r\n            </ul>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"h4 title mt-5\">External CSS</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                An external style sheet is used to define the style for many\r\n                HTML pages.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                To use an external style sheet, add a link to it in the{\" \"}\r\n                <code>{`<head> `}</code>section of each HTML page:\r\n            </nav>\r\n            v\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The external style sheet can be written in any text editor. The\r\n                file must not contain any HTML code, and must be saved with a\r\n                .css extension.\r\n            </nav>\r\n            <div>\r\n                <b>Here is what the \"styles.css\" file looks like:</b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">CSS Colors, Fonts and Sizes</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Here, we will demonstrate some commonly used CSS properties. You\r\n                will learn more about them later.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS color property defines the text color to be used.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS font-family property defines the font to be used.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS font-size property defines the text size to be used.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The external style sheet can be written in any text editor. The\r\n                file must not contain any HTML code, and must be saved with a\r\n                .css extension.\r\n            </nav>\r\n            <div>\r\n                <b>Here is what the \"styles.css\" file looks like:</b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">CSS Border</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS border property defines a border around an HTML element.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Tip: You can define a border for nearly all HTML elements.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The external style sheet can be written in any text editor. The\r\n                file must not contain any HTML code, and must be saved with a\r\n                .css extension.\r\n            </nav>\r\n            <div>\r\n                <b>Here is what the \"styles.css\" file looks like:</b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">CSS Padding</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS padding property defines a padding (space) between the\r\n                text and the border.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">CSS Margin</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS margin property defines a margin (space) outside the\r\n                border.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">Link to External CSS</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                External style sheets can be referenced with a full URL or with\r\n                a path relative to the current web page.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag8\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Formatting);\r\n","export default {\r\n    getStarted: `<a href=\"url\">link text</a>`,\r\n    structural: `<head>\r\n<link rel=\"stylesheet\" href=\"styles.css\">\r\n</head>\r\n<body>\r\n\r\n<h1>This is a heading</h1>\r\n<p>This is a paragraph.</p>\r\n\r\n</body>`,\r\n    exTag1: `<a href=\"https://youtube.com/\">Youtube.com!</a>`,\r\n    exTag2: `<a href=\"https://www.youtube.com/\" target=\"_blank\">Youtube.com!</a>`,\r\n    exTag3: `<h2>Absolute URLs</h2>\r\n<p><a href=\"https://www.youtube.com.org/\">Youtueb</a></p>\r\n<p><a href=\"https://www.google.com/\">Google</a></p>\r\n<h2>Relative URLs</h2>\r\n<p><a href=\"html_images.asp\">HTML Images</a></p>\r\n<p><a href=\"/css/default.asp\">CSS Tutorial</a></p>`,\r\n    exTag4: `<a href=\"default.asp\">\r\n<img src=\"smiley.gif\" alt=\"HTML tutorial\" style=\"width:42px;height:42px;\">\r\n</a>`,\r\n    exTag5: `<a href=\"mailto:someone@example.com\">Send email</a>`,\r\n    exTag6: `<button onclick=\"document.location='youtube.com'\">HTML Tutorial</button>`,\r\n    exTag7: `<a href=\"https://www.w3schools.com/html/\" title=\"Go to W3Schools HTML section\">Visit our HTML Tutorial</a>`,\r\n    exTag8: `<a href=\"https://www.w3schools.com/html/default.asp\">HTML tutorial</a>`,\r\n    exTag9: `<a href=\"/html/default.asp\">HTML tutorial</a>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Links = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Links</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    Links are found in nearly all web pages. Links allow users\r\n                    to click their way from page to page.\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    CSS saves a lot of work. It can control the layout of\r\n                    multiple web pages all at once.\r\n                </div>\r\n            </nav>\r\n            <img\r\n                src=\"https://media.geeksforgeeks.org/wp-content/uploads/box-model-1.png\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"h4 title mt-5\">HTML Links - Hyperlinks</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">HTML links are hyperlinks.</nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                You can click on a link and jump to another document.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    When you move the mouse over a link, the mouse arrow will\r\n                    turn into a little hand.\r\n                </b>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    Note: A link does not have to be text. A link can be an\r\n                    image or any other HTML element!\r\n                </b>\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">HTML Links - Syntax</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<a>`}</code> tag defines a hyperlink. It has\r\n                the following syntax:\r\n            </nav>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    The most important attribute of the <code>{`<a>`}</code>{\" \"}\r\n                    element is the href attribute, which indicates the link's\r\n                    destination.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    The link text is the part that will be visible to the\r\n                    reader.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    Clicking on the link text, will send the reader to the\r\n                    specified URL address.\r\n                </li>\r\n            </ul>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                By default, links will appear as follows in all browsers:\r\n            </nav>\r\n            <div className=\"guide\">\r\n                <div>An unvisited link is underlined and blue</div>\r\n                <div>A visited link is underlined and purple</div>\r\n                <div>An active link is underlined and red</div>\r\n            </div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                Tip: Links can of course be styled with CSS, to get another\r\n                look!\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">\r\n                HTML Links - The target Attribute\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                By default, the linked page will be displayed in the current\r\n                browser window. To change this, you must specify another target\r\n                for the link.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The target attribute specifies where to open the linked\r\n                document.\r\n                <div>\r\n                    {\" \"}\r\n                    The target attribute can have one of the following values:\r\n                </div>\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    _self - Default. Opens the document in the same window/tab\r\n                    as it was clicked\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    _blank - Opens the document in a new window or tab\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    _parent - Opens the document in the parent frame\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    _top - Opens the document in the full body of the window\r\n                </li>\r\n            </ul>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Absolute URLs vs. Relative URLs</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Both examples above are using an absolute URL (a full web\r\n                address) in the href attribute.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                A local link (a link to a page within the same website) is\r\n                specified with a relative URL (without the \"https://www\" part):\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">\r\n                HTML Links - Use an Image as a Link\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                To use an image as a link, just put the{\" \"}\r\n                <code>{`<img> tag inside the <a>`}</code> tag:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Link to an Email Address</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Use mailto: inside the href attribute to create a link that\r\n                opens the user's email program (to let them send a new email):\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Button as a Link</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                To use an HTML button as a link, you have to add some JavaScript\r\n                code.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                JavaScript allows you to specify what happens at certain events,\r\n                such as a click of a button:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Link Titles</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The title attribute specifies extra information about an\r\n                element. The information is most often shown as a tooltip text\r\n                when the mouse moves over the element\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">\r\n                More on Absolute URLs and Relative URLs\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The title attribute specifies extra information about an\r\n                element. The information is most often shown as a tooltip text\r\n                when the mouse moves over the element\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag8\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag9\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Links);\r\n","export default {\r\n    getStarted: `<img src=\"pic_trulli.jpg\" alt=\"Italian Trulli\">`,\r\n    structural: `<b>This text is bold</b>`,\r\n    exTag1: `<h1>My Code So Strong...</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n    exTag3: `<strong>This text is important!</strong>`,\r\n    exTag4: `<i>This text is italic</i>`,\r\n    exTag5: `<em>This text is emphasized</em>`,\r\n    exTag6: `<p>My favorite color is <del>blue</del> red.</p>`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Images = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Images</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    Images can improve the design and the appearance of a web\r\n                    page.\r\n                </div>\r\n            </nav>\r\n            <img\r\n                src=\"https://scontent.fdad3-1.fna.fbcdn.net/v/t1.15752-9/263589965_1116181812456413_4271057305934982282_n.jpg?_nc_cat=110&ccb=1-5&_nc_sid=ae9488&_nc_ohc=g6oSeW1i7JQAX8RHOAk&tn=AHJTDg93Zew1RfnP&_nc_ht=scontent.fdad3-1.fna&oh=67d24a2ca5f360a6dda20b526c9b96c8&oe=61D39242\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/6hdXyHq3PZge7p8iA53VsQUkiPV4Mo`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">HTML Formatting Elements</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Formatting elements were designed to display special types of\r\n                text:\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item \">\r\n                    <code>{` <b>`}</code> - Bold text\r\n                </li>\r\n                <li className=\"list-group-item \">\r\n                    <code>{`<strong> - Important text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<i> - Italic text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<em> - Emphasized text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<mark> - Marked text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<small> - Smaller text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<del> - Deleted text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<ins> - Inserted text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<sub> - Subscript text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<sup> - Superscript text`}</code>\r\n                </li>\r\n            </ul>\r\n            <div className=\"title h5 mt-5\">\r\n                <code>{`HTML <b> and <strong> Elements`}</code>\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<b>`}</code> element defines bold text, without\r\n                any extra importance.\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/KwRUFwcBDJX92qpnMU5jdN22mDMxoI`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">The strong Attribute</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<strong>`}</code> element defines text with\r\n                strong importance. The content inside is typically displayed in\r\n                bold.\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/BuiTtqwWhYT9C1v1S7JE0aO2bs04T6`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                {\" \"}\r\n                HTML <code>{`<i> and <em>`}</code> Elements\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<i>`}</code> element defines a part of text in\r\n                an alternate voice or mood. The content inside is typically\r\n                displayed in italic.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Tip: The <code>{`<i>`}</code> tag is often used to indicate a\r\n                technical term, a phrase from another language, a thought, a\r\n                ship name, etc.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<em>`}</code> element defines emphasized text.\r\n                The content inside is typically displayed in italic.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Tip: A screen reader will pronounce the words in{\" \"}\r\n                <code>{`<em>`}</code> with an emphasis, using verbal stress.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"title h5 mt-5\">\r\n                HTML <code>{`<small>`}</code> Element\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <div>\r\n                <b>\r\n                    <code>{`The HTML <small> element defines smaller text:`}</code>\r\n                </b>\r\n            </div>\r\n            <small>This is some smaller text.</small>\r\n            <div className=\"title h5 mt-5\">\r\n                HTML <code>{`<mark>`}</code> Element\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<mark>`}</code> element defines text that\r\n                should be marked or highlighted:\r\n            </nav>\r\n            <div>\r\n                <b>\r\n                    <code>{`<p>Do not forget to buy <mark>milk</mark> today.</p>`}</code>\r\n                </b>\r\n            </div>\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    HTML <code>{`<del>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<del>`}</code> element defines text that has\r\n                been deleted from a document. Browsers will usually strike a\r\n                line through deleted text:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    HTML <code>{`<ins>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<ins>`}</code> element defines text that has\r\n                been deleted from a document. Browsers will usually strike a\r\n                line through deleted text:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag9\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>{\" \"}\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    HTML <code>{`<sub>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<sub>`}</code> element defines subscript text.\r\n                Subscript text appears half a character below the normal line,\r\n                and is sometimes rendered in a smaller font. Subscript text can\r\n                be used for chemical formulas, like H2O:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag10\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    HTML <code>{`<sup>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<sup>`}</code> element defines superscript\r\n                text. Superscript text appears half a character above the normal\r\n                line, and is sometimes rendered in a smaller font. Superscript\r\n                text can be used for footnotes, like WWW[1]:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag11\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Images);\r\n","import GetStarted from \"../../contentLibrary/html/GetStarted/GetStarted\";\r\nimport Introduction from \"../../contentLibrary/html/Introduction/Introduction\";\r\nimport React from \"react\";\r\nimport Basic from \"../../contentLibrary/html/Basic/Basic\";\r\nimport HTMLElements from \"../../contentLibrary/html/HTMLElements/HTMLElements\";\r\nimport Attributes from \"../../contentLibrary/html/Attributes/Attributes\";\r\nimport Heading from \"../../contentLibrary/html/Heading/Heading\";\r\nimport Paragraphs from \"../../contentLibrary/html/Paragraphs/Paragraphs\";\r\nimport Styles from \"../../contentLibrary/html/HTML Styles/Styles\";\r\nimport Formatting from \"../../contentLibrary/html/Formatting/Formatting\";\r\nimport HTMLCSS from \"../../contentLibrary/html/HTMLCSS/HTMLCSS\";\r\nimport Links from \"../../contentLibrary/html/Links/Links\";\r\nimport Images from \"../../contentLibrary/html/Images/Images\";\r\n\r\nexport const HTML_TUTORIALS = [\r\n    {\r\n        path: \"/tutorials/html/introduction\",\r\n        name: \"Introduction\",\r\n        exact: true,\r\n        component: (props) => <Introduction {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/get-started\",\r\n        name: \"Get Started\",\r\n        exact: true,\r\n        component: (props) => <GetStarted {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/html-basic\",\r\n        name: \"HTML Basic\",\r\n        exact: true,\r\n        component: (props) => <Basic {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/html-elements\",\r\n        name: \"HTML Elements\",\r\n        exact: true,\r\n        component: (props) => <HTMLElements {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/heading\",\r\n        name: \"Heading\",\r\n        exact: true,\r\n        component: (props) => <Heading {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/paragraphs\",\r\n        name: \"Paragraphs\",\r\n        exact: true,\r\n        component: (props) => <Paragraphs {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/styles\",\r\n        name: \"HTML Styles\",\r\n        exact: true,\r\n        component: (props) => <Styles {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/formatting\",\r\n        name: \"HTML Formatting\",\r\n        exact: true,\r\n        component: (props) => <Formatting {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/html-css\",\r\n        name: \"HTML - CSS\",\r\n        exact: true,\r\n        component: (props) => <HTMLCSS {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/html-links\",\r\n        name: \"HTML - Links\",\r\n        exact: true,\r\n        component: (props) => <Links {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/html-images\",\r\n        name: \"HTML - Images\",\r\n        exact: true,\r\n        component: (props) => <Images {...props} />,\r\n    },\r\n];\r\n","import { createActions } from \"redux-actions\";\r\n\r\nexport const openModalShare = createActions({\r\n    openModalShareRequest: (val) => val,\r\n    openModalShareSuccess: (val) => val,\r\n    openModalShareFailure: (val) => val,\r\n});\r\n","import { createActions } from \"redux-actions\";\r\n\r\nexport const setView = createActions({\r\n    setViewRequest: (val) => val,\r\n    setViewSuccess: (val) => val,\r\n    setViewFailure: (val) => val,\r\n});\r\n\r\nexport const setFullScreen = createActions({\r\n    setFullScreenRequest: (val) => val,\r\n    setFullScreenSuccess: (val) => val,\r\n    setFullScreenFailure: (val) => val,\r\n});\r\n\r\nexport const setLargeScreen = createActions({\r\n    setLargeScreenRequest: (val) => val,\r\n    setLargeScreenSuccess: (val) => val,\r\n    setLargeScreenFailure: (val) => val,\r\n});\r\n","import {\r\n    Button,\r\n    IconButton,\r\n    LinearProgress,\r\n    Typography,\r\n    Box,\r\n} from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    directToCode,\r\n    updateCode,\r\n    getProjects,\r\n    changeName,\r\n    setIsChanging,\r\n    setIsDeleting,\r\n} from \"../actions/code\";\r\nimport { logout, setNameCode } from \"../actions/login\";\r\nimport { openModalSuccess } from \"../actions/modal\";\r\nimport \"./Nav.css\";\r\n\r\nimport { setListTutorial, setOpen, setSidebar } from \"../actions/tutorial\";\r\nimport { HTML_TUTORIALS } from \"../common/constants/HTMLconstants\";\r\nimport { CSS_TUTORIALS } from \"../common/constants/CSSconstants\";\r\nimport { JS_TUTORIALS } from \"../common/constants/JSconstants\";\r\nimport { GoogleLogout } from \"react-google-login\";\r\nimport { API_GG, CODE } from \"../constant/axios\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\nimport { push } from \"connected-react-router\";\r\nimport { openModalShare } from \"../actions/modalShareCode\";\r\nimport { setFullScreen, setView, setLargeScreen } from \"../actions/view\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport CreateNewFolderIcon from \"@mui/icons-material/CreateNewFolder\";\r\nimport FolderIcon from \"@mui/icons-material/Folder\";\r\nimport FolderOpenIcon from \"@mui/icons-material/FolderOpen\";\r\nconst Nav = ({\r\n    openModalSuccessCreator,\r\n    updateCodeCreator,\r\n    name,\r\n    isAuthenticated,\r\n    nameCode,\r\n    directToCodeCreator,\r\n    logoutCreator,\r\n    getProjectsCreator,\r\n    projects,\r\n    setIsChangingCreator,\r\n    setIsDeletingCreator,\r\n    url,\r\n}) => {\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const openSidebar = useSelector((state) => state.tutorial.openSidebar);\r\n    const picture = useSelector((state) => state.auth.account.picture);\r\n    const progress = useSelector((state) => state.modal.progress);\r\n    const fullScreen = useSelector((state) => state.view.fullScreen);\r\n    const largeScreen = useSelector((state) => state.view.largeScreen);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let [html, setHtml] = useLocalStorage(\"html\", \"\");\r\n    const [css, setCss] = useLocalStorage(\"css\", \"\");\r\n    const [js, setJs] = useLocalStorage(\"js\", \"\");\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const handleSave = (e) => {\r\n        e.preventDefault();\r\n        openModalSuccessCreator();\r\n    };\r\n\r\n    const handleDirect = () => {\r\n        directToCodeCreator();\r\n        dispatch(setNameCode(null));\r\n    };\r\n\r\n    const handleLogout = (e, x) => {\r\n        e.preventDefault();\r\n        x();\r\n\r\n        // console.log(\"Answer\", typeof window.FB.logout === 'function');\r\n\r\n        localStorage.removeItem(\"access_token\");\r\n        logoutCreator();\r\n        dispatch(push(\"/login\"));\r\n    };\r\n\r\n    const onLogoutGGSuccess = (res) => {\r\n        localStorage.removeItem(\"access_token\");\r\n    };\r\n\r\n    const handleGetProjects = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"handleGetProjects run...\");\r\n        getProjectsCreator();\r\n    };\r\n\r\n    const handleChangeName = () => {\r\n        setIsChangingCreator(true);\r\n        openModalSuccessCreator();\r\n    };\r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n\r\n        setIsDeletingCreator(true);\r\n        openModalSuccessCreator();\r\n    };\r\n    const newProject = (e) => {\r\n        e.preventDefault();\r\n        localStorage.setItem(\r\n            \"code-html\",\r\n            JSON.stringify(`<div style=\"parent\">\r\n  <div class=\"text-type\">\r\n    <p>WELCOME to CODE-ONLINE&nbsp;</p>\r\n  </div>\r\n  <div class=\"text-type flow\">\r\n    <p>Type something to-start&nbsp;</p>\r\n  </div>\r\n</div>\r\n      `)\r\n        );\r\n        localStorage.setItem(\r\n            \"code-css\",\r\n            JSON.stringify(`body {\r\n  margin:0px;\r\n  height:100vh;\r\n  display:flex;\r\n  align-items:center;\r\n  justify-content:center;\r\n  color: #fff;\r\n\r\n}\r\n.parent {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.text-type {\r\n  padding:20px 30px;\r\n  background:#f5f5f5;\r\n  font-size:35px;\r\n  font-family:monospace;\r\n  border-radius:50px;\r\n  position: relative;\r\n  font-weight: 650;\r\n  top: -60px;\r\n  margin-top: 15px;\r\n  background-image: linear-gradient(45deg, #98DBC6 45.02%, #ffe6e1 10%);\r\n}\r\n.text-type p {\r\n  margin:0px;\r\n  white-space:nowrap;\r\n  overflow:hidden;\r\n  animation:typing 4s steps(22,end) forwards, blink 1s infinite;\r\n\r\n}\r\n.flow {\r\n  display: none;\r\n  padding:20px 30px;\r\n  background:#f5f5f5;\r\n  font-size:35px;\r\n  font-family:monospace;\r\n  border-radius:50px;\r\n  position: relative;\r\n  font-weight: 550;\r\n  top: -60px;\r\n  margin-top: 15px;\r\n  background-image: linear-gradient(to right, #98EDC6 60%, #98EDC6);\r\n}\r\n@keyframes typing {\r\n  0% { width:0% }\r\n  100% { width:100% }\r\n}\r\n@keyframes blink {\r\n  0%,100% {\r\n    border-right:2px solid transparent;\r\n  }\r\n  50% {\r\n    border-right:2px solid #222;\r\n  }\r\n}`)\r\n        );\r\n        localStorage.setItem(\r\n            \"code-js\",\r\n            JSON.stringify(`setTimeout(() => {\r\n            var x = document.getElementsByClassName('flow')[0];\r\n            x.style.cssText = \"display: flex !important\" },1000)`)\r\n        );\r\n        // window.open(\"http://localhost:3000/code\");\r\n        // dispatch(push(\"/code\"));\r\n        window.location.href = CODE;\r\n    };\r\n\r\n    const [projectsFiltered, setProjectsFiltered] = useState(projects);\r\n    const [keySearch, setKeySearch] = useState(\"\");\r\n    useEffect(() => {\r\n        setProjectsFiltered(\r\n            projects.filter(\r\n                (x) =>\r\n                    x.name\r\n                        .toString()\r\n                        .toLowerCase()\r\n                        .indexOf(keySearch.toLowerCase()) > -1 && x\r\n            )\r\n        );\r\n    }, [keySearch, projects]);\r\n    const onSearch = (e) => {\r\n        const value = e.target.value;\r\n        setKeySearch(value);\r\n    };\r\n    const renderProjects = () => {\r\n        let jsx;\r\n        jsx = (\r\n            <div\r\n                className=\"dropdown-menu\"\r\n                style={{\r\n                    maxHeight: `500px`,\r\n                    overflowY: `scroll`,\r\n                    maxWidth: `290px`,\r\n                    overflowX: `auto`,\r\n                }}\r\n            >\r\n                <a\r\n                    href={CODE}\r\n                    // to=\"/code\"\r\n                    className=\"dropdown-item\"\r\n                    onClick={(e) => newProject(e)}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            display: `flex`,\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        {\" \"}\r\n                        <div>New Project</div>\r\n                        <div>\r\n                            {\" \"}\r\n                            <CreateNewFolderIcon sx={{ fontSize: `20px` }} />\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n                <div style={{ position: `relative` }}>\r\n                    <SearchIcon\r\n                        sx={{\r\n                            position: `absolute`,\r\n                            left: 7,\r\n                            top: 5.9,\r\n                            borderRight: `1px solid #000`,\r\n                            padding: `0 5px 0 0`,\r\n                        }}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"search\"\r\n                        id=\"search\"\r\n                        placeholder=\"Search..\"\r\n                        onChange={onSearch}\r\n                    />\r\n                </div>\r\n                {projectsFiltered.map((project, key) => (\r\n                    <a\r\n                        key={key}\r\n                        className=\"dropdown-item limit-drop\"\r\n                        href={`/${project._id}`}\r\n                        style={{\r\n                            background: project.name === nameCode && `#8167a9`,\r\n                            color: project.name === nameCode && `#fff`,\r\n                        }}\r\n                    >\r\n                        {\" \"}\r\n                        <span\r\n                            style={{\r\n                                display: \"inline-block\",\r\n                                whiteSpace: \"nowrap\",\r\n                                overflow: \"hidden\",\r\n                                textOverflow: \"ellipsis\",\r\n                                maxWidth: \"25ch\",\r\n                                padding: `0`,\r\n                            }}\r\n                        >\r\n                            {project.name === nameCode ? (\r\n                                <FolderIcon\r\n                                    sx={{\r\n                                        fontSize: `20px`,\r\n                                        paddingRight: `5px`,\r\n                                    }}\r\n                                />\r\n                            ) : (\r\n                                <FolderOpenIcon\r\n                                    sx={{\r\n                                        fontSize: `20px`,\r\n                                        paddingRight: `5px`,\r\n                                    }}\r\n                                />\r\n                            )}\r\n                            {/* <FolderOpenIcon\r\n                                sx={{\r\n                                    fontSize: `20px`,\r\n                                    paddingRight: `5px`,\r\n                                }}\r\n                            /> */}\r\n\r\n                            {project.name}\r\n                        </span>\r\n                    </a>\r\n                ))}\r\n            </div>\r\n        );\r\n        return jsx;\r\n    };\r\n\r\n    const openListHTML = () => {\r\n        dispatch(setNameCode(null));\r\n        dispatch(setListTutorial.setListTutorial(HTML_TUTORIALS));\r\n        dispatch(setOpen.setOpen(true));\r\n    };\r\n\r\n    const openListCSS = () => {\r\n        dispatch(setNameCode(null));\r\n        dispatch(setListTutorial.setListTutorial(CSS_TUTORIALS));\r\n        dispatch(setOpen.setOpen(true));\r\n    };\r\n    const openListJS = () => {\r\n        dispatch(setNameCode(null));\r\n        dispatch(setListTutorial.setListTutorial(JS_TUTORIALS));\r\n        dispatch(setOpen.setOpen(true));\r\n    };\r\n    const handleToggleSidebar = (e) => {\r\n        e.persist();\r\n        setTimeout(() => {\r\n            dispatch(setSidebar.setSidebar(!openSidebar));\r\n        }, 70);\r\n    };\r\n\r\n    const handleShare = () => {\r\n        dispatch(openModalShare.openModalShareRequest(url));\r\n    };\r\n\r\n    const status = useSelector((state) => state.view.status);\r\n\r\n    useEffect(() => {\r\n        getProjectsCreator();\r\n    }, [nameCode, name]);\r\n\r\n    return (\r\n        <div className=\"navigation-wrap bg-light start-header start-style\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <nav\r\n                            className=\"navbar navbar-expand-md navbar-light static\"\r\n                            style={{\r\n                                position: `relative`,\r\n                            }}\r\n                        >\r\n                            <div\r\n                                className=\"navbar-brand\"\r\n                                style={{\r\n                                    color: \"#8167a9\",\r\n                                    fontSize: `1.5rem`,\r\n                                    fontWeight: 680,\r\n                                    padding: `2px 8px`,\r\n                                    border: `none`,\r\n                                    outline: `none`,\r\n                                    background: `inherit`,\r\n                                    // boxShadow: \"2px 2px\",\r\n                                }}\r\n                            >\r\n                                <IconButton\r\n                                    size=\"large\"\r\n                                    edge=\"start\"\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"open drawer\"\r\n                                    onClick={(e) => handleToggleSidebar(e)}\r\n                                >\r\n                                    <MenuIcon fontSize=\"medium\" />\r\n                                </IconButton>\r\n\r\n                                <Link\r\n                                    to=\"/code\"\r\n                                    // onClick={handleDirect}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        if (!status)\r\n                                            dispatch(\r\n                                                setView.setViewSuccess(true)\r\n                                            );\r\n                                        else\r\n                                            dispatch(\r\n                                                setView.setViewSuccess(false)\r\n                                            );\r\n                                    }}\r\n                                    style={{\r\n                                        color: \"#8167a9\",\r\n                                        fontSize: `1.5rem`,\r\n                                        fontWeight: 680,\r\n                                        padding: `2px 8px`,\r\n                                        textDecoration: `none`,\r\n                                        // boxShadow: \"2px 2px\",\r\n                                    }}\r\n                                >\r\n                                    {\"<Code Yourself />\"}\r\n                                </Link>\r\n                            </div>\r\n\r\n                            {/* <Button\r\n                                sx={{\r\n                                    color: \"#8167a9\",\r\n                                    [\"@media(max-width: 600px\"]: {\r\n                                        float: \"right\",\r\n                                        border: \"none\",\r\n                                        paddingRight: \"0\",\r\n                                        padding: 0,\r\n                                        margin: 0,\r\n                                        marginBottom: `-5px`,\r\n                                        color: \"#8167a9\",\r\n                                    },\r\n                                }}\r\n                                onClick={() => {\r\n                                    dispatch(setView.setViewSuccess(!status));\r\n                                }}\r\n                            >\r\n                                View 2\r\n                            </Button> */}\r\n\r\n                            <button\r\n                                className=\"navbar-toggler\"\r\n                                type=\"button\"\r\n                                data-toggle=\"collapse\"\r\n                                data-target=\"#navbarSupportedContent\"\r\n                                aria-controls=\"navbarSupportedContent\"\r\n                                aria-expanded=\"false\"\r\n                                aria-label=\"Toggle navigation\"\r\n                            >\r\n                                <span className=\"navbar-toggler-icon\"></span>\r\n                            </button>\r\n\r\n                            <div\r\n                                className=\"collapse navbar-collapse\"\r\n                                id=\"navbarSupportedContent\"\r\n                                style={{ marginRight: 17 }}\r\n                            >\r\n                                <ul className=\"navbar-nav ml-auto py-4 py-md-0\">\r\n                                    <li className=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\r\n                                        <Link\r\n                                            className=\"nav-link dropdown-toggle\"\r\n                                            data-toggle=\"dropdown\"\r\n                                            type=\"button\"\r\n                                            role=\"button\"\r\n                                            aria-haspopup=\"true\"\r\n                                            aria-expanded=\"false\"\r\n                                            // onClick={(e) => {\r\n                                            //     e.preventDefault();\r\n                                            //     dispatch(\r\n                                            //         setView.setViewSuccess(\r\n                                            //             !status\r\n                                            //         )\r\n                                            //     );\r\n                                            // }}\r\n                                            style={{\r\n                                                color: \"#8167a9 !important\",\r\n                                                fontWeight: 780,\r\n                                                padding: `2px 8px`,\r\n                                            }}\r\n                                            to=\"/\"\r\n                                        >\r\n                                            {\" \"}\r\n                                            View\r\n                                        </Link>\r\n                                        <div className=\"dropdown-menu\">\r\n                                            <p\r\n                                                style={{\r\n                                                    cursor: `pointer`,\r\n                                                    background:\r\n                                                        status === false &&\r\n                                                        fullScreen === false &&\r\n                                                        `#8167a9`,\r\n                                                    color:\r\n                                                        status === false &&\r\n                                                        fullScreen === false &&\r\n                                                        `#fff`,\r\n                                                }}\r\n                                                className=\"dropdown-item\"\r\n                                                onClick={(e) => {\r\n                                                    e.preventDefault();\r\n                                                    dispatch(\r\n                                                        setView.setViewSuccess(\r\n                                                            false\r\n                                                        )\r\n                                                    );\r\n                                                }}\r\n                                            >\r\n                                                View 1\r\n                                            </p>\r\n                                            <p\r\n                                                style={{\r\n                                                    cursor: `pointer`,\r\n                                                    background:\r\n                                                        status === true &&\r\n                                                        !largeScreen &&\r\n                                                        `#8167a9`,\r\n                                                    color:\r\n                                                        status === true &&\r\n                                                        !largeScreen &&\r\n                                                        `#fff`,\r\n                                                }}\r\n                                                className=\"dropdown-item\"\r\n                                                onClick={(e) => {\r\n                                                    e.preventDefault();\r\n                                                    dispatch(\r\n                                                        setView.setViewSuccess(\r\n                                                            true\r\n                                                        )\r\n                                                    );\r\n                                                }}\r\n                                            >\r\n                                                View 2\r\n                                            </p>\r\n                                            <p\r\n                                                style={{\r\n                                                    cursor: `pointer`,\r\n                                                    background:\r\n                                                        largeScreen === true &&\r\n                                                        `#8167a9`,\r\n                                                    color:\r\n                                                        largeScreen === true &&\r\n                                                        `#fff`,\r\n                                                }}\r\n                                                className=\"dropdown-item\"\r\n                                                onClick={(e) => {\r\n                                                    e.preventDefault();\r\n                                                    dispatch(\r\n                                                        setLargeScreen.setLargeScreenSuccess(\r\n                                                            !largeScreen\r\n                                                        )\r\n                                                    );\r\n                                                }}\r\n                                            >\r\n                                                Large Screen\r\n                                            </p>\r\n                                            <p\r\n                                                className=\"dropdown-item\"\r\n                                                to=\"\"\r\n                                                style={{\r\n                                                    cursor: `pointer`,\r\n                                                    background:\r\n                                                        fullScreen === true &&\r\n                                                        `#8167a9`,\r\n                                                    color:\r\n                                                        fullScreen === true &&\r\n                                                        `#fff`,\r\n                                                }}\r\n                                                onClick={(e) => {\r\n                                                    e.preventDefault();\r\n                                                    if (!fullScreen) {\r\n                                                        dispatch(\r\n                                                            setFullScreen.setFullScreenSuccess()\r\n                                                        );\r\n                                                    } else\r\n                                                        dispatch(\r\n                                                            setFullScreen.setFullScreenFailure()\r\n                                                        );\r\n                                                }}\r\n                                            >\r\n                                                {!fullScreen\r\n                                                    ? \"Full Screen\"\r\n                                                    : \"Display Code\"}\r\n                                            </p>\r\n                                        </div>\r\n                                    </li>\r\n                                    {isAuthenticated && (\r\n                                        <li className=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\r\n                                            {isAuthenticated && name && (\r\n                                                <>\r\n                                                    <Link\r\n                                                        className=\"nav-link dropdown-toggle\"\r\n                                                        data-toggle=\"dropdown\"\r\n                                                        role=\"button\"\r\n                                                        aria-haspopup=\"true\"\r\n                                                        aria-expanded=\"false\"\r\n                                                        // to={url}\r\n                                                        to=\"\"\r\n                                                        style={{\r\n                                                            color: \"#8167a9 !important\",\r\n                                                            fontWeight: 780,\r\n                                                            // marginLeft: `25%`\r\n                                                        }}\r\n                                                        onClick={\r\n                                                            handleGetProjects\r\n                                                        }\r\n                                                    >\r\n                                                        <span\r\n                                                            style={{\r\n                                                                display:\r\n                                                                    \"inline-block\",\r\n                                                                whiteSpace:\r\n                                                                    \"nowrap\",\r\n                                                                overflow:\r\n                                                                    \"hidden\",\r\n                                                                textOverflow:\r\n                                                                    \"ellipsis\",\r\n                                                                maxWidth:\r\n                                                                    \"14ch\",\r\n                                                                padding: `0`,\r\n                                                            }}\r\n                                                        >\r\n                                                            Your Project\r\n                                                        </span>\r\n                                                        <span\r\n                                                            style={{\r\n                                                                display:\r\n                                                                    \"inline-block\",\r\n                                                                whiteSpace:\r\n                                                                    \"nowrap\",\r\n                                                                overflow:\r\n                                                                    \"hidden\",\r\n                                                                textOverflow:\r\n                                                                    \"ellipsis\",\r\n                                                                maxWidth:\r\n                                                                    \"14ch\",\r\n                                                                padding: `0`,\r\n                                                            }}\r\n                                                        >\r\n                                                            {nameCode\r\n                                                                ? `: ${nameCode}`\r\n                                                                : \"\"}\r\n                                                        </span>\r\n                                                    </Link>\r\n                                                    {renderProjects()}\r\n                                                </>\r\n                                            )}\r\n                                        </li>\r\n                                    )}\r\n\r\n                                    {nameCode && isAuthenticated && (\r\n                                        <li className=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\r\n                                            {isAuthenticated && name && (\r\n                                                <p\r\n                                                    className=\"nav-link dropdown-toggle\"\r\n                                                    data-toggle=\"dropdown\"\r\n                                                    role=\"button\"\r\n                                                    aria-haspopup=\"true\"\r\n                                                    aria-expanded=\"false\"\r\n                                                >\r\n                                                    <span\r\n                                                        style={{\r\n                                                            color: `#8167a9 !important`,\r\n                                                            fontWeight: `780`,\r\n                                                            display:\r\n                                                                \"inline-block\",\r\n                                                            whiteSpace:\r\n                                                                \"nowrap\",\r\n                                                            overflow: \"hidden\",\r\n                                                            textOverflow:\r\n                                                                \"ellipsis\",\r\n                                                            maxWidth: \"14ch\",\r\n                                                            padding: `0`,\r\n                                                        }}\r\n                                                    >\r\n                                                        {nameCode}\r\n                                                    </span>\r\n                                                </p>\r\n                                            )}\r\n                                            <div className=\"dropdown-menu\">\r\n                                                <p\r\n                                                    style={{\r\n                                                        cursor: `pointer`,\r\n                                                    }}\r\n                                                    className=\"dropdown-item\"\r\n                                                    onClick={handleShare}\r\n                                                >\r\n                                                    Share\r\n                                                </p>\r\n                                                <p\r\n                                                    style={{\r\n                                                        cursor: `pointer`,\r\n                                                    }}\r\n                                                    className=\"dropdown-item\"\r\n                                                    onClick={handleChangeName}\r\n                                                >\r\n                                                    Change name\r\n                                                </p>\r\n                                                <p\r\n                                                    className=\"dropdown-item\"\r\n                                                    to=\"\"\r\n                                                    style={{\r\n                                                        cursor: `pointer`,\r\n                                                    }}\r\n                                                    onClick={handleDelete}\r\n                                                >\r\n                                                    Delete\r\n                                                </p>\r\n                                            </div>\r\n                                        </li>\r\n                                    )}\r\n                                    <li className=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\r\n                                        <Link\r\n                                            className=\"nav-link\"\r\n                                            type=\"button\"\r\n                                            onClick={(e) => handleSave(e)}\r\n                                            style={{\r\n                                                color: \"#8167a9 !important\",\r\n                                                fontWeight: 780,\r\n                                                padding: `2px 8px`,\r\n                                            }}\r\n                                            to=\"/\"\r\n                                        >\r\n                                            Save\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\r\n                                        {isAuthenticated && name && (\r\n                                            <Link\r\n                                                className=\"nav-link dropdown-toggle\"\r\n                                                data-toggle=\"dropdown\"\r\n                                                role=\"button\"\r\n                                                aria-haspopup=\"true\"\r\n                                                aria-expanded=\"false\"\r\n                                                to=\"\"\r\n                                            >\r\n                                                <span\r\n                                                    style={{\r\n                                                        color: `#8167a9 !important`,\r\n                                                        fontWeight: `780`,\r\n                                                    }}\r\n                                                >\r\n                                                    <div\r\n                                                        style={{\r\n                                                            display: `flex`,\r\n                                                        }}\r\n                                                    >\r\n                                                        <Fragment>\r\n                                                            {picture ? (\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                        marginRight: `5px`,\r\n                                                                        marginTop: `1.9px`,\r\n                                                                        display: `block`,\r\n                                                                        alignSelf: `center`,\r\n                                                                        width: \"25px important\",\r\n                                                                        height: `25px !important`,\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <img\r\n                                                                        src={\r\n                                                                            picture\r\n                                                                        }\r\n                                                                        alt=\"\"\r\n                                                                        width=\"25px\"\r\n                                                                        heigh=\"25px\"\r\n                                                                        style={{\r\n                                                                            width: \"25px important\",\r\n                                                                            maxHeight: `25px !important`,\r\n                                                                        }}\r\n                                                                        className=\"avatar-user\"\r\n                                                                    />\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </Fragment>\r\n                                                        <Fragment>\r\n                                                            <span\r\n                                                                style={{\r\n                                                                    alignSelf: `center`,\r\n                                                                }}\r\n                                                            >{` ${name}`}</span>\r\n                                                        </Fragment>\r\n                                                    </div>\r\n                                                </span>\r\n                                            </Link>\r\n                                        )}\r\n                                        <div className=\"dropdown-menu\">\r\n                                            {/* <Link\r\n                                                className=\"dropdown-item\"\r\n                                                to=\"/Employee/Shareholder\"\r\n                                                onClick={handleLogout}\r\n                                            >\r\n                                                Sign out\r\n                                            </Link> */}\r\n                                            <Link\r\n                                                className=\"dropdown-item\"\r\n                                                to={`/users/profile/${localStorage[\"access_token\"]}`}\r\n                                            >\r\n                                                Profile\r\n                                            </Link>\r\n                                            <GoogleLogout\r\n                                                clientId={API_GG}\r\n                                                render={(renderProps) => (\r\n                                                    <Link\r\n                                                        className=\"dropdown-item\"\r\n                                                        to=\"\"\r\n                                                        onClick={(e) =>\r\n                                                            handleLogout(\r\n                                                                e,\r\n                                                                renderProps.onClick\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        Sign out\r\n                                                    </Link>\r\n                                                )}\r\n                                                onLogoutSuccess={\r\n                                                    onLogoutGGSuccess\r\n                                                }\r\n                                            ></GoogleLogout>\r\n                                        </div>\r\n                                    </li>\r\n\r\n                                    {!isAuthenticated && (\r\n                                        <li className=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\r\n                                            <Link\r\n                                                className=\"nav-link\"\r\n                                                to=\"/login\"\r\n                                            >\r\n                                                Login\r\n                                            </Link>\r\n                                        </li>\r\n                                    )}\r\n\r\n                                    <li className=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\r\n                                        <>\r\n                                            <Link\r\n                                                className=\"nav-link dropdown-toggle\"\r\n                                                data-toggle=\"dropdown\"\r\n                                                role=\"button\"\r\n                                                aria-haspopup=\"true\"\r\n                                                aria-expanded=\"false\"\r\n                                                to=\"\"\r\n                                                style={{\r\n                                                    color: \"#8167a9 !important\",\r\n                                                    fontWeight: 780,\r\n                                                    // marginLeft: `25%`\r\n                                                }}\r\n                                            >\r\n                                                Tutorials\r\n                                            </Link>\r\n                                            <div className=\"dropdown-menu\">\r\n                                                <button\r\n                                                    className=\"dropdown-item\"\r\n                                                    onClick={openListHTML}\r\n                                                >\r\n                                                    HTML\r\n                                                </button>\r\n                                                <button\r\n                                                    className=\"dropdown-item\"\r\n                                                    onClick={openListCSS}\r\n                                                >\r\n                                                    CSS\r\n                                                </button>\r\n                                                <button\r\n                                                    className=\"dropdown-item\"\r\n                                                    onClick={openListJS}\r\n                                                >\r\n                                                    JS\r\n                                                </button>\r\n                                            </div>\r\n                                            {/* {renderProjects()} */}\r\n                                        </>\r\n                                    </li>\r\n\r\n                                    {/* <li className=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\r\n                                        <Link className=\"nav-link\" to=\"/code\">\r\n                                            {\"<Code />\"}\r\n                                        </Link>\r\n                                    </li> */}\r\n                                </ul>\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {progress && (\r\n                <Box\r\n                    sx={{\r\n                        width: \"100%\",\r\n                        marginBottom: `-25.5px`,\r\n                        paddingBottom: 0,\r\n                    }}\r\n                >\r\n                    <LinearProgress />\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    name: state.auth.account.name,\r\n    nameCode: state.auth.nameCode,\r\n    projects: state.code.projects,\r\n    url: state.code.url,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    openModalSuccessCreator: openModalSuccess,\r\n    updateCodeCreator: updateCode,\r\n    directToCodeCreator: directToCode,\r\n    logoutCreator: logout,\r\n    getProjectsCreator: getProjects,\r\n    setIsChangingCreator: setIsChanging,\r\n    setIsDeletingCreator: setIsDeleting,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Nav);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport styles from \"./styles\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nimport {\r\n    Typography,\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    TextField,\r\n    Alert,\r\n    Box,\r\n    LinearProgress,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    ggLogin,\r\n    fbLogin,\r\n    GGLogin,\r\n    login,\r\n    setErrorLogin,\r\n} from \"../../actions/login\";\r\nimport { setProgress } from \"../../actions/modal\";\r\nimport { set } from \"mongoose\";\r\nimport Nav from \"../Nav.js\";\r\nimport { Fragment } from \"react\";\r\nimport GoogleLogin, { GoogleLogout } from \"react-google-login\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\n// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\n\r\nimport { API_GG } from \"../../constant/axios\";\r\nimport GoogleIcon from \"@mui/icons-material/Google\";\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nconst Login = (props) => {\r\n    const {\r\n        classes,\r\n        err,\r\n        loginCreator,\r\n        setProgressCreator,\r\n        progress,\r\n        isAuthenticated,\r\n        setErrorLoginCreator,\r\n    } = props;\r\n    // const [email, setEmail] = useState(\"\");\r\n    const [account, setAccount] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n    const nameCode = useSelector((state) => state.auth.nameCode);\r\n    const dispatch = useDispatch();\r\n    console.log(\"Login Component render\");\r\n    useEffect(() => {\r\n        // setErrorLoginCreator(null);\r\n        loginCreator(null);\r\n        if (nameCode === null && !isAuthenticated) {\r\n            setErrorLoginCreator(null);\r\n        }\r\n    }, []);\r\n\r\n    const onChange = (e) => {\r\n        setAccount({\r\n            ...account,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        loginCreator(account);\r\n    };\r\n\r\n    // const onClick = (e) => {\r\n    //     window.open(\"https://youtube.com/\");\r\n    // };\r\n\r\n    const responseGoogle = (res) => {\r\n        // console.log(res);\r\n        // sessionStorage.setItem(\"access_token\", res.tokenId);\r\n        dispatch(ggLogin.ggLoginRequest(res));\r\n    };\r\n    const responseFailureGoogle = (res) => {\r\n        console.log(\"Just failed:\", res);\r\n        dispatch(push(\"/login\"));\r\n    };\r\n\r\n    const responseFacebook = (res) => {\r\n        dispatch(fbLogin.fbLoginRequest(res));\r\n        console.log(\"FB Login:\", res);\r\n        // dispatch(setProgress(false));\r\n    };\r\n\r\n    const responseFacebookFailure = (res) => {\r\n        // console.log(\"FB Login failure:\", res);\r\n    };\r\n\r\n    // const directForgotPassword = (e) => {\r\n    //     e.preventDefault();\r\n    //     dispatch(push('/identify/user'))\r\n    // }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.background}>\r\n                <div className={classes.login}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <form action=\"\">\r\n                                <div className=\"text-xs-center pb-xs\">\r\n                                    <Typography\r\n                                        variant=\"caption\"\r\n                                        sx={{ fontSize: `14.2px` }}\r\n                                    >\r\n                                        Login to continue\r\n                                    </Typography>\r\n                                </div>\r\n                                <TextField\r\n                                    id=\"email\"\r\n                                    label=\"Email\"\r\n                                    className={classes.textField}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    name=\"email\"\r\n                                    value={account.email}\r\n                                    onChange={onChange}\r\n                                />\r\n                                <TextField\r\n                                    id=\"password\"\r\n                                    label=\"Password\"\r\n                                    className={classes.textField}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    value={account.password}\r\n                                    onChange={onChange}\r\n                                />\r\n\r\n                                {err && (\r\n                                    <Alert\r\n                                        variant=\"outlined\"\r\n                                        severity=\"error\"\r\n                                        className={classes.alert}\r\n                                    >\r\n                                        {err}\r\n                                    </Alert>\r\n                                )}\r\n\r\n                                <Box mt={2}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        fullWidth\r\n                                        type=\"submit\"\r\n                                        className={classes.btn}\r\n                                        onClick={handleLogin}\r\n                                    >\r\n                                        Login\r\n                                    </Button>\r\n                                    <Link\r\n                                        to=\"/identify/user\"\r\n                                        className={classes.link}\r\n                                    >\r\n                                        <Button\r\n                                            sx={{\r\n                                                display: `block`,\r\n                                                margin: `5px 0 2px 0`,\r\n                                                padding: 0,\r\n                                                width: `100%`,\r\n                                                textAlign: `right`,\r\n                                                textTransform: `none`,\r\n                                                fontSize: `15px`,\r\n                                                \"&:focus\": {\r\n                                                    outline: `none`,\r\n                                                },\r\n                                            }}\r\n                                            onClick={() =>\r\n                                                setErrorLoginCreator(null)\r\n                                            }\r\n                                            // onClick={(e) => directForgotPassword(e)}\r\n                                        >\r\n                                            Forgot the password?\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Box>\r\n                                <div\r\n                                    style={{\r\n                                        display: `flex`,\r\n                                        flexDirection: `column`,\r\n                                    }}\r\n                                >\r\n                                    <GoogleLogin\r\n                                        clientId={API_GG}\r\n                                        render={(renderProps) => (\r\n                                            <Button\r\n                                                variant=\"outlined\"\r\n                                                onClick={renderProps.onClick}\r\n                                                style={{\r\n                                                    fontSize: `14.7px`,\r\n                                                    width: `max-content`,\r\n                                                    margin: `7px auto 0 auto`,\r\n                                                }}\r\n                                            >\r\n                                                <GoogleIcon\r\n                                                    sx={{\r\n                                                        marginRight: `5px`,\r\n                                                    }}\r\n                                                />\r\n                                                Login with Google\r\n                                            </Button>\r\n                                        )}\r\n                                        buttonText=\"Login with Google\"\r\n                                        onSuccess={responseGoogle}\r\n                                        onFailure={responseFailureGoogle}\r\n                                        cookiePolicy={\"single_host_origin\"}\r\n                                    />\r\n\r\n                                    <FacebookLogin\r\n                                        // appId=\"430041831912720\"\r\n                                        // appId=\"738343767123877\" // focus\r\n                                        appId=\"1061825257933510\" // codesonline\r\n                                        autoLoad={false}\r\n                                        fields=\"name,email,picture\"\r\n                                        cssClass=\"btn btn-primary my-facebook-button-class pr-2 pl-2 btn-fb-login\"\r\n                                        icon=\"fa-facebook\"\r\n                                        callback={responseFacebook}\r\n                                        onFailure={responseFacebookFailure}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"pt-1 text md-center\">\r\n                                    <Link\r\n                                        // onClick={onClick}\r\n                                        to=\"/register\"\r\n                                    >\r\n                                        <Button\r\n                                            sx={{ fontSize: `15px` }}\r\n                                            onClick={() =>\r\n                                                setErrorLoginCreator(null)\r\n                                            }\r\n                                        >\r\n                                            Register new account?\r\n                                        </Button>\r\n                                    </Link>\r\n                                </div>\r\n                            </form>\r\n                        </CardContent>\r\n                        {progress && (\r\n                            <Box sx={{ width: \"100%\", marginBottom: 0 }}>\r\n                                <LinearProgress />\r\n                            </Box>\r\n                        )}\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // codeData: state.code.codeData,\r\n    // modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    // err: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    // updateCodeCreator: updateCode,\r\n    // getCodeCreator: getCode,\r\n    // openModalCreator: openModal,\r\n    // closeModalCreator: closeModal,\r\n    loginCreator: login,\r\n    setProgressCreator: setProgress,\r\n    setErrorLoginCreator: setErrorLogin,\r\n};\r\n\r\nconst withConnect = connect(mapStateToProps, mapActionsToProps);\r\n\r\nexport default compose(withConnect, withStyles(styles))(Login);\r\n","import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\nconst Navbar = (props) => {\r\n    const { isAuthenticated } = props;\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar\r\n                position=\"static\"\r\n                color=\"transparent\"\r\n                sx={{ backgroundColor: \"rgba(255, 255, 255, 0.2)\" }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        size=\"small\"\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        sx={{ mr: 2 }}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        component=\"div\"\r\n                        sx={{ flexGrow: 1 }}\r\n                    >\r\n                        News\r\n                    </Typography>\r\n                    {!isAuthenticated && <Button color=\"inherit\">Login</Button>}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // codeData: state.code.codeData,\r\n    // modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    // err: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\n// const mapActionsToProps = {\r\n//     // updateCodeCreator: updateCode,\r\n//     // getCodeCreator: getCode,\r\n//     // openModalCreator: openModal,\r\n//     // closeModalCreator: closeModal,\r\n//     loginCreator: login,\r\n//     setProgressCreator: setProgress,\r\n//     setErrorLoginCreator: setErrorLogin,\r\n// };\r\n\r\nconst withConnect = connect(mapStateToProps, null);\r\n\r\nexport default compose(withConnect)(Navbar);\r\n","import { createActions } from \"redux-actions\";\r\n\r\nexport const direct = createActions({\r\n    directRequest: (val) => val,\r\n    directSuccess: (val) => val,\r\n    directFailure: (val) => val,\r\n});\r\n\r\nexport const verifyUrlRecover = createActions({\r\n    verifyUrlRecoverRequest: (val) => val,\r\n    verifyUrlRecoverSuccess: (val) => val,\r\n    verifyUrlRecoverFailure: (val) => val,\r\n});\r\n\r\n","import { push } from \"connected-react-router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { direct } from \"../../actions/direct\";\r\nimport {\r\n    loginFailed,\r\n    loginSuccess,\r\n    logoutSuccess,\r\n    setErrorLogin,\r\n} from \"../../actions/login\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { Typography } from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst DirectHelper = () => {\r\n    const time = useSelector((state) => state.direct.time);\r\n    const [timeRun, setTimeRun] = useState(time);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (timeRun === 1) {\r\n            setTimeout(() => {\r\n                dispatch(direct.directFailure(false));\r\n                dispatch(setErrorLogin(null));\r\n                // dispatch(push(\"/identify/user\"));\r\n                console.log(\"Time here:\", timeRun);\r\n            }, 999);\r\n        } else if (timeRun) {\r\n            setTimeout(() => {\r\n                setTimeRun(timeRun - 1);\r\n            }, 1000);\r\n        }\r\n    }, [timeRun, time]);\r\n    console.log(\"DirectHelper\", timeRun);\r\n    return (\r\n        <div\r\n            style={{\r\n                fontSize: `15px`,\r\n                color: `#000`,\r\n                position: `relative`,\r\n                zIndex: `5000`,\r\n                marginBottom: `8px`,\r\n            }}\r\n        >\r\n            <Box\r\n                sx={{\r\n                    position: \"relative\",\r\n                    display: \"inline-flex\",\r\n                    top: `10px`,\r\n                }}\r\n            >\r\n                <CircularProgress\r\n                    disableShrink\r\n                    style={{ color: `rgba(189, 142, 186, 70%)` }}\r\n                    // color=\"secondary\"\r\n                />\r\n                <Box\r\n                    sx={{\r\n                        top: 0,\r\n                        left: 0,\r\n                        bottom: 0,\r\n                        right: 0,\r\n                        position: \"absolute\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                    <Typography\r\n                        variant=\"caption\"\r\n                        component=\"div\"\r\n                        sx={{ fontSize: `17px` }}\r\n                        color=\"text.secondary\"\r\n                    >\r\n                        {timeRun !== 0 ? timeRun : \"\"}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DirectHelper;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport DirectHelper from \"../AuthPage/DirectHelper\";\r\nimport \"./loading.css\";\r\nimport { makeStyle } from \"@mui/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { verifyUrlRecover } from \"../../actions/direct\";\r\n\r\nconst Loading = () => {\r\n    const isWaiting = useSelector((state) => state.direct.isWaiting);\r\n    const appear = useSelector((state) => state.direct.appear);\r\n    const message = useSelector((state) => state.direct.message);\r\n    useEffect(() => {\r\n        verifyUrlRecover.verifyUrlRecoverRequest(false);\r\n    }, []);\r\n    return (\r\n        <Fragment>\r\n            <div className=\"contain\">\r\n                <h1 data-text=\"CODE - ONLINE\" className=\"h1-type1\">\r\n                    CODE - ONLINE\r\n                </h1>\r\n\r\n                {isWaiting && (\r\n                    <h1 data-text=\"Please wait...\" className=\"h1-type\">\r\n                        Please wait...\r\n                    </h1>\r\n                )}\r\n\r\n                {!isWaiting && (\r\n                    <div className=\"server-content\">\r\n                        <p\r\n                            className=\"link-direct link-title\"\r\n                            style={{ display: `block !important` }}\r\n                        >\r\n                            Notify\r\n                        </p>\r\n                        <div>\r\n                            <a\r\n                                className=\"link-direct\"\r\n                                style={{ display: \"block !important\" }}\r\n                            >\r\n                                {/* Your account is now successfully activated. You\r\n                                can now return to the Login */}\r\n                                {message}\r\n                                {appear && <DirectHelper />}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {/* <div className=\"contain\">\r\n                <div\r\n                    style={{\r\n                        color: `#fff`,\r\n                        width: `92%`,\r\n                        margin: `auto`,\r\n                        fontSize: `20px`,\r\n                        marginTop: `5%`,\r\n                    }}\r\n                >\r\n                   \r\n                </div>\r\n            </div> */}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect, Fragment, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DoneAllIcon from \"@mui/icons-material/DoneAll\";\r\nimport {\r\n    Modal,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    LinearProgress,\r\n    Alert,\r\n    Tooltip,\r\n    SliderValueLabel,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport { openModalShare } from \"../../actions/modalShareCode\";\r\nimport Loading from \"../Loading/Loading\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        top: `57%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -90%)`,\r\n        position: `absolute`,\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: `2px solid rgb(167, 202, 237)`,\r\n        boxShadow: theme.shadows[5],\r\n        // padding: theme.spacing(2, 4, 4),\r\n        outline: `none`,\r\n        padding: 0,\r\n        borderRadius: `8px 8px`,\r\n    },\r\n    header: {\r\n        backgroundColor: theme.color.textColor,\r\n        color: theme.color.textColor,\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    title: {\r\n        color: theme.color.textColor,\r\n        fontWeight: 700,\r\n\r\n        width: `100%`,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    textField: {\r\n        width: `100%`,\r\n    },\r\n    textFieldOld: {\r\n        display: `block`,\r\n        minWidth: `100%`,\r\n        // marginBottom: `50px`,\r\n    },\r\n    box: {\r\n        margin: `0 15px 10px 0`,\r\n    },\r\n    typography1: {\r\n        margin: `5px 0 0 0px`,\r\n        fontSize: `15.5px`,\r\n        color: theme.color.error,\r\n    },\r\n    progress: {\r\n        color: \"#ff6278\",\r\n    },\r\n    typography2: {\r\n        textTransform: `none`,\r\n        width: `max-content`,\r\n        color: `#1ba700`,\r\n        fontWeight: `500`,\r\n        fontSize: `15px !important`,\r\n        margin: `4px 0 0 0px`,\r\n    },\r\n    typography3: {\r\n        textTransform: `none`,\r\n        width: `max-content`,\r\n        color: `#29b117`,\r\n        fontSize: `16px !important`,\r\n        textDecoration: `none`,\r\n        \"& > a:hover\": {\r\n            color: `#5dd0e8`,\r\n        },\r\n    },\r\n    box1: {\r\n        marginLeft: `7px`,\r\n        marginTop: `9x`,\r\n    },\r\n    box2: {\r\n        marginTop: `9x`,\r\n        marginLeft: `5px`,\r\n    },\r\n    icon: {\r\n        marginTop: 5,\r\n        cursor: `pointer`,\r\n    },\r\n}));\r\n\r\nconst ModalShare = (props) => {\r\n    const classes = useStyles();\r\n    const {\r\n        modalIsOpen,\r\n        handleCloseModal,\r\n        isAuthenticated,\r\n        err,\r\n        progress,\r\n        updateCodeCreator,\r\n        errCode,\r\n        setCodeCreator,\r\n        nameCode,\r\n        isChanging,\r\n        changeNameCreator,\r\n        setIsChangingCreator,\r\n        isDeleting,\r\n        deleteProjectCreator,\r\n        setIsDeletingCreator,\r\n        setErrorCreator,\r\n        closeModalCreator,\r\n    } = props;\r\n\r\n    const renderCheck = () => {\r\n        let jsx = null;\r\n        jsx = (\r\n            <Fragment>\r\n                {errCode && (\r\n                    <Typography className={classes.typography1} component=\"div\">\r\n                        <span style={{ margin: `2px 0 0 6px` }}>Copied!</span>\r\n                    </Typography>\r\n                )}\r\n                {value ? (\r\n                    <Box className={classes.box1}>\r\n                        <Typography\r\n                            component=\"div\"\r\n                            gutterBottom\r\n                            className={classes.typography2}\r\n                        >\r\n                            <DoneAllIcon sx={{ marginBottom: `3px` }} /> COPIED!\r\n                        </Typography>\r\n                    </Box>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n            </Fragment>\r\n        );\r\n        return jsx;\r\n    };\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const textRef = useRef(null);\r\n    const modalShareIsOpen = useSelector(\r\n        (state) => state.modalShare.modalShareIsOpen\r\n    );\r\n    const link = useSelector((state) => state.modalShare.link);\r\n    const isLoading = useSelector((state) => state.modalShare.isLoading);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => {\r\n        dispatch(openModalShare.openModalShareFailure());\r\n        setValue(\"\");\r\n    };\r\n\r\n    const onCopy = (e) => {\r\n        console.log(\"textAreaRef\", textRef.current.value);\r\n        navigator.clipboard.writeText(\r\n            textRef.current._wrapperState.initialValue\r\n        );\r\n        setValue(textRef.current.value);\r\n    };\r\n    useEffect(() => {}, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            {isLoading ? (\r\n                <Loading />\r\n            ) : (\r\n                <Modal open={modalShareIsOpen}>\r\n                    <div className={classes.modal}>\r\n                        <div\r\n                            style={{\r\n                                display: `flex`,\r\n\r\n                                padding: 0,\r\n                                margin: 0,\r\n                            }}\r\n                        >\r\n                            {/* <div style={{ display: `flex`, justifyContent: `space-between`, background: `#1565C0`, height: `35px`, padding: 0, margin: 0 }}>NOTE</div> */}\r\n                            <Alert\r\n                                icon={false}\r\n                                severity=\"success\"\r\n                                sx={{\r\n                                    width: `100%`,\r\n                                    display: `block`,\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        display: `flex`,\r\n                                        justifyContent: `space-between`,\r\n                                    }}\r\n                                >\r\n                                    <p\r\n                                        style={{\r\n                                            fontWeight: `700`,\r\n                                            fontSize: `17px`,\r\n                                            marginBottom: `3px`,\r\n                                        }}\r\n                                    >\r\n                                        {!isDeleting\r\n                                            ? \"Share your link\"\r\n                                            : \"DELETE\"}\r\n                                    </p>\r\n                                    <CancelIcon\r\n                                        className={classes.icon}\r\n                                        onClick={() => handleClose()}\r\n                                    />\r\n                                </div>\r\n                            </Alert>\r\n                        </div>\r\n                        <div\r\n                            className={classes.header}\r\n                            style={{ marginTop: `7px` }}\r\n                        >\r\n                            <span className={classes.title}>\r\n                                {isChanging && nameCode && (\r\n                                    <Tooltip\r\n                                        arrow\r\n                                        title={\"Previous Project Name\"}\r\n                                        placement={nameCode ? \"top\" : \"top\"}\r\n                                    >\r\n                                        <TextField\r\n                                            readOnly={true}\r\n                                            id=\"outlined-required\"\r\n                                            label={\"Current Project Name\"}\r\n                                            placeholder=\"Your Project Name\"\r\n                                            placeholder=\"Your Project Name\"\r\n                                            className={`${classes.textField} value`}\r\n                                            value={nameCode}\r\n                                            sx={{ marginBottom: `15px` }}\r\n                                        />\r\n                                    </Tooltip>\r\n                                )}\r\n                                <Tooltip\r\n                                    arrow\r\n                                    title={\"Your link here\"}\r\n                                    placement={nameCode ? \"top\" : \"top\"}\r\n                                >\r\n                                    <TextField\r\n                                        required\r\n                                        readOnly={true}\r\n                                        id=\"outlined-required\"\r\n                                        label={\"Your Link Here\"}\r\n                                        placeholder=\"Your Link Here\"\r\n                                        className={classes.textField}\r\n                                        value={link}\r\n                                        // onChange={handleChange}\r\n                                        inputRef={textRef}\r\n                                    />\r\n                                </Tooltip>\r\n                                {renderCheck()}\r\n                            </span>\r\n                        </div>\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexDirection=\"row-reverse\"\r\n                            mt={2}\r\n                            className={classes.box}\r\n                        >\r\n                            <Box>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={false}\r\n                                    onClick={onCopy}\r\n                                >\r\n                                    COPY\r\n                                </Button>\r\n                            </Box>\r\n\r\n                            <Box mr={1}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"error\"\r\n                                    onClick={() => handleClose()}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        {/* <div className={classes.content}>{component}</div> */}\r\n                        {progress && (\r\n                            <Box sx={{ width: \"100%\" }}>\r\n                                <LinearProgress />\r\n                            </Box>\r\n                        )}\r\n                    </div>\r\n                </Modal>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // codeData: state.code.codeData,\r\n    // modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    errCode: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    nameCode: state.auth.nameCode,\r\n    isChanging: state.code.isChanging,\r\n    isDeleting: state.code.isDeleting,\r\n});\r\n\r\nconst mapActionsToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ModalShare);\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport Code from \"./Code\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\nimport { compose } from \"redux\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { getCode, updateCode } from \"../actions/code\";\r\nimport { closeModal, openModal } from \"../actions/modal\";\r\n// import { toast } from \"react-toastify\";\r\n// import { ToastContainer } from \"react-toastify\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\nimport NameProject from \"./NameProject\";\r\nimport Login from \"./AuthPage/Login\";\r\nimport { login, setErrorLogin } from \"../actions/login\";\r\nimport { Redirect } from \"react-router\";\r\nimport Navbar from \"./Navbar\";\r\nimport Nav from \"./Nav.js\";\r\nimport ModalShare from \"./ModalShare/ModalShare\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport cs from \"classnames\";\r\nimport Loading from \"./Loading/Loading\";\r\nimport { openModalShare } from \"../actions/modalShareCode\";\r\nconst useStyles = makeStyles((them) => ({\r\n    codeContainer: {\r\n        // background: `#fff`,\r\n        display: `flex`,\r\n        flexDirection: `column`,\r\n        marginTop: `70px`,\r\n        transitionTimingFunction: `linear`,\r\n        transition: `all 2s`,\r\n        zIndex: `0 !important`,\r\n    },\r\n    \"@keyframes fadeInFromBot\": {\r\n        \"0%\": {\r\n            marginTop: \"500px\",\r\n        },\r\n        \"100%\": {\r\n            opacity: 1,\r\n            marginTop: \"0px\",\r\n        },\r\n    },\r\n    \"@keyframes fadeInFromLeft\": {\r\n        \"0%\": {\r\n            marginLeft: \"-700px\",\r\n        },\r\n        \"100%\": {\r\n            opacity: 1,\r\n            marginLeft: \"0px\",\r\n        },\r\n    },\r\n    topPane: {\r\n        // width: status && !largeScreen ? \"50% !important\" : \"42% !important\",\r\n        width: \"50% !important\",\r\n        float: \"right\",\r\n        display: \"flex !important\",\r\n        flexDirection: \"column !important\",\r\n        height: \"min-content !important\",\r\n        transitionTimingFunction: `linear`,\r\n        transition: `all 2s`,\r\n        animation: `$fadeInFromLeft .5s ease-in-out`,\r\n    },\r\n    view: {\r\n        // width: status && !largeScreen ? \"50% !important\" : \"58% !important\",\r\n        width: \"50% !important\",\r\n        float: \"left !important\",\r\n        zIndex: \"0\",\r\n        position: \"fixed !important\",\r\n        right: \"0\",\r\n        height: \"100%\",\r\n        transitionTimingFunction: `linear`,\r\n        transition: `all 2s`,\r\n        animation: `$fadeInFromBot .4s ease-in-out`,\r\n        [\"@media(max-width: 500px)\"]: {\r\n            marginTop: `1% !important`,\r\n        },\r\n    },\r\n    fullScreen: {\r\n        display: `none !important`,\r\n    },\r\n    fullHeight: {\r\n        height: `150vh`,\r\n        minHeight: `150vh`,\r\n        // overflowY: `hidden !important`,\r\n    },\r\n}));\r\nconst MainPage = ({\r\n    // updateCodeCreator,\r\n    getCodeCreator,\r\n    codeData,\r\n    match: { url: q },\r\n    modalIsOpen,\r\n    openModalCreator,\r\n    closeModalCreator,\r\n    isAuthenticated,\r\n    loginCreator,\r\n    err,\r\n    errLogin,\r\n    // isLoading,\r\n    useStyles2,\r\n}) => {\r\n    let [html, setHtml] = useLocalStorage(\"html\", \"\");\r\n\r\n    // if (!html) {\r\n    //   setHtml(`<!DOCTYPE html>\r\n    //   <html lang=\"en\">\r\n    //   <head>\r\n    //       <meta charset=\"UTF-8\">\r\n    //       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    //       <title>Document</title>\r\n    //   </head>\r\n    //   <body>\r\n\r\n    //   </body>\r\n    //   </html>`)\r\n    // }\r\n\r\n    const [css, setCss] = useLocalStorage(\"css\", \"\");\r\n    const [js, setJs] = useLocalStorage(\"js\", \"\");\r\n    const [srcDoc, setSrcDoc] = useState(\"\");\r\n    // const [openModal, setOpenModal] = useState(false);\r\n\r\n    const status = useSelector((state) => state.view.status);\r\n    const isLoad = useSelector((state) => state.modalShare.isLoading);\r\n    const fullScreen = useSelector((state) => state.view.fullScreen);\r\n    const largeScreen = useSelector((state) => state.view.largeScreen);\r\n    // const useStyles = makeStyles((theme) => ({\r\n    //     codeContainer: {\r\n    //         // background: `#fff`,\r\n    //         display: `flex`,\r\n    //         flexDirection: `column`,\r\n    //         marginTop: `70px`,\r\n    //         transitionTimingFunction: `linear`,\r\n    //         transition: `all 2s`,\r\n    //         zIndex: `0 !important`,\r\n    //     },\r\n    //     \"@keyframes fadeInFromBot\": {\r\n    //         \"0%\": {\r\n    //             marginTop: \"500px\",\r\n    //         },\r\n    //         \"100%\": {\r\n    //             opacity: 1,\r\n    //             marginTop: \"0px\",\r\n    //         },\r\n    //     },\r\n    //     \"@keyframes fadeInFromLeft\": {\r\n    //         \"0%\": {\r\n    //             marginLeft: \"-700px\",\r\n    //         },\r\n    //         \"100%\": {\r\n    //             opacity: 1,\r\n    //             marginLeft: \"0px\",\r\n    //         },\r\n    //     },\r\n    //     topPane: {\r\n    //         // width: status && !largeScreen ? \"50% !important\" : \"42% !important\",\r\n    //         width: \"50% !important\",\r\n    //         float: \"right\",\r\n    //         display: \"flex !important\",\r\n    //         flexDirection: \"column !important\",\r\n    //         height: \"min-content !important\",\r\n    //         transitionTimingFunction: `linear`,\r\n    //         transition: `all 2s`,\r\n    //         animation: `$fadeInFromLeft .5s ease-in-out`,\r\n    //     },\r\n    //     view: {\r\n    //         // width: status && !largeScreen ? \"50% !important\" : \"58% !important\",\r\n    //         width: \"50% !important\",\r\n    //         float: \"left !important\",\r\n    //         zIndex: \"0\",\r\n    //         position: \"fixed !important\",\r\n    //         right: \"0\",\r\n    //         height: \"100%\",\r\n    //         transitionTimingFunction: `linear`,\r\n    //         transition: `all 2s`,\r\n    //         animation: `$fadeInFromBot .4s ease-in-out`,\r\n    //         [\"@media(max-width: 500px)\"]: {\r\n    //             marginTop: `1% !important`,\r\n    //         },\r\n    //     },\r\n    //     fullScreen: {\r\n    //         display: `none !important`,\r\n    //     },\r\n    //     fullHeight: {\r\n    //         height: `150vh`,\r\n    //         minHeight: `150vh`,\r\n    //         // overflowY: `hidden !important`,\r\n    //     },\r\n    // }));\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n\r\n    // const url = useSelector((state) => state.code.url);\r\n    const modalShareIsOpen = useSelector(\r\n        (state) => state.modalShare.modalShareIsOpen\r\n    );\r\n\r\n    // !\r\n    const dispatch = useDispatch();\r\n    // dispatch(setErrorLogin(null));\r\n\r\n    useEffect(() => {\r\n        dispatch(setErrorLogin(null));\r\n        getCodeCreator(q);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSrcDoc(`\r\n        <html>\r\n          <body>${html}</body>\r\n          <style>${css}</style>\r\n          <script defer async>${js}</script>\r\n        </html>\r\n      `);\r\n        }, 270);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [html, css, js]);\r\n\r\n    const alertUser = (e) => {\r\n        e.preventDefault();\r\n        e.returnValue = \"\";\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"beforeunload\", alertUser);\r\n        return () => {\r\n            window.removeEventListener(\"beforeunload\", alertUser);\r\n        };\r\n    }, []);\r\n\r\n    const renderForm = () => {\r\n        let jsx;\r\n        if (!isAuthenticated) {\r\n            jsx = (\r\n                <Login\r\n                    err={errLogin}\r\n                    loginCreator={(acc) => loginCreator(acc)}\r\n                />\r\n            );\r\n        } else {\r\n            jsx = (\r\n                <NameProject\r\n                    modalIsOpen={modalIsOpen}\r\n                    handleCloseModal={() => handleCloseModal()}\r\n                    isAuthenticated={isAuthenticated}\r\n                    err={err}\r\n                />\r\n            );\r\n        }\r\n        return jsx;\r\n    };\r\n\r\n    const handleSave = () => {\r\n        openModalCreator();\r\n        // updateCodeCreator(html, css, js, q);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        closeModalCreator();\r\n    };\r\n\r\n    return (\r\n        <div\r\n            // style={{\r\n            //     display: `flex`,\r\n            //     flexDirection: `column`,\r\n            //     marginTop: `70px`,\r\n            // }}\r\n            // className={\r\n            //     isLoading\r\n            //         ? \"loading-container code-container\"\r\n            //         : \"code-container\"\r\n            // }\r\n            style={{\r\n                display: `flex`,\r\n                flexDirection: `column`,\r\n                marginTop: `70px`,\r\n            }}\r\n            className={cs(\"code-container\", {\r\n                [classes.codeContainer]: status === true,\r\n            })}\r\n        >\r\n            <Fragment>\r\n                {/* {isAuthenticated && ( */}\r\n\r\n                <NameProject\r\n                    modalIsOpen={modalIsOpen}\r\n                    handleCloseModal={() => handleCloseModal()}\r\n                    isAuthenticated={isAuthenticated}\r\n                    err={err}\r\n                />\r\n                <ModalShare\r\n                    modalShareIsOpen={modalShareIsOpen}\r\n                    // handleCloseModal={() => handleCloseModal()}\r\n                    isAuthenticated={isAuthenticated}\r\n                />\r\n                {/* )} */}\r\n                {/* {!isAuthenticated && (\r\n                <Redirect to='/login'></Redirect>\r\n            )} */}\r\n                {/* {renderForm()} */}\r\n                {/* <button onClick={() => handleSave()}>Save</button> */}\r\n                {!isLoad && (\r\n                    <Fragment>\r\n                        <div\r\n                            className={cs(\r\n                                \"pane\",\r\n                                \"top-pane\",\r\n                                {\r\n                                    [classes.topPane]: status === true,\r\n                                    [classes.fullScreen]: fullScreen === true,\r\n                                },\r\n                                {\r\n                                    [classes2.topPane]:\r\n                                        status === true && largeScreen === true,\r\n                                }\r\n                            )}\r\n                        >\r\n                            <Code\r\n                                language=\"xml\"\r\n                                displayName=\"HTML\"\r\n                                value={html}\r\n                                onChange={setHtml}\r\n                                color=\"#f59251\"\r\n                                pro=\"html\"\r\n                                q={q}\r\n                            />\r\n                            <Code\r\n                                language=\"css\"\r\n                                displayName=\"CSS\"\r\n                                value={css}\r\n                                onChange={setCss}\r\n                                color=\"lightskyblue\"\r\n                                pro=\"css\"\r\n                                q={q}\r\n                            />\r\n                            <Code\r\n                                color=\"gold\"\r\n                                language=\"javascript\"\r\n                                displayName=\"JS\"\r\n                                value={js}\r\n                                onChange={setJs}\r\n                                pro=\"js\"\r\n                                q={q}\r\n                            />\r\n                        </div>\r\n                        <div\r\n                            className={cs(\r\n                                \"pane\",\r\n                                \"view\",\r\n                                {\r\n                                    [classes.view]: status === true,\r\n                                    [classes.fullHeight]: fullScreen === true,\r\n                                },\r\n                                {\r\n                                    [classes2.view]:\r\n                                        status === true && largeScreen === true,\r\n                                }\r\n                            )}\r\n                        >\r\n                            <iframe\r\n                                srcDoc={srcDoc}\r\n                                title=\"output\"\r\n                                sandbox=\"allow-scripts\"\r\n                                frameBorder=\"0\"\r\n                                width=\"100%\"\r\n                                height=\"100%\"\r\n                            />\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    codeData: state.code.codeData,\r\n    modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    err: state.code.error,\r\n    errLogin: state.auth.error,\r\n    isLoading: state.modal.isLoading,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    updateCodeCreator: updateCode,\r\n    getCodeCreator: getCode,\r\n    openModalCreator: openModal,\r\n    closeModalCreator: closeModal,\r\n    loginCreator: login,\r\n};\r\n\r\nconst withConnect = connect(mapStateToProps, mapActionsToProps);\r\n\r\nexport default compose(withConnect)(MainPage);\r\n","import React from 'react'\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            NotFound\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","const styles = (theme) => ({\r\n    objStyleLinkActive: {\r\n        textDecoration: `none !important`,\r\n        color: \"#fff !important\",\r\n        background: `#8167a9`,\r\n        \"&:hover\": {\r\n            background: `rgba(129, 103, 189, 88%)`,\r\n            textDecoration: `none !important`,\r\n        },\r\n        // textAlign: `center`,\r\n    },\r\n    objStyleLink: {\r\n        textDecoration: `none !important`,\r\n        color: \"#8167a9 !important\",\r\n        \"&:hover\": {\r\n            background: `rgba(129, 103, 189, 87%)`,\r\n            textDecoration: `none !important`,\r\n            color: `#fff !important`,\r\n        },\r\n        // textAlign: `center`,\r\n    },\r\n    drawerPaper: {\r\n        [\"@media(min-width:1500px)\"]: {\r\n            width: `0 !important`,\r\n        },\r\n        \"& .MuiDrawer-paper\": {\r\n            // background: `rgba(255, 255, 255, 0.2)`,\r\n            // backgroundImage: `url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1462889/pat-back.svg\")`,\r\n            backgroundPosition: `center`,\r\n            backgroundRepeat: `repeat`,\r\n            backgroundSize: `0.1%,`,\r\n\r\n            position: \"relative\",\r\n            boxSizing: \"border-box\",\r\n            width: 200,\r\n            maxWidth: 200,\r\n            zIndex: 999,\r\n            minHeight: `100%`,\r\n            height: `400px`,\r\n            // overflowY: `visible`\r\n            overflowY: `scroll`,\r\n            [\"@media(min-width:1500px)\"]: {\r\n                width: `200px !important`,\r\n                maxWidth: `200px !important`,\r\n            },\r\n            [\"@media(min-width:500px)\"]: {\r\n                width: `200px !important`,\r\n                maxWidth: `200px !important`,\r\n            },\r\n            [\"@media(min-width:353px)\"]: {\r\n                width: `200px !important`,\r\n                maxWidth: `200px !important`,\r\n            },\r\n            [\"@media(min-width:550px)\"]: {\r\n                position: `absolute !important`,\r\n                width: `187px !important`,\r\n                maxWidth: `187px !important`,\r\n            },\r\n        },\r\n        [\"@media(min-width:1500px)\"]: {\r\n            zIndex: `1000`,\r\n            height: `100% !important`,\r\n            minHeight: `100% !important`,\r\n        },\r\n        [\"@media(min-width:500px)\"]: {\r\n            position: `fixed !important`,\r\n            zIndex: `1000`,\r\n            /* min-height: 10000% !important; */\r\n            height: `100% !important`,\r\n            minHeight: `100% !important`,\r\n        },\r\n        [\"@media(max-width:353px)\"]: {\r\n            position: `fixed !important`,\r\n            zIndex: `1000`,\r\n            /* min-height: 10000% !important; */\r\n            height: `100% !important`,\r\n            minHeight: `100% !important`,\r\n            marginTop: `12px`,\r\n        },\r\n        [\"@media(max-width:550px)\"]: {\r\n            position: `fixed !important`,\r\n            zIndex: `1000`,\r\n            /* min-height: 10000% !important; */\r\n            height: `100% !important`,\r\n            minHeight: `100% !important`,\r\n            // marginTop: `12px`,\r\n            maxWidth: `0 !important`,\r\n        },\r\n    },\r\n    link: {\r\n        display: `block`,\r\n        textDecoration: `none !important`,\r\n        color: `#8167a9 !important`,\r\n        // textAlign: `center`,\r\n        // margin: `auto`,\r\n    },\r\n});\r\n\r\nexport default styles;\r\n","import * as React from \"react\";\r\n// import Box from \"@mui/material/Box\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\n// import Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\n// import Divider from \"@mui/material/Divider\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\n// import ListItemIcon from \"@mui/material/ListItemIcon\";\r\n// import ListItemText from \"@mui/material/ListItemText\";\r\n// import InboxIcon from \"@mui/icons-material/MoveToInbox\";\r\n// import MailIcon from \"@mui/icons-material/Mail\";\r\n// import { ADMIN_ROUTES } from \"../../../constants/index\";\r\nimport styles from \"./styles\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { HTML_TUTORIALS } from \"../../common/constants/HTMLconstants\";\r\nimport { CSS_TUTORIALS } from \"../../common/constants/CSSconstants\";\r\nimport { JS_TUTORIALS } from \"../../common/constants/JSconstants\";\r\n\r\nconst Sidebar = (props) => {\r\n    // const [open, setOpen] = React.useState(false);\r\n    const { classes, showSidebar, onToggleSidebar, openSidebar } = props;\r\n    const tutorialList = useSelector((state) => state.tutorial.tutorialList);\r\n    const location = useSelector((state) => state.tutorial.location);\r\n\r\n    const toggleDrawer = (value) => {\r\n        onToggleSidebar(value);\r\n    };\r\n\r\n    const defTutorials = () => {\r\n        const l = window.location.href.toString();\r\n        const tutorialsRoute = HTML_TUTORIALS.concat(\r\n            CSS_TUTORIALS,\r\n            JS_TUTORIALS\r\n        );\r\n        const list = tutorialsRoute.filter(\r\n            (lesson) =>\r\n                l.indexOf(lesson.path.slice(0, lesson.path.lastIndexOf(\"/\"))) >\r\n                0\r\n        );\r\n        return list;\r\n    };\r\n\r\n    const renderList = () => {\r\n        let jsx = void 0;\r\n\r\n        const tutorialListRender =\r\n            tutorialList != void 0 && tutorialList.length\r\n                ? tutorialList\r\n                : defTutorials()\r\n                ? defTutorials()\r\n                : [];\r\n        jsx = (\r\n            <div className={classes.list}>\r\n                <List component=\"div\">\r\n                    {tutorialListRender.map((lesson) => (\r\n                        <NavLink\r\n                            to={lesson.path}\r\n                            exact={lesson.exact}\r\n                            className={classes.link}\r\n                            key={lesson.path}\r\n                        >\r\n                            <ListItem\r\n                                className={\r\n                                    location && location === lesson.path\r\n                                        ? classes.objStyleLinkActive\r\n                                        : classes.objStyleLink\r\n                                }\r\n                            >\r\n                                {lesson.name}\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    ))}\r\n                </List>\r\n            </div>\r\n        );\r\n        return jsx;\r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            open={openSidebar}\r\n            onClose={() => toggleDrawer(false)}\r\n            className={classes.drawerPaper}\r\n            variant=\"persistent\"\r\n        >\r\n            {renderList()}\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Sidebar);\r\n","const styles = (theme) => ({\r\n    container: {\r\n        display: `flex`,\r\n        flexDirection: `row`,\r\n        minHeight: `100vh`,\r\n        marginTop: 69,\r\n        [\"@media(max-width:353px)\"]: {\r\n            position: `relative !important`,\r\n            width: `100% !important`,\r\n        },\r\n    },\r\n    content: {\r\n        width: `100%`,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.sharp, // sharp or entering\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        [\"@media(max-width:1500px)\"]: {\r\n            position: `relative !important`,\r\n            width: `100%`,\r\n            marginLeft: `200px`,\r\n        },\r\n        [\"@media(max-width:500px)\"]: {\r\n            position: `relative !important`,\r\n            width: `100%`,\r\n            marginLeft: `0px !important`,\r\n        },\r\n        [\"@media(max-width:353px)\"]: {\r\n            position: `relative !important`,\r\n            width: `100%`,\r\n            marginLeft: `0px !important`,\r\n        },\r\n        [\"@media(max-width:550px)\"]: {\r\n            margin: 0,\r\n        },\r\n        [\"@media(max-width:550px)\"]: {\r\n            position: `relative !important`,\r\n            width: `100%`,\r\n            marginLeft: 0,\r\n        },\r\n    },\r\n    turnLeft: {\r\n        marginLeft: -200,\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        [\"@media(max-width:1500px)\"]: {\r\n            marginLeft: `0 !important`,\r\n        },\r\n        [\"@media(max-width:500px)\"]: {\r\n            marginLeft: `0 !important`,\r\n        },\r\n        [\"@media(max-width:353px)\"]: {\r\n            marginLeft: `0 !important`,\r\n        },\r\n        [\"@media(max-width:550px)\"]: {\r\n            marginLeft: `0 !important`,\r\n        },\r\n    },\r\n});\r\n\r\nexport default styles;\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React, { Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLocation } from \"../../actions/tutorial\";\r\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\r\nimport styles from \"./styles\";\r\nimport cn from \"classnames\";\r\n\r\n// import { connect } from 'react-redux';\r\n// import { checkLogin } from '../../actions/login';\r\n\r\nconst Tutorial = (props) => {\r\n    const { children, routerProps, classes } = props;\r\n    const openSidebar = useSelector((state) => state.tutorial.openSidebar);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(setLocation.setLocation(routerProps.match.url));\r\n    }, [])\r\n    // console.log(routerProps);\r\n    return (\r\n        <div className={classes.container}>\r\n            <Sidebar openSidebar={openSidebar} />\r\n            <div\r\n                className={cn(classes.content, {\r\n                    [classes.turnLeft]: openSidebar === false,\r\n                })}\r\n            >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// const mapActionsToProps = {\r\n//     checkLoginCreator: checkLogin\r\n// }\r\n\r\nexport default withStyles(styles)(Tutorial);\r\n","import React, { Fragment } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Tutorial from \"../../pages/tutorials/Tutorial\";\r\n\r\nconst TutorialLayout = (props) => {\r\n    const { component: Component, ...rest } = props;\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(routerProps) => (\r\n                <Tutorial {...rest} routerProps={routerProps}>{Component(routerProps)}</Tutorial>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default TutorialLayout;\r\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport List from \"@mui/material/List\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Slide from \"@mui/material/Slide\";\r\nimport { setOpen } from \"../actions/tutorial\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { HTML_TUTORIALS } from \"../common/constants/HTMLconstants\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\n// const useStyles = makeStyles({\r\n//     link: {\r\n//         color: \"inherit\",\r\n//         textDecoration: \"none\",\r\n//         \"&.active > li\": {\r\n//             background: `black`,\r\n//         },\r\n//     },\r\n// });\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction TutorialList() {\r\n    // const [open, setOpen] = React.useState(false);\r\n    const open = useSelector((state) => state.tutorial.open);\r\n    const location = useSelector((state) => state.tutorial.location);\r\n    // const classes = useStyles();\r\n    const tutorialList = useSelector((state) => state.tutorial.tutorialList);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickOpen = () => {\r\n        dispatch(setOpen.setOpen(true));\r\n    };\r\n\r\n    const handleClose = () => {\r\n        dispatch(setOpen.setOpen(false));\r\n    };\r\n\r\n    const objStyleLink = {\r\n        textDecoration: `none !important`,\r\n        color: \"#8167a9 !important\",\r\n        \"&: hover\": {\r\n            background: `rgba(129, 103, 189, 87%)`,\r\n            textDecoration: `none !important`,\r\n            color: `#fff !important`,\r\n        },\r\n        // fontWeight: 490,\r\n    };\r\n    const objStyleLinkActive = {\r\n        textDecoration: `none !important`,\r\n        color: \"#fff !important\",\r\n        background: `#8167a9`,\r\n        \"&: hover\": {\r\n            background: `rgba(129, 103, 189, 88%)`,\r\n            textDecoration: `none !important`,\r\n        },\r\n        // fontWeight: 490,\r\n    };\r\n    const renderList = () => {\r\n        const jsx = tutorialList\r\n            ? tutorialList.map((lesson) => {\r\n                  console.log(\"lesson path: \", lesson.path);\r\n                  return (\r\n                      <React.Fragment>\r\n                          {/* <ListItemText primary=\"Phone ringtone\" /> */}\r\n                          <NavLink\r\n                              to={`${lesson.path}`}\r\n                              style={{ textDecoration: `none` }}\r\n                              // className={classes.link}\r\n                          >\r\n                              <ListItem\r\n                                  button\r\n                                  onClick={handleClose}\r\n                                  sx={\r\n                                      location && location === lesson.path\r\n                                          ? objStyleLinkActive\r\n                                          : objStyleLink\r\n                                  }\r\n                              >\r\n                                  {lesson.name}\r\n                              </ListItem>\r\n                          </NavLink>\r\n\r\n                          <Divider />\r\n                      </React.Fragment>\r\n                  );\r\n              })\r\n            : null;\r\n        return jsx;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Transition}\r\n            >\r\n                <AppBar\r\n                    sx={{\r\n                        position: \"relative\",\r\n\r\n                        background: `#8167a9`,\r\n                    }}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            onClick={handleClose}\r\n                            aria-label=\"close\"\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography\r\n                            sx={{ ml: 2, flex: 1 }}\r\n                            variant=\"h6\"\r\n                            component=\"div\"\r\n                        >\r\n                            <Button autoFocus onClick={handleClose}>\r\n                                <Link\r\n                                    to=\"/code\"\r\n                                    style={{\r\n                                        color: `#fff`,\r\n                                        textDecoration: `none`,\r\n                                    }}\r\n                                >\r\n                                    CLOSE\r\n                                </Link>\r\n                            </Button>\r\n                        </Typography>\r\n                        <Button autoFocus onClick={handleClose}>\r\n                            <Link\r\n                                to=\"/code\"\r\n                                style={{\r\n                                    color: `#fff`,\r\n                                    textDecoration: `none`,\r\n                                }}\r\n                            >\r\n                                Your Project\r\n                            </Link>\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <List>{renderList()}</List>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TutorialList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport styles from \"./styles\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nimport {\r\n    Typography,\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    TextField,\r\n    Alert,\r\n    Box,\r\n    LinearProgress,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    ggLogin,\r\n    fbLogin,\r\n    GGLogin,\r\n    login,\r\n    setErrorLogin,\r\n    register,\r\n} from \"../../actions/login\";\r\nimport { setProgress } from \"../../actions/modal\";\r\nimport { set } from \"mongoose\";\r\nimport Nav from \"../Nav.js\";\r\nimport { Fragment } from \"react\";\r\nimport GoogleLogin, { GoogleLogout } from \"react-google-login\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\n// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\n\r\nimport { API_GG } from \"../../constant/axios\";\r\nimport GoogleIcon from \"@mui/icons-material/Google\";\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport Login from \"./Login\";\r\n\r\nconst Register = (props) => {\r\n    const {\r\n        classes,\r\n        err,\r\n        loginCreator,\r\n        setProgressCreator,\r\n        progress,\r\n        setErrorLoginCreator,\r\n        isAuthenticated,\r\n    } = props;\r\n    // const [email, setEmail] = useState(\"\");\r\n    const [account, setAccount] = useState({\r\n        email: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    const dispatch = useDispatch();\r\n    const errorStatus = useSelector((state) => state.auth.errorStatus);\r\n\r\n    useEffect(() => {\r\n        // setErrorLoginCreator(null);\r\n        loginCreator(null);\r\n    }, []);\r\n    console.log(\"Register Component render\");\r\n\r\n    const onChange = (e) => {\r\n        setAccount({\r\n            ...account,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        dispatch(register.registerRequest(account));\r\n    };\r\n\r\n    const onClick = (e) => {\r\n        window.open(\"https://youtube.com/\");\r\n    };\r\n\r\n    const responseGoogle = (res) => {\r\n        // console.log(res);\r\n        // sessionStorage.setItem(\"access_token\", res.tokenId);\r\n        dispatch(ggLogin.ggLoginRequest(res));\r\n    };\r\n    const responseFailureGoogle = (res) => {\r\n        console.log(\"Just failed:\", res);\r\n    };\r\n    const check = () => {\r\n        console.log(\"CHECK!!!\");\r\n    };\r\n    const logout = (res) => {\r\n        console.log(res);\r\n    };\r\n\r\n    const responseFacebook = (res) => {\r\n        dispatch(fbLogin.fbLoginRequest(res));\r\n        console.log(\"FB Login:\", res);\r\n    };\r\n\r\n    const jsx = (\r\n        <Redirect\r\n            to=\"/login\"\r\n            component={({ match }) => <Login match={match} />}\r\n        ></Redirect>\r\n    );\r\n    console.log(`isAuthenticated ${isAuthenticated}`);\r\n    return (\r\n        <Fragment>\r\n            {localStorage[\"access_token\"] ? (\r\n                jsx\r\n            ) : (\r\n                <Fragment>\r\n                    <div\r\n                        className={classes.background1}\r\n                        style={{ marginTop: `4.9%`, height: `300px` }}\r\n                    >\r\n                        <div className={classes.login1}>\r\n                            <Card\r\n                                sx={{\r\n                                    [\"@media(max-width: 1500px)\"]: {\r\n                                        marginTop: `-6%`,\r\n                                    },\r\n                                    [\"@media(max-width: 900px)\"]: {\r\n                                        marginTop: `3%`,\r\n                                    },\r\n                                    [\"@media(max-width: 550px)\"]: {\r\n                                        marginTop: `10%`,\r\n                                    },\r\n                                }}\r\n                            >\r\n                                <CardContent style={{ width: `100%` }}>\r\n                                    <form action=\"\">\r\n                                        <div className=\"text-xs-center pb-xs mt-3\">\r\n                                            <Typography\r\n                                                variant=\"caption\"\r\n                                                sx={{ fontSize: `14.2px` }}\r\n                                            >\r\n                                                Register to continue\r\n                                            </Typography>\r\n                                        </div>\r\n                                        <TextField\r\n                                            id=\"email\"\r\n                                            label=\"Email\"\r\n                                            className={classes.textField}\r\n                                            fullWidth\r\n                                            margin=\"normal\"\r\n                                            name=\"email\"\r\n                                            value={account.email}\r\n                                            onChange={onChange}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"name\"\r\n                                            label=\"Name\"\r\n                                            className={classes.textField}\r\n                                            fullWidth\r\n                                            margin=\"normal\"\r\n                                            name=\"name\"\r\n                                            value={account.name}\r\n                                            onChange={onChange}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"password\"\r\n                                            label=\"Password\"\r\n                                            className={classes.textField}\r\n                                            fullWidth\r\n                                            margin=\"normal\"\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            value={account.password}\r\n                                            onChange={onChange}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"confirmPassword\"\r\n                                            label=\"Confirm Password\"\r\n                                            className={classes.textField}\r\n                                            fullWidth\r\n                                            margin=\"normal\"\r\n                                            type=\"password\"\r\n                                            name=\"confirmPassword\"\r\n                                            value={account.confirmPassword}\r\n                                            onChange={onChange}\r\n                                        />\r\n\r\n                                        {err && (\r\n                                            <Alert\r\n                                                variant=\"outlined\"\r\n                                                severity={\r\n                                                    errorStatus\r\n                                                        ? \"error\"\r\n                                                        : \"success\"\r\n                                                }\r\n                                                className={classes.alert}\r\n                                            >\r\n                                                {err}\r\n                                            </Alert>\r\n                                        )}\r\n\r\n                                        <Box mt={2}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                fullWidth\r\n                                                type=\"submit\"\r\n                                                className={classes.btn}\r\n                                                onClick={handleRegister}\r\n                                            >\r\n                                                Register\r\n                                            </Button>\r\n                                        </Box>\r\n\r\n                                        {/* <div\r\n                                    style={{\r\n                                        display: `flex`,\r\n                                        flexDirection: `column`,\r\n                                    }}\r\n                                >\r\n                                    <GoogleLogin\r\n                                        clientId={API_GG}\r\n                                        render={(renderProps) => (\r\n                                            <Button\r\n                                                onClick={renderProps.onClick}\r\n                                                variant=\"outlined\"\r\n                                                style={{\r\n                                                    fontSize: `14.7px`,\r\n                                                    width: `max-content`,\r\n                                                    margin: `7px auto 0 auto`,\r\n                                                }}\r\n                                            >\r\n                                                <GoogleIcon\r\n                                                    sx={{\r\n                                                        marginRight: `5px`,\r\n                                                    }}\r\n                                                />\r\n                                                Login with Google\r\n                                            </Button>\r\n                                        )}\r\n                                        buttonText=\"Login with Google\"\r\n                                        onSuccess={responseGoogle}\r\n                                        onFailure={responseFailureGoogle}\r\n                                        cookiePolicy={\"single_host_origin\"}\r\n                                    />\r\n\r\n                                    <FacebookLogin\r\n                                        // appId=\"430041831912720\"\r\n                                        appId=\"738343767123877\"\r\n                                        autoLoad={false}\r\n                                        fields=\"name,email,picture\"\r\n                                        cssClass=\"btn btn-primary my-facebook-button-class pr-2 pl-2 btn-fb-login\"\r\n                                        icon=\"fa-facebook\"\r\n                                        callback={responseFacebook}\r\n                                    />\r\n                                </div> */}\r\n\r\n                                        <div className=\"pt-1 text md-center\">\r\n                                            <Link\r\n                                                // onClick={onClick}\r\n                                                // target=\"_blank\"\r\n                                                to=\"/login\"\r\n                                            >\r\n                                                <Button\r\n                                                    sx={{\r\n                                                        textTransform: `none`,\r\n                                                        fontSize: `15.7px`,\r\n                                                        margin: `0 0 0 0`,\r\n                                                        padding: 0,\r\n                                                    }}\r\n                                                    onClick={() =>\r\n                                                        dispatch(\r\n                                                            setErrorLogin(null)\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    Already have an account?\r\n                                                    Login\r\n                                                </Button>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </form>\r\n                                </CardContent>\r\n                                {progress && (\r\n                                    <Box\r\n                                        sx={{ width: \"100%\", marginBottom: 0 }}\r\n                                    >\r\n                                        <LinearProgress />\r\n                                    </Box>\r\n                                )}\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // codeData: state.code.codeData,\r\n    // modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    // err: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    // updateCodeCreator: updateCode,\r\n    // getCodeCreator: getCode,\r\n    // openModalCreator: openModal,\r\n    // closeModalCreator: closeModal,\r\n    loginCreator: login,\r\n    setProgressCreator: setProgress,\r\n    setErrorLoginCreator: setErrorLogin,\r\n};\r\n\r\nconst withConnect = connect(mapStateToProps, mapActionsToProps);\r\n\r\nexport default compose(withConnect, withStyles(styles))(Register);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport styles from \"./styles\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nimport {\r\n    Typography,\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    TextField,\r\n    Alert,\r\n    Box,\r\n    LinearProgress,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    ggLogin,\r\n    fbLogin,\r\n    GGLogin,\r\n    login,\r\n    setErrorLogin,\r\n} from \"../../actions/login\";\r\nimport { setProgress } from \"../../actions/modal\";\r\nimport { set } from \"mongoose\";\r\nimport Nav from \"../Nav.js\";\r\nimport { Fragment } from \"react\";\r\nimport GoogleLogin, { GoogleLogout } from \"react-google-login\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\n// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\n\r\nimport { API_GG } from \"../../constant/axios\";\r\nimport GoogleIcon from \"@mui/icons-material/Google\";\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport { push } from \"connected-react-router\";\r\nimport { checkLastPwd } from \"../../actions/login\";\r\nconst ForgotPassword = (props) => {\r\n    const {\r\n        classes,\r\n        err,\r\n        loginCreator,\r\n        setProgressCreator,\r\n        progress,\r\n        setErrorLoginCreator,\r\n    } = props;\r\n    // const [email, setEmail] = useState(\"\");\r\n    const [account, setAccount] = useState({\r\n        email: \"\",\r\n        recentPassword: \"\",\r\n    });\r\n    const dispatch = useDispatch();\r\n    const errorStatus = useSelector((state) => state.auth.errorStatus);\r\n    // useEffect(() => {\r\n    //     // setErrorLoginCreator(null);\r\n    //     loginCreator(null);\r\n    // }, []);\r\n    console.log(\"ForgotPassword Component render\");\r\n\r\n    const onChange = (e) => {\r\n        setAccount({\r\n            ...account,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n    const handleCheckLastPwd = (e) => {\r\n        e.preventDefault();\r\n        dispatch(checkLastPwd.checkLastPwdRequest(account));\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.background2}>\r\n                <div className={classes.login}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <form action=\"\">\r\n                                <div className=\"text-xs-center pb-xs\">\r\n                                    <Typography\r\n                                        variant=\"caption\"\r\n                                        sx={{\r\n                                            fontSize: `17.2px`,\r\n                                            fontWeight: `499`,\r\n                                        }}\r\n                                    >\r\n                                        Recover account\r\n                                    </Typography>\r\n                                </div>\r\n                                <TextField\r\n                                    id=\"email\"\r\n                                    label=\"Email\"\r\n                                    className={classes.textField}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    name=\"email\"\r\n                                    value={account.email}\r\n                                    onChange={onChange}\r\n                                />\r\n                                <Typography\r\n                                    variant=\"caption\"\r\n                                    sx={{\r\n                                        fontSize: `15.9px`,\r\n                                        textAlign: `left`,\r\n                                    }}\r\n                                >\r\n                                    <span\r\n                                        style={{\r\n                                            textAlign: `left`,\r\n                                            width: `auto`,\r\n                                        }}\r\n                                    >\r\n                                        Enter the last password you remember to\r\n                                        use with this Google Account\r\n                                    </span>\r\n                                </Typography>\r\n                                <TextField\r\n                                    id=\"recentPassword\"\r\n                                    label=\"Enter the most recent password\"\r\n                                    className={classes.textField}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    type=\"password\"\r\n                                    name=\"recentPassword\"\r\n                                    value={account.recentPassword}\r\n                                    placeholder={`Enter the most recent password`}\r\n                                    onChange={onChange}\r\n                                />\r\n\r\n                                {err && (\r\n                                    <Alert\r\n                                        variant=\"outlined\"\r\n                                        severity={errorStatus ? \"error\" : \"success\"} \r\n                                        className={classes.alert}\r\n                                    >\r\n                                        {err}\r\n                                    </Alert>\r\n                                )}\r\n\r\n                                <Box mt={2}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        fullWidth\r\n                                        type=\"submit\"\r\n                                        className={classes.btn}\r\n                                        onClick={(e) => handleCheckLastPwd(e)}\r\n                                    >\r\n                                        Continue\r\n                                    </Button>\r\n                                    <Link to=\"/register\" className={classes.link1}>\r\n                                        <Button\r\n                                            sx={{\r\n                                                display: `block`,\r\n                                                margin: `5px 0 2px 0`,\r\n                                                padding: 0,\r\n                                                width: `100%`,\r\n                                                textAlign: `center`,\r\n                                                textTransform: `none`,\r\n                                                fontSize: `16.5px`,\r\n                                                \"&:focus\": {\r\n                                                    outline: `none`,\r\n                                                },\r\n                                            }}\r\n                                            onClick={() =>\r\n                                                dispatch(setErrorLogin(null))\r\n                                            }\r\n                                        >\r\n                                            Register new account?\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Box>\r\n                            </form>\r\n                        </CardContent>\r\n                        {progress && (\r\n                            <Box sx={{ width: \"100%\", marginBottom: 0 }}>\r\n                                <LinearProgress />\r\n                            </Box>\r\n                        )}\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // codeData: state.code.codeData,\r\n    // modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    // err: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    // updateCodeCreator: updateCode,\r\n    // getCodeCreator: getCode,\r\n    // openModalCreator: openModal,\r\n    // closeModalCreator: closeModal,\r\n    loginCreator: login,\r\n    setProgressCreator: setProgress,\r\n    setErrorLoginCreator: setErrorLogin,\r\n};\r\n\r\nconst withConnect = connect(mapStateToProps, mapActionsToProps);\r\n\r\nexport default compose(withConnect, withStyles(styles))(ForgotPassword);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport styles from \"./styles\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nimport {\r\n    Typography,\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    TextField,\r\n    Alert,\r\n    Box,\r\n    LinearProgress,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    ggLogin,\r\n    fbLogin,\r\n    GGLogin,\r\n    login,\r\n    setErrorLogin,\r\n    recoverPassword,\r\n} from \"../../actions/login\";\r\nimport { setProgress } from \"../../actions/modal\";\r\nimport { set } from \"mongoose\";\r\nimport Nav from \"../Nav.js\";\r\nimport { Fragment } from \"react\";\r\nimport GoogleLogin, { GoogleLogout } from \"react-google-login\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\n// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\n\r\nimport { API_GG } from \"../../constant/axios\";\r\nimport GoogleIcon from \"@mui/icons-material/Google\";\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport { push } from \"connected-react-router\";\r\nimport { checkLastPwd } from \"../../actions/login\";\r\nimport { loginFailed } from \"../../actions/login\";\r\nimport DirectHelper from \"./DirectHelper\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport { verifyUrlRecover } from \"../../actions/direct\";\r\n\r\nconst RecoveryPassword = (props) => {\r\n    const {\r\n        classes,\r\n        err,\r\n        loginCreator,\r\n        setProgressCreator,\r\n        progress,\r\n        setErrorLoginCreator,\r\n        match,\r\n    } = props;\r\n    // const [email, setEmail] = useState(\"\");\r\n    const [account, setAccount] = useState({\r\n        newPassword: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    const dispatch = useDispatch();\r\n    const errorStatus = useSelector((state) => state.auth.errorStatus);\r\n    const appear = useSelector((state) => state.direct.appear);\r\n    const isVerify = useSelector((state) => state.direct.isVerify);\r\n    // const time = useSelector(state => state.direct.time)\r\n\r\n    console.log(\"RecoveryPassword Component render\");\r\n    const onChange = (e) => {\r\n        setAccount({\r\n            ...account,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n    const handleRecoverPassword = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            recoverPassword.recoverPasswordRequest({\r\n                ...account,\r\n                url: match.url.slice(1),\r\n            })\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"VerifyUrlRecover: \", match.url.slice(1));\r\n        dispatch(\r\n            verifyUrlRecover.verifyUrlRecoverRequest({\r\n                isVerify: true,\r\n                url: match.url.slice(1),\r\n            })\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            {isVerify ? (\r\n                <Loading />\r\n            ) : (\r\n                <div className={classes.background2}>\r\n                    <div className={classes.login}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <form action=\"\">\r\n                                    <div className=\"text-xs-center pb-xs\">\r\n                                        <Typography\r\n                                            variant=\"caption\"\r\n                                            sx={{\r\n                                                fontSize: `17.2px`,\r\n                                                fontWeight: `499`,\r\n                                            }}\r\n                                        >\r\n                                            Recover account\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <TextField\r\n                                        id=\"newPassword\"\r\n                                        label=\"New password\"\r\n                                        className={classes.textField}\r\n                                        fullWidth\r\n                                        margin=\"normal\"\r\n                                        name=\"newPassword\"\r\n                                        type=\"password\"\r\n                                        value={account.newPassword}\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"confirmPassword\"\r\n                                        label=\"Confirm the new password\"\r\n                                        className={classes.textField}\r\n                                        fullWidth\r\n                                        margin=\"normal\"\r\n                                        type=\"password\"\r\n                                        name=\"confirmPassword\"\r\n                                        value={account.confirmPassword}\r\n                                        placeholder={`Confirm the new password`}\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <Link\r\n                                        to=\"/identify/user\"\r\n                                        className={classes.link}\r\n                                    >\r\n                                        <Button\r\n                                            sx={{\r\n                                                display: `block`,\r\n                                                margin: `5px 0 2px 0`,\r\n                                                padding: 0,\r\n                                                width: `100%`,\r\n                                                textAlign: `right`,\r\n                                                textTransform: `none`,\r\n                                                fontSize: `15px`,\r\n                                                \"&:focus\": {\r\n                                                    outline: `none`,\r\n                                                },\r\n                                            }}\r\n                                            onClick={() =>\r\n                                                dispatch(setErrorLogin(null))\r\n                                            }\r\n                                            // onClick={(e) => directForgotPassword(e)}\r\n                                        >\r\n                                            Send new request?\r\n                                        </Button>\r\n                                    </Link>\r\n\r\n                                    {err && (\r\n                                        <Alert\r\n                                            variant=\"outlined\"\r\n                                            severity={\r\n                                                errorStatus\r\n                                                    ? \"error\"\r\n                                                    : \"success\"\r\n                                            }\r\n                                            className={classes.alert}\r\n                                        >\r\n                                            {err}\r\n                                        </Alert>\r\n                                    )}\r\n                                    {appear && <DirectHelper />}\r\n\r\n                                    <Box mt={2}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            fullWidth\r\n                                            type=\"submit\"\r\n                                            className={classes.btn}\r\n                                            onClick={(e) =>\r\n                                                handleRecoverPassword(e)\r\n                                            }\r\n                                        >\r\n                                            Continue\r\n                                        </Button>\r\n\r\n                                        <Link to=\"/register\">\r\n                                            <Button\r\n                                                sx={{\r\n                                                    display: `block`,\r\n                                                    margin: `5px 0 2px 0`,\r\n                                                    padding: 0,\r\n                                                    width: `100%`,\r\n                                                    textAlign: `center`,\r\n                                                    textTransform: `none`,\r\n                                                    fontSize: `16.5px`,\r\n                                                    \"&:focus\": {\r\n                                                        outline: `none`,\r\n                                                    },\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    dispatch(\r\n                                                        setErrorLogin(null)\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                Register new account?\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </Box>\r\n                                </form>\r\n                            </CardContent>\r\n                            {progress && (\r\n                                <Box sx={{ width: \"100%\", marginBottom: 0 }}>\r\n                                    <LinearProgress />\r\n                                </Box>\r\n                            )}\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // codeData: state.code.codeData,\r\n    // modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    // err: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    // updateCodeCreator: updateCode,\r\n    // getCodeCreator: getCode,\r\n    // openModalCreator: openModal,\r\n    // closeModalCreator: closeModal,\r\n    loginCreator: login,\r\n    setProgressCreator: setProgress,\r\n    setErrorLoginCreator: setErrorLogin,\r\n    loginFailedCreator: loginFailed,\r\n};\r\n\r\nconst withConnect = connect(mapStateToProps, mapActionsToProps);\r\n\r\nexport default compose(withConnect, withStyles(styles))(RecoveryPassword);\r\n","const styles = () => ({\r\n    contain: {\r\n        position: \"relative\",\r\n        // top: `59%`,\r\n        // left: `50%`,\r\n        // transform: `translate(-50%, -50%)`,\r\n        maxWidth: \"100%\",\r\n        margin: `auto`,\r\n        height: `100%`,\r\n        zIndex: 99,\r\n        padding: 40,\r\n        display: `flex`,\r\n        // alignItems: `center`,\r\n        justifyContent: `center`,\r\n        textAlign: `center`,\r\n        marginTop: `-1.5%`,\r\n        [\"@media(max-width:787px)\"]: {\r\n            marginTop: `2.5% !important`,\r\n            width: \"100%\",\r\n            display: `flex`,\r\n            flexDirection: `column`,\r\n        },\r\n        // [\"@media(max-width:980px)\"]: {\r\n        //     marginTop: `5% !important`,\r\n        //     width: \"70%\",\r\n        // },\r\n        // [\"@media(max-width:700px)\"]: {\r\n        //     marginTop: `5% !important`,\r\n        //     width: \"90%\",\r\n        // },\r\n        // [\"@media(max-width:500px)\"]: {\r\n        //     marginTop: `5% !important`,\r\n        //     width: \"100%\",\r\n        // },\r\n        // [\"@media(max-width:387px)\"]: {\r\n        //     marginTop: `12% !important`,\r\n        //     width: \"100%\",\r\n        // },\r\n        // [\"@media(max-width:353px)\"]: {\r\n        //     marginTop: `17% !important`,\r\n        //     width: \"100%\",\r\n        // },\r\n        // [\"@media(max-width:196px)\"]: {\r\n        //     marginTop: `20% !important`,\r\n        //     width: \"100%\",\r\n        // },\r\n    },\r\n    imageBox: {\r\n        width: `100%`,\r\n    },\r\n    labelImage: {\r\n        width: `100%`,\r\n    },\r\n    cardProfile: {\r\n        width: `100%`,\r\n        border: `1px solid #000`,\r\n        // height: `auto`\r\n    },\r\n    title: {\r\n        borderBottom: `1px solid #000`,\r\n        fontWeight: `525`,\r\n        fontFamily: `Poppins`,\r\n    },\r\n    left: {\r\n        // marginRight: `5px`,\r\n        borderRight: `1px solid #000`,\r\n        margin: 0,\r\n        padding: 0,\r\n    },\r\n    right: {\r\n        // float: `left`,\r\n    },\r\n    profile: {\r\n        width: `100%`,\r\n        display: `flex`,\r\n        // flexDirection: `column`\r\n        // height: `400px`,\r\n        [\"@media(max-width:787px)\"]: {\r\n            marginTop: `5% !important`,\r\n            width: \"100%\",\r\n            display: `flex`,\r\n            flexDirection: `column`,\r\n        },\r\n    },\r\n    avatar: {\r\n        width: `89%`,\r\n        margin: `auto`,\r\n        padding: `12px 0 0 0px`,\r\n        // height: `350px !important`,\r\n        height: `420px !important`,\r\n        [\"@media(max-width:500px)\"]: {\r\n            width: \"100%\",\r\n            // height: `auto`,\r\n        },\r\n        // height: `auto !important`,\r\n\r\n        // height: `auto`,\r\n        // height: `300px`,\r\n    },\r\n    field: {\r\n        // display: `flex`,\r\n    },\r\n    textInfo: {\r\n        width: `89%`,\r\n        margin: `auto`,\r\n        marginTop: `5px`,\r\n        fontWeight: `520`,\r\n        // float: `right`,\r\n    },\r\n});\r\n\r\nexport default styles;\r\n","import { createActions } from \"redux-actions\";\r\n\r\nexport const getProfile = createActions({\r\n    getProfileRequest: (val) => val,\r\n    getProfileSuccess: (val) => val,\r\n    getProfileFailure: (val) => val,\r\n});\r\n\r\nexport const updateProfile = createActions({\r\n    updateProfileRequest: (val) => val,\r\n    updateProfileSuccess: (val) => val,\r\n    updateProfileFailure: (val) => val,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport styles from \"./styles\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nimport {\r\n    Typography,\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    TextField,\r\n    Alert,\r\n    Box,\r\n    LinearProgress,\r\n    Grid,\r\n    CardHeader,\r\n    Avatar,\r\n    CardMedia,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    ggLogin,\r\n    fbLogin,\r\n    GGLogin,\r\n    login,\r\n    setErrorLogin,\r\n    recoverPassword,\r\n} from \"../../../actions/login\";\r\nimport { setProgress } from \"../../../actions/modal\";\r\nimport { set } from \"mongoose\";\r\nimport Nav from \"../../Nav.js\";\r\nimport { Fragment } from \"react\";\r\nimport GoogleLogin, { GoogleLogout } from \"react-google-login\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\n// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\n\r\nimport { API_GG } from \"../../../constant/axios\";\r\nimport GoogleIcon from \"@mui/icons-material/Google\";\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport { push } from \"connected-react-router\";\r\nimport { checkLastPwd } from \"../../../actions/login\";\r\nimport { loginFailed } from \"../../../actions/login\";\r\nimport DirectHelper from \"../DirectHelper\";\r\nimport Loading from \"../../Loading/Loading\";\r\nimport { verifyUrlRecover } from \"../../../actions/direct\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getProfile, updateProfile } from \"../../../actions/profile\";\r\nimport useId from \"@mui/utils/useId\";\r\n\r\nconst Profile = (props) => {\r\n    const { classes, match } = props;\r\n    // const [email, setEmail] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const [preview, setPreview] = useState();\r\n    const appear = useSelector((state) => state.direct.appear);\r\n    const account = useSelector((state) => state.profile.profile);\r\n    const isVerify = useSelector((state) => state.direct.isVerify);\r\n    const fid = useSelector((state) => state.auth.fbAccountInfo.fid);\r\n    const gid = useSelector((state) => state.auth.ggAccountInfo.gid);\r\n    const uid = useSelector((state) => state.auth.account.uid);\r\n    const name = useSelector((state) => state.auth.account.name);\r\n    // const time = useSelector(state => state.direct.time)\r\n\r\n    console.log(\"Profile Component render\");\r\n    const onChange = (e) => {\r\n        dispatch(\r\n            updateProfile.updateProfileSuccess({\r\n                [e.target.name]: e.target.value,\r\n            })\r\n        );\r\n    };\r\n    // const handleRecoverPassword = (e) => {\r\n    //     e.preventDefault();\r\n    //     dispatch(\r\n    //         recoverPassword.recoverPasswordRequest({\r\n    //             ...account,\r\n    //             url: match.url.slice(1),\r\n    //         })\r\n    //     );\r\n    // };\r\n\r\n    const previewFile = (file) => {\r\n        if (!file) return;\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            dispatch(\r\n                updateProfile.updateProfileSuccess({ picture: reader.result })\r\n            );\r\n        };\r\n    };\r\n\r\n    const onChangeImage = (e) => {\r\n        e.preventDefault();\r\n        // setAccount({ ...account, [e.target.name]: e.target.files[0] });\r\n        previewFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        const i = Number(match.url.lastIndexOf(\"/\"));\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateProfile.updateProfileRequest({\r\n                account: account,\r\n                isVerify: true,\r\n                url: match.url.slice(i + 1),\r\n                fid: fid,\r\n                gid: gid,\r\n            })\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        const i = Number(match.url.lastIndexOf(\"/\"));\r\n        console.log(\"useEffect Profile run...\");\r\n        dispatch(\r\n            getProfile.getProfileRequest({\r\n                isVerify: true,\r\n                url: match.url.slice(i + 1),\r\n            })\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            {isVerify ? (\r\n                <Loading />\r\n            ) : (\r\n                <Box className={classes.contain}>\r\n                    <Box className={classes.cardProfile}>\r\n                        <Grid item xs={12} sm={12} className={classes.title}>\r\n                            <CardHeader title={`${name}'s Information`} />\r\n                        </Grid>\r\n                        <div className={classes.profile}>\r\n                            <Grid item sm={12} className={classes.left}>\r\n                                {/* <CardHeader\r\n                                    avatar={<Avatar>A</Avatar>}\r\n                                    title=\"This is title\"\r\n                                /> */}\r\n\r\n                                <div className={classes.imageBox}>\r\n                                    <label\r\n                                        htmlFor=\"file-input\"\r\n                                        className={classes.labelImage}\r\n                                    >\r\n                                        {!account.picture && (\r\n                                            <CardMedia\r\n                                                className={classes.avatar}\r\n                                                component=\"img\"\r\n                                                image=\"https://images.pexels.com/photos/1461974/pexels-photo-1461974.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\r\n                                            />\r\n                                        )}\r\n                                        {account.picture && (\r\n                                            <img\r\n                                                className={classes.avatar}\r\n                                                src={account.picture}\r\n                                            />\r\n                                        )}\r\n                                    </label>\r\n\r\n                                    <input\r\n                                        id=\"file-input\"\r\n                                        type=\"file\"\r\n                                        name=\"image\"\r\n                                        onChange={onChangeImage}\r\n                                        style={{ display: `none` }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item sm={12} className={classes.right}>\r\n                                <Box mt={1}>\r\n                                    <TextField\r\n                                        id=\"email\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        label=\"Email\"\r\n                                        value={account.email}\r\n                                        variant=\"standard\"\r\n                                        className={classes.textInfo}\r\n                                    />\r\n                                    {uid && (\r\n                                        <TextField\r\n                                            id=\"uid\"\r\n                                            InputProps={{\r\n                                                readOnly: true,\r\n                                            }}\r\n                                            label=\"ID\"\r\n                                            value={uid}\r\n                                            variant=\"standard\"\r\n                                            className={classes.textInfo}\r\n                                        />\r\n                                    )}\r\n                                    {fid && (\r\n                                        <TextField\r\n                                            id=\"fid\"\r\n                                            InputProps={{\r\n                                                readOnly: true,\r\n                                            }}\r\n                                            label=\"ID\"\r\n                                            value={fid}\r\n                                            variant=\"standard\"\r\n                                            className={classes.textInfo}\r\n                                        />\r\n                                    )}\r\n                                    {gid && (\r\n                                        <TextField\r\n                                            id=\"gid\"\r\n                                            InputProps={{\r\n                                                readOnly: true,\r\n                                            }}\r\n                                            label=\"ID\"\r\n                                            value={gid}\r\n                                            variant=\"standard\"\r\n                                            className={classes.textInfo}\r\n                                        />\r\n                                    )}\r\n\r\n                                    <TextField\r\n                                        id=\"name\"\r\n                                        // InputProps={{\r\n                                        //     readOnly: true,\r\n                                        // }}\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        required={true}\r\n                                        value={account.name}\r\n                                        onChange={onChange}\r\n                                        variant=\"standard\"\r\n                                        className={classes.textInfo}\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"password\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        type=\"password\"\r\n                                        label=\"Password\"\r\n                                        value={account.password}\r\n                                        variant=\"standard\"\r\n                                        className={classes.textInfo}\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"country\"\r\n                                        // InputProps={{\r\n                                        //     readOnly: true,\r\n                                        // }}\r\n                                        label=\"Country\"\r\n                                        value={account.country}\r\n                                        name=\"country\"\r\n                                        variant=\"standard\"\r\n                                        className={classes.textInfo}\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"phone\"\r\n                                        // InputProps={{\r\n                                        //     readOnly: true,\r\n                                        // }}\r\n                                        label=\"Phone\"\r\n                                        value={account.phone}\r\n                                        variant=\"standard\"\r\n                                        className={classes.textInfo}\r\n                                        onChange={onChange}\r\n                                        name=\"phone\"\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"job\"\r\n                                        // InputProps={{\r\n                                        //     readOnly: true,\r\n                                        // }}\r\n                                        label=\"Job\"\r\n                                        value={account.job}\r\n                                        variant=\"standard\"\r\n                                        className={classes.textInfo}\r\n                                        onChange={onChange}\r\n                                        name=\"job\"\r\n                                    />\r\n                                    <Box mt={2} mb={1}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            // color=\"secondary\"\r\n                                            onClick={handleSubmit}\r\n                                            sx={{\r\n                                                background: `#55DDC6`,\r\n                                                \"&:hover\": {\r\n                                                    background: `#28EEC6 !important`,\r\n                                                },\r\n                                            }}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Grid>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // codeData: state.code.codeData,\r\n    // modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    // err: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    // updateCodeCreator: updateCode,\r\n    // getCodeCreator: getCode,\r\n    // openModalCreator: openModal,\r\n    // closeModalCreator: closeModal,\r\n    loginCreator: login,\r\n    setProgressCreator: setProgress,\r\n    setErrorLoginCreator: setErrorLogin,\r\n    loginFailedCreator: loginFailed,\r\n};\r\n\r\nconst withConnect = connect(mapStateToProps, mapActionsToProps);\r\n\r\nexport default compose(withConnect, withStyles(styles))(Profile);\r\n","import { createActions } from \"redux-actions\";\r\n\r\nexport const getShareCode = createActions({\r\n    getShareCodeRequest: (val) => val,\r\n    getShareCodeSuccess: (val) => val,\r\n    getShareCodeFailure: (val) => val,\r\n});\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { getShareCode } from \"../actions/getShareCode\";\r\nimport Loading from \"./Loading/Loading\";\r\n\r\nconst GetShareCode = ({ match }) => {\r\n    console.log(match);\r\n    const isLoading = useSelector((state) => state.getShareCode.isLoading);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getShareCode.getShareCodeRequest(match.params.id));\r\n    }, []);\r\n    return (\r\n        <Fragment>\r\n            {isLoading ? <Loading /> : <Redirect to=\"/code\"></Redirect>}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default GetShareCode;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { updateCode } from \"../actions/code\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport Code from \"./Code\";\nimport MainPage from \"./MainPage\";\nimport NotFound from \"./NotFound\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { createBrowserHistory } from \"history\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport Login from \"./AuthPage/Login\";\nimport Navbar from \"../components/Navbar\";\nimport Nav from \"./Nav.js\";\nimport Tutorial from \"../pages/tutorials/Tutorial\";\nimport TutorialLayout from \"../common/layout/TutorialLayout\";\nimport { HTML_TUTORIALS } from \"../common/constants/HTMLconstants\";\nimport { checkLogin } from \"../actions/login\";\nimport TutorialList from \"./TutorialList\";\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport { CSS_TUTORIALS } from \"../common/constants/CSSconstants\";\nimport { JS_TUTORIALS } from \"../common/constants/JSconstants\";\nimport { Divider } from \"@mui/material\";\nimport Register from \"./AuthPage/Register\";\nimport ForgotPassword from \"./AuthPage/ForgotPassword\";\nimport HandleForgot from \"./AuthPage/HandleForgot\";\nimport RecoveryPassword from \"./AuthPage/RecoveryPassword\";\nimport AvatarUser from \"./Avatar/AvatarUser\";\nimport Profile from \"./AuthPage/Profile.js/Profile\";\nimport GetShareCode from \"./GetShareCode\";\nimport { makeStyles } from \"@mui/styles\";\n\nexport const history = createBrowserHistory();\n\nfunction App({ updateCodeCreator, codeData, checkLoginCreator }) {\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n    let [html, setHtml] = useLocalStorage(\"html\", \"\");\n\n    // if (!html) {\n    //   setHtml(`<!DOCTYPE html>\n    //   <html lang=\"en\">\n    //   <head>\n    //       <meta charset=\"UTF-8\">\n    //       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    //       <title>Document</title>\n    //   </head>\n    //   <body>\n\n    //   </body>\n    //   </html>`)\n    // }\n\n    // const [css, setCss] = useLocalStorage(\"css\", \"\");\n    // const [js, setJs] = useLocalStorage(\"js\", \"\");\n    // const [srcDoc, setSrcDoc] = useState(\"\");\n\n    // const name = useSelector((state) => state.auth.account.name);\n    checkLoginCreator();\n    // useEffect(() => {\n    //     checkLoginCreator();\n    // }, []);\n\n    // useEffect(() => {\n    //     const timeout = setTimeout(() => {\n    //         setSrcDoc(`\n    //     <html>\n    //       <body>${html}</body>\n    //       <style>${css}</style>\n    //       <script defer async>${js}</script>\n    //     </html>\n    //   `);\n    //     }, 250);\n\n    //     return () => clearTimeout(timeout);\n    // }, [html, css, js]);\n    // const status = useSelector((state) => state.view.status);\n\n    // const fullScreen = useSelector((state) => state.view.fullScreen);\n    // const largeScreen = useSelector((state) => state.view.largeScreen);\n\n    const useStyles = makeStyles((theme) => ({\n        codeContainer: {\n            // background: `#fff`,\n            display: `flex`,\n            flexDirection: `column`,\n            marginTop: `70px`,\n            transitionTimingFunction: `linear`,\n            transition: `all 2s`,\n            zIndex: `0 !important`,\n        },\n        \"@keyframes fadeInFromBot\": {\n            \"0%\": {\n                marginTop: \"500px\",\n            },\n            \"100%\": {\n                opacity: 1,\n                marginTop: \"0px\",\n            },\n        },\n        \"@keyframes fadeInFromLeft\": {\n            \"0%\": {\n                marginLeft: \"-700px\",\n            },\n            \"100%\": {\n                opacity: 1,\n                marginLeft: \"0px\",\n            },\n        },\n        topPane: {\n            width: \"42% !important\",\n            // width: \"50% !important\",\n            float: \"right\",\n            display: \"flex !important\",\n            flexDirection: \"column !important\",\n            height: \"min-content !important\",\n            transitionTimingFunction: `linear`,\n            transition: `all 2s`,\n            animation: `$fadeInFromLeft .5s ease-in-out`,\n        },\n        view: {\n            width: \"58% !important\",\n            // width: \"50% !important\",\n            float: \"left !important\",\n            zIndex: \"0\",\n            position: \"fixed !important\",\n            right: \"0\",\n            height: \"100%\",\n            transitionTimingFunction: `linear`,\n            transition: `all 2s`,\n            animation: `$fadeInFromBot .4s ease-in-out`,\n            [\"@media(max-width: 500px)\"]: {\n                marginTop: `1% !important`,\n            },\n        },\n        fullScreen: {\n            display: `none !important`,\n        },\n        fullHeight: {\n            height: `150vh`,\n            minHeight: `150vh`,\n            // overflowY: `hidden !important`,\n        },\n    }));\n\n    const renderHTMLTutorials = () =>\n        HTML_TUTORIALS.map((route) => {\n            return <TutorialLayout {...route} key={route.path} />;\n        });\n\n    const renderCSSTutorials = () =>\n        CSS_TUTORIALS.map((route) => {\n            return <TutorialLayout {...route} key={route.path} />;\n        });\n\n    const renderJSTutorials = () =>\n        JS_TUTORIALS.map((route) => {\n            return <TutorialLayout {...route} key={route.path} />;\n        });\n\n    return (\n        // <Router>\n        <ConnectedRouter history={history}>\n            <Nav />\n            <div style={{ marginTop: 90 }}>\n                <ToastContainer />\n                <TutorialList />\n                <Switch>\n                    {/* <Route to=\"/Sidebar\" exact component={Sidebar}/> */}\n                    <Route\n                        path=\"/cs/share/:id\"\n                        exact\n                        component={({ match }) => (\n                            <GetShareCode match={match} />\n                        )}\n                    />\n\n                    <Route\n                        path=\"/users/profile/:id\"\n                        exact\n                        component={({ match }) => <Profile match={match} />}\n                    />\n                    <Route\n                        path=\"/recover/user/pwd/:id\"\n                        exact\n                        component={({ match }) => (\n                            <RecoveryPassword match={match} />\n                        )}\n                    />\n                    <Route\n                        path=\"/identify/user\"\n                        exact\n                        component={ForgotPassword}\n                    />\n                    <Route\n                        path=\"/\"\n                        exact\n                        component={() => <Redirect to=\"/login\"></Redirect>}\n                    />\n                    <Route\n                        path=\"/register\"\n                        exact\n                        // render={() => {\n                        //     if (isAuthenticated) {\n                        //         return <Redirect to=\"/login\"></Redirect>;\n                        //     } else return <Register />;\n                        // }}\n                        component={Register}\n                    />\n\n                    <Route\n                        path=\"/login\"\n                        exact\n                        component={({ match }) => <Login match={match} />}\n                    />\n                    {renderHTMLTutorials()}\n                    {renderCSSTutorials()}\n                    {renderJSTutorials()}\n                    {/* <Route\n                        path=\"/code\"\n                        exact\n                        component={({ match }) => <MainPage match={match} />}\n                    /> */}\n                    <Route\n                        path=\"/:id\"\n                        exact\n                        component={({ match }) => (\n                            <MainPage useStyles2={useStyles} match={match} />\n                        )}\n                    />\n                    <Route component={NotFound}></Route>\n                </Switch>\n                {/* // </Router> */}\n            </div>\n        </ConnectedRouter>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    codeData: state.code.codeData,\n});\n\nconst mapActionsToProps = {\n    updateCodeCreator: updateCode,\n    checkLoginCreator: checkLogin,\n};\n\nconst withConnect = connect(mapStateToProps, mapActionsToProps);\n\nexport default compose(withConnect)(App);\n","import axios from \"axios\";\r\nimport {\r\n    API,\r\n    API_LOGIN,\r\n    DELETE,\r\n    GET,\r\n    POST,\r\n    PUT,\r\n    API_USER,\r\n} from \"../../constant/axios\";\r\n\r\nexport const setAuth = (token) => {\r\n    if (token) {\r\n        return (axios.defaults.headers.common[\r\n            \"Authorization\"\r\n        ] = `Bearer ${token}`);\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport const thisAxios = (url, method, endPoint = \"\", body = null) => {\r\n    if (url === API_USER) {\r\n        if (method === GET) {\r\n            return axios.get(`${url}/${endPoint}`);\r\n        } else if (method === POST) {\r\n            return axios.post(`${url}/${endPoint}`, body);\r\n        }\r\n    }\r\n    if (url === API) {\r\n        if (method === GET) {\r\n            return axios.get(`${url}/${endPoint}`);\r\n        } else if (method === POST) {\r\n            return axios.post(`${url}/${endPoint}`, body);\r\n        } else if (method === PUT) {\r\n            return axios.put(`${url}/${endPoint}`, body);\r\n        } else if (method === DELETE) {\r\n            return axios.delete(`${url}/${endPoint}`);\r\n        }\r\n    } else if (url === API_LOGIN) {\r\n        if (method === POST) {\r\n            return axios.post(`${url}/${endPoint}`, body);\r\n        }\r\n    }\r\n};\r\n","import { CODE } from \"../../constant/localStorage\"\r\n\r\nexport const getLocal = (key) => {\r\n    return localStorage.getItem(`${CODE}${key}`);\r\n}","import {\r\n    call,\r\n    fork,\r\n    take,\r\n    put,\r\n    takeLatest,\r\n    delay,\r\n    select,\r\n    takeEvery,\r\n} from \"redux-saga/effects\";\r\nimport {\r\n    getCode,\r\n    setAuthenticated,\r\n    setCode,\r\n    setError,\r\n    setUrl,\r\n    updateCode,\r\n    getProjects,\r\n    getProjectsSuccess,\r\n    setIsChanging,\r\n    setIsDeleting,\r\n    deleteProjectSuccess,\r\n} from \"../actions/code\";\r\nimport { setAuth, thisAxios } from \"../common/axios/axios\";\r\nimport { setLocal } from \"../common/LocalStorage/setLocal\";\r\nimport { getLocal } from \"../common/LocalStorage/getLocal\";\r\nimport {\r\n    API,\r\n    API_LOGIN,\r\n    API_USER,\r\n    DELETE,\r\n    GET,\r\n    POST,\r\n    PUT,\r\n    SHARE_CODE,\r\n} from \"../constant/axios\";\r\nimport { GET_CODE, UPDATE_CODE } from \"../constant/code\";\r\nimport { CSS, HTML, JS } from \"../constant/localStorage\";\r\nimport { toast } from \"react-toastify\";\r\nimport { OPEN_MODAL, OPEN_MODAL_SUCCESS } from \"../constant/modal\";\r\nimport {\r\n    closeModal,\r\n    openModalSuccess,\r\n    setProgress,\r\n    setLoading,\r\n} from \"../actions/modal\";\r\nimport {\r\n    loginFailed,\r\n    loginSuccess,\r\n    logoutSuccess,\r\n    setErrorLogin,\r\n    setNameCode,\r\n    GGLogin,\r\n    ggLogin,\r\n    fbLogin,\r\n    setPicture,\r\n    register,\r\n    setErrorStatus,\r\n    recoverPassword,\r\n    updateGID,\r\n    updateFID,\r\n    updateUID,\r\n} from \"../actions/login\";\r\nimport { LOGIN } from \"../constant/login\";\r\nimport { push } from \"connected-react-router\";\r\nimport { setLocation } from \"../actions/tutorial\";\r\nimport { checkLastPwd } from \"../actions/login\";\r\nimport { direct, verifyUrlRecover } from \"../actions/direct\";\r\nimport { getProfile, updateProfile } from \"../actions/profile\";\r\nimport { openModalShare } from \"../actions/modalShareCode\";\r\nimport { getShareCode } from \"../actions/getShareCode\";\r\n\r\nfunction* handleTest() {\r\n    try {\r\n        const res = yield call(() => thisAxios(API, GET, \"test\"));\r\n        const { html, css, js } = res.data.code;\r\n        if (res.data.status) {\r\n            // console.log(\"res:\", res.data.code[0].html);\r\n            // yield put(updateCode(html, css, js))\r\n            setLocal(HTML, html);\r\n            setLocal(CSS, css);\r\n            setLocal(JS, js);\r\n            // console.log(html, css, js);\r\n        }\r\n    } catch (err) {\r\n        toast.error(\"You don't have permission to access this page\");\r\n        setAuth(null);\r\n        localStorage.removeItem(\"access_token\");\r\n        yield put(push(\"/login\"));\r\n    }\r\n    yield put(push(\"/test\"));\r\n}\r\n\r\nfunction* handleCheckLogin() {\r\n    const auth = localStorage[\"access_token\"];\r\n    const url = yield select((state) => state.code.url);\r\n    console.log(\"Handle Check Login\", url);\r\n    if (auth) {\r\n        setAuth(auth);\r\n        try {\r\n            const res = yield call(() =>\r\n                thisAxios(API_LOGIN, POST, \"check-login\")\r\n            );\r\n            if (res.data.success) {\r\n                console.log(\"CHECK LOGIN SAGA LINE 100\");\r\n\r\n                yield put(loginSuccess(res.data.name));\r\n                let picture;\r\n                if (res.data.picture) {\r\n                    picture = res.data.picture.toString();\r\n                } else picture = null;\r\n                yield put(setPicture.setPictureRequest(picture));\r\n                if (res.data.user.fid) {\r\n                    console.log(\"Go into if FID\");\r\n                    yield put(updateFID.updateFIDRequest(res.data.user.fid));\r\n                } else if (res.data.user.gid) {\r\n                    console.log(\"Go into if GID\");\r\n\r\n                    yield put(updateGID.updateGIDRequest(res.data.user.gid));\r\n                } else {\r\n                    yield put(updateUID.updateUIDRequest(res.data.user.objId));\r\n                }\r\n                console.log(\"PICTURE:\", picture);\r\n\r\n                setAuth(auth);\r\n                // yield put(push(`/${url}`));\r\n                if (url !== \"code\") {\r\n                    try {\r\n                        const res1 = yield call(() => thisAxios(API, GET, url));\r\n                        console.log(\"res1\", res1);\r\n                        const { html, css, js, name } = res1.data.code;\r\n                        if (res1.data.status) {\r\n                            yield put(push(`/${url}`));\r\n                        }\r\n                    } catch (err) {\r\n                        yield put(setProgress(false));\r\n                        yield put(push(`/code`));\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log(\"LINE 129 CHECK LOGIN SAGA\", err);\r\n            yield put(setProgress(false));\r\n            setAuth(null);\r\n            localStorage.removeItem(\"access_token\");\r\n            localStorage.removeItem(\"name\");\r\n            yield put(push(\"/login\"));\r\n        }\r\n    } else {\r\n        yield put(setProgress(false));\r\n        console.log(\"Line 136: Else not auth\");\r\n        yield put(push(\"/login\"));\r\n    }\r\n}\r\n\r\nfunction* handleGetCode() {\r\n    while (true) {\r\n        let {\r\n            payload: { q },\r\n        } = yield take(GET_CODE);\r\n        console.log(\"this is q in handleGetCodeSaga:\", q);\r\n        const auth = localStorage[\"access_token\"];\r\n        yield put(closeModal());\r\n        yield put(setError(null));\r\n        yield put(setProgress(false));\r\n        yield put(setLocation.setLocation(null));\r\n        q = q.split(\"/\")[1].trim();\r\n        if (q === \"code\") {\r\n            console.log(\"DAU TIEN:\", q);\r\n            if (auth) {\r\n                setAuth(auth);\r\n                try {\r\n                    const res = yield call(() =>\r\n                        thisAxios(API_LOGIN, POST, \"check-login\")\r\n                    );\r\n                    if (res.data.success) {\r\n                        yield put(loginSuccess(res.data.name));\r\n                        setAuth(auth);\r\n                    }\r\n                } catch (err) {\r\n                    setAuth(null);\r\n                    localStorage.removeItem(\"access_token\");\r\n                    localStorage.removeItem(\"name\");\r\n                    yield put(push(\"/login\"));\r\n                }\r\n            }\r\n            console.log(auth);\r\n            localStorage.removeItem(\"name\");\r\n            yield put(setNameCode(null));\r\n            yield put(setUrl(\"code\"));\r\n\r\n            //! BELOW\r\n            yield put(push(\"/code\"));\r\n        } else if (auth && q !== \"code\") {\r\n            setAuth(auth);\r\n            try {\r\n                const res = yield call(() =>\r\n                    thisAxios(API_LOGIN, POST, \"check-login\")\r\n                );\r\n                if (res.data.success) {\r\n                    yield put(loginSuccess(res.data.name));\r\n                    setAuth(auth);\r\n                }\r\n            } catch (err) {\r\n                setAuth(null);\r\n                localStorage.removeItem(\"access_token\");\r\n                yield put(push(\"/login\"));\r\n            }\r\n\r\n            try {\r\n                console.log(\"auth && q !== code\");\r\n                const res = yield call(() => thisAxios(API, GET, q));\r\n                console.log(\"q:\", q);\r\n                const { html, css, js, name } = res.data.code;\r\n                if (res.data.status && q !== \"code\") {\r\n                    // setHtml(html);\r\n                    // setCss(css);\r\n                    // setJs(js);\r\n                    setLocal(HTML, html);\r\n                    setLocal(CSS, css);\r\n                    setLocal(JS, js);\r\n                    yield put(setCode({ html, css, js, name }));\r\n                    console.log(\"res ne\", res);\r\n                    yield put(setNameCode(name));\r\n                    localStorage.setItem(\"name\", res.data.code.name);\r\n                    // localStorage.setItem('access_token', JSON.stringify(auth));\r\n                    yield put(setUrl(q));\r\n\r\n                    //! RECOMMEND IN THIS BELOW\r\n                    yield put(push(`/${q}`));\r\n                }\r\n            } catch (err) {\r\n                // toast.error(\"You don't have permission to access this page\");\r\n                setAuth(null);\r\n                // localStorage.removeItem(\"access_token\");\r\n                // yield put(push(\"/code\")); // 1\r\n                yield put(push(\"/not-found/error\")); // 2\r\n            }\r\n        } else if (!auth && q !== \"code\") {\r\n            yield put(setUrl(q));\r\n            yield put(push(\"/login\"));\r\n        } else if (q === \"code\") {\r\n            yield put(push(\"/code\"));\r\n        } else {\r\n            console.log(\"FINAl\");\r\n            setAuth(null);\r\n            localStorage.removeItem(\"access_token\");\r\n            yield put(push(\"/login\"));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleRegister(action) {\r\n    yield put(setErrorLogin(null));\r\n    yield put(setProgress(true));\r\n    yield delay(550);\r\n    try {\r\n        const res = yield call(() =>\r\n            thisAxios(API_LOGIN, POST, \"register\", action.payload)\r\n        );\r\n        if (res.data.success) {\r\n            console.log(\"HERE\");\r\n            // yield put(loginSuccess(action.payload.name));\r\n            // localStorage.setItem(\"access_token\", res.data.accessToken);\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            // yield put(push(\"/login\"));\r\n            yield put(setErrorStatus.setErrorStatusRequest(false));\r\n            yield put(setErrorLogin(res.data.message));\r\n            // yield fork(handleGetCode);\r\n            return;\r\n        } else {\r\n            yield put(setProgress(false));\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            yield put(setErrorStatus.setErrorStatusRequest(true));\r\n            console.log(err.response.data);\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            yield put(setErrorLogin(err.response.data.message));\r\n            return;\r\n        }\r\n    }\r\n    yield put(setProgress(false));\r\n}\r\n\r\nfunction* handleLogin(action) {\r\n    yield put(setProgress(true));\r\n    // console.log(\"Saga handleLogin run!\");\r\n    const account = action.payload;\r\n    const url = yield select((state) => state.code.url);\r\n    let res;\r\n    const auth = localStorage[\"access_token\"];\r\n    console.log(\"CHECK LOGIN NEU DA CO AUTH:\", auth);\r\n    if (auth && url === \"code\") {\r\n        setAuth(auth);\r\n        console.log(\"EHE\");\r\n        yield delay(380);\r\n        try {\r\n            const res1 = yield call(() =>\r\n                thisAxios(API_LOGIN, POST, \"check-login\")\r\n            );\r\n            if (res1.data.success) {\r\n                yield put(loginSuccess(res1.data.name));\r\n\r\n                localStorage.removeItem(\"name\");\r\n                yield put(push(\"/code\"));\r\n            }\r\n        } catch (err) {\r\n            setAuth(null);\r\n            localStorage.removeItem(\"access_token\");\r\n            localStorage.removeItem(\"name\");\r\n            yield put(push(\"/login\"));\r\n        }\r\n    } else if (account !== null) {\r\n        yield delay(550);\r\n        try {\r\n            res = yield call(() =>\r\n                thisAxios(API_LOGIN, POST, \"login\", account)\r\n            );\r\n            if (res.data.success) {\r\n                const x = setAuth(res.data.accessToken);\r\n                console.log(\"x:\", x);\r\n                localStorage.setItem(\"access_token\", res.data.accessToken);\r\n                console.log(\"Check 1:\", res.data.accessToken);\r\n                yield put(loginSuccess(res.data.name));\r\n                console.log(\"Line 314 Login successfully and have code in url\");\r\n                if (url !== \"code\") {\r\n                    try {\r\n                        const res1 = yield call(() => thisAxios(API, GET, url));\r\n                        console.log(\"res1\", res1);\r\n                        const { html, css, js, name } = res1.data.code;\r\n                        if (res1.data.status) {\r\n                            console.log(\r\n                                \"Line 321 Login successfully and have code in url\"\r\n                            );\r\n                            setLocal(HTML, html);\r\n                            setLocal(CSS, css);\r\n                            setLocal(JS, js);\r\n                            yield put(setCode({ html, css, js }));\r\n                            yield put(setNameCode(name));\r\n                            localStorage.setItem(\"name\", name);\r\n                            yield put(setProgress(false));\r\n                            yield put(push(`/${url}`));\r\n                        }\r\n                    } catch (err) {\r\n                        yield put(setProgress(false));\r\n                        yield put(push(`/code`));\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                // yield put(setProgress(false));\r\n                // yield put(push(`/${url}`));\r\n            }\r\n        } catch (err) {\r\n            if (err.response.data) {\r\n                console.log(\"Line 346 Error\", err);\r\n                yield put(loginFailed(err.response.data));\r\n                console.log(err.response.data);\r\n\r\n                yield put(setProgress(false));\r\n                return;\r\n            }\r\n            console.log(\"Line 353 Error\", err);\r\n        }\r\n    } else {\r\n        yield delay(370);\r\n        yield put(setProgress(false));\r\n    }\r\n}\r\n\r\nfunction* handleChange() {}\r\n\r\nfunction* handleOpenModal(action) {\r\n    yield delay(150);\r\n    const access = localStorage.getItem(\"access_token\");\r\n    if (!access) {\r\n        yield put(setError(\"Looks like you are not logged in!\"));\r\n        // yield put(openModalSuccess());\r\n        yield delay(3000);\r\n        // yield put(closeModal());\r\n    } else {\r\n        yield put(setError(null));\r\n        // yield put(openModalSuccess());\r\n        // yield fork(handleChange);\r\n    }\r\n    // yield put(openModalSuccess());\r\n}\r\n\r\nfunction* handleUpdate(action) {\r\n    yield put(setProgress(true));\r\n    yield put(setError(null));\r\n    yield delay(300);\r\n    const isAuthenticated = yield select((state) => state.auth.isAuthenticated);\r\n    const name = action.payload;\r\n    console.log(\"name:\", name);\r\n    const url = yield select((state) => state.code.url);\r\n    const html = JSON.parse(getLocal(HTML));\r\n    const css = JSON.parse(getLocal(CSS));\r\n    const js = JSON.parse(getLocal(JS));\r\n    const body = { html, css, js, name };\r\n    if (!html && !css && !js) {\r\n        yield delay(500);\r\n\r\n        yield put(setError(\"Write something before save\"));\r\n        yield put(setProgress(false));\r\n    } else if (isAuthenticated) {\r\n        if (url === \"code\") {\r\n            console.log(\"in here:\", url);\r\n            try {\r\n                const res = yield call(() =>\r\n                    thisAxios(`${API}`, POST, \"create\", body)\r\n                );\r\n                if (res.data.success) {\r\n                    yield delay(300);\r\n                    yield put(setProgress(false));\r\n                    yield put(closeModal());\r\n                    yield put(setNameCode(name));\r\n                    yield put(getProjects());\r\n                    yield put(setUrl(`${res.data.url}`));\r\n                    yield put(push(`/${res.data.url}`));\r\n                }\r\n            } catch (err) {\r\n                if (err.response.data) {\r\n                    yield delay(300);\r\n\r\n                    yield put(setError(err.response.data.message));\r\n                    yield put(setProgress(false));\r\n                    console.log(\"ERROR LA:\", err.response.data);\r\n                    return;\r\n                } else console.log(\"in here:\");\r\n            }\r\n        } else {\r\n            console.log(\"in here:\", url);\r\n            try {\r\n                console.log(\"body is:\", body);\r\n                const name = yield select((state) => state.auth.nameCode);\r\n                const res = yield call(() =>\r\n                    thisAxios(`${API}`, PUT, url, { html, css, js, name })\r\n                );\r\n                if (res.data.success) {\r\n                    yield delay(300);\r\n                    yield put(setProgress(false));\r\n                    yield put(setUrl(url));\r\n                    yield put(closeModal());\r\n                    yield put(getProjects());\r\n                    //! BELOW\r\n                    // yield put(push(`/${url}`));\r\n                }\r\n            } catch (err) {\r\n                if (err.response.data) {\r\n                    console.log(err.response.data);\r\n                    yield put(setError(err.response.data));\r\n                    yield put(setProgress(false));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleDirect() {\r\n    yield put(setNameCode(null));\r\n    yield put(setUrl(\"code\"));\r\n    yield put(push(\"/code\"));\r\n}\r\n\r\nfunction* handleLogout() {\r\n    yield delay(300);\r\n    setAuth(null);\r\n    localStorage.removeItem(\"access_token\");\r\n    // window.FB.logout();\r\n    yield put(logoutSuccess());\r\n    yield put(push(\"/login\"));\r\n}\r\n\r\nfunction* handleGetProjects(action) {\r\n    const auth = localStorage[\"access_token\"];\r\n    yield setAuth(auth);\r\n    if (auth) {\r\n        setAuth(auth);\r\n        try {\r\n            const res = yield call(() =>\r\n                thisAxios(API_LOGIN, POST, \"check-login\")\r\n            );\r\n            if (res.data.success) {\r\n                yield put(loginSuccess(res.data.name));\r\n                let picture;\r\n                if (res.data.picture) {\r\n                    picture = res.data.picture.toString();\r\n                } else picture = null;\r\n                yield put(setPicture.setPictureRequest(picture));\r\n                console.log(\"PICTURE:\", picture);\r\n                setAuth(auth);\r\n            }\r\n            try {\r\n                const res = yield call(() => thisAxios(API, GET, \"projects\"));\r\n                yield put(getProjectsSuccess(res.data.projects));\r\n            } catch (err) {\r\n                setAuth(null);\r\n                localStorage.removeItem(\"access_token\");\r\n                localStorage.removeItem(\"name\");\r\n                yield put(push(\"/login\"));\r\n            }\r\n        } catch (err) {\r\n            setAuth(null);\r\n            localStorage.removeItem(\"access_token\");\r\n            localStorage.removeItem(\"name\");\r\n            yield put(push(\"/login\"));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleChangeName(action) {\r\n    yield put(setError(null));\r\n    yield put(setProgress(true));\r\n    yield delay(300);\r\n    const name = action.payload;\r\n    const url = yield select((state) => state.code.url);\r\n    console.log(name);\r\n    if (!name) {\r\n        yield delay(200);\r\n        yield put(setProgress(false));\r\n        yield put(setError(\"The name you want to update cannot be blank\"));\r\n        return;\r\n    }\r\n\r\n    setAuth(localStorage[\"access_token\"]);\r\n    const res = yield call(() =>\r\n        thisAxios(API, PUT, `change-name/${url}`, { name })\r\n    );\r\n    yield delay(350);\r\n\r\n    yield put(setIsChanging(false));\r\n    yield put(setNameCode(res.data.code.name));\r\n    yield put(setProgress(false));\r\n    yield delay(150);\r\n    yield put(setUrl(url));\r\n    yield put(closeModal());\r\n    yield put(push(`/${url}`));\r\n}\r\n\r\nfunction* handleDelete(action) {\r\n    yield put(setError(null));\r\n    yield put(setProgress(true));\r\n    yield delay(700);\r\n    const url = yield select((state) => state.code.url);\r\n    try {\r\n        const res = yield call(() => thisAxios(API, DELETE, url));\r\n        console.log(\"DELETE:\", res);\r\n        yield put(getProjects());\r\n        yield put(setIsDeleting(false));\r\n        // yield put(deleteProjectSuccess(res.data.project));\r\n        yield put(setProgress(false));\r\n        yield put(setNameCode(null));\r\n        yield put(setUrl(\"code\"));\r\n        yield put(closeModal());\r\n\r\n        // setLocal(HTML, \"\");\r\n        // setLocal(CSS, \"\");\r\n        // setLocal(JS, \"\");\r\n        // delete all data project after delete\r\n        // yield put(\r\n        //     setCode({ html: \"\", css: \"\", js: \"\", nameCode: null, q: \"code\" })\r\n        // );\r\n        // yield put(setUrl(\"code\"));\r\n\r\n        // ! BELOW\r\n        // window.location.href = \"http://localhost:3000/code\";\r\n        yield put(push(\"/code\"));\r\n\r\n        return;\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            // console.log(err.response.data);\r\n            yield put(setError(err.response.data));\r\n            yield put(setProgress(false));\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleGGLogin(action) {\r\n    yield put(setProgress(true));\r\n    yield delay(500);\r\n    const {\r\n        profileObj: { email, name, imageUrl: picture, googleId: gid },\r\n        tokenId: access_token,\r\n    } = action.payload;\r\n    // console.log({ email, name, picture, gid, access_token });\r\n    const x = { email, name, picture, gid, access_token };\r\n    console.log({ x });\r\n    setAuth(access_token);\r\n    try {\r\n        const res = yield call(() =>\r\n            thisAxios(API_LOGIN, POST, \"gg/verify\", { gid })\r\n        );\r\n        if (res.data.success) {\r\n            localStorage.setItem(\"access_token\", res.data.accessToken);\r\n            yield put(ggLogin.ggLoginSuccess(x));\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            yield put(push(\"/code\"));\r\n        } else {\r\n            localStorage.removeItem(\"access_token\");\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            yield put(push(\"/login\"));\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            console.log(err.response.data);\r\n        }\r\n    }\r\n    yield delay(500);\r\n    yield put(setProgress(false));\r\n}\r\n\r\nfunction* handleFBLogin(action) {\r\n    yield put(setProgress(true));\r\n    yield delay(500);\r\n    const {\r\n        id: fid,\r\n        name,\r\n        email,\r\n        picture: {\r\n            data: { url: picture },\r\n        },\r\n    } = action.payload;\r\n\r\n    console.log({ fid, name, email, picture });\r\n    try {\r\n        const body = { fid, name, email: email ? email : \"\", picture };\r\n        const res = yield call(() =>\r\n            thisAxios(API_LOGIN, POST, \"fb/verify\", body)\r\n        );\r\n        if (res.data.success) {\r\n            console.log(\"FB LOGIN SUCCESS\");\r\n            localStorage.setItem(\"access_token\", res.data.accessToken);\r\n            yield put(fbLogin.fbLoginSuccess(body));\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            yield put(push(\"/code\"));\r\n        } else {\r\n            console.log(\"FB LOGIN FAILURE\");\r\n            localStorage.removeItem(\"access_token\");\r\n            yield put(setProgress(false));\r\n            yield put(push(\"/login\"));\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            yield put(setProgress(false));\r\n            console.log(err.response.data);\r\n        }\r\n        yield put(setProgress(false));\r\n    }\r\n    yield put(setProgress(false));\r\n}\r\n\r\nfunction* handleCheckLastPwd(action) {\r\n    yield put(setProgress(true));\r\n    yield delay(500);\r\n    const { email, recentPassword: password } = action.payload;\r\n    console.log({ email, password });\r\n    try {\r\n        const res = yield call(() =>\r\n            thisAxios(API_LOGIN, POST, \"verify/last-pwd\", { email, password })\r\n        );\r\n        if (res.data.success && res.data.accessToken) {\r\n            localStorage.setItem(\"access_token\", res.data.accessToken);\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            yield put(loginSuccess(res.data.name));\r\n            yield put(push(\"/login\"));\r\n        } else {\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            yield put(setErrorStatus.setErrorStatusRequest(false));\r\n            yield put(setErrorLogin(res.data.message));\r\n        }\r\n    } catch (err) {\r\n        yield delay(500);\r\n        yield put(setProgress(false));\r\n        if (err.response.data) {\r\n            console.log(err);\r\n            yield put(setErrorStatus.setErrorStatusRequest(true));\r\n            yield put(setErrorLogin(err.response.data.message));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleRecoverPassword(action) {\r\n    yield put(setProgress(true));\r\n    yield delay(500);\r\n    const { newPassword, confirmPassword, url } = action.payload;\r\n    const body = { newPassword, confirmPassword, url };\r\n    try {\r\n        const res = yield call(() => thisAxios(API_LOGIN, POST, url, body));\r\n        if (res.data.success && res.data.accessToken) {\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            yield put(setErrorStatus.setErrorStatusRequest(false));\r\n            yield put(setErrorLogin(res.data.message));\r\n            yield delay(2900);\r\n            yield put(setProgress(true));\r\n            yield put(direct.directSuccess(5));\r\n            yield delay(5200);\r\n            localStorage.setItem(\"access_token\", res.data.accessToken);\r\n            yield put(loginSuccess(res.data.name));\r\n            yield put(push(\"/login\"));\r\n\r\n            console.log(body);\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            yield delay(500);\r\n            console.log(err.response.data);\r\n            yield put(setProgress(false));\r\n            yield put(setErrorStatus.setErrorStatusRequest(true));\r\n            yield put(setErrorLogin(err.response.data.message));\r\n            yield delay(2900);\r\n            if (err.response.data.redirect) {\r\n                yield put(setProgress(true));\r\n                yield put(direct.directSuccess(5));\r\n                yield delay(5200);\r\n                yield put(setProgress(false));\r\n                yield put(direct.directFailure(false));\r\n                yield put(setErrorLogin(null));\r\n                yield put(push(\"/identify/user\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleVerifyUrl(action) {\r\n    const { url } = action.payload;\r\n    console.log(\"Url after dispatch:\", url);\r\n    yield put(setProgress(true));\r\n    // yield put(\r\n    //     verifyUrlRecover.verifyUrlRecoverSuccess({\r\n    //         isVerify: true,\r\n    //         isWaiting: false,\r\n    //         message: \"We're setting for you! Please wait in a second\",\r\n    //     })\r\n    // );\r\n    yield delay(500);\r\n    try {\r\n        const res = yield call(() =>\r\n            thisAxios(API_LOGIN, POST, `check/${url}`)\r\n        );\r\n        if (res.data.success) {\r\n            yield delay(4000);\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: res.data.message,\r\n                })\r\n            );\r\n            yield put(direct.directSuccess(\"\"));\r\n            yield delay(2900);\r\n            yield put(direct.directFailure(false));\r\n            yield put(direct.directSuccess(5));\r\n            yield delay(5700);\r\n            yield put(setProgress(false));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: false,\r\n                    isWaiting: false,\r\n                    message: \"\",\r\n                })\r\n            );\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data && err.response.data.redirect) {\r\n            yield delay(4000);\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: \"Please wait! We're setting for you...\",\r\n                })\r\n            );\r\n            yield put(direct.directSuccess(\"\"));\r\n            yield delay(4000);\r\n            yield put(direct.directFailure(false));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    // message: err.response.data.message,\r\n                    message:\r\n                        \"This session has expired or it might be used! Auto return in 5 seconds\",\r\n                })\r\n            );\r\n            yield delay(4000);\r\n            yield put(direct.directSuccess(5));\r\n            yield delay(5700);\r\n            yield put(setProgress(false));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: \"\",\r\n                })\r\n            );\r\n            yield put(push(\"/identify/user\"));\r\n        } else {\r\n            yield delay(4000);\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: \"Please wait! We're setting for you...\",\r\n                })\r\n            );\r\n            yield put(direct.directSuccess(\"\"));\r\n            yield delay(4000);\r\n            yield put(direct.directFailure(false));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    // message: err.response.data.message,\r\n                    message:\r\n                        \"This session has expired or it might be used! Auto return in 5 seconds\",\r\n                })\r\n            );\r\n            yield delay(4000);\r\n            yield put(direct.directSuccess(5));\r\n            yield delay(5700);\r\n            yield put(setProgress(false));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: \"\",\r\n                })\r\n            );\r\n            yield put(push(\"/identify/user\"));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleGetProfile(action) {\r\n    const url = action.payload.url;\r\n    const auth = localStorage[\"access_token\"];\r\n    try {\r\n        setAuth(auth);\r\n        const res = yield call(() =>\r\n            thisAxios(API_USER, GET, `profile/${url}}`)\r\n        );\r\n        if (res.data.success) {\r\n            console.log(\"CHECK handleGetPRofile LINE 819\");\r\n\r\n            console.log(res);\r\n            yield delay(2000);\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: res.data.message,\r\n                })\r\n            );\r\n            yield put(direct.directSuccess(\"\"));\r\n            yield delay(2000);\r\n            yield put(direct.directFailure(false));\r\n            yield put(direct.directSuccess(2));\r\n            yield delay(2100);\r\n            yield put(setProgress(false));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: false,\r\n                    isWaiting: false,\r\n                    message: \"\",\r\n                })\r\n            );\r\n            console.log(\"CHECK handleGetPRofile LINE 843\");\r\n\r\n            if (res.data.user.password) {\r\n                res.data.user.password = res.data.user.password.slice(0, 18);\r\n            } else\r\n                res.data.user.password =\r\n                    Math.random() * 1000000000 + res.data.user.objId;\r\n            yield put(updateProfile.updateProfileSuccess(res.data.user));\r\n            return;\r\n        }\r\n    } catch (err) {\r\n        console.log(\"error lan 1\", err);\r\n        yield delay(4000);\r\n        yield put(\r\n            verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                isVerify: true,\r\n                isWaiting: false,\r\n                message: \"Please wait! We're setting for you...\",\r\n            })\r\n        );\r\n        yield put(direct.directSuccess(\"\"));\r\n        yield delay(4000);\r\n        yield put(direct.directFailure(false));\r\n        console.log(\"CHECK handleGetPRofile LINE 859\");\r\n\r\n        yield put(\r\n            verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                isVerify: true,\r\n                isWaiting: false,\r\n                // message: err.response.data.message,\r\n                message: \"Sorry! Looks like something went wrong! Return in 5s\",\r\n            })\r\n        );\r\n        yield delay(4000);\r\n        yield put(direct.directSuccess(5));\r\n        yield delay(5700);\r\n        yield put(setProgress(false));\r\n        yield put(\r\n            verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                isVerify: true,\r\n                isWaiting: false,\r\n                message: \"\",\r\n            })\r\n        );\r\n        console.log(\"Eror lan 2\", err);\r\n    }\r\n    localStorage.setItem(\"access_token\", \"\");\r\n    yield put(loginFailed(\"\"));\r\n    yield put(push(\"/login\"));\r\n}\r\n\r\nfunction* handleUpdateProfile(action) {\r\n    const {\r\n        account: { name, job, country, phone, picture, fid, gid },\r\n        url,\r\n    } = action.payload;\r\n    console.log(\"FID la: \", fid);\r\n    console.log(\"GID la: \", gid);\r\n    const auth = localStorage[\"access_token\"];\r\n    setAuth(auth);\r\n    yield put(setProgress(true));\r\n    yield delay(1500);\r\n    try {\r\n        const res = yield call(() =>\r\n            thisAxios(API_USER, POST, `profile/${url}`, {\r\n                name,\r\n                job,\r\n                picture,\r\n                country,\r\n                phone,\r\n                fid,\r\n                gid,\r\n            })\r\n        );\r\n        if (res.data.success) {\r\n            yield delay(250);\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: res.data.message,\r\n                })\r\n            );\r\n            yield put(direct.directSuccess(\"\"));\r\n            yield delay(2000);\r\n            yield put(direct.directFailure(false));\r\n            yield put(direct.directSuccess(2));\r\n            yield delay(2100);\r\n            yield put(setProgress(false));\r\n            yield put(updateProfile.updateProfileSuccess(res.data.user));\r\n            yield put(loginSuccess(name));\r\n            yield put(setPicture.setPictureRequest(res.data.user.picture));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: false,\r\n                    isWaiting: false,\r\n                    message: \"\",\r\n                })\r\n            );\r\n            yield put(push(`/users/profile/${url}`));\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        yield delay(1500);\r\n        yield put(\r\n            verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                isVerify: true,\r\n                isWaiting: false,\r\n                message: \"Looks like something went wrong...\",\r\n            })\r\n        );\r\n        yield put(direct.directSuccess(\"\"));\r\n        yield delay(1500);\r\n        yield put(direct.directFailure(false));\r\n\r\n        yield put(\r\n            verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                isVerify: true,\r\n                isWaiting: false,\r\n                // message: err.response.data.message,\r\n                message:\r\n                    \"Your name should be long than 5 characters! Auto Return in 5s\",\r\n            })\r\n        );\r\n        yield delay(2000);\r\n        yield put(direct.directSuccess(5));\r\n        yield delay(5200);\r\n        yield put(setProgress(false));\r\n        yield put(\r\n            verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                isVerify: true,\r\n                isWaiting: false,\r\n                message: \"\",\r\n            })\r\n        );\r\n        yield put(push(`/code`));\r\n    }\r\n}\r\n\r\nfunction* handleOpenModalShare(action) {\r\n    const url = action.payload;\r\n    try {\r\n        const res = yield call(() => thisAxios(API, POST, `share/${url}`));\r\n        if (res.data.success) {\r\n            yield delay(2200);\r\n            console.log(\"Res successfully\", res);\r\n            yield put(\r\n                openModalShare.openModalShareSuccess(\r\n                    `${SHARE_CODE}/${res.data.endLink}`\r\n                )\r\n            );\r\n            return;\r\n        }\r\n    } catch (err) {\r\n        yield put(openModalShare.openModalShareFailure());\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* handleGetShareCode(action) {\r\n    yield put(setProgress(true));\r\n    yield delay(1500);\r\n    const id = action.payload;\r\n    try {\r\n        const res = yield call(() => thisAxios(API, POST, `cs/share/${id}`));\r\n        if (res.data.success) {\r\n            const { html, css, js } = res.data.code;\r\n            console.log({ html, css, js });\r\n            yield delay(1500);\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: res.data.message,\r\n                })\r\n            );\r\n            yield put(direct.directSuccess(\"\"));\r\n            yield delay(1000);\r\n            yield put(direct.directFailure(false));\r\n            yield put(direct.directSuccess(2));\r\n            yield delay(2100);\r\n            yield put(setProgress(false));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: false,\r\n                    isWaiting: false,\r\n                    message: \"\",\r\n                })\r\n            );\r\n            setLocal(HTML, html);\r\n            setLocal(CSS, css);\r\n            setLocal(JS, js);\r\n            yield put(setCode({ html, css, js }));\r\n            yield put(getShareCode.getShareCodeSuccess());\r\n\r\n            yield put(push(\"/code\"));\r\n            return;\r\n            // yield put(push(`/users/profile/${url}`));\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            console.log(\"err data\", err);\r\n\r\n            yield delay(1500);\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: err.response.data.message,\r\n                })\r\n            );\r\n            yield put(direct.directSuccess(\"\"));\r\n            yield delay(2000);\r\n            yield put(direct.directFailure(false));\r\n            yield put(direct.directSuccess(2));\r\n            yield delay(2100);\r\n            yield put(setProgress(false));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: false,\r\n                    isWaiting: false,\r\n                    message: \"\",\r\n                })\r\n            );\r\n            yield put(getShareCode.getShareCodeFailure());\r\n            yield put(push(\"/code\"));\r\n            return;\r\n        }\r\n        // else\r\n        console.log(\"err except\", err);\r\n        yield delay(1500);\r\n        yield put(\r\n            verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                isVerify: true,\r\n                isWaiting: false,\r\n                message: err.response.data.message,\r\n            })\r\n        );\r\n        yield put(direct.directSuccess(\"\"));\r\n        yield delay(2000);\r\n        yield put(direct.directFailure(false));\r\n        yield put(direct.directSuccess(2));\r\n        yield delay(2100);\r\n        yield put(setProgress(false));\r\n        yield put(\r\n            verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                isVerify: false,\r\n                isWaiting: false,\r\n                message: \"\",\r\n            })\r\n        );\r\n        yield put(getShareCode.getShareCodeFailure());\r\n        yield put(push(\"/code\"));\r\n        return;\r\n    }\r\n}\r\n\r\nfunction* rootSaga() {\r\n    yield fork(handleGetCode);\r\n    yield takeLatest(\r\n        openModalShare.openModalShareRequest().type,\r\n        handleOpenModalShare\r\n    );\r\n    yield takeLatest(\"CHECK_LOGIN\", handleCheckLogin);\r\n    yield takeLatest(LOGIN, handleLogin);\r\n    yield takeLatest(register.registerRequest().type, handleRegister);\r\n    yield takeLatest(UPDATE_CODE, handleUpdate);\r\n    yield takeLatest(\"DIRECT_TO_CODE\", handleDirect);\r\n    yield takeLatest(\"LOGOUT\", handleLogout);\r\n    yield takeLatest(\"GET_PROJECTS\", handleGetProjects);\r\n    yield takeLatest(\"CHANGE_NAME\", handleChangeName);\r\n    yield takeLatest(\"DELETE_PROJECT\", handleDelete);\r\n    yield takeLatest(ggLogin.ggLoginRequest().type, handleGGLogin);\r\n    yield takeLatest(fbLogin.fbLoginRequest().type, handleFBLogin);\r\n    yield takeLatest(OPEN_MODAL_SUCCESS, handleOpenModal);\r\n    yield takeLatest(\r\n        getShareCode.getShareCodeRequest().type,\r\n        handleGetShareCode\r\n    );\r\n\r\n    yield takeLatest(\r\n        updateProfile.updateProfileRequest().type,\r\n        handleUpdateProfile\r\n    );\r\n\r\n    yield takeLatest(getProfile.getProfileRequest().type, handleGetProfile);\r\n    yield takeLatest(\r\n        verifyUrlRecover.verifyUrlRecoverRequest().type,\r\n        handleVerifyUrl\r\n    );\r\n    yield takeLatest(\r\n        checkLastPwd.checkLastPwdRequest().type,\r\n        handleCheckLastPwd\r\n    );\r\n    yield takeLatest(\r\n        recoverPassword.recoverPasswordRequest().type,\r\n        handleRecoverPassword\r\n    );\r\n}\r\n\r\nexport default rootSaga;\r\n","const GET_CODE = \"GET_CODE\";\r\nconst UPDATE_CODE = \"UPDATE_CODE\";\r\n\r\nexport {\r\n    GET_CODE,\r\n    UPDATE_CODE\r\n}","import { GET_CODE, UPDATE_CODE } from \"../../constant/code\";\r\n\r\nconst initialState = {\r\n    codeData: {\r\n        html: \"\",\r\n        css: \"\",\r\n        js: \"\",\r\n        q: null,\r\n        name: null,\r\n    },\r\n    projects: [],\r\n    isAuthenticated: false,\r\n    error: null,\r\n    url: \"code\",\r\n    isChanging: false,\r\n    isDeleting: false,\r\n};\r\n\r\nconst codeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_CODE: {\r\n            const { html, css, js } = action.payload;\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case \"SET_ERROR\": {\r\n            const error = action.payload;\r\n            return {\r\n                ...state,\r\n                error,\r\n            };\r\n        }\r\n\r\n        case \"SET_CODE\": {\r\n            const { name, html, css, js } = action.payload;\r\n            console.log(\"CATCHED:\", action.payload);\r\n            return {\r\n                ...state,\r\n                codeData: {\r\n                    ...state.codeData,\r\n                    html,\r\n                    css,\r\n                    js,\r\n                    name,\r\n                },\r\n            };\r\n        }\r\n\r\n        case \"GET_PROJECTS\": {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n\r\n        case \"GET_PROJECTS_SUCCESS\": {\r\n            const projects = action.payload;\r\n            return {\r\n                ...state,\r\n                projects: [...projects],\r\n            };\r\n        }\r\n\r\n        case \"SET_URL\": {\r\n            const url = action.payload;\r\n            return {\r\n                ...state,\r\n                url,\r\n            };\r\n        }\r\n\r\n        case \"SET_IS_CHANGING\": {\r\n            const isChanging = action.payload;\r\n            return {\r\n                ...state,\r\n                isChanging,\r\n            };\r\n        }\r\n\r\n        case \"CHANGE_NAME\": {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n\r\n        case \"CHANGE_NAME_SUCCESS\": {\r\n            const name = action.payload;\r\n            return {\r\n                ...state,\r\n                codeData: {\r\n                    ...state.codeData,\r\n                    name,\r\n                },\r\n                isChanging: false,\r\n            };\r\n        }\r\n\r\n        case \"SET_IS_DELETING\": {\r\n            return {\r\n                ...state,\r\n                isDeleting: action.payload,\r\n            };\r\n        }\r\n        // case \"DELETE_PROJECT\": {\r\n        //     return {\r\n        //         ...state,\r\n        //     };\r\n        // }\r\n        case \"DELETE_PROJECT_SUCCESS\": {\r\n            let projects = state.projects.map(project => project._id !== action.payload._id)\r\n            console.log(\"projects:\", projects);\r\n            return {\r\n                ...state,\r\n                projects,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default codeReducer;\r\n","import {\r\n    fbLogin,\r\n    ggLogin,\r\n    setErrorStatus,\r\n    setPicture,\r\n    updateFID,\r\n    updateGID,\r\n    updateUID,\r\n} from \"../../actions/login\";\r\nimport {\r\n    LOGIN,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILED,\r\n    SET_ERROR_LOGIN,\r\n} from \"../../constant/login\";\r\n\r\nconst initialState = {\r\n    account: {\r\n        name: null,\r\n        picture: null,\r\n        uid: null,\r\n    },\r\n    isAuthenticated: false,\r\n    error: null,\r\n    errorStatus: false,\r\n    nameCode: null,\r\n    ggAccountInfo: {\r\n        gid: null,\r\n        email: null,\r\n        picture: null,\r\n        name: null,\r\n        access_token: null,\r\n    },\r\n    fbAccountInfo: {\r\n        fid: null,\r\n        email: null,\r\n        phone: null,\r\n        name: null,\r\n    },\r\n};\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // case \"CHECK_LOGIN\": {\r\n        //     const name = action.payload;\r\n        //     return {\r\n        //         ...state,\r\n        //         account: {\r\n        //             ...state.account,\r\n        //             name,\r\n        //         },\r\n        //         isAuthenticated: true,\r\n        //         error: null,\r\n        //     };\r\n        // }\r\n        case LOGIN_SUCCESS: {\r\n            const name = action.payload;\r\n            return {\r\n                ...state,\r\n                account: {\r\n                    ...state.account,\r\n                    name,\r\n                },\r\n                isAuthenticated: true,\r\n                error: null,\r\n            };\r\n        }\r\n        case setPicture.setPictureRequest().type: {\r\n            return {\r\n                ...state,\r\n                account: {\r\n                    ...state.account,\r\n                    picture: action.payload,\r\n                },\r\n            };\r\n        }\r\n        case LOGIN_FAILED: {\r\n            const err = action.payload;\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                error: err.message,\r\n            };\r\n        }\r\n        case SET_ERROR_LOGIN: {\r\n            const err = action.payload;\r\n            return {\r\n                ...state,\r\n                error: err,\r\n            };\r\n        }\r\n        case \"SET_NAME_CODE\": {\r\n            const nameCode = action.payload;\r\n            console.log(\"Day la nameCode:\", nameCode);\r\n            return {\r\n                ...state,\r\n                nameCode,\r\n            };\r\n        }\r\n        case \"LOGOUT_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                nameCode: null,\r\n                account: {\r\n                    ...state.account,\r\n                    name: null,\r\n                    picture: null,\r\n                    uid: null,\r\n                },\r\n                ggAccountInfo: {\r\n                    gid: null,\r\n                    email: null,\r\n                    picture: null,\r\n                    name: null,\r\n                    access_token: null,\r\n                },\r\n                fbAccountInfo: {\r\n                    fid: null,\r\n                    email: null,\r\n                    phone: null,\r\n                    name: null,\r\n                },\r\n            };\r\n        }\r\n\r\n        case ggLogin.ggLoginSuccess().type: {\r\n            console.log(action.payload, \"ne\");\r\n            return {\r\n                ...state,\r\n                ggAccountInfo: {\r\n                    ...state.ggAccountInfo,\r\n                    ...action.payload,\r\n                },\r\n                account: {\r\n                    ...state.account,\r\n                    name: action.payload.name,\r\n                    picture: action.payload.picture,\r\n                },\r\n                isAuthenticated: true,\r\n                err: null,\r\n            };\r\n        }\r\n\r\n        case fbLogin.fbLoginSuccess().type: {\r\n            console.log(action.payload, \"ne\");\r\n            return {\r\n                ...state,\r\n                ggAccountInfo: {\r\n                    ...state.ggAccountInfo,\r\n                    ...action.payload,\r\n                },\r\n                account: {\r\n                    ...state.account,\r\n                    name: action.payload.name,\r\n                    picture: action.payload.picture,\r\n                },\r\n                fbAccountInfo: {\r\n                    ...state.fbAccountInfo,\r\n                    ...action.payload,\r\n                },\r\n                isAuthenticated: true,\r\n                err: null,\r\n            };\r\n        }\r\n\r\n        case setErrorStatus.setErrorStatusRequest().type: {\r\n            return {\r\n                ...state,\r\n                errorStatus: action.payload,\r\n            };\r\n        }\r\n\r\n        case updateFID.updateFIDRequest().type: {\r\n            return {\r\n                ...state,\r\n                fbAccountInfo: {\r\n                    ...state.fbAccountInfo,\r\n                    fid: action.payload,\r\n                },\r\n            };\r\n        }\r\n\r\n        case updateGID.updateGIDRequest().type: {\r\n            return {\r\n                ...state,\r\n                ggAccountInfo: {\r\n                    ...state.ggAccountInfo,\r\n                    gid: action.payload,\r\n                },\r\n            };\r\n        }\r\n\r\n        case updateUID.updateUIDRequest().type: {\r\n            return {\r\n                ...state,\r\n                account: {\r\n                    ...state.account,\r\n                    uid: action.payload,\r\n                },\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default loginReducer;\r\n","import { OPEN_MODAL, CLOSE_MODAL, OPEN_MODAL_SUCCESS, SET_PROGRESS } from \"../../constant/modal\";\r\n\r\nconst initialState = {\r\n    modalIsOpen: false,\r\n    progress: false,\r\n    isLoading: false,\r\n};\r\n\r\nconst modalReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case OPEN_MODAL: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case OPEN_MODAL_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                modalIsOpen: true,\r\n            }\r\n        }\r\n        case CLOSE_MODAL: {\r\n            return {\r\n                ...state,\r\n                modalIsOpen: false,\r\n            };\r\n        }\r\n\r\n        case SET_PROGRESS: { \r\n            return {\r\n                ...state,\r\n                progress: action.payload\r\n            }\r\n        }\r\n        case \"SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default modalReducer;\r\n","import { openModalShare } from \"../../actions/modalShareCode\";\r\n\r\nconst initialState = {\r\n    modalShareIsOpen: false,\r\n    link: null,\r\n    progress: false,\r\n    isLoading: false,\r\n};\r\n\r\nconst modalShareReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case openModalShare.openModalShareRequest().type: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        }\r\n        case openModalShare.openModalShareSuccess().type: {\r\n            return {\r\n                ...state,\r\n                modalShareIsOpen: true,\r\n                isLoading: false,\r\n                link: action.payload,\r\n            };\r\n        }\r\n        case openModalShare.openModalShareFailure().type: {\r\n            return {\r\n                ...state,\r\n                modalShareIsOpen: false,\r\n                isLoading: false,\r\n                link: null,\r\n            };\r\n        }\r\n\r\n        // case SET_PROGRESS: {\r\n        //     return {\r\n        //         ...state,\r\n        //         progress: action.payload,\r\n        //     };\r\n        // }\r\n        // case \"SET_LOADING\": {\r\n        //     return {\r\n        //         ...state,\r\n        //         isLoading: action.payload,\r\n        //     };\r\n        // }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default modalShareReducer;\r\n","import {\r\n    setListTutorial,\r\n    setLocation,\r\n    setOpen,\r\n    setSidebar,\r\n} from \"../../actions/tutorial\";\r\n\r\nconst initialState = {\r\n    open: false,\r\n    tutorialList: null,\r\n    location: null,\r\n    openSidebar: false,\r\n};\r\n\r\nconst tutorialReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case setOpen.setOpen().type: {\r\n            return {\r\n                ...state,\r\n                open: action.payload,\r\n            };\r\n        }\r\n        case setListTutorial.setListTutorial().type: {\r\n            return {\r\n                ...state,\r\n                tutorialList: action.payload,\r\n            };\r\n        }\r\n        case setLocation.setLocation().type: {\r\n            return {\r\n                ...state,\r\n                location: action.payload,\r\n            };\r\n        }\r\n\r\n        case setSidebar.setSidebar().type: {\r\n            return {\r\n                ...state,\r\n                openSidebar: action.payload,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default tutorialReducer;\r\n","import { direct, verifyUrlRecover } from \"../../actions/direct\";\r\nimport { getProfile, updateProfile } from \"../../actions/profile\";\r\n\r\nconst initialState = {\r\n    time: 0,\r\n    appear: false,\r\n    /** waiting */\r\n    isVerify: true,\r\n    isWaiting: true,\r\n    notify: \"Notify\",\r\n    message: \"\",\r\n};\r\n\r\nconst directReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case direct.directRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case direct.directSuccess().type: {\r\n            return {\r\n                ...state,\r\n                time: action.payload,\r\n                appear: true,\r\n            };\r\n        }\r\n        case direct.directFailure().type: {\r\n            return {\r\n                ...state,\r\n                time: 0,\r\n                appear: action.payload || false,\r\n            };\r\n        }\r\n\r\n        case verifyUrlRecover.verifyUrlRecoverRequest().type: {\r\n            return {\r\n                ...state,\r\n                isVerify: action.payload.isVerify,\r\n                isWaiting: true,\r\n            };\r\n        }\r\n\r\n        case getProfile.getProfileRequest().type: {\r\n            return {\r\n                ...state,\r\n                isVerify: action.payload.isVerify,\r\n                isWaiting: true,\r\n            };\r\n        }\r\n\r\n        case updateProfile.updateProfileRequest().type: {\r\n            return {\r\n                ...state,\r\n                isVerify: action.payload.isVerify,\r\n                isWaiting: true,\r\n            };\r\n        }\r\n\r\n        case verifyUrlRecover.verifyUrlRecoverSuccess().type: {\r\n            return {\r\n                ...state,\r\n                isVerify: action.payload.isVerify,\r\n                isWaiting: action.payload.isWaiting,\r\n                message: action.payload.message,\r\n            };\r\n        }\r\n        case verifyUrlRecover.verifyUrlRecoverFailure().type: {\r\n            return {\r\n                ...state,\r\n                isVerify: action.payload,\r\n                isWaiting: false,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default directReducer;\r\n","import { updateProfile } from \"../../actions/profile\";\r\n\r\nconst initialState = {\r\n    profile: {\r\n        email: \"\",\r\n        name: \"\",\r\n        picture: \"\",\r\n        password: \"\",\r\n        country: \"\",\r\n        phone: \"\",\r\n        job: \"\",\r\n    },\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case updateProfile.updateProfileRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case updateProfile.updateProfileSuccess().type: {\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    ...action.payload,\r\n                },\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default profileReducer;\r\n","import { getShareCode } from \"../../actions/getShareCode\";\r\nimport { openModalShare } from \"../../actions/modalShareCode\";\r\n\r\nconst initialState = {\r\n    // modalShareIsOpen: false,\r\n    isLoading: true,\r\n};\r\n\r\nconst getShareCodeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case getShareCode.getShareCodeRequest().type: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        }\r\n        case getShareCode.getShareCodeSuccess().type: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            };\r\n        }\r\n        case getShareCode.getShareCodeFailure().type: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default getShareCodeReducer;\r\n","import { setFullScreen, setLargeScreen, setView } from \"../../actions/view\";\r\n\r\nconst initialState = {\r\n    status: false,\r\n    fullScreen: false,\r\n    largeScreen: false,\r\n};\r\n\r\nconst viewReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case setView.setViewRequest().type: {\r\n            return {\r\n                ...state,\r\n                status: true,\r\n            };\r\n        }\r\n        case setView.setViewSuccess().type: {\r\n            return {\r\n                ...state,\r\n                status: action.payload,\r\n                fullScreen: false,\r\n                largeScreen: false,\r\n            };\r\n        }\r\n        case setView.setViewFailure().type: {\r\n            return {\r\n                ...state,\r\n                status: false,\r\n            };\r\n        }\r\n\r\n        case setFullScreen.setFullScreenRequest().type: {\r\n            return {\r\n                ...state,\r\n                status: true,\r\n                fullScreen: true,\r\n            };\r\n        }\r\n        case setFullScreen.setFullScreenSuccess().type: {\r\n            return {\r\n                ...state,\r\n                status: false,\r\n                fullScreen: true,\r\n                \r\n                largeScreen: false,\r\n            };\r\n        }\r\n        case setFullScreen.setFullScreenFailure().type: {\r\n            return {\r\n                ...state,\r\n                fullScreen: false,\r\n                status: true,\r\n            };\r\n        }\r\n\r\n        case setLargeScreen.setLargeScreenSuccess().type: {\r\n            return {\r\n                ...state,\r\n                status: true,\r\n                largeScreen: action.payload,\r\n                fullScreen: false,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default viewReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../saga/rootSaga\";\r\nimport codeReducer from \"./reducers/codeReducer\";\r\nimport loginReducer from \"./reducers/loginReducer\";\r\nimport modalReducer from \"./reducers/modalReducer\";\r\nimport modalShareReducer from \"./reducers/modalShareReducer\";\r\nimport tutorialReducer from \"./reducers/tutorialReducer\";\r\nimport directReducer from \"./reducers/directReducer\";\r\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\r\nimport { history } from \"../components/App\";\r\nimport profileReducer from \"./reducers/profileReducer\";\r\nimport getShareCodeReducer from \"./reducers/getShareCodeReducer\";\r\nimport viewReducer from \"./reducers/viewReducer\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst reducer = combineReducers({\r\n    code: codeReducer,\r\n    modal: modalReducer,\r\n    auth: loginReducer,\r\n    tutorial: tutorialReducer,\r\n    direct: directReducer,\r\n    profile: profileReducer,\r\n    modalShare: modalShareReducer,\r\n    getShareCode: getShareCodeReducer,\r\n    view: viewReducer,\r\n    router: connectRouter(history),\r\n});\r\n\r\nconst config = () => {\r\n    const store = configureStore({\r\n        reducer,\r\n        middleware: [sagaMiddleware, routerMiddleware(history)],\r\n    });\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\nconst store = config();\r\n\r\nexport default store;\r\n","import { createTheme } from \"@mui/material/styles\";\r\n\r\nconst theme = createTheme({\r\n  color: {\r\n    primary: \"#D32F2F\",\r\n    secondary: \"#00BCD4\",\r\n    error: \"#E64A19\",\r\n    textColor: \"#FFFFFF\",\r\n    defaultTextColor: `#000000`,\r\n    hover: `rgba(0, 0, 0, 0.08)`,\r\n  },\r\n  typoraphy: {\r\n    fontFamily: \"Roboto\",\r\n  },\r\n  shape: {\r\n    borderRadius: 4,\r\n    background: \"#512DA8\",\r\n    color: \"#FFFFFF\",\r\n    borderColor: \"#CCCCCC\",\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { ThemeProvider } from \"@mui/styles\";\nimport theme from \"./common/theme/theme.js\";\nimport { CssBaseline } from \"@mui/material\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { StylesProvider, createGenerateClassName } from \"@mui/styles\";\nconst generateClassName = createGenerateClassName({\n    productionPrefix: \"cApp\",\n    seed: \"ABC\",\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            {/* <StylesProvider generateClassName={generateClassName}> */}\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <App />\n            </ThemeProvider>\n            {/* </StylesProvider> */}\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}