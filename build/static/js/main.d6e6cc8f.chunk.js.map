{"version":3,"sources":["actions/code.js","constant/localStorage.js","common/LocalStorage/setLocal.js","hooks/useLocalStorage.js","components/Code.js","actions/modal.js","constant/modal.js","components/NameProject.js","components/AuthPage/styles.js","actions/login.js","constant/login.js","actions/tutorial.js","contentLibrary/css/GetStarted/example.js","contentLibrary/css/Introduction/styles.js","constant/axios.js","contentLibrary/css/GetStarted/GetStarted.js","contentLibrary/css/Introduction/example.js","contentLibrary/css/Introduction/Introduction.js","contentLibrary/css/Syntax/example.js","contentLibrary/css/Syntax/Syntax.js","contentLibrary/css/Selectors/example.js","contentLibrary/css/Selectors/Selectors.js","contentLibrary/css/HowTo/example.js","contentLibrary/css/HowTo/HowTo.js","contentLibrary/css/Colors/example.js","contentLibrary/css/Colors/Colors.js","contentLibrary/css/Backgrounds/example.js","contentLibrary/css/Backgrounds/Backgrounds.js","contentLibrary/css/Images/example.js","contentLibrary/css/Images/Images.js","contentLibrary/css/Attachment/example.js","contentLibrary/css/Attachment/Attachment.js","contentLibrary/css/Lists/example.js","contentLibrary/css/Lists/Lists.js","contentLibrary/css/Responsive/example.js","contentLibrary/css/Responsive/Responsive.js","contentLibrary/css/Combinators/example.js","contentLibrary/css/Combinators/Combinators.js","common/constants/CSSconstants.js","contentLibrary/html/Introduction/styles.js","components/LineDivider.js","contentLibrary/js/Introduction/styles.js","contentLibrary/js/GetStarted/GetStarted.js","contentLibrary/js/Introduction/example.js","contentLibrary/js/Introduction/Introduction.js","contentLibrary/js/Scripts/example.js","contentLibrary/js/Scripts/Scripts.js","contentLibrary/js/Output/example.js","contentLibrary/js/Output/Output.js","contentLibrary/js/Structure/example.js","contentLibrary/js/Structure/Structure.js","contentLibrary/js/BasicOperator/example.js","contentLibrary/js/BasicOperator/BasicOperator.js","contentLibrary/js/Switch/example.js","contentLibrary/js/Switch/Switch.js","contentLibrary/js/Function/example.js","contentLibrary/js/Function/Function.js","contentLibrary/js/Variables/example.js","contentLibrary/js/Variables/Variables.js","contentLibrary/js/Size/example.js","contentLibrary/js/Size/Size.js","contentLibrary/js/MouseEvent.js/MouseEvent.js","common/constants/JSconstants.js","components/Direct.js","contentLibrary/html/GetStarted/example.js","contentLibrary/html/GetStarted/GetStarted.js","contentLibrary/html/Introduction/example.js","contentLibrary/html/Introduction/Introduction.js","contentLibrary/html/Basic/example.js","contentLibrary/html/Basic/Basic.js","contentLibrary/html/HTMLElements/example.js","contentLibrary/html/HTMLElements/HTMLElements.js","contentLibrary/html/Attributes/example.js","contentLibrary/html/Heading/example.js","contentLibrary/html/Attributes/Attributes.js","contentLibrary/html/Heading/Heading.js","contentLibrary/html/Paragraphs/example.js","contentLibrary/html/Paragraphs/Paragraphs.js","contentLibrary/html/HTML Styles/example.js","contentLibrary/html/HTML Styles/Styles.js","contentLibrary/html/Formatting/example.js","contentLibrary/html/Formatting/Formatting.js","contentLibrary/html/HTMLCSS/example.js","contentLibrary/html/HTMLCSS/HTMLCSS.js","contentLibrary/html/Links/example.js","contentLibrary/html/Links/Links.js","contentLibrary/html/Images/example.js","contentLibrary/html/Images/Images.js","common/constants/HTMLconstants.js","actions/modalShareCode.js","actions/view.js","actions/messenger.js","components/Nav.js","components/AuthPage/Login.js","actions/direct.js","components/AuthPage/DirectHelper.js","components/Loading/Loading.js","components/ModalShare/ModalShare.js","components/MainPage.js","components/NotFound.js","components/Navbar.js","components/Sidebar/styles.js","components/Sidebar/Sidebar.js","pages/tutorials/styles.js","pages/tutorials/Tutorial.js","common/layout/TutorialLayout.js","components/TutorialList.js","components/AuthPage/Register.js","components/AuthPage/ForgotPassword.js","components/AuthPage/RecoveryPassword.js","components/AuthPage/Profile.js/styles.js","actions/profile.js","components/AuthPage/Profile.js/Profile.js","actions/getShareCode.js","components/GetShareCode.js","components/Forum/Text.js","actions/forum.js","components/Forum/AskModal.js","components/Forum/LoginRequire.js","components/Forum/Forum.js","components/Forum/DeleteAnswerModal.js","components/Forum/LikeAnswerStatistic.js","components/Forum/BanAnswerModal.js","components/Forum/Answer.js","components/Forum/UpdateAskModal.js","components/Forum/DeleteThreadModal.js","components/Forum/LikeStatistic.js","components/Forum/BanModal.js","components/Forum/Question.js","components/Forum/ScrollHandler.js","components/Messengers/Chat.js","components/Messengers/ImageModal.js","components/Messengers/BoxMessenger.js","components/App.js","common/axios/axios.js","common/LocalStorage/getLocal.js","saga/rootSaga.js","constant/code.js","redux/reducers/codeReducer.js","redux/reducers/loginReducer.js","redux/reducers/modalReducer.js","redux/reducers/modalShareReducer.js","redux/reducers/tutorialReducer.js","redux/reducers/directReducer.js","redux/reducers/profileReducer.js","redux/reducers/getShareCodeReducer.js","redux/reducers/viewReducer.js","redux/reducers/forumReducer.js","redux/reducers/messengerReducer.js","redux/store.js","common/theme/theme.js","index.js"],"names":["updateCode","name","type","payload","setError","err","setUrl","url","setCode","val","getProjects","setIsChanging","setIsDeleting","JS","setLocal","key","value","localStorage","setItem","JSON","stringify","useLocalStorage","initialValue","FULLKEY","useState","jsonValue","getItem","parse","setValue","useEffect","useStyles","makeStyles","theme","codeBlock","overflowY","height","edit","mapActionsToProps","updateCodeCreator","connect","props","language","displayName","onChange","color","pro","q","open","setOpen","status","useSelector","state","view","classes","className","cs","style","fontWeight","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","autoCloseBrackets","autoCloseTags","autoFormat","autoCorrect","closeModal","setProgress","setCodeCreator","changeNameCreator","setIsChangingCreator","deleteProjectCreator","setIsDeletingCreator","setErrorCreator","closeModalCreator","isAuthenticated","auth","errCode","code","error","progress","modal","nameCode","isChanging","isDeleting","modalIsOpen","handleCloseModal","top","left","transform","position","width","backgroundColor","palette","background","paper","border","boxShadow","shadows","outline","padding","borderRadius","header","textColor","spacing","display","alignItems","justifyContent","title","content","textField","textFieldOld","minWidth","box","margin","typography1","fontSize","typography2","textTransform","typography3","textDecoration","box1","marginLeft","marginTop","box2","cursor","handleClose","Modal","Alert","severity","sx","marginBottom","Tooltip","arrow","placement","TextField","readOnly","id","label","placeholder","disabled","required","e","target","Typography","component","Box","gutterBottom","to","flexDirection","mt","Button","variant","mr","LinearProgress","styles","zIndex","textAlign","flex","background1","background2","alert","btn","login1","link","link1","register","createActions","registerRequest","registerSuccess","registerFailure","login","acc","loginSuccess","setPicture","setPictureRequest","loginFailed","setErrorLogin","setNameCode","checkLogin","ggLogin","ggLoginRequest","ggLoginSuccess","ggLoginFailure","fbLogin","fbLoginRequest","fbLoginSuccess","fbLoginFailure","setErrorStatus","setErrorStatusRequest","checkLastPwd","checkLastPwdRequest","checkLastPwdSuccess","checkLastPwdFailure","recoverPassword","recoverPasswordRequest","recoverPasswordSuccess","recoverPasswordFailure","updateFID","updateFIDRequest","updateGID","updateGIDRequest","updateUID","updateUIDRequest","setObjId","setObjIdRequest","setObjIdSuccess","setObjIdFailure","setAdmin","setAdminRequest","setAdminSuccess","setAdminFailure","setListTutorial","setLocation","setSidebar","setLocationNav","getStarted","structural","exTag1","exTag2","exTag3","exTag4","exTag5","exTag6","exTag7","exTag8","exTag9","exTag10","exTag11","exTag12","dividerB","dividerS","GET","POST","CODES_ONLINE","CODE","SHARE_CODE","API","API_LOGIN","API_USER","API_FORUM","API_GG","withStyles","ex","Divider","src","alt","href","text","showLineNumbers","googlecode","wrapLines","CSS_TUTORIALS","path","exact","size","JS_TUTORIALS","Output","Direct","dispatch","useDispatch","prevUrl","l","window","location","toString","list","HTML_TUTORIALS","concat","map","x","filter","lesson","indexOf","slice","lastIndexOf","i","findIndex","prevPage","nextUrl","length","nextPage","persist","push","handlePrevPage","handleNextPage","introduction","openModalShare","openModalShareRequest","openModalShareSuccess","openModalShareFailure","setView","setViewRequest","setViewSuccess","setViewFailure","setFullScreen","setFullScreenRequest","setFullScreenSuccess","setFullScreenFailure","setLargeScreen","setLargeScreenRequest","setLargeScreenSuccess","setLargeScreenFailure","setMessage","setMessageRequest","setMessageSuccess","setMessageFailure","setMess","setMessRequest","setMessSuccess","setMessFailure","setAllMess","setAllMessRequest","setAllMessSuccess","setAllMessFailure","setId","setIdRequest","setIdSuccess","setIdFailure","setCurrentObj","setCurrentObjRequest","setCurrentObjSuccess","setCurrentObjFailure","setFriends","setFriendsRequest","setFriendsSuccess","setFriendsFailure","setDisplay","setDisplayRequest","setDisplaySuccess","setDisplayFailure","setImageWillBeShow","setImageWillBeShowRequest","setImageWillBeShowSuccess","setImageWillBeShowFailure","setUpdateSeen","setUpdateSeenRequest","setUpdateSeenSuccess","setUpdateSeenFailure","openMessenger","openMessengerRequest","openMessengerSuccess","openMessengerFailure","setViewMessenger","setViewMessengerRequest","setViewMessengerSuccess","setViewMessengerFailure","openModalSuccessCreator","directToCodeCreator","logoutCreator","getProjectsCreator","account","projects","socketRef","locationForNav","displaySave","React","openSidebar","tutorial","picture","fullScreen","largeScreen","mess","messenger","handleSave","preventDefault","objId","projectsFiltered","setProjectsFiltered","keySearch","setKeySearch","reverse","toLowerCase","onSearch","handleCountNotify","m","objIds","includes","seen","IconButton","edge","aria-label","setTimeout","handleToggleSidebar","fontFamily","visibility","data-toggle","data-target","aria-controls","aria-expanded","marginRight","role","aria-haspopup","whiteSpace","overflow","textOverflow","maxWidth","maxHeight","overflowX","newProject","borderRight","project","_id","paddingRight","alignSelf","heigh","clientId","render","renderProps","current","emit","removeItem","handleLogout","onLogoutSuccess","res","paddingBottom","loginCreator","setProgressCreator","setErrorLoginCreator","checkLoginCreator","withConnect","compose","email","password","setAccount","Card","CardContent","action","fullWidth","buttonText","onSuccess","onFailure","cookiePolicy","appId","autoLoad","fields","cssClass","callback","direct","directRequest","directSuccess","directFailure","verifyUrlRecover","verifyUrlRecoverRequest","verifyUrlRecoverSuccess","verifyUrlRecoverFailure","DirectHelper","time","timeRun","setTimeRun","CircularProgress","disableShrink","bottom","right","Loading","isWaiting","appear","message","data-text","textRef","useRef","modalShareIsOpen","modalShare","isLoading","inputRef","navigator","clipboard","writeText","_wrapperState","them","codeContainer","transitionTimingFunction","transition","opacity","topPane","float","animation","fullHeight","minHeight","getCodeCreator","openModalCreator","codeData","errLogin","match","useStyles2","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","isLoad","classes2","timeout","clearTimeout","alertUser","returnValue","addEventListener","removeEventListener","sandbox","frameBorder","NotFound","flexGrow","AppBar","Toolbar","objStyleLinkActive","objStyleLink","drawerPaper","backgroundPosition","backgroundRepeat","backgroundSize","boxSizing","onToggleSidebar","showSidebar","tutorialList","defTutorials","Drawer","onClose","tutorialListRender","List","ListItem","renderList","container","transitions","create","easing","sharp","duration","enteringScreen","turnLeft","easeOut","leavingScreen","children","routerProps","cn","TutorialLayout","Component","rest","Transition","ref","Slide","direction","TutorialList","handleCloseDialog","Dialog","TransitionComponent","ml","autoFocus","button","confirmPassword","errorStatus","jsx","recentPassword","handleCheckLastPwd","loginFailedCreator","newPassword","isVerify","handleRecoverPassword","contain","imageBox","labelImage","cardProfile","borderBottom","profile","avatar","field","textInfo","getProfile","getProfileRequest","getProfileSuccess","getProfileFailure","updateProfile","updateProfileRequest","updateProfileSuccess","updateProfileFailure","fid","fbAccountInfo","gid","ggAccountInfo","uid","Number","Grid","item","xs","sm","CardHeader","htmlFor","CardMedia","image","file","reader","FileReader","readAsDataURL","onloadend","result","previewFile","files","InputProps","country","phone","job","mb","getShareCode","getShareCodeRequest","getShareCodeSuccess","getShareCodeFailure","GetShareCode","params","textEdit","borderTop","paddingTop","yourAnswer","Text","setText","ClassicEditor","event","getData","setOpenAskModal","setOpenAskModalRequest","setOpenAskModalSuccess","setOpenAskModalFailure","createThread","createThreadRequest","createThreadSuccess","createThreadFailure","updateThread","updateThreadRequest","updateThreadSuccess","updateThreadFailure","getThreads","getThreadsRequest","getThreadsSuccess","getThreadsFailure","setNotify","setNotifyRequest","setNotifySuccess","setNotifyFailure","setLoadingForum","setLoadingForumRequest","setLoadingForumSuccess","setLoadingForumFailure","setQuestionLoadingForum","setQuestionLoadingForumRequest","setQuestionLoadingForumSuccess","setQuestionLoadingForumFailure","setQuestion","setQuestionRequest","setQuestionSuccess","setQuestionFailure","createAnswer","createAnswerRequest","createAnswerSuccess","createAnswerFailure","setCircleProgress","setCircleProgressRequest","setCircleProgressSuccess","setCircleProgressFailure","updateAnswer","updateAnswerRequest","updateAnswerSuccess","updateAnswerFailure","deleteAnswer","deleteAnswerRequest","deleteAnswerSuccess","deleteAnswerFailure","openModalDeleteAnswer","openModalDeleteAnswerRequest","openModalDeleteAnswerSuccess","openModalDeleteAnswerFailure","setDeleteSuccess","setDeleteSuccessSuccess","deleteThread","deleteThreadRequest","deleteThreadSuccess","deleteThreadFailure","openDeleteThreadModal","openDeleteThreadModalRequest","openDeleteThreadModalSuccess","openDeleteThreadModalFailure","setViewThread","setViewThreadRequest","setViewThreadSuccess","setViewThreadFailure","like","likeRequest","likeSuccess","likeFailure","dislike","dislikeRequest","dislikeSuccess","dislikeFailure","likeAnswer","likeAnswerRequest","likeAnswerSuccess","likeAnswerFailure","dislikeAnswer","dislikeAnswerRequest","dislikeAnswerSuccess","dislikeAnswerFailure","setThread","setThreadRequest","setThreadSuccess","setThreadFailure","ban","banRequest","banSuccess","banFailure","unban","unbanRequest","unbanSuccess","unbanFailure","setBan","setBanRequest","setBanSuccess","setBanFailure","setBanModal","setBanModalRequest","setBanModalSuccess","setBanModalFailure","setBanAnswerModal","setBanAnswerModalRequest","setBanAnswerModalSuccess","setBanAnswerModalFailure","setUnbanModal","setUnbanModalRequest","setUnbanModalSuccess","setUnbanModalFailure","textEditorContain","notify","directInAskModal","bgcolor","p","AskModal","forum","isCircleProgress","setTitle","dp","aria-labelledby","aria-describedby","borderLeft","TransitionsModal","handleOpen","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","in","Forum","threads","openSearch","setOpenSearch","forumContainer","threadList","mainContainer","thread","threadTitle","WebkitLineClamp","lineClamp","WebkitBoxOrient","wordBreak","previewContent","replies","views","threadLeft","threadRight","userImage","userPostInfo","textSpanCollapse","viewInfo","userInfoPreview","waitingByCircle","groupInput","inputSearch","spanNavigate","userInfoInSmallDevice","imgSmallDevice","usernameSmallDevice","threadArray","setThreadArray","page","search","setSearch","start","end","openLoginRequire","setOpenLoginRequire","handleOpenLoginRequire","statusFilter","setStatusFilter","toUpperCase","backgroundLoading","user","moment","createdAt","tz","format","replace","navigate","handleCloseDeleteModal","handleDeleteAnswer","currentAnswer","isBanned","deleteSuccess","deleteAnswerModal","boxStatistic","cardStatistic","more","iconButton","LikeAnswerStatistic","likes","dislikes","viewStatus","setViewStatus","answer","arrDisplay","setArrDisplay","people","answerId","questionId","Avatar","media","subheader","updatedAt","moreInQuestion","questionHeader","banModal","handleCloseBanModal","handleOpenBanModal","questionContainer","userInfo","cardQuestion","cardActions","questionTitle","questionTitleCollapse","answerContent","navigateBox","linkNavigate","Answer","setCurrentAnswer","isUpdating","setIsUpdating","answers","ChangeToSlug","isAdmin","question","banAnswerModal","answerArray","setAnswerArray","anchorEL","setAnchorEL","useCallback","handleUpdateAnswer","scrollTo","document","documentElement","scrollHeight","behavior","handleCancelUpdate","handleOpenDeleteModal","checkLiked","find","checkDisliked","openLikeQuestionStatistic","setOpenLikeQuestionStatistic","handleOpenLikeQuestionStatistic","handleOpenBanAnswerModal","handleOpenChat","currentTarget","anchorEl","Boolean","MenuItem","CardActions","handleLikeAnswer","handleDislikeAnswer","UpdateAskModal","handleCloseDeleteThreadModal","isOpenDeleteThreadModal","handleOpenDeleteThreadModal","LikeStatistic","checkCondition","textConfig","Question","isQuestionLoading","a","handleOpenModal","answersForThisQuestion","withRouter","element","getElementById","hash","offsetTop","CustomTooltip","styled","popper","tooltipClasses","tooltip","Chat","previewImg","setPreviewImg","chatItem","boxAll","boxChat","backgroundImage","boxChatMessage","sendBox","textArea","lineHeight","boxInput","cardTop","yourMessage","otherMessage","p1","hideChat","objectFit","boxImage","removeImage","imgContainer","boxAllImg","boxMessageImg","flexWrap","messageImg","messageImg1","imgContain2","flexBasis","imgSmall","imgUser","imgUserSeen","friends","currentObj","currentMess","anchorELBoxIcon","setAnchorELBoxIcon","setAnchorELBoxIconOpen","openPicker","setOpenPicker","anchorELTool","setAnchorELTool","hide","setHide","handleCloseBoxIcon","handleCloseTool","messagesEnd","socketIOClient","on","dataGot","scrollToBottom","disconnect","scrollIntoView","clickFocus","sendMessage","trim","msg","currentObjId","pictures","Object","keys","finalMes","y","z","countUnreadMessage","beforeMyObj","ele","myObj","online","stopPropagation","index","tooltipTime","pi","collapse","imgSmallSeen","renderMess","clear","pickerStyle","onEmojiClick","emojiObject","emoji","blocklist","boxMore","onKeyDown","keyCode","shiftKey","onPaste","items","clipboardData","originalEvent","blob","getAsFile","onload","autoComplete","autoCapitalize","spellCheck","disableElevation","closeImageShow","imgShow","ImageModal","imageWillBeShow","openImageModal","searchInput","BoxMessenger","viewMessenger","isOpenMessenger","handleOpenMenu","handleCloseMenu","arrMessage","setArrMessage","searchMessage","setSearchMessage","setCurrentTarget","checkExist","m1","obj","fr","calculateTime","diff","asMinutes","Math","round","asSeconds","asHours","asDays","asMonths","startAdornment","InputAdornment","previewMessage","paddingLeft","require","createHost","origin","allowedMethods","history","createBrowserHistory","onLine","fetch","then","catch","toast","warning","pathname","split","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ForgotPassword","Register","route","setAuth","token","axios","defaults","headers","common","thisAxios","method","endPoint","body","get","post","put","delete","getLocal","handleCheckLogin","handleGetCode","handleRegister","handleLogin","handleUpdate","handleDirect","handleGetProjects","handleChangeName","handleDelete","handleGGLogin","handleFBLogin","handleVerifyUrl","handleGetProfile","handleUpdateProfile","handleOpenModalShare","handleGetShareCode","handleCreateThread","handleGetThreads","handleCreateAnswer","handleUpdateThread","handleDeleteThread","handleSetViewThread","handleLike","handleDislike","handleBan","handleUnban","rootSaga","select","call","success","res1","take","delay","response","accessToken","profileObj","imageUrl","googleId","access_token","tokenId","redirect","random","endLink","answerUpdated","deletedAnswer","updatedThread","deletedThread","deletedAnswers","cancelLike","cancelDislike","fork","takeLatest","initialState","codeReducer","console","log","loginReducer","modalReducer","modalShareReducer","locationNav","tutorialReducer","directReducer","profileReducer","getShareCodeReducer","viewReducer","unbanModal","forumReducer","threadsReverse","answersDescSort","sort","b","messengerReducer","sagaMiddleware","createSagaMiddleware","reducer","combineReducers","router","connectRouter","store","configureStore","middleware","routerMiddleware","run","config","createTheme","primary","secondary","defaultTextColor","hover","typoraphy","shape","borderColor","ReactDOM","StrictMode","ThemeProvider","CssBaseline"],"mappings":"8UAOaA,EAAa,SAACC,GAAD,MAAW,CACjCC,KAAM,cACNC,QAASF,IAQAG,EAAW,SAACC,GAAD,MAAU,CAC9BH,KAAM,YACNC,QAASE,IAGAC,EAAS,SAACC,GAAD,MAAU,CAC5BL,KAAM,UACNC,QAASI,IAGAC,EAAU,SAACC,GAAD,MAAU,CAC7BP,KAAM,WACNC,QAASM,IAQAC,EAAc,iBAAO,CAC9BR,KAAM,eACNC,QAAS,OAkBAQ,EAAgB,SAACF,GAAD,MAAU,CACnCP,KAAM,kBACNC,QAASM,IAaAG,EAAgB,SAACH,GAAD,MAAU,CACnCP,KAAM,kBACNC,QAASM,ICvEAI,EAAK,KCDLC,EAAW,SAACC,EAAKC,GAC1BC,aAAaC,QAAb,UDHgB,SCGhB,OAA+BH,GAAOI,KAAKC,UAAUJ,KCC1C,SAASK,EAAgBN,EAAKO,GAC3C,IAAMC,EFLY,QEKKR,EADkC,EAG/BS,oBAAS,WACjC,IAAMC,EAAYR,aAAaS,QAAQH,GACvC,OAAiB,MAAbE,EAA0BN,KAAKQ,MAAMF,GAEb,oBAAjBH,EACFA,IAEAA,KAV8C,mBAGlDN,EAHkD,KAG3CY,EAH2C,KAmBzD,OALAC,qBAAU,WACRZ,aAAaC,QAAQK,EAASJ,KAAKC,UAAUJ,MAE5C,CAACO,EAASP,IAEN,CAACA,EAAOY,G,4GCPXE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,UAAW,CACPC,UAAU,qBACVC,OAAO,oBAEXC,KAAM,CACFD,OAAO,uBAsETE,EAAoB,CACtBC,kBAAmBtC,GAGRuC,cAAQ,KAAMF,EAAdE,EAlEF,SAACC,GAAW,IAEjBC,EAQAD,EARAC,SACAC,EAOAF,EAPAE,YACA1B,EAMAwB,EANAxB,MACA2B,EAKAH,EALAG,SACAC,EAIAJ,EAJAI,MANgB,GAUhBJ,EAHAK,IAGAL,EAFAF,kBAEAE,EADAM,EAEoBtB,oBAAS,IAXb,mBAWbuB,EAXa,KAWPC,EAXO,KAiBpB,IAAMC,EAASC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,UAC3CI,EAAUvB,IAEhB,OACI,yBACIwB,UAAWC,IAAG,oBAAD,OAAqBR,EAAO,GAAK,aAAjC,eACRM,EAAQjB,MAAgB,IAATW,IAA6B,IAAXE,KAGtC,yBAAKK,UAAU,eAAeE,MAAO,CAAEZ,QAAOa,WAAY,MACrDf,EACD,4BACIxC,KAAK,SACLoD,UAAU,sBACVI,QAAS,WACLV,GAAQ,SAACW,GAAD,OAAeA,OAG3B,kBAAC,IAAD,CACIC,KAAMb,EAAOc,IAAgBC,QAIzC,kBAAC,aAAD,CACIC,eA5BZ,SAAsBC,EAAQC,EAAMjD,GAChC2B,EAAS3B,IA4BDA,MAAOA,EACPsC,UAAWC,IAAG,sBAAD,eACRF,EAAQpB,WAAuB,IAAXgB,IAEzBiB,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAM5B,EACNT,MAAO,WACPsC,aAAa,EACbC,mBAAmB,EACnBC,eAAe,EACfC,YAAY,EACZC,aAAa,SCzEpBC,EAAa,iBAAO,CAC7BzE,KCXgB,cDYhBC,QAAS,OAGAyE,EAAc,SAACnE,GAAD,MAAU,CACjCP,KCfiB,eDgBjBC,QAASM,I,iGE+dP4B,EAAoB,CACtBC,kBAAmBtC,EACnB6E,eAAgBrE,EAChBsE,kBPtcsB,SAACrE,GAAD,MAAU,CAChCP,KAAM,cACNC,QAASM,IOqcTsE,qBAAsBpE,EACtBqE,qBPzbyB,iBAAO,CAChC9E,KAAM,iBACNC,QAAS,OOwbT8E,qBAAsBrE,EACtBsE,gBAAiB9E,EAGjB+E,kBAAmBR,GAMRpC,eA7BS,SAACY,GAAD,gBAGpBiC,gBAAiBjC,EAAMkC,KAAKD,gBAC5BE,QAASnC,EAAMoC,KAAKC,MACpBnF,IAAK8C,EAAMkC,KAAKG,MAChBC,SAAUtC,EAAMuC,MAAMD,UANF,gCAOHtC,EAAMkC,KAAKD,iBAPR,yBAQVjC,EAAMkC,KAAKM,UARD,2BASRxC,EAAMoC,KAAKK,YATH,2BAURzC,EAAMoC,KAAKM,YAVH,IA6BgBxD,EAAzBE,EA9YK,SAACC,GAAW,IAAD,EAEvBsD,EAiBAtD,EAjBAsD,YACAC,EAgBAvD,EAhBAuD,iBACAX,EAeA5C,EAfA4C,gBACA/E,EAcAmC,EAdAnC,IACAoF,EAaAjD,EAbAiD,SACAnD,EAYAE,EAZAF,kBACAgD,EAWA9C,EAXA8C,QAEAK,GASAnD,EAVAqC,eAUArC,EATAmD,UACAC,EAQApD,EARAoD,WACAd,EAOAtC,EAPAsC,kBACAC,EAMAvC,EANAuC,qBACAc,EAKArD,EALAqD,WACAb,EAIAxC,EAJAwC,qBACAC,EAGAzC,EAHAyC,qBACAC,EAEA1C,EAFA0C,gBACAC,EACA3C,EADA2C,kBAmGE9B,EAhGYtB,aAAW,SAACC,GAAD,MAAY,CACrC0D,MAAO,CACHM,IAAMJ,EAAqB,iBAAtB,MACLK,KAAK,MACLC,UAAU,wBACVC,SAAS,WACTC,MAAO,IACPC,gBAAiBrE,EAAMsE,QAAQC,WAAWC,MAC1CC,OAAO,+BACPC,UAAW1E,EAAM2E,QAAQ,GAEzBC,QAAQ,OACRC,QAAS,EACTC,aAAa,UACb,2BAA4B,CACxBV,MAAM,kBAEV,4BAA6B,CAEzBJ,IAAI,kBAER,4BAA6B,CAEzBA,IAAI,kBAER,gEAAiE,CAE7DA,IAAI,mBAGZe,OAAQ,CACJV,gBAAiBrE,EAAMY,MAAMoE,UAC7BpE,MAAOZ,EAAMY,MAAMoE,UACnBH,QAAS7E,EAAMiF,QAAQ,GACvBC,QAAS,OACTC,WAAY,SACZC,eAAgB,iBAEpBC,MAAO,CACHzE,MAAOZ,EAAMY,MAAMoE,UACnBvD,WAAY,IAEZ2C,MAAM,QAEVkB,QAAS,CACLT,QAAS7E,EAAMiF,QAAQ,IAE3BM,UAAW,CACPnB,MAAM,QAEVoB,aAAc,CACVN,QAAQ,QACRO,SAAS,QAGbC,IAAK,CACDC,OAAO,iBAEXC,YAAa,CACTD,OAAO,cACPE,SAAS,SACTjF,MAAOZ,EAAMY,MAAM4C,OAEvBC,SAAU,CACN7C,MAAO,WAEXkF,YAAa,CACTC,cAAc,OACd3B,MAAM,cACNxD,MAAM,UACNa,WAAW,OACXoE,SAAS,mBAEbG,YAAa,CACTD,cAAc,OACd3B,MAAM,cACNxD,MAAM,UACNiF,SAAS,kBACTI,eAAe,OACf,cAAe,CACXrF,MAAM,YAGdsF,KAAM,CACFC,WAAW,MACXC,UAAU,MAEdC,KAAM,CACFD,UAAU,KACVD,WAAW,OAEfvE,KAAM,CACFwE,UAAW,EACXE,OAAO,cAGCxG,GArHW,EA4KDN,mBAAS,IA5KR,mBA4KpBR,EA5KoB,KA4KbY,EA5Ka,KA8K3BC,qBAAU,WAEFD,EADA+D,GAAYC,EACH,GACFD,GAEK,MAGjB,CAACC,EAAYD,IAEhB,IAiBM4C,EAAc,WAChBrD,EAAgB,MAChBH,GAAqB,GACrBE,GAAqB,GACrBE,IAEIvD,EADA+D,IAAaC,EACJD,EACG,IAChBI,KAGJ,OACI,kBAACyC,EAAA,EAAD,CAAOzF,KAAM+C,GACT,yBAAKxC,UAAWD,EAAQqC,OACpB,yBACIlC,MAAO,CACH0D,QAAQ,OAERL,QAAS,EACTc,OAAQ,IAIZ,kBAACc,EAAA,EAAD,CACI7E,MAAM,EACN8E,SAAS,UACTC,GAAI,CACAvC,MAAM,OACNc,QAAQ,UAGZ,yBACI1D,MAAO,CACH0D,QAAQ,OACRE,eAAe,kBAGnB,uBACI5D,MAAO,CACHC,WAAW,MACXoE,SAAS,OACTe,aAAa,QAGf/C,EAAgC,SAAnB,kBAEnB,kBAAC,IAAD,CACIvC,UAAWD,EAAQO,KACnBF,QAAS,kBAAM6E,UAK/B,yBAAKjF,UAAWD,EAAQ0D,OAAQvD,MAAO,CAAE4E,UAAU,QAC/C,0BAAM9E,UAAWD,EAAQgE,OACpBzB,GAAcD,GACX,kBAACkD,EAAA,EAAD,CACIC,OAAK,EACLzB,MAAO,wBACP0B,UAAsB,OAEtB,kBAACC,EAAA,GAAD,GACIC,UAAU,EACVC,GAAG,oBACHC,MAAO,uBACPC,YAAY,qBAJhB,4BAKgB,qBALhB,0BAMe/F,EAAQkE,WANvB,sBAOW5B,GAPX,mBAQQ,CAAEiD,aAAa,SARvB,KAYR,kBAACC,EAAA,EAAD,CACIC,OAAK,EACLzB,MACI1B,GAAYP,IAAoBQ,EAC1B,gCACCD,IACDP,GACCQ,EAEDD,GAAYP,GAAmBQ,EAC/B,6BACA,yCAHA,eAKVmD,UAAsB,OAEtB,kBAACC,EAAA,EAAD,CACIK,UAAUjE,EACVkE,UAAQ,EACRL,YACItD,GAAaC,GAEjBsD,GAAG,oBACHC,MACKxD,IAAYP,GAAoBQ,EAE3BA,EACA,mCACA,oBAHA,+BAKVwD,YAAY,oBACZ9F,UAAWD,EAAQkE,UACnBvG,MACI2E,IAAaC,EACPD,EACAC,EACA5E,EACA2E,GAEA3E,EAEV2B,SAlIP,SAAC4G,GAClB3H,EAAS2H,EAAEC,OAAOxI,WAhEd,kBAAC,WAAD,KACKsE,GACG,kBAACmE,EAAA,EAAD,CAAYnG,UAAWD,EAAQuE,YAAa8B,UAAU,OAClD,0BAAMlG,MAAO,CAAEmE,OAAO,gBACjBrC,GAAoB,KAIhCK,IAAaL,EACV,kBAACqE,EAAA,EAAD,CAAKrG,UAAWD,EAAQ6E,MACpB,kBAACuB,EAAA,EAAD,CACIC,UAAU,MACVE,cAAY,EACZtG,UAAWD,EAAQyE,aAEjBjC,EAEI,4CADA,qCAId,MACFT,GACE,kBAACuE,EAAA,EAAD,CAAKrG,UAAWD,EAAQgF,MACpB,kBAACoB,EAAA,EAAD,CACIC,UAAU,OACVE,cAAY,EACZtG,UAAWD,EAAQ2E,aAEnB,kBAAC,IAAD,CACIxE,MAAO,CAAEyE,eAAe,QACxB4B,GAAG,UAFP,SAIW,KACH,IACR,0BACIrG,MAAO,CACHZ,MAAM,OACNiF,SAAS,OACTpE,WAAY,MAJpB,mDAsKZ,kBAACkG,EAAA,EAAD,CACIzC,QAAQ,OACR4C,cAAc,cACdC,GAAI,EACJzG,UAAWD,EAAQqE,KAEnB,kBAACiC,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,UACNyG,WAAWjE,IAAmB/E,GAC9BqD,QACKkC,GAAeC,EAEVD,EA9IT,WACrBd,EAAkB9D,IAGD,WACjBgE,KATiB,WACjB1C,EAAkBtB,KAsJI2E,GAAaC,GAAeC,EAExBA,EACA,SACA,SAHA,SAMd,kBAAC8D,EAAA,EAAD,CAAKO,GAAI,GACL,kBAACF,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,QACNc,QAAS,kBAAM6E,MAHnB,YAWP9C,GACG,kBAACkE,EAAA,EAAD,CAAKhB,GAAI,CAAEvC,MAAO,SACd,kBAAC+D,EAAA,EAAD,Y,OC1VTC,EAnIA,SAACpI,GAAD,kBAAY,CACvBuE,YAAU,GACNJ,SAAU,WACVH,IAAI,QACJC,KAAK,MACLC,UAAU,wBACVE,MAAO,OACPjE,OAAO,OACPkI,OAAQ,GACRxD,QAAS,GACTK,QAAQ,OACR4C,cAAc,SACd3C,WAAW,SACXC,eAAe,SACfkD,UAAU,SACVC,KAAK,YAdC,cAeL,0BAA4B,CACzBnC,UAAU,kBAhBR,cAkBL,0BAA4B,CACzBA,UAAU,mBAnBR,cAqBL,0BAA4B,CACzBA,UAAU,mBAtBR,cAwBL,0BAA4B,CACzBA,UAAU,mBAzBR,GA4BVoC,aAAW,GACPrE,SAAU,WACVH,IAAI,MACJC,KAAK,MACLC,UAAU,wBACVE,MAAO,OACPjE,OAAO,OACPkI,OAAQ,GACRxD,QAAS,GACTK,QAAQ,OACR4C,cAAc,SACd3C,WAAW,SACXC,eAAe,SACfkD,UAAU,SACVC,KAAK,YAdE,cAeN,0BAA4B,CACzBnC,UAAU,kBAhBP,cAkBN,0BAA4B,CACzBA,UAAU,mBAnBP,cAqBN,0BAA4B,CACzBA,UAAU,iBACVlB,QAAQ,UAvBL,cAyBN,0BAA4B,CACzBkB,UAAU,mBA1BP,GA6BXqC,aAAW,GACPtE,SAAU,WACVH,IAAI,QACJC,KAAK,MACLC,UAAU,wBACVE,MAAO,QACPjE,OAAO,OACPkI,OAAQ,GACRxD,QAAS,GACTK,QAAQ,OACR4C,cAAc,SACd3C,WAAW,SACXC,eAAe,SACfkD,UAAU,SACVC,KAAK,YAdE,cAeN,0BAA4B,CACzBnC,UAAU,gBACVhC,MAAO,QAjBJ,cAmBN,0BAA4B,CACzBgC,UAAU,gBACVhC,MAAO,QArBJ,cAuBN,0BAA4B,CACzBgC,UAAU,gBACVhC,MAAO,SAzBJ,cA2BN,0BAA4B,CACzBgC,UAAU,iBACVhC,MAAO,SA7BJ,cA+BN,0BAA4B,CACzBgC,UAAU,iBACVhC,MAAO,SAjCJ,cAmCN,0BAA4B,CACzBgC,UAAU,iBACVhC,MAAO,SArCJ,GAwCXsE,OAAK,mBACA,0BAA4B,CACzBtE,MAAM,oBAFT,cAIA,0BAA4B,CACzBA,MAAM,oBALT,cAOA,0BAA4B,CACzBA,MAAM,oBART,GAWLuE,IAAK,CACDvC,UAAW,EACXP,SAAS,QAEb+C,OAAO,aACHxE,MAAM,OACL,0BAA4B,CACzBA,MAAM,oBAGdyE,KAAM,CACF3D,QAAQ,QACRd,MAAM,cACN+B,WAAW,QAEf2C,MAAO,K,oCCpHEC,EAAWC,YAAc,CAClCC,gBAAiB,SAACxK,GAAD,OAASA,GAC1ByK,gBAAiB,SAACzK,GAAD,OAASA,GAC1B0K,gBAAiB,SAAC1K,GAAD,OAASA,KAGjB2K,EAAQ,SAACC,GAAD,MAAU,CAC3BnL,KCfU,QDgBVC,QAASkL,IAGAC,GAAe,eAACrL,EAAD,uDAAQ,KAAR,MAAkB,CAC1CC,KCnBkB,gBDoBlBC,QAASF,IAGAsL,GAAaP,YAAc,CACpCQ,kBAAmB,SAAC/K,GAAD,OAASA,KAGnBgL,GAAc,eAACpL,EAAD,uDAAO,KAAP,MAAiB,CACxCH,KC3BiB,eD4BjBC,QAASE,IAGAqL,GAAgB,SAACrL,GAAD,MAAU,CACnCH,KC/BoB,kBDgCpBC,QAASE,IAGAsL,GAAc,SAAClL,GAAD,MAAU,CACjCP,KAAM,gBACNC,QAASM,IAaAmL,GAAa,iBAAO,CAC7B1L,KAAM,cACNC,QAAS,OAGA0L,GAAUb,YAAc,CACjCc,eAAgB,SAACrL,GAAD,OAASA,GACzBsL,eAAgB,SAACtL,GAAD,OAASA,GACzBuL,eAAgB,SAACvL,GAAD,OAASA,KAGhBwL,GAAUjB,YAAc,CACjCkB,eAAgB,SAACzL,GAAD,OAASA,GACzB0L,eAAgB,SAAC1L,GAAD,OAASA,GACzB2L,eAAgB,SAAC3L,GAAD,OAASA,KAGhB4L,GAAiBrB,YAAc,CACxCsB,sBAAuB,SAAC7L,GAAD,OAASA,KAEvB8L,GAAevB,YAAc,CACtCwB,oBAAqB,SAAC/L,GAAD,OAASA,GAC9BgM,oBAAqB,SAAChM,GAAD,OAASA,GAC9BiM,oBAAqB,SAACjM,GAAD,OAASA,KAGrBkM,GAAkB3B,YAAc,CACzC4B,uBAAwB,SAACnM,GAAD,OAASA,GACjCoM,uBAAwB,SAACpM,GAAD,OAASA,GACjCqM,uBAAwB,SAACrM,GAAD,OAASA,KAGxBsM,GAAY/B,YAAc,CACnCgC,iBAAkB,SAACvM,GAAD,OAASA,KAElBwM,GAAYjC,YAAc,CACnCkC,iBAAkB,SAACzM,GAAD,OAASA,KAElB0M,GAAYnC,YAAc,CACnCoC,iBAAkB,SAAC3M,GAAD,OAASA,KAGlB4M,GAAWrC,YAAc,CAClCsC,gBAAiB,SAAC7M,GAAD,OAASA,GAC1B8M,gBAAiB,SAAC9M,GAAD,OAASA,GAC1B+M,gBAAiB,SAAC/M,GAAD,OAASA,KAGjBgN,GAAWzC,YAAc,CAClC0C,gBAAiB,SAACjN,GAAD,OAASA,GAC1BkN,gBAAiB,SAAClN,GAAD,OAASA,GAC1BmN,gBAAiB,SAACnN,GAAD,OAASA,K,wCEtGjBuC,I,OAAUgI,YAAc,CACjChI,QAAS,SAACvC,GAAD,OAASA,MAGToN,GAAkB7C,YAAc,CACzC6C,gBAAiB,SAACpN,GAAD,OAASA,KAGjBqN,GAAc9C,YAAc,CACrC8C,YAAa,SAACrN,GAAD,OAASA,KAGbsN,GAAa/C,YAAc,CACpC+C,WAAY,SAACtN,GAAD,OAASA,K,IAGKuK,YAAc,CACxCgD,eAAgB,SAACvN,GAAD,OAASA,K,gDCnBd,IACXwN,WAAW,kDACXC,WAAW,2BACXC,OAAO,gCACPC,OAAO,mCACPC,OAAO,2CACPC,OAAO,6BACPC,OAAO,mCACPC,OAAO,mDACPC,OAAO,gFAMPC,OAAO,mFAMPC,OAAO,8DACPC,QAAQ,8CACRC,QAAQ,gDACRC,QAAQ,uC,kBCxBC1E,GAAS,SAACpI,GAAD,MAAY,CAC9B+M,SAAU,CACNnM,MAAM,UACN2D,WAAW,UACXoB,OAAO,QACPxF,OAAO,MACP2E,aAAa,WAEjBkI,SAAU,CACNpM,MAAM,UACN2D,WAAW,UACXoB,OAAO,eACPxF,OAAO,MACP2E,aAAa,aCbRmI,GAAM,MACNC,GAAO,OAIPC,GAAe,iBAUfC,GAAO,kDAOPC,GAAa,sDAUbC,GAAM,+CACNC,GAAY,8CACZC,GAAW,+CACXC,GAAY,+CAMZC,GACT,2EC2NWC,eAAWvF,GAAXuF,EA1PI,SAACnN,GAAW,IAAD,EACShB,mBAAS,QADlB,gCAESA,mBAASoO,GAAE,OAFpB,mBAGlBvM,GAHkB,UAGNb,EAAZa,SAER,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,gBAAb,mBACA,kBAAC,GAAD,MACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAY5B,wBAAIzL,UAAU,mBACV,wBAAIA,UAAU,wBAAd,yCAGA,wBAAIA,UAAU,wBAAd,2FAIA,wBAAIA,UAAU,wBAAd,wFAIA,wBAAIA,UAAU,wBAAd,iDAIJ,yBAAKA,UAAU,cAAf,kBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,uBAAG1L,UAAU,yBAAb,kSAkBA,yBAAKA,UAAU,mBAAf,mjBAWA,yBAAKA,UAAU,cAAf,YACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,uBAAG1L,UAAU,yBAAb,kSAOA,yBACIwM,IAAI,0QACJC,IAAI,KAER,uBACIC,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,cAAf,gBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,SAAf,kJAII,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,sVAWR,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,kmBAiBR,yBAAKA,UAAU,mBAAf,wXASA,yBAAKA,UAAU,0BAAf,8dA+BA,yBAAKA,UAAU,cAAf,4BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,uEAKJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BAAf,kEAKJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BACX,8DAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BACX,+DAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BAAf,kBACmB,yCADnB,uPASJ,yBAAKA,UAAU,cAAf,4BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,6BACI,gGAKJ,6BACI,yIAKJ,yBAAK1L,UAAU,cAAf,+BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,SAAf,mQAMI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,0PAYhB,yBAAKA,UAAU,mBAAf,wQAQA,kBAAC,GAAD,UChQG,IACX2K,WAAW,kDACXC,WAAW,2BACXC,OAAO,gCACPC,OAAO,mCACPC,OAAO,2CACPC,OAAO,6BACPC,OAAO,mCACPC,OAAO,mDACPC,OAAO,gFAMPC,OAAO,mFAMPC,OAAO,8DACPC,QAAQ,8CACRC,QAAQ,gDACRC,QAAQ,uCCwJGa,eAAWvF,GAAXuF,EAtKM,SAACnN,GAAW,IAAD,EACOhB,mBAAS,QADhB,gCAEOA,mBAASoO,GAAE,OAFlB,mBAGpBvM,GAHoB,UAGRb,EAAZa,SAER,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,gBAAb,gBACA,kBAAC,GAAD,MAEA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAY5B,uBAAGzL,UAAU,yBAAb,sOAgBA,yBAAKA,UAAU,mBAAf,mjBAWA,yBACIwM,IAAI,8FACJC,IAAI,KAER,yBAAKzM,UAAU,SAAf,8MAMA,yBAAKA,UAAU,cAAf,oBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,SAAf,gJAII,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,kMAQR,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,6OASR,yBAAKA,UAAU,mBAAf,wXASA,yBAAKA,UAAU,0BAAf,oZA6BA,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,mFAMR,yBAAKA,UAAU,mBAAf,8DACgE,IAC5D,qCAFJ,YAKA,yBACIwM,IAAI,uHACJC,IAAI,GACJ5N,OAAO,QAEX,yBACI2N,IAAI,oFACJC,IAAI,KAER,yBACID,IAAI,iFACJC,IAAI,KAER,yBACID,IAAI,0FACJC,IAAI,KAER,yBACID,IAAI,sFACJC,IAAI,KAER,yBACID,IAAI,kFACJC,IAAI,KAER,kBAAC,GAAD,UC3KG,IACX9B,WAAW,2CAIXC,WAAW,2BACXC,OAAO,gCACPC,OAAO,mCACPC,OAAO,2CACPC,OAAO,6BACPC,OAAO,mCACPC,OAAO,mDACPC,OAAO,gFAMPC,OAAO,mFAMPC,OAAO,8DACPC,QAAQ,8CACRC,QAAQ,gDACRC,QAAQ,uCC+FGa,eAAWvF,GAAXuF,EA/GA,SAACnN,GAAW,IAAD,EACahB,mBAAS,QADtB,gCAEaA,mBAASoO,GAAE,OAFxB,mBAGdvM,GAHc,UAGFb,EAAZa,SAER,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,gBAAb,cACA,kBAAC,GAAD,MACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAW5B,yBAAKzL,UAAU,gBACX,0FAGG,IACP,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,8DAGA,wBAAIA,UAAU,wBAAd,oFAIA,wBAAIA,UAAU,wBAAd,oFAIA,wBAAIA,UAAU,wBAAd,oHAKJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,WACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,cAAf,qBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAW5B,yBAAK1L,UAAU,YACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,4EAEuB,qCAFvB,OAKJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,uDAIJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,gEA2BR,kBAAC,GAAD,UCrHG,IACX2K,WAAW,2CAIXC,WAAW,sEAIXC,OAAO,uEAIPC,OAAO,wEAIPC,OAAO,oEACPC,OAAO,kEAIPC,OAAO,+NAcPC,OAAO,yEAIPC,OAAO,gFAMPC,OAAO,mFAMPC,OAAO,8DACPC,QAAQ,8CACRC,QAAQ,gDACRC,QAAQ,uCC+PGa,eAAWvF,GAAXuF,EA3SG,SAACnN,GAAW,IAAD,EACUhB,mBAAS,QADnB,gCAEUA,mBAASoO,GAAE,OAFrB,mBAGjBvM,GAHiB,UAGLb,EAAZa,SAER,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,gBAAb,iBACA,kBAAC,GAAD,MACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAUjB,IACX,kBAACc,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,gBACX,6FAIG,IACP,yBAAKA,UAAU,cAAf,iBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,gBACX,iHAIG,IACP,yBAAKA,UAAU,mBAAf,qDAGA,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,8DAGA,wBAAIA,UAAU,wBAAd,oFAIA,wBAAIA,UAAU,wBAAd,oFAIA,wBAAIA,UAAU,wBAAd,oHAKJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,WACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,cAAf,4BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAW5B,yBAAK1L,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,WACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,QACX,qGAKJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,4EAEuB,qCAFvB,OAKJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,uDAIJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,+DAyBJ,yBAAKA,UAAU,cAAf,iBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,iBACf,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,WACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IAEb,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,2FAKJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,2GAKJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,4GAKJ,yBAAKA,UAAU,cAAf,0BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,8EAKJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,wGAKJ,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IAEb,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,yFAKJ,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IAEb,yBAAKqB,UAAU,mBACX,yBAAKA,UAAU,0BAAf,yDAIJ,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IAEb,yBAAKqB,UAAU,cAAf,8BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,sEAKJ,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IAEb,yBAAKqB,UAAU,cAAf,6BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,yFAKJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BAAf,iGAKJ,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IACV,IACH,yBAAKqB,UAAU,mBACX,yBAAKA,UAAU,0BAAf,oEAKJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BAAf,6DAGG,IACP,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IACV,KAEP,kBAAC,GAAD,UCjTG,IACXgM,WAAW,0NAYXC,WAAW,uIAQXC,OAAO,+TAqBPC,OAAO,0MASPC,OAAO,sCAGPC,OAAO,2CAGPC,OAAO,wJAQPC,OAAO,wJAQPC,OAAO,gFAMPC,OAAO,mFAMPC,OAAO,8DACPC,QAAQ,8CACRC,QAAQ,gDACRC,QAAQ,uCC4LGa,eAAWvF,GAAXuF,EAzQD,SAACnN,GAAW,IAAD,EACchB,mBAAS,QADvB,gCAEcA,mBAASoO,GAAE,OAFzB,mBAGbvM,GAHa,UAGDb,EAAZa,SAER,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,gBAAb,kBACA,kBAAC,GAAD,MACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAUjB,IACX,kBAACc,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,gBACX,qJAIG,IACP,yBACIwM,IAAI,yQACJC,IAAI,KAER,yBAAKzM,UAAU,cAAf,4BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,gBACX,gFACG,IACP,yBAAKA,UAAU,mBAAf,gBACA,yBAAKA,UAAU,mBAAf,gBACA,yBAAKA,UAAU,mBAAf,cACA,yBAAKA,UAAU,cAAf,gBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,wBAAI1L,UAAU,mBACV,wBAAIA,UAAU,wBAAd,yGAIA,wBAAIA,UAAU,wBAAd,uFAEgC,wCAFhC,uCAMJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,WACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,cACX,yBAAKA,UAAU,0BAAf,wGAKJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,6DAIJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,8CAIJ,yBAAKA,UAAU,cAAf,4BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAW5B,yBAAK1L,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,WACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,QACX,qGAKJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,4EAEuB,qCAFvB,OAKJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,uDAIJ,yBAAKA,UAAU,mBACX,sCADJ,6IAKA,yBAAKA,UAAU,cAAf,gBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,oFAKJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BAAf,2CAC6C,IACzC,yCAFJ,uCAMJ,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IAEb,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,cAAf,cACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,8EAKJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,6HAMJ,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IAEb,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,yIAMJ,yBAAKA,UAAU,cAAf,yBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,2JAMJ,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IAEb,yBAAKqB,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IAEb,yBAAKqB,UAAU,cAAf,mBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,oFAE8B,qCAF9B,gCAMJ,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IACV,IACH,yBAAKqB,UAAU,mBACX,yBAAKA,UAAU,0BAAf,6FAE0C,IACtC,oCAHJ,8BAMJ,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IACV,KAEP,kBAAC,GAAD,UC/QG,GACA,giBADA,GAgBA,oeAhBA,GA6BJ,6eA7BI,GAyCJ,wEAzCI,GA6CJ,oEA7CI,GA8CJ,kEA9CI,GAkDJ,+NAlDI,GAgEJ,yECgNI0N,eAAWvF,GAAXuF,EArQA,SAACnN,GAAW,IACfa,EAAYb,EAAZa,QAER,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,gBAAb,cACA,kBAAC,GAAD,MACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAUjB,IACX,kBAACc,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,gBACX,uHAIG,IACP,yBAAKA,UAAU,cAAf,mBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,gBACX,kGAIG,IACP,yBACIwM,IAAI,qPACJC,IAAI,KAER,yBAAKzM,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,cAAf,wBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,QACX,mFAYJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,YAqBX,yBAAKA,UAAU,cAAf,kBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,QACX,8DAEJ,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IAEb,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,cAAf,0BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,8EAKJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,wGAKJ,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IAEb,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,yFAKJ,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IAEb,yBAAKqB,UAAU,mBACX,yBAAKA,UAAU,0BAAf,yDAIJ,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IAEb,yBAAKqB,UAAU,cAAf,8BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,qBAIJ,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IAEb,yBAAKqB,UAAU,cAAf,6BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,yFAKJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BAAf,iGAKJ,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IACV,IACH,yBAAKqB,UAAU,mBACX,yBAAKA,UAAU,0BAAf,oEAKJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BAAf,6DAGG,IACP,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IACV,KAEP,kBAAC,GAAD,UC3QG,IACXgM,WAAW,wDAGXC,WAAW,ofA4BXC,OAAO,42BA6CPC,OAAO,wEAIPC,OAAO,oEACPC,OAAO,kEAIPC,OAAO,+NAcPC,OAAO,yEAIPC,OAAO,gFAMPC,OAAO,mFAMPC,OAAO,8DACPC,QAAQ,8CACRC,QAAQ,gDACRC,QAAQ,uCCsEGa,eAAWvF,GAAXuF,EAlLK,SAACnN,GAAW,IAAD,EACQhB,mBAAS,QADjB,gCAEQA,mBAASoO,GAAE,OAFnB,mBAGnBvM,GAHmB,UAGPb,EAAZa,SAER,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,gBAAb,mBACA,kBAAC,GAAD,MACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAUjB,IACX,kBAACc,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,gBACX,8GAIG,IACP,yBACIwM,IAAI,qPACJC,IAAI,KAER,yBAAKzM,UAAU,cAAf,wBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,gBACX,2GAIG,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,WACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBAAf,iDAGA,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,mCAGA,wBAAIA,UAAU,wBAAd,gCAGA,wBAAIA,UAAU,wBAAd,uCAGE,IACN,yBAAKA,UAAU,mBAAf,0EAIA,yBAAKA,UAAU,cAAf,kBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAW5B,yBAAK1L,UAAU,mBAAf,2DAGA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,WACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,QACX,qGAKJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cAAf,0BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,6BACI,iLAMJ,yBAAK1L,UAAU,iBACf,yBAAKA,UAAU,SAAf,cACA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,IAEb,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,gOAQJ,yBAAKA,UAAU,cAAf,2BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,+LAOJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,+MAOJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,mKAOR,kBAAC,GAAD,UCxLG,IACX2K,WAAW,uVAiBXC,WAAW,sEAIXC,OAAO,uEAIPC,OAAO,wEAIPC,OAAO,oEACPC,OAAO,kEAIPC,OAAO,+NAcPC,OAAO,yEAIPC,OAAO,gFAMPC,OAAO,mFAMPC,OAAO,8DACPC,QAAQ,8CACRC,QAAQ,gDACRC,QAAQ,uCC4HGa,eAAWvF,GAAXuF,EArLA,SAACnN,GAAW,IAAD,EACahB,mBAAS,QADtB,gCAEaA,mBAASoO,GAAE,OAFxB,mBAGdvM,GAHc,UAGFb,EAAZa,SAER,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,gBAAb,cACA,kBAAC,GAAD,MACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAUjB,IACX,kBAACc,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,gBACX,wHAIG,IACP,yBAAKA,UAAU,gBACX,kGAIG,IACP,yBACIwM,IAAI,qPACJC,IAAI,KAER,uBACIC,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,+BACb6L,KAGT,yBAAK7L,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,WACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,+BACb6L,KAGT,yBAAK7L,UAAU,cAAf,wBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,gBACX,mGAEa,qCAFb,cAIG,IACP,yBAAKA,UAAU,cAAf,yBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,gBACX,4HAKJ,yBAAKA,UAAU,gBACX,qIAeJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,WACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,QACX,qGAKJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,+LAOJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,+MAOJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BAAf,kKA0BJ,yBAAKA,UAAU,cAAf,oCAGA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,gBAAf,+FAIA,yBAAKA,UAAU,cAAf,2BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,+FAMR,kBAAC,GAAD,UC3LG,IACX2K,WAAW,m1EA6CXC,WAAW,sqEA4CXC,OAAO,uEAIPC,OAAO,wEAIPC,OAAO,oEACPC,OAAO,kEAIPC,OAAO,+NAcPC,OAAO,yEAIPC,OAAO,gFAMPC,OAAO,mFAMPC,OAAO,8DACPC,QAAQ,8CACRC,QAAQ,gDACRC,QAAQ,uCC9CGa,eAAWvF,GAAXuF,EA/EI,SAACnN,GAAW,IAAD,EACShB,mBAAS,QADlB,gCAESA,mBAASoO,GAAE,OAFpB,mBAGlBvM,GAHkB,UAGNb,EAAZa,SAER,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,gBAAb,6BACA,kBAAC,GAAD,MACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAUjB,IACX,kBAACc,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,gBACX,gLAKG,IACP,yBAAKA,UAAU,gBACX,kGAIG,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,WACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,+BACb6L,KAGT,yBAAK7L,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,WACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,+BACb6L,KAGT,kBAAC,GAAD,UCrFG,GACA,64BADA,GAsDA,2aAtDA,GA6EJ,wfCoKIQ,eAAWvF,GAAXuF,EAvOD,SAACnN,GAAW,IACda,EAAYb,EAAZa,QAER,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,gBAAb,aACA,kBAAC,GAAD,MACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAUjB,IACX,yBACIe,IAAI,qPACJC,IAAI,KAER,yBAAKzM,UAAU,cAAf,sCACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,QACX,2EAEJ,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,mBACoB,wCADpB,6CAIA,wBAAIA,UAAU,wBAAd,iBACkB,wCADlB,yDAKJ,yBAAKA,UAAU,QACX,qEAEJ,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,qDAGA,wBAAIA,UAAU,wBAAd,uDAGA,wBAAIA,UAAU,wBAAd,wCAGA,wBAAIA,UAAU,wBAAd,kDAIJ,yBAAKA,UAAU,cAAf,+BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,gBACX,oGAKJ,yBAAKA,UAAU,gBACX,oGAKJ,yBACIwM,IAAI,qPACJC,IAAI,KACL,IACH,yBAAKzM,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAaT,yBAAK7L,UAAU,QACX,qGAKJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cAAf,oCAGA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,gBAAf,6EAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,cAAf,kCACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,mBACX,yBAAKA,UAAU,0BAAf,oGAE8C,MAGlD,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BAAf,mLAOJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BAAf,2LAQR,yBAAKA,UAAU,cAAf,2BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,gBAAf,0LAG2D,IACvD,8CAJJ,KAMA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,cAAf,6BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,gBAAf,iHAGI,8CAHJ,KAKA,yBAAKA,UAAU,QACX,mLAMJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BAAf,mHAKJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BAAf,kEAKJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BAAf,0HAKJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,kBAAC,GAAD,UC5OG,IACXgM,WAAW,0gEAsFXC,WAAW,sEAIXC,OAAO,uEAIPC,OAAO,wEAIPC,OAAO,oEACPC,OAAO,kEAIPC,OAAO,+NAcPC,OAAO,yEAIPC,OAAO,gFAMPC,OAAO,mFAMPC,OAAO,8DACPC,QAAQ,8CACRC,QAAQ,gDACRC,QAAQ,uCCtEGa,eAAWvF,GAAXuF,EAxDI,SAACnN,GAAW,IAAD,EACShB,mBAAS,QADlB,gCAESA,mBAASoO,GAAE,OAFpB,mBAGlBvM,GAHkB,UAGNb,EAAZa,SAER,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,gBAAb,wBACA,kBAAC,GAAD,MACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAUjB,IACX,yBAAKzL,UAAU,gBACX,qDAC4B,IACxB,sFAAsE,IAF1E,mCAKG,IACP,yBACIwM,IAAI,qPACJC,IAAI,KAER,yBAAKzM,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,WACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,+BACb6L,KAGT,kBAAC,GAAD,UC9DG,IACXlB,WAAW,6jBA0BXC,WAAW,8rBA8BXC,OAAO,szBAkCPC,OAAO,qgBA2BPC,OAAO,oEACPC,OAAO,kEAIPC,OAAO,+NAcPC,OAAO,yEAIPC,OAAO,gFAMPC,OAAO,mFAMPC,OAAO,8DACPC,QAAQ,8CACRC,QAAQ,gDACRC,QAAQ,uCCwBGa,eAAWvF,GAAXuF,EAzKK,SAACnN,GAAW,IAAD,EACQhB,mBAAS,QADjB,gCAEQA,mBAASoO,GAAE,OAFnB,mBAGnBvM,GAHmB,UAGPb,EAAZa,SAER,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,gBAAb,mBACA,kBAAC,GAAD,MACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAUjB,IACX,yBAAKzL,UAAU,gBACX,+GAIG,IACP,yBAAKA,UAAU,mBAAf,wHAIA,yBAAKA,UAAU,mBAAf,gDAGA,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,+BAGA,wBAAIA,UAAU,wBAAd,yBACA,wBAAIA,UAAU,wBAAd,iCAGA,wBAAIA,UAAU,wBAAd,iCAIJ,yBAAKA,UAAU,cAAf,uBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,mBAAf,6FAIA,yBAAKA,UAAU,mBAAf,oCACsC,IAClC,2DAFJ,cAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,WACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,+BACb6L,KAGT,yBAAK7L,UAAU,cAAf,uBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,mBAAf,yFAIA,yBAAKA,UAAU,mBAAf,oCACsC,IAClC,2EAA2D,IAF/D,YAKA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,WACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,+BACb6L,KAGT,yBAAK7L,UAAU,cAAf,iCACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,mBAAf,+GAIA,yBAAKA,UAAU,mBAAf,qGAGO,IACP,yBAAKA,UAAU,mBAAf,2CAC4C,qCAAqB,IADjE,6CAE8C,uCAAuB,IAFrE,aAKA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,+BACb6L,KAGT,yBAAK7L,UAAU,cAAf,gCACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAAa,IACzC,yBAAK1L,UAAU,mBAAf,oGAIA,yBAAKA,UAAU,mBAAf,oCACsC,IAClC,8EAA8D,IAFlE,aAIO,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,MACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,kBAAC,GAAD,UCjKCoO,GAAgB,CACzB,CACIC,KAAM,8BACNrQ,KAAM,eACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAiBA,KAE5C,CACI8N,KAAM,6BACNrQ,KAAM,cACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAeA,KAE1C,CACI8N,KAAM,4BACNrQ,KAAM,aACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAWA,KAEtC,CACI8N,KAAM,+BACNrQ,KAAM,gBACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAcA,KAEzC,CACI8N,KAAM,4BACNrQ,KAAM,aACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAUA,KAErC,CACI8N,KAAM,4BACNrQ,KAAM,aACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAWA,KAEtC,CACI8N,KAAM,iCACNrQ,KAAM,kBACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAgBA,KAE3C,CACI8N,KAAM,4BACNrQ,KAAM,aACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAWA,KAEtC,CACI8N,KAAM,gCACNrQ,KAAM,iBACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAeA,KAE1C,CACI8N,KAAM,2BACNrQ,KAAM,YACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAUA,KAErC,CACI8N,KAAM,gCACNrQ,KAAM,iBACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAeA,KAE1C,CACI8N,KAAM,iCACNrQ,KAAM,kBACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAgBA,MCrFlC4H,GAAS,SAACpI,GAAD,MAAY,CAC9B+M,SAAU,CACNnM,MAAM,UACN2D,WAAW,UACXoB,OAAO,QACPxF,OAAO,MACP2E,aAAa,WAEjBkI,SAAU,CACNpM,MAAM,UACN2D,WAAW,UACXoB,OAAO,eACPxF,OAAO,MACP2E,aAAa,aCMN6I,eAAWvF,GAAXuF,EAdK,SAAC,GAAuB,IAArBa,EAAoB,EAApBA,KAAMnN,EAAc,EAAdA,QACzB,OACI,kBAAC,WAAD,KACc,QAATmN,EACG,kBAACX,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAE5B,kBAACc,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,eCX/B5E,GAAS,SAACpI,GAAD,MAAY,CAC9B+M,SAAU,CACNnM,MAAM,UACN2D,WAAW,UACXoB,OAAO,QACPxF,OAAO,MACP2E,aAAa,WAEjBkI,SAAU,CACNpM,MAAM,UACN2D,WAAW,UACXoB,OAAO,eACPxF,OAAO,MACP2E,aAAa,aC8EN6I,I,MAAAA,YAAWvF,GAAXuF,EAjFI,WACf,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,eACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,iEAIJ,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,SAAf,uDAIJ,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,SAAf,iCAEJ,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,SAAf,oEAMJ,yBAAKA,UAAU,iBAAf,4BACA,kBAAC,GAAD,CAAakN,KAAK,UAElB,yBAAKlN,UAAU,mBAAf,4DAGA,yBAAKA,UAAU,mBAAf,kIAIA,uBACI0M,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,gBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,2EAKA,yBAAKA,UAAU,mBAAf,4EAKA,yBAAKA,UAAU,mBAAf,mFAIA,yBAAKA,UAAU,iBAAf,yBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,uEAKA,yBAAKA,UAAU,mBAAf,8CAGA,yBAAKA,UAAU,mBAAf,6CAGA,yBAAKA,UAAU,mBAAf,sDAGA,kBAAC,GAAD,WCtFG,GACE,kEADF,GAEA,kECmHAqM,eAAWvF,GAAXuF,EA3GM,WACjB,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,2BACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,gEAIJ,yBAAKA,UAAU,iBAAf,sCAGA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,4DAGA,yBAAKA,UAAU,mBAAf,kIAIA,uBACI0M,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,mBACX,2VASJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBACX,iFAEJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,iBAAf,YACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,sHAKA,yBAAKA,UAAU,mBAAf,obAUA,yBAAKA,UAAU,mBAAf,uLAKA,yBAAKA,UAAU,mBAAf,8RAOA,yBAAKA,UAAU,mBAAf,0KAMA,kBAAC,GAAD,UChHG,GACA,0HADA,GAKA,uXALA,GAqBJ,8GArBI,GAwBJ,uCAxBI,GAyBJ,mFCkNIqM,eAAWvF,GAAXuF,EAhOC,SAACnN,GAAW,IAChBa,EAAYb,EAAZa,QAER,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,gBAAb,WACA,kBAAC,GAAD,MACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAC5B,yBAAKzL,UAAU,4BACX,yBAAKA,UAAU,SAAf,OACQ,0CADR,SAIJ,yBAAKA,UAAU,iBACV,IADL,OAEQ,0CAFR,QAIA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,SAAf,+CACiD,IAC7C,yDAFJ,UAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,mBAAf,oDACsD,IAClD,iEAFJ,6FAMA,yBAAKA,UAAU,iBAAf,mCACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,gGAIA,yBAAKA,UAAU,mBAAf,mGAIA,yBAAKA,UAAU,mBAAf,0EAIA,yBAAKA,UAAU,iBACX,iEAEJ,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,4DAGA,yBAAKA,UAAU,mBAAf,+BACiC,IAC7B,0DAFJ,yCAIO,IACP,yBAAKA,UAAU,iBAAf,iBACkB,yCAElB,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,0DAC4D,IACxD,wCAFJ,6BAIA,yBAAKA,UAAU,mBAAf,8DAEO,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,iBACkB,yCAElB,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,0DAC4D,IACxD,wCAFJ,6BAIA,yBAAKA,UAAU,mBAAf,8DAGA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,uBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBAAf,0FAIA,yBAAKA,UAAU,mBAAf,iDAGA,yBAAKA,UAAU,mBAAf,iGAEoC,0CAFpC,SAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,mBAAf,gDACkD,IAC9C,kDAFJ,iBAIA,yBAAKA,UAAU,mBAAf,gEACkE,IAC9D,0CAFJ,oBAIA,yBAAKA,UAAU,mBAAf,mCACoC,0CADpC,UAGA,yBAAKA,UAAU,iBAAf,kCACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,8BACA,yBAAKA,UAAU,mBAAf,4DAGA,yBAAKA,UAAU,mBAAf,mDAGA,yBAAKA,UAAU,mBAAf,sEAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,iBAAf,uBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,6DAGA,yBAAKA,UAAU,mBAAf,wCAGA,yBAAKA,UAAU,mBAAf,gCACA,yBAAKA,UAAU,mBAAf,oBACA,kBAAC,GAAD,UCtOG,GACA,0HADA,GAKA,uXALA,GAqBJ,8GArBI,GAwBJ,uCAxBI,GAyBJ,mFC6MIqM,eAAWvF,GAAXuF,EA3NC,SAACnN,GAAW,IAChBa,EAAYb,EAAZa,QAER,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,gBAAb,aACA,kBAAC,GAAD,MACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAC5B,yBAAKzL,UAAU,iBACV,IADL,OAEQ,0CAFR,QAIA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,SAAf,+CACiD,IAC7C,yDAFJ,UAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,mBAAf,oDACsD,IAClD,iEAFJ,6FAMA,yBAAKA,UAAU,iBAAf,mCACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,gGAIA,yBAAKA,UAAU,mBAAf,mGAIA,yBAAKA,UAAU,mBAAf,0EAIA,yBAAKA,UAAU,iBACX,iEAEJ,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,4DAGA,yBAAKA,UAAU,mBAAf,+BACiC,IAC7B,0DAFJ,yCAIO,IACP,yBAAKA,UAAU,iBAAf,iBACkB,yCAElB,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,0DAC4D,IACxD,wCAFJ,6BAIA,yBAAKA,UAAU,mBAAf,8DAEO,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,iBACkB,yCAElB,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,0DAC4D,IACxD,wCAFJ,6BAIA,yBAAKA,UAAU,mBAAf,8DAGA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,uBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBAAf,0FAIA,yBAAKA,UAAU,mBAAf,iDAGA,yBAAKA,UAAU,mBAAf,iGAEoC,0CAFpC,SAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,mBAAf,gDACkD,IAC9C,kDAFJ,iBAIA,yBAAKA,UAAU,mBAAf,gEACkE,IAC9D,0CAFJ,oBAIA,yBAAKA,UAAU,mBAAf,mCACoC,0CADpC,UAGA,yBAAKA,UAAU,iBAAf,kCACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,8BACA,yBAAKA,UAAU,mBAAf,4DAGA,yBAAKA,UAAU,mBAAf,mDAGA,yBAAKA,UAAU,mBAAf,sEAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,iBAAf,uBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,6DAGA,yBAAKA,UAAU,mBAAf,wCAGA,yBAAKA,UAAU,mBAAf,gCACA,yBAAKA,UAAU,mBAAf,oBACA,kBAAC,GAAD,UCjOG,GACA,sDADA,GAKJ,sBALI,GAQJ,gDARI,GAWJ,6CAXI,GAaJ,mIAbI,GAiBJ,uHAjBI,GAsBJ,+EAtBI,GA0BJ,8DCqZIqM,eAAWvF,GAAXuF,EAraG,WACd,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,kBACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,wEAKJ,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,mHAIA,wBAAIA,UAAU,wBAAd,wGAIA,wBAAIA,UAAU,wBAAd,wEAGE,IACN,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,cACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,sEAIA,yBAAKA,UAAU,mBAAf,yBACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBACX,sVAQJ,yBAAKA,UAAU,mBACX,2SAQJ,yBAAKA,UAAU,UAhFnB,gLAoFI,yBAAKA,UAAU,iBAAf,0BACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBAAf,8LAKA,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,wDAGA,wBAAIA,UAAU,wBAAd,wHAKA,wBAAIA,UAAU,wBAAd,2JAKA,wBAAIA,UAAU,wBAAd,gKAMJ,yBAAKA,UAAU,cAAf,uCACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAyBjB,yBAAKqB,UAAU,iBAAf,YACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,2IAKA,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,gIAIA,wBAAIA,UAAU,wBAAd,iEAIA,wBAAIA,UAAU,wBAAd,mGAKJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAKjB,yBAAKqB,UAAU,mBAAf,qHAIA,yBAAKA,UAAU,mBAAf,cACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,mBAAf,qGAIA,6BACI,gGAIG,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,iBAAf,gBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,2RAOA,yBAAKA,UAAU,mBAAf,sCAGA,yBAAKA,UAAU,mBAAf,oDAGA,yBAAKA,UAAU,mBAAf,qCAGA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IASP,yBAAKqB,UAAU,mBAAf,qDAGA,6BACI,mVAQG,IACP,yBAAKA,UAAU,mBAAf,+GAmIA,kBAAC,GAAD,UC1aG,GAOJ,sBAPI,GAUJ,6EAVI,GAYJ,+GAZI,GAcJ,yGAdI,GAiBJ,kJAjBI,GAmBJ,sDAnBI,GAqBJ,+DArBI,GAuBJ,+CAvBI,GAwBJ,8CAxBI,GAyBH,uMAzBG,GAmCH,uMAnCG,GA6CH,mFC4fGqM,eAAWvF,GAAXuF,EA/hBO,WAClB,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,kBACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,2BAEJ,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,oHAIA,wBAAIA,UAAU,wBAAd,gJAQE,IAqBN,yBAAKA,UAAU,iBAAf,qEAGA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,gEAGA,yBAAKA,UAAU,mBAAf,oQAMA,yBAAKA,UAAU,mBAAf,qHAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBACX,2HAKJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBACX,mRAQJ,yBAAKA,UAAU,SACV,IADL,uPAOA,yBAAKA,UAAU,iBAAf,SACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,SAAf,gDAGA,yBAAKA,UAAU,mBAAf,4FAIA,yBAAKA,UAAU,mBAAf,mFAIA,yBAAKA,UAAU,mBAAf,eACA,yBAAKA,UAAU,SAAf,iFAIA,yBAAKA,UAAU,SAAf,2EAIA,yBAAKA,UAAU,SAAf,iBACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBAAf,qBACA,yBAAKA,UAAU,mBAAf,kEAGA,yBAAKA,UAAU,mBAAf,yCAGA,yBAAKA,UAAU,mBAAf,iBACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAuBjB,yBAAKqB,UAAU,cAAf,+FAIA,yBAAKA,UAAU,cAAf,4DAGA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAyBjB,yBAAKqB,UAAU,iBAAf,sCAGA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,wFAIA,yBAAKA,UAAU,mBAAf,8CAGA,yBAAKA,UAAU,mBAAf,8EAkBA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAKjB,yBAAKqB,UAAU,mBAAf,kGAIA,yBAAKA,UAAU,mBAAf,gBACA,yBAAKA,UAAU,mBAAf,cACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBAAf,wFAIA,yBAAKA,UAAU,mBAAf,uCAGA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,mBAAf,qKAKA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,6BACI,0NAKG,IACP,6BACI,sMAKG,IACP,yBAAKqB,UAAU,iBAAf,+BACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,0FAIA,yBAAKA,UAAU,mBAAf,wMAMA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,mBAAf,mEAGA,yBAAKA,UAAU,mBAAf,4NAMA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IASP,yBAAKqB,UAAU,mBAAf,mEAGA,6BACI,6MAKG,IACP,yBAAKA,UAAU,mBAAf,8CAGA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IAgIP,kBAAC,GAAD,UCpiBG,GACA,+PADA,GAcJ,mSAdI,GA6BJ,mPA7BI,GAyCJ,+NAzCI,GAoDJ,sUApDI,GAoEJ,sVCmMI0N,eAAWvF,GAAXuF,EA7PA,WACX,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,0BACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,uDAIJ,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,SAAf,+EAyBJ,yBAAKA,UAAU,iBAAf,cACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,mEAGA,yBAAKA,UAAU,mBAAf,uBACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBAAf,qHAIA,yBAAKA,UAAU,mBACX,yKAMJ,yBAAKA,UAAU,mBACX,uLAMJ,yBAAKA,UAAU,mBACX,uGAKJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBACX,2HAKJ,yBAAKA,UAAU,SACV,IADL,6FAKA,yBAAKA,UAAU,SAAf,4FAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,iBAAf,gDAGA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,SAAf,qDAEO,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBAAf,qGAGO,IACP,yBAAKA,UAAU,iBAAf,gCACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,sEAIA,yBAAKA,UAAU,mBAAf,uEAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBAAf,2CAGA,yBAAKA,UAAU,mBAAf,iNAKA,yBAAKA,UAAU,mBAAf,gBACA,yBAAKA,UAAU,mBAAf,iBACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAuBjB,yBAAKqB,UAAU,cAAf,mCACA,yBAAKA,UAAU,cAAf,gCAuBA,yBAAKA,UAAU,mBAAf,oLAmBA,kBAAC,GAAD,UClQG,GACA,yEADA,GAMJ,uFANI,GASJ,6HATI,GAeJ,yRAfI,GAwBJ,2KAxBI,GAgCJ,2WAhCI,GA8CJ,8XA9CI,GA2DJ,+OA3DI,GAiEJ,+WC8QIqM,eAAWvF,GAAXuF,EArUE,WACb,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,aACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,kFAKJ,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,kHAIA,wBAAIA,UAAU,wBAAd,sIAKA,wBAAIA,UAAU,wBAAd,iLASE,IAqBN,yBAAKA,UAAU,iBAAf,wBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,2DAGA,yBAAKA,UAAU,mBAAf,uBACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBACX,yUAQJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBACX,0FAIJ,yBAAKA,UAAU,SAAf,kBACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,eAAf,qGAIA,yBAAKA,UAAU,eAAf,uGAIA,yBAAKA,UAAU,eAAf,kJAKA,yBAAKA,UAAU,iBAAf,mBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,SAAf,+EAIA,yBAAKA,UAAU,mBAAf,gBACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,mBAAf,mBACA,yBAAKA,UAAU,SAAf,iEAGA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,SAAf,iFAIA,yBAAKA,UAAU,SAAf,iBACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBAAf,iEAGA,yBAAKA,UAAU,mBAAf,2LAKA,yBAAKA,UAAU,mBAAf,iBACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAuBjB,yBAAKqB,UAAU,cAAf,oBACA,yBAAKA,UAAU,cAAf,gHAIA,yBAAKA,UAAU,cAAf,+EAIA,yBAAKA,UAAU,cAAf,qNAMA,yBAAKA,UAAU,iBAAf,eACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,6DAGA,yBAAKA,UAAU,mBAAf,yEAkBA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAKjB,yBAAKqB,UAAU,mBAAf,iJAKA,yBAAKA,UAAU,mBAAf,sNAMA,yBAAKA,UAAU,mBAAf,cACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBAAf,sFAIA,yBAAKA,UAAU,mBAAf,kRAOA,yBAAKA,UAAU,mBAAf,oFAIA,yBAAKA,UAAU,mBAAf,sJAKA,yBAAKA,UAAU,mBAAf,kBACA,yBAAKA,UAAU,mBAAf,6GAIA,yBAAKA,UAAU,mBAAf,2GAIA,kBAAC,GAAD,UC1UG,GACA,mGADA,GAMJ,iGANI,GAUJ,uGAVI,GAaJ,iDAbI,GAcJ,0BAdI,GAeJ,qHAfI,GAsBJ,4PAtBI,GAgCJ,sJAhCI,GAoCJ,kCCiSIqM,eAAWvF,GAAXuF,EA3TG,WACd,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,aACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,sGAKJ,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,6FAIA,wBAAIA,UAAU,wBAAd,2FAIA,wBAAIA,UAAU,wBAAd,kDAME,IAqBN,yBAAKA,UAAU,iBAAf,cACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,wHAIA,yBAAKA,UAAU,mBAAf,4DAGA,yBAAKA,UAAU,mBAAf,wGAIA,yBAAKA,UAAU,mBAAf,uBACwB,+CAExB,yBAAKA,UAAU,mBAAf,yEAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBACX,oJAKJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBACX,yHAKJ,yBAAKA,UAAU,SAAf,kBACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,eAAf,uDAEO,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,eAAf,uIAIA,yBAAKA,UAAU,iBAAf,sBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,SAAf,4EAIA,yBAAKA,UAAU,SAAf,0BACA,yBAAKA,UAAU,mBAAf,gBACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,mBAAf,oIAIA,yBAAKA,UAAU,SAAf,sJAKA,yBAAKA,UAAU,iBAAf,wBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,kJAIA,yBAAKA,UAAU,mBAAf,gHAIA,yBAAKA,UAAU,mBAAf,oCAGA,yBAAKA,UAAU,mBAAf,mDAiBA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAKjB,yBAAKqB,UAAU,mBAAf,yEAIA,yBAAKA,UAAU,mBAAf,4EAIA,yBAAKA,UAAU,mBAAf,cACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBAAf,qCAGA,yBAAKA,UAAU,mBAAf,4CAGA,yBAAKA,UAAU,mBAAf,4DAEO,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBAAf,2EAIA,yBAAKA,UAAU,iBAAf,wBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,+IAKA,yBAAKA,UAAU,mBAAf,0OAMA,yBAAKA,UAAU,mBAAf,uUAQA,yBAAKA,UAAU,iBAAf,mBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,SAAf,8DAGA,yBAAKA,UAAU,SAAf,uEAIA,yBAAKA,UAAU,SAAf,4CAEO,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,SAAf,kLAIO,IACP,yBAAKA,UAAU,SAAf,kLAIO,IACP,kBAAC,GAAD,UChUG,GACA,uJADA,GAKJ,mWALI,GAYJ,8IC0NIqM,eAAWvF,GAAXuF,EA5NF,WACT,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,sBACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,+BAEJ,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,8DAGA,wBAAIA,UAAU,wBAAd,yIAKA,wBAAIA,UAAU,wBAAd,uHAE8D,IAF9D,mFASE,IAqBN,yBAAKA,UAAU,iBAAf,8BACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,wGAIA,yBACIA,UAAU,OACVwM,IAAI,uQACJC,IAAI,KAER,yBAAKzM,UAAU,mBAAf,8DAGA,yBAAKA,UAAU,mBACX,iKAMJ,yBAAKA,UAAU,mBACX,iRAQJ,yBAAKA,UAAU,SAAf,yDAGA,yBAAKA,UAAU,SAAf,wGAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,eAAf,6LAKA,yBAAKA,UAAU,eAAf,4MAMA,yBAAKA,UAAU,iBAAf,gCACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,SAAf,kNAMA,yBAAKA,UAAU,SAAf,6OAMA,yBAAKA,UAAU,SAAf,gGAIA,yBAAKA,UAAU,mBAAf,gBACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,mBAAf,2BACA,yBAAKA,UAAU,SAAf,0FAIA,yBAAKA,UAAU,SAAf,6NAOA,yBAAKA,UAAU,SAAf,kKAKA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,KACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,SAAf,mCACA,yBAAKA,UAAU,iBAAf,gDACkD,KAElD,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,oEAGA,yBAAKA,UAAU,mBAAf,8DACgE,IADhE,kCAIA,yBAAKA,UAAU,mBAAf,sEAIA,yBAAKA,UAAU,mBAAf,mKAKA,yBAAKA,UAAU,mBAAf,qIAIA,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,iBAAf,kBACA,kBAAC,GAAD,CAAakN,KAAK,WAEtB,yBAAKlN,UAAU,mBAAf,iFAIA,yBAAKA,UAAU,mBAAf,oGAIA,yBAAKA,UAAU,mBAAf,0LAKA,yBAAKA,UAAU,mBAAf,iJAKA,kBAAC,GAAD,UC9DGqM,eAAWvF,GAAXuF,EAzJI,WACf,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,gBACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,iBAEJ,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,uLAKE,IACN,yBAAKA,UAAU,iBAAf,qBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,iDAGA,yBAAKA,UAAU,mBAAf,qBACA,yBAAKA,UAAU,mBACX,iFAEJ,yBAAKA,UAAU,mBACX,kDAEJ,yBAAKA,UAAU,SAAf,iDAGA,yBAAKA,UAAU,SAAf,aACA,yBAAKA,UAAU,eAAf,yDAGA,yBAAKA,UAAU,eAAf,SACA,yBAAKA,UAAU,eAAf,sGAIA,yBAAKA,UAAU,eAAf,YACA,yBAAKA,UAAU,eAAf,iGAIA,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,eAAf,6MAMA,yBAAKA,UAAU,eAAf,0EAGA,yBAAKA,UAAU,iBAAf,gBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,SAAf,kFAIA,yBAAKA,UAAU,SAAf,2IAKA,yBAAKA,UAAU,SAAf,uKAKA,yBAAKA,UAAU,SAAf,gFAIA,yBAAKA,UAAU,SAAf,yJAKA,yBAAKA,UAAU,SAAf,0GAIA,yBAAKA,UAAU,iBAAf,gBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,qGAIA,yBAAKA,UAAU,mBAAf,4JAKA,yBAAKA,UAAU,mBAAf,8NAMA,yBAAKA,UAAU,mBAAf,4CAGA,yBACIA,UAAU,OACVwM,IAAI,uQACJC,IAAI,KAER,yBAAKzM,UAAU,mBAAf,6JAKA,yBAAKA,UAAU,mBAAf,sNAMA,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,iBAAf,mCAGA,kBAAC,GAAD,CAAakN,KAAK,WAEtB,yBAAKlN,UAAU,mBAAf,uQAOA,yBAAKA,UAAU,mBAAf,yKAKA,yBAAKA,UAAU,mBAAf,uKAKA,yBAAKA,UAAU,mBAAf,0IAKA,kBAAC,GAAD,UCjJCmN,GAAe,CACxB,CACIH,KAAM,6BACNrQ,KAAM,eACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAiBA,KAE5C,CACI8N,KAAM,4BACNrQ,KAAM,cACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAeA,KAE1C,CACI8N,KAAM,wBACNrQ,KAAM,UACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAYA,KAEvC,CACI8N,KAAM,uBACNrQ,KAAM,SACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAACkO,GAAWlO,KAEtC,CACI8N,KAAM,0BACNrQ,KAAM,YACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAcA,KAEzC,CACI8N,KAAM,+BACNrQ,KAAM,iBACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAkBA,KAE7C,CACI8N,KAAM,iCACNrQ,KAAM,mBACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAWA,KAEtC,CACI8N,KAAM,yBACNrQ,KAAM,WACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAaA,KAExC,CACI8N,KAAM,0BACNrQ,KAAM,YACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAcA,KAEzC,CACI8N,KAAM,+BACNrQ,KAAM,mBACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAASA,KAEpC,CACI8N,KAAM,4BACNrQ,KAAM,cACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAeA,M,SCwC/BmO,GA3GA,WAEX,IAAMC,EAAWC,cAkBXC,EAhBW,WACb,IAAMC,EAAIC,OAAOC,SAASjB,KAAKkB,WAKzBC,EAJiBC,GAAeC,OAClChB,GACAI,IAGCa,KAAI,SAACC,GAAD,OAAOA,EAAEjB,QACbkB,QACG,SAACC,GAAD,OACIV,EAAEW,QAAQD,EAAOE,MAAM,EAAGF,EAAOG,YAAY,OAAS,KAE5DC,EAAIV,EAAKW,WAAU,SAACP,GAAD,OAAOR,EAAEW,QAAQH,GAAK,KAE/C,OADYM,EAAI,EAAI,EAAI,KAAOV,EAAKU,EAAI,GAG5BE,GAuBVC,EAhBW,WACb,IAAMjB,EAAIC,OAAOC,SAASjB,KAAKkB,WAKzBC,EAJiBC,GAAeC,OAClChB,GACAI,IAGCa,KAAI,SAACC,GAAD,OAAOA,EAAEjB,QACbkB,QACG,SAACC,GAAD,OACIV,EAAEW,QAAQD,EAAOE,MAAM,EAAGF,EAAOG,YAAY,OAAS,KAE5DC,EAAIV,EAAKW,WAAU,SAACP,GAAD,OAAOR,EAAEW,QAAQH,GAAK,KAE/C,OADYM,EAAI,IAAMV,EAAKc,OAAS,KAAOd,EAAKU,EAAI,GAGxCK,GAMhB,OACI,yBAAK5O,UAAU,wCACX,kBAAC0G,EAAA,EAAD,CACIC,QAAQ,YACRZ,UAAUyH,EACVnI,GAAI,CACAd,SAAS,OACTtB,WAAW,UACXE,OAAQqK,EAAO,gDAIflO,MAAM,UACNa,WAAW,OACX4G,OAAO,iBACP,UAAW,CAAE9D,WAAW,UAAY3D,MAAM,QAC1C+E,OAAO,oBAEX6I,KAAK,SACL9M,QAAS,SAAC6F,GAAD,OA9CE,SAACA,GACpBA,EAAE4I,UACFvB,EAASwB,aAAKtB,IA4CUuB,CAAe9I,IAC/BjG,UAAU,iBAEV,kBAAC,KAAD,CACIqF,GAAI,CAAEd,SAAS,OAASF,OAAO,aAC/BrE,UAAU,cAtBlB,QA0BA,kBAAC0G,EAAA,EAAD,CACIC,QAAQ,YACRZ,UAAU2I,EACVrJ,GAAI,CACAd,SAAS,OACTtB,WAAW,UACXE,OAAQuL,EAAO,gDAIfpP,MAAM,UACNa,WAAW,OACX4G,OAAO,iBACP,UAAW,CAAE9D,WAAW,UAAY3D,MAAM,QAC1C+E,OAAO,oBAEX6I,KAAK,SACL9M,QAAS,SAAC6F,GAAD,OAjDE,SAACA,GACpBA,EAAE4I,UACFvB,EAASwB,aAAKJ,IA+CUM,CAAe/I,IAC/BjG,UAAU,iBAlBd,OAqBI,kBAAC,KAAD,CACIqF,GAAI,CAAEd,SAAS,OAASF,OAAO,aAC/BrE,UAAU,iBC/Gf,I,MACA,qMC6JAqM,eAAWvF,GAAXuF,EApJI,WACf,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,eACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,wDAIJ,yBAAKA,UAAU,MAAf,wCACA,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,oBAAd,6EAIA,wBAAIA,UAAU,oBAAd,qGAIA,wBAAIA,UAAU,mBAAd,8EAIA,wBAAIA,UAAU,mBAAd,mFAKJ,yBAAKA,UAAU,WAAf,6BACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,qBACX,yBAAKA,UAAU,WAAf,uBACA,yBAAKA,UAAU,YAAf,8FAIA,yBAAKA,UAAU,YAAf,yBACA,yBAAKA,UAAU,WAAf,kDAKJ,yBAAKA,UAAU,WAAf,gCACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,cACX,yBAAKA,UAAU,gBACV,IADL,yCAGO,IACP,yBAAKA,UAAU,SAAf,8HAKA,yBAAKA,UAAU,SAAf,qHAMJ,yBAAKA,UAAU,WAAf,2BACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAK6N,IAAI,iDAAiDC,IAAI,KAC9D,yBAAKzM,UAAU,WAAf,8BACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBACX,yBAAKA,UAAU,WAAf,+CACiD,IADjD,iCAIA,yBAAKA,UAAU,WAAf,8GAKJ,yBAAKwM,IAAI,gDAAgDC,IAAI,KAC7D,yBAAKzM,UAAU,uCAAf,qGAIA,yBAAKA,UAAU,WAAf,8CAGA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,SAAf,0HAIA,yBAAKA,UAAU,YAAf,wCACA,yBAAKwM,IAAI,gDAAgDC,IAAI,KAC7D,yBAAKzM,UAAU,SAAf,iDAGA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBACX,yBAAKA,UAAU,SAAf,gGAIA,yBAAKA,UAAU,SAAf,4HAKJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBAAG+N,KAAMZ,GAAM5F,OAAO,UAClB,4BAAQlG,UAAU,0BAAlB,kBAIJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,SAAf,gBACiB,iDADjB,uCAKJ,yBACIwM,IAAI,qPACJC,IAAI,KAER,kBAAC,GAAD,UCzJG,IACXwC,aAAa,qJASbrE,WAAW,oEAMXC,OAAO,gCACPC,OAAO,oCC2JIuB,eAAWvF,GAAXuF,EAlKM,SAACnN,GAAW,IAAD,EACOhB,mBAAS,QADhB,gCAEOA,mBAASoO,GAAE,OAFlB,mBAGpBvM,GAHoB,UAGRb,EAAZa,SAER,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,gBAAb,gBACA,kBAAC,GAAD,MAEA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAC5B,yBAAKzL,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GAAE,aACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAIjB,uBAAGqB,UAAU,SAAb,spBAaA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GAAE,WACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBAAGqB,UAAU,SAAb,sPAImE,IAC/D,0BAAMA,UAAU,QAAhB,IAAyB,2BAL7B,6CAQA,yBAAKA,UAAU,SAAf,4BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,SAAf,6IAII,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BACX,0BAAMA,UAAU,MAAhB,6CAIZ,yBAAKA,UAAU,0BAAf,sBACwB,KAExB,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBAAGqB,UAAU,iCAAb,MACA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GAAE,OACRM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,cACX,yBAAKA,UAAU,0BAAf,qDACuD,IAClD,OAFL,gGAMJ,yBAAKA,UAAU,SAAf,gBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,SAAf,qHAIA,yBAAKA,UAAU,SAAf,qGAIA,yBACIwM,IAAI,gDACJxM,UAAU,OACV8C,MAAO,IACPjE,OAAO,MACP4N,IAAI,KAER,uBAAGzM,UAAU,sCAAb,uBAGA,yBAAKA,UAAU,mBAAf,uDAGA,yBACIwM,IAAI,uDACJC,IAAI,GACJ3J,MAAM,MACNjE,OAAO,SAGf,yBAAKmB,UAAU,mBACX,yBAAKA,UAAU,0BAAf,gCACkC,SADlC,0FAGgB,UAHhB,4EAOJ,yBAAKA,UAAU,SAAf,cACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,SAAf,uIAGS,IACL,uBACI0M,KAAK,4CACLxG,OAAO,UAEN,IACD,0BAAMlG,UAAU,gCAAhB,oBATR,MAeA,yBACIwM,IAAI,uHACJC,IAAI,GACJ5N,OAAO,QAEX,kBAAC,GAAD,UCvKG,GACE,iLADF,GAWA,iFAXA,GAgBJ,uBAhBI,GAiBJ,gEAjBI,GAkBJ,iDAlBI,GAoBJ,+CApBI,GAqBJ,klBArBI,GAwBJ,4OAxBI,GA4BJ,4ZC6SIwN,eAAWvF,GAAXuF,EA9TD,SAACnN,GAAW,IACda,EAAYb,EAAZa,QAER,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,gBAAb,cACA,kBAAC,GAAD,MACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ0L,WAC5B,yBAAKzL,UAAU,SAAf,4BACA,uBAAGA,UAAU,SAAb,oBACA,uBAAGA,UAAU,SAAb,uJAGiC,yCAHjC,oUAUA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBAAGqB,UAAU,SAAb,uCACyC,IACrC,8BACK,2DACG,IAJZ,0OAUA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBAAGqB,UAAU,SAAb,gZASA,yBAAKA,UAAU,SAAf,kBACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,mBAAf,0BAC2B,8BAAO,WADlC,qHAGsC,8BAAO,QAH7C,2KAM8B,8BAAO,UANrC,4OAUoC,8BAAO,WAV3C,6GAcA,yBAAKA,UAAU,SAAf,gDAGA,yBAAKA,UAAU,mBAAf,uOAMA,yBAAKA,UAAU,mBAAf,yMAMA,uBACI0M,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BAAlB,kBAIJ,yBACIA,UAAU,OACVwM,IAAI,yQACJC,IAAI,KAER,yBAAKzM,UAAU,SAAf,iBACkB,8BAAO,UADzB,YAGA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,SAAf,mHAE+C,IAC3C,8BAAO,UAHX,4JAKwD,IACpD,8BAAO,UANX,iDAOW,8BAAO,UAPlB,wLAYA,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,SAAf,iDAGA,yBAAKA,UAAU,SAAf,yDAIJ,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBAAf,ubASA,yBAAKA,UAAU,mBACX,mCADJ,2PAOA,yBAAKA,UAAU,SAAf,uDAGA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAhKrB,mCAoKI,yBAAKqB,UAAU,SAAf,QACU,SADV,kDAGA,yBAAKA,UAAU,mBAAf,wFAIA,yBAAKA,UAAU,mBAAf,8CAGA,yBAAKA,UAAU,SAAf,yKAII,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,QAdjC,uUA0BI,yBAAKqB,UAAU,IAAf,4QAOA,yBAAKA,UAAU,cAAf,2BACA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,SAAf,yQAOA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,cAAf,oCAGA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAvDhC,uSA6DI,mUAOA,yBAAK1L,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBAAf,mVAQA,yBAAKA,UAAU,cAAf,uCAGA,kBAACuM,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAU,SAAf,OACQ,8BAAO,UADf,6NAOA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,cACX,yBAAKA,UAAU,0BAAf,OACQ,8BAAO,YADf,6lBAeJ,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,MAIrB,kBAAC4N,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,kBAAC,GAAD,UCpUG,GACA,0CADA,GAQJ,gCARI,GASJ,mCATI,GAUJ,iHAVI,GAiBJ,+GAjBI,GA2BJ,qDCwKIW,eAAWvF,GAAXuF,EAzLM,WACjB,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,iBACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,6EAKJ,yBAAKA,UAAU,iBAAf,iBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,gGAIA,yBAAKlN,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAvBrB,kCA2BI,yBAAKqB,UAAU,mBACX,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,KAEX,yBAAKqB,UAAU,mBACX,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,MAIrB,yBAAKqB,UAAU,mBAAf,sDACwD,OAAQ,IADhE,8FAKA,yBAAKA,UAAU,iBAAf,yBACA,kBAAC,GAAD,CAAakN,KAAK,UAzDtB,qFA4DI,mIAEkD,IAC9C,8BAAO,kCAHX,KAKA,yBAAKlN,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BAAlB,kBAIJ,yBAAKA,UAAU,cAAf,qBACA,kBAAC,GAAD,CAAakN,KAAK,UApFtB,OAqFQ,wCArFR,uEAuFI,6BACK,IADL,qBAEuB,IACnB,+DAHJ,KAKA,yBAAKlN,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBAAf,OACQ,yCADR,wCAGI,kDACuB,IACnB,+DAFJ,KAIA,gDACqB,IACjB,2FAFJ,MAMJ,yBAAKA,UAAU,mBAAf,OACQ,sCADR,+BAGA,yBAAKA,UAAU,mBAAf,sBACuB,2DADvB,KAGA,yBAAKA,UAAU,mBAAf,OACQ,qCADR,iCAGA,yBAAKA,UAAU,mBAAf,sBACuB,yDADvB,KAGA,yBACIwM,IAAI,qPACJC,IAAI,KAER,yBAAKzM,UAAU,cAAf,0BACA,kBAAC,GAAD,CAAakN,KAAK,UApItB,6EAuII,yBAAKlN,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,cAAf,uBACA,kBAAC,GAAD,CAAakN,KAAK,UAlJtB,+DAmJiE,IAC5D,OApJL,4EAsJI,yBAAKlN,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,cAAf,8BACA,kBAAC,GAAD,CAAakN,KAAK,UAjKtB,qCAkKuC,MAlKvC,sBAkKiE,MAlKjE,iBAoKI,yBAAKlN,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBACI6N,IAAI,qPACJC,IAAI,KAER,kBAAC,GAAD,UC9LG,GACA,uHADA,GAiBJ,2GAjBI,GAoBJ,oDApBI,GAqBJ,qDArBI,GAsBJ,qDAtBI,GAuBJ,gFAvBI,GA6BJ,mFA7BI,GAmCJ,qDAnCI,GAoCH,mDApCG,GAqCH,iDArCG,GAsCH,sCCtCG,IC4XAJ,YAAWvF,GAAXuF,EAlXI,WACf,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,mBACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,wEAKJ,yBAAKA,UAAU,iBAAf,mBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,wBAAIlN,UAAU,mBACV,wBAAIA,UAAU,oBAAd,yCAGA,wBAAIA,UAAU,oBAAd,4DAGA,wBAAIA,UAAU,mBAAd,oDAGA,wBAAIA,UAAU,mBAAd,mEAKJ,yBAAKA,UAAU,iBAAf,sBACA,yBAAKA,UAAU,mBAAf,OACS,MADT,gGAIA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,qBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,OACQ,uCADR,sHAKA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,mBAAf,yDAGA,yBACIwM,IAAI,sPACJC,IAAI,KAER,yBAAKzM,UAAU,mBAAf,iCACA,yBAAKA,UAAU,mBACV,IADL,uDAIA,yBACIA,UAAU,OACVwM,IAAI,qPACJC,IAAI,GACJ3J,MAAM,QACNjE,OAAO,UAEX,yBAAKmB,UAAU,QAAf,+DAGA,yBAAKA,UAAU,mBAAf,wFAGI,8BACK,IADL,yDAKJ,yBAAKA,UAAU,mBAAf,+NAMA,yBAAKA,UAAU,mBAAf,4MAImB,oDAJnB,6GAQA,yBAAKA,UAAU,iBAAf,mCACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,6BACI,kCACQ,8BAAO,SADf,6HAMJ,yBAAKlN,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,SACPlG,UAAU,QAEV,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,qBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,6BACI,iEACuC,uCAAuB,IAD9D,+MAOG,IACP,yBAAKlN,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,SACPlG,UAAU,QAEV,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBACX,yBAAKA,UAAU,iBAAf,mCAGA,kBAAC,GAAD,CAAakN,KAAK,WAEtB,yBAAKlN,UAAU,mBAAf,OACQ,uCADR,wFAGO,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,SACPlG,UAAU,QAEV,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBACX,yBAAKA,UAAU,iBAAf,sBACA,kBAAC,GAAD,CAAakN,KAAK,WAEtB,yBAAKlN,UAAU,mBAAf,0DAC4D,IACxD,wCAFJ,uGAKA,uFACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,mBAAf,kMAKA,wHAGK,IACL,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,iBACX,yBAAKA,UAAU,iBAAf,uBACA,kBAAC,GAAD,CAAakN,KAAK,WAEtB,yBAAKlN,UAAU,mBAAf,wEAIA,6BACI,gIAKJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,SACPlG,UAAU,QAEV,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,mBACX,6BACI,oCAFR,2SAUA,yBAAKA,UAAU,mBACV,IACD,mGAIA,oIAIG,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,mBAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,mBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,eAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,MAIrB,yBAAKqB,UAAU,iBACX,yBAAKA,UAAU,iBAAf,4BACA,kBAAC,GAAD,CAAakN,KAAK,WAEtB,yBAAKlN,UAAU,mBAAf,0GAIA,6BACI,iJAIG,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,eAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,kBAAC,GAAD,UDtXG,0HADA,GAOJ,6CEqFI0N,eAAWvF,GAAXuF,EAlFC,WACZ,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,WACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,qCACuC,IACnC,+CAFJ,UAKJ,2BACI,gFAAiE,IADrE,wCAIA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,0BACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,wBAAIlN,UAAU,mBACV,wBAAIA,UAAU,oBAAd,yFAIA,wBAAIA,UAAU,oBAAd,4GAIA,wBAAIA,UAAU,mBACV,sCADJ,0DAE0B,IACtB,6EAHJ,iBAOJ,yBAAKA,UAAU,iBAAf,mBACA,yBAAKA,UAAU,mBAAf,uJAKA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAIT,kBAAC,GAAD,UCvFG,GACA,mCADA,GAEJ,iEAFI,GAKJ,iZALI,GAwBJ,iIAxBI,GA8BJ,qDA9BI,GA+BJ,iJA/BI,GAwCJ,qJAxCI,GAiDJ,wLAjDI,GA0DJ,gMA1DI,GAuEH,4LCgOGQ,eAAWvF,GAAXuF,EA7RI,WACf,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,mBACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,gFAEuB,qCAFvB,aAKJ,2BACI,iFAEJ,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,mBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBACX,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,oBAAd,YACa,qCADb,iCAIA,wBAAIA,UAAU,oBAAd,uIAOR,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,gBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,kDAGA,yBAAKA,UAAU,mBAAf,8EAIA,yBAAKA,UAAU,mBAAf,qGAIA,yBAAKA,UAAU,mBAAf,gGAIA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,mBAAf,mBACoB,yCADpB,yBAGA,yBAAKA,UAAU,iBAAf,yBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,6BACI,kCACQ,sCADR,uGAGO,sCAHP,8EAOJ,yBAAKlN,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,SACPlG,UAAU,QAEV,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,mBACV,IACD,kCACQ,sCADR,8DAKJ,yBAAKA,UAAU,iBAAf,oBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,6BACI,uCACa,sCADb,mCAGG,IACP,yBAAKlN,UAAU,mBAAf,OACQ,sCADR,4EAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,SACPlG,UAAU,QAEV,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,mBACX,kCACQ,uCADR,8DAKJ,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,iBAAf,oBACA,kBAAC,GAAD,CAAakN,KAAK,WAEtB,yBAAKlN,UAAU,mBAAf,4CAEO,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,SACPlG,UAAU,QAEV,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBACX,yBAAKA,UAAU,iBAAf,uBACwB,uCADxB,YAGA,kBAAC,GAAD,CAAakN,KAAK,WAEtB,yBAAKlN,UAAU,mBAAf,YACa,uCADb,uCAIA,gDACsB,uCADtB,gHAKA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,SACPlG,UAAU,QAEV,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,kBAAC,GAAD,UClSG,GACA,2MADA,GAYJ,oGAZI,GAaJ,wHAbI,GAiBJ,gIAjBI,GAmBJ,iGAnBI,GAqBJ,oHArBI,GAuBJ,0GAvBI,GAyBJ,8GCwMI0N,eAAWvF,GAAXuF,EAvNA,WACX,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,eACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,uGAKJ,yBAAKA,UAAU,mBACV,IACD,0FAA0E,IAF9E,SAKA,2BACI,gFAAiE,IADrE,wCAIA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,4BACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,wBAAIlN,UAAU,mBACV,wBAAIA,UAAU,oBAAd,8FAIA,wBAAIA,UAAU,oBAAd,+EAIA,wBAAIA,UAAU,mBAAd,uDAIJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,iBAAf,oBACA,yBAAKA,UAAU,mBAAf,uFAIA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,cACA,yBAAKA,UAAU,mBAAf,sEAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,SACA,yBAAKA,UAAU,mBAAf,iFAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,aACA,yBAAKA,UAAU,mBAAf,yEAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,kBACA,yBAAKA,UAAU,mBAAf,0FAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,kBAAC,GAAD,CAAaqB,KAAK,UAClB,kBAAC,GAAD,UC5NG,GACA,4EADA,GAIA,2BAJA,GAOJ,2CAPI,GAQJ,6BARI,GASJ,mCATI,GAUJ,mDAVI,GAuBJ,8DAvBI,GAwBH,8CAxBG,GAyBH,gDCkTGb,eAAWvF,GAAXuF,EAjUI,WACf,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,wBACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,6EAKJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,SACPlG,UAAU,QAEV,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,4BACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,uEAIA,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,oBACV,sCADJ,gBAGA,wBAAIA,UAAU,oBACV,4DAEJ,wBAAIA,UAAU,mBACV,oDAEJ,wBAAIA,UAAU,mBACV,yDAEJ,wBAAIA,UAAU,mBACV,uDAEJ,wBAAIA,UAAU,mBACV,yDAEJ,wBAAIA,UAAU,mBACV,uDAEJ,wBAAIA,UAAU,mBACV,wDAEJ,wBAAIA,UAAU,mBACV,yDAEJ,wBAAIA,UAAU,mBACV,4DAGR,yBAAKA,UAAU,iBACX,iEAEJ,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,YACa,qCADb,6DAIA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,wBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,YACa,0CADb,oGAKA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBACV,IADL,QAES,8CAFT,aAIA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,YACa,qCADb,uHAKA,yBAAKA,UAAU,mBAAf,YACa,qCADb,iHAKA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,mBAAf,YACa,sCADb,0FAIA,yBAAKA,UAAU,mBAAf,mDACqD,IACjD,sCAFJ,2CAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,iBAAf,QACS,yCADT,YAGA,kBAAC,GAAD,CAAakN,KAAK,UAClB,6BACI,2BACI,kFAGR,6DACA,yBAAKlN,UAAU,iBAAf,QACS,wCADT,YAGA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,YACa,wCADb,+DAIA,6BACI,2BACI,wFAGR,uBAAG0M,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,+BACb6L,KAGT,yBAAK7L,UAAU,iBACX,yBAAKA,UAAU,iBAAf,QACS,uCADT,YAGA,kBAAC,GAAD,CAAakN,KAAK,WAEtB,yBAAKlN,UAAU,mBAAf,YACa,uCADb,0HAKA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,+BACb6L,KAGT,yBAAK7L,UAAU,iBACX,yBAAKA,UAAU,iBAAf,QACS,uCADT,YAGA,kBAAC,GAAD,CAAakN,KAAK,WAEtB,yBAAKlN,UAAU,mBAAf,YACa,uCADb,0HAKA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,+BACb6L,KAEJ,IACL,yBAAK7L,UAAU,iBACX,yBAAKA,UAAU,iBAAf,QACS,uCADT,YAGA,kBAAC,GAAD,CAAakN,KAAK,WAEtB,yBAAKlN,UAAU,mBAAf,YACa,uCADb,4MAMA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,+BACb6L,KAGT,yBAAK7L,UAAU,iBACX,yBAAKA,UAAU,iBAAf,QACS,uCADT,YAGA,kBAAC,GAAD,CAAakN,KAAK,WAEtB,yBAAKlN,UAAU,mBAAf,YACa,uCADb,6MAMA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,+BACb6L,KAGT,kBAAC,GAAD,UCtUG,GACA,0LADA,GAaA,2IAbA,GAsBJ,uFAtBI,GA+BJ,iQA/BI,GAkDJ,wCAlDI,GAqDJ,wDArDI,GAyDJ,uDAzDI,GA6DJ,2EA7DI,GA8DJ,kDA9DI,GA+DJ,4CC0QIQ,eAAWvF,GAAXuF,EA/TC,WACZ,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,qBACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,2CAIJ,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,SAAf,0FAKJ,yBACIwM,IAAI,oDACJC,IAAI,KAER,yBAAKzM,UAAU,iBAAf,gBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,2EAIA,yBAAKA,UAAU,mBAAf,8QAOA,yBAAKA,UAAU,mBACX,2VASJ,yBAAKA,UAAU,iBAAf,aACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,iDAGA,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,8DAGA,wBAAIA,UAAU,wBAAd,yBAC0B,yCAD1B,mBAEQ,wCAFR,YAIA,wBAAIA,UAAU,wBAAd,yBAC0B,wCAD1B,6CAKJ,yBAAKA,UAAU,mBAAf,6bAUA,yBAAKA,UAAU,iBAAf,gBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,qEAIA,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,oCACsC,IAClC,kFAAkE,IAFtE,YAKA,wBAAIA,UAAU,wBAAd,yBAC0B,yCAD1B,mBAEQ,wCAFR,YAIA,wBAAIA,UAAU,wBAAd,uDAEI,0GAA0F,IAF9F,mGAOJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,iBAAf,gBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,4EAIA,yBAAKA,UAAU,mBAAf,0DAC4D,IACxD,yCAFJ,8BAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,mBAAf,iJAKA,6BACI,8EACG,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,iBAAf,+BACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,sGAIA,yBAAKA,UAAU,mBAAf,6DAGA,yBAAKA,UAAU,mBAAf,6DAGA,yBAAKA,UAAU,mBAAf,gEAGA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,mBAAf,iJAKA,6BACI,8EACG,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,iBAAf,cACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,oEAGA,yBAAKA,UAAU,mBAAf,8DAGA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,mBAAf,iJAKA,6BACI,8EACG,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,iBAAf,eACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,uFAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,iBAAf,cACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,wEAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,iBAAf,wBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,4GAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,yBAAKqB,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,kBAAC,GAAD,UCpUG,GACA,8BADA,GAWJ,kDAXI,GAYJ,sEAZI,GAaJ,uQAbI,GAmBJ,2GAnBI,GAsBJ,sDAtBI,GAuBJ,6EAvBI,GAwBJ,6GAxBI,GAyBJ,yEAzBI,GA0BJ,gDC0TI0N,eAAWvF,GAAXuF,EA1UD,WACV,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,cACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,qGAKJ,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,SAAf,0FAKJ,yBACIwM,IAAI,qEACJC,IAAI,KAER,yBAAKzM,UAAU,iBAAf,2BACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,8BACA,yBAAKA,UAAU,mBAAf,yDAGA,yBAAKA,UAAU,mBACX,kHAKJ,yBAAKA,UAAU,mBACX,wHAKJ,yBAAKA,UAAU,iBAAf,uBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,YACa,qCADb,0DAGO,IACP,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,0BACb6L,KAGT,wBAAI7L,UAAU,mBACV,wBAAIA,UAAU,wBAAd,uCACwC,qCAAqB,IAD7D,0EAKA,wBAAIA,UAAU,wBAAd,iEAIA,wBAAIA,UAAU,wBAAd,kFAIE,IACN,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,mBAAf,6DAGA,yBAAKA,UAAU,SACX,yEACA,wEACA,sEAEJ,yBAAKA,UAAU,mBAAf,qEAIA,yBAAKA,UAAU,iBAAf,qCAGA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,8IAKA,yBAAKA,UAAU,mBAAf,oEAGI,6BACK,IADL,+DAKJ,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,wBAAd,gFAIA,wBAAIA,UAAU,wBAAd,sDAGA,wBAAIA,UAAU,wBAAd,oDAGA,wBAAIA,UAAU,wBAAd,6DAIJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,mCACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,6FAIA,yBAAKA,UAAU,mBAAf,8HAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,uCAGA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,0CAC4C,IACxC,0DAFJ,SAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,4BACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,8HAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,oBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,0EAIA,yBAAKA,UAAU,mBAAf,iGAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,eACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,iKAKA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,2CAGA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,iKAKA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,0BACb6L,KAGT,kBAAC,GAAD,UC/UG,GACA,kDADA,GAEA,2BAFA,GAKJ,2CALI,GAMJ,6BANI,GAOJ,mCAPI,GAQJ,mDARI,GAqBJ,8DArBI,GAsBH,8CAtBG,GAuBH,gDCwTGQ,eAAWvF,GAAXuF,EArUA,WACX,OACI,yBAAKrM,UAAU,qBACX,uBAAGA,UAAU,gBAAb,eACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,uBACX,yBAAKA,UAAU,SAAf,oEAKJ,yBACIwM,IAAI,0QACJC,IAAI,KAER,yBAAKzM,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,SACPlG,UAAU,QAEV,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,4BACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,uEAIA,wBAAIA,UAAU,mBACV,wBAAIA,UAAU,oBACV,sCADJ,gBAGA,wBAAIA,UAAU,oBACV,4DAEJ,wBAAIA,UAAU,mBACV,oDAEJ,wBAAIA,UAAU,mBACV,yDAEJ,wBAAIA,UAAU,mBACV,uDAEJ,wBAAIA,UAAU,mBACV,yDAEJ,wBAAIA,UAAU,mBACV,uDAEJ,wBAAIA,UAAU,mBACV,wDAEJ,wBAAIA,UAAU,mBACV,yDAEJ,wBAAIA,UAAU,mBACV,4DAGR,yBAAKA,UAAU,iBACX,iEAEJ,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,YACa,qCADb,6DAIA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBAAf,wBACA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,YACa,0CADb,oGAKA,yBAAKA,UAAU,WACX,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBACI+N,KAAI,UAAKX,GAAL,mCACJ7F,OAAO,UAEP,4BAAQlG,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,iBACV,IADL,QAES,8CAFT,aAIA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,YACa,qCADb,uHAKA,yBAAKA,UAAU,mBAAf,YACa,qCADb,iHAKA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,0BACb6L,KAGT,yBAAK7L,UAAU,mBAAf,YACa,sCADb,0FAIA,yBAAKA,UAAU,mBAAf,mDACqD,IACjD,sCAFJ,2CAIA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAGjB,yBAAKqB,UAAU,iBAAf,QACS,yCADT,YAGA,kBAAC,GAAD,CAAakN,KAAK,UAClB,6BACI,2BACI,kFAGR,6DACA,yBAAKlN,UAAU,iBAAf,QACS,wCADT,YAGA,kBAAC,GAAD,CAAakN,KAAK,UAClB,yBAAKlN,UAAU,mBAAf,YACa,wCADb,+DAIA,6BACI,2BACI,wFAGR,uBAAG0M,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,+BACb6L,KAGT,yBAAK7L,UAAU,iBACX,yBAAKA,UAAU,iBAAf,QACS,uCADT,YAGA,kBAAC,GAAD,CAAakN,KAAK,WAEtB,yBAAKlN,UAAU,mBAAf,YACa,uCADb,0HAKA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,+BACb6L,KAGT,yBAAK7L,UAAU,iBACX,yBAAKA,UAAU,iBAAf,QACS,uCADT,YAGA,kBAAC,GAAD,CAAakN,KAAK,WAEtB,yBAAKlN,UAAU,mBAAf,YACa,uCADb,0HAKA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,+BACb6L,KAEJ,IACL,yBAAK7L,UAAU,iBACX,yBAAKA,UAAU,iBAAf,QACS,uCADT,YAGA,kBAAC,GAAD,CAAakN,KAAK,WAEtB,yBAAKlN,UAAU,mBAAf,YACa,uCADb,4MAMA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,+BACb6L,KAGT,yBAAK7L,UAAU,iBACX,yBAAKA,UAAU,iBAAf,QACS,uCADT,YAGA,kBAAC,GAAD,CAAakN,KAAK,WAEtB,yBAAKlN,UAAU,mBAAf,YACa,uCADb,6MAMA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SAAf,cAEA,kBAAC,KAAD,CACIb,SAAU,OACVwN,KAAML,GACNM,iBAAiB,EACjBlO,MAAOmO,KACPC,WAAW,EACXnO,WAAS,KAEV,IACP,uBAAG+N,KAAI,UAAKZ,IAAQ5F,OAAO,SAASlG,UAAU,QAC1C,4BAAQA,UAAU,+BACb6L,KAGT,kBAAC,GAAD,UC5TCiC,GAAiB,CAC1B,CACId,KAAM,+BACNrQ,KAAM,eACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAiBA,KAE5C,CACI8N,KAAM,8BACNrQ,KAAM,cACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAeA,KAE1C,CACI8N,KAAM,6BACNrQ,KAAM,aACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAUA,KAErC,CACI8N,KAAM,gCACNrQ,KAAM,gBACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAiBA,KAE5C,CACI8N,KAAM,0BACNrQ,KAAM,UACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAYA,KAEvC,CACI8N,KAAM,6BACNrQ,KAAM,aACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAeA,KAE1C,CACI8N,KAAM,yBACNrQ,KAAM,cACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAWA,KAEtC,CACI8N,KAAM,6BACNrQ,KAAM,kBACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAeA,KAE1C,CACI8N,KAAM,2BACNrQ,KAAM,aACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAYA,KAEvC,CACI8N,KAAM,6BACNrQ,KAAM,eACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAUA,KAErC,CACI8N,KAAM,8BACNrQ,KAAM,gBACNsQ,OAAO,EACP7G,UAAW,SAAClH,GAAD,OAAW,kBAAC,GAAWA,M,oBC7E7BgQ,GAAiBxH,YAAc,CACxCyH,sBAAuB,SAAChS,GAAD,OAASA,GAChCiS,sBAAuB,SAACjS,GAAD,OAASA,GAChCkS,sBAAuB,SAAClS,GAAD,OAASA,KCHvBmS,GAAU5H,YAAc,CACjC6H,eAAgB,SAACpS,GAAD,OAASA,GACzBqS,eAAgB,SAACrS,GAAD,OAASA,GACzBsS,eAAgB,SAACtS,GAAD,OAASA,KAGhBuS,GAAgBhI,YAAc,CACvCiI,qBAAsB,SAACxS,GAAD,OAASA,GAC/ByS,qBAAsB,SAACzS,GAAD,OAASA,GAC/B0S,qBAAsB,SAAC1S,GAAD,OAASA,KAGtB2S,GAAiBpI,YAAc,CACxCqI,sBAAuB,SAAC5S,GAAD,OAASA,GAChC6S,sBAAuB,SAAC7S,GAAD,OAASA,GAChC8S,sBAAuB,SAAC9S,GAAD,OAASA,K,oFCfvB+S,GAAaxI,YAAc,CACpCyI,kBAAmB,SAAChT,GAAD,OAASA,GAC5BiT,kBAAmB,SAACjT,GAAD,OAASA,GAC5BkT,kBAAmB,SAAClT,GAAD,OAASA,KAGnBmT,GAAU5I,YAAc,CACjC6I,eAAgB,SAACpT,GAAD,OAASA,GACzBqT,eAAgB,SAACrT,GAAD,OAASA,GACzBsT,eAAgB,SAACtT,GAAD,OAASA,KAGhBuT,GAAahJ,YAAc,CACpCiJ,kBAAmB,SAACxT,GAAD,OAASA,GAC5ByT,kBAAmB,SAACzT,GAAD,OAASA,GAC5B0T,kBAAmB,SAAC1T,GAAD,OAASA,KAGnB2T,GAAQpJ,YAAc,CAC/BqJ,aAAc,SAAC5T,GAAD,OAASA,GACvB6T,aAAc,SAAC7T,GAAD,OAASA,GACvB8T,aAAc,SAAC9T,GAAD,OAASA,KAGd+T,GAAgBxJ,YAAc,CACvCyJ,qBAAsB,SAAChU,GAAD,OAASA,GAC/BiU,qBAAsB,SAACjU,GAAD,OAASA,GAC/BkU,qBAAsB,SAAClU,GAAD,OAASA,KAGtBmU,GAAa5J,YAAc,CACpC6J,kBAAmB,SAACpU,GAAD,OAASA,GAC5BqU,kBAAmB,SAACrU,GAAD,OAASA,GAC5BsU,kBAAmB,SAACtU,GAAD,OAASA,KAGnBuU,GAAahK,YAAc,CACpCiK,kBAAmB,SAACxU,GAAD,OAASA,GAC5ByU,kBAAmB,SAACzU,GAAD,OAASA,GAC5B0U,kBAAmB,SAAC1U,GAAD,OAASA,KAGnB2U,GAAqBpK,YAAc,CAC5CqK,0BAA2B,SAAC5U,GAAD,OAASA,GACpC6U,0BAA2B,SAAC7U,GAAD,OAASA,GACpC8U,0BAA2B,SAAC9U,GAAD,OAASA,KAG3B+U,GAAgBxK,YAAc,CACvCyK,qBAAsB,SAAChV,GAAD,OAASA,GAC/BiV,qBAAsB,SAACjV,GAAD,OAASA,GAC/BkV,qBAAsB,SAAClV,GAAD,OAASA,KAGtBmV,GAAgB5K,YAAc,CACvC6K,qBAAsB,SAACpV,GAAD,OAASA,GAC/BqV,qBAAsB,SAACrV,GAAD,OAASA,GAC/BsV,qBAAsB,SAACtV,GAAD,OAASA,KAGtBuV,GAAmBhL,YAAc,CAC1CiL,wBAAyB,SAACxV,GAAD,OAASA,GAClCyV,wBAAyB,SAACzV,GAAD,OAASA,GAClC0V,wBAAyB,SAAC1V,GAAD,OAASA,KC0+BhC4B,GAAoB,CACtB+T,wBvFriC4B,iBAAO,CACnClW,KCPuB,qBDQvBC,QAAS,OuFoiCTmC,kBAAmBtC,EACnBqW,oB5F9gCwB,iBAAO,CAC/BnW,KAAM,iBACNC,QAAS,O4F6gCTmW,cnFpgCkB,iBAAO,CACzBpW,KAAM,SACNC,QAAS,OmFmgCToW,mBAAoB7V,EACpBqE,qBAAsBpE,EACtBsE,qBAAsBrE,GAGX2B,gBAlBS,SAACY,GAAD,MAAY,CAChCiC,gBAAiBjC,EAAMkC,KAAKD,gBAC5BnF,KAAMkD,EAAMkC,KAAKmR,QAAQvW,KACzB0F,SAAUxC,EAAMkC,KAAKM,SACrB8Q,SAAUtT,EAAMoC,KAAKkR,SACrBlW,IAAK4C,EAAMoC,KAAKhF,OAaoB8B,GAAzBE,EA5gCH,SAAC,GAeN,IAdH6T,EAcE,EAdFA,wBAEAnW,GAYE,EAbFqC,kBAaE,EAZFrC,MACAmF,EAWE,EAXFA,gBACAO,EAUE,EAVFA,SAEA2Q,GAQE,EATFD,oBASE,EARFC,eACAC,EAOE,EAPFA,mBACAE,EAME,EANFA,SACA1R,EAKE,EALFA,qBACAE,EAIE,EAJFA,qBACA1E,EAGE,EAHFA,IAEAmW,GACE,EAFFC,eAEE,EADFD,WAUMrT,EARYtB,aAAW,SAACC,GAAD,MAAY,CACrC4U,YAAY,eACP,0BAA4B,CACzB1P,QAASvB,EAAQ,0CAKb7D,GATd,EAW8B+U,IAAMrV,UAAS,GAX7C,mBAYIsV,GAZJ,UAYkB5T,aAAY,SAACC,GAAD,OAAWA,EAAM4T,SAASD,gBACpDE,EAAU9T,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKmR,QAAQQ,WACpDvR,EAAWvC,aAAY,SAACC,GAAD,OAAWA,EAAMuC,MAAMD,YAC9CwR,EAAa/T,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAK6T,cAC/CC,EAAchU,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAK8T,eAChDC,EAAOjU,aAAY,SAACC,GAAD,OAAWA,EAAMiU,UAAUD,QAE9CvG,EAAWC,cAnBf,EAqBoBxP,EAAgB,OAAQ,IArB5C,gCAsBoBA,EAAgB,MAAO,KAtB3C,gCAuBkBA,EAAgB,KAAM,KAvBxC,mBA4BIgW,GA5BJ,UA4BiB,SAAC9N,GAChBA,EAAE+N,iBACFlB,MAQEmB,EAAQrU,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKmR,QAAQe,SAtCtD,EAmK8C/V,mBAASiV,GAnKvD,mBAmKKe,EAnKL,KAmKuBC,EAnKvB,OAoKgCjW,mBAAS,IApKzC,mBAoKKkW,EApKL,KAoKgBC,EApKhB,KAqKF9V,qBAAU,WACN4V,EACIhB,EACKmB,UACApG,QACG,SAACD,GAAD,OACIA,EAAEtR,KACGiR,WACA2G,cACAnG,QAAQgG,EAAUG,gBAAkB,GAAKtG,QAG/D,CAACmG,EAAWjB,IACf,IAAMqB,EAAW,SAACvO,GACd,IAAMvI,EAAQuI,EAAEC,OAAOxI,MACvB2W,EAAa3W,IAmJXiC,EAASC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,UAEjDpB,qBAAU,WACN0U,MACD,CAAC5Q,EAAU1F,IAMd,IAMM8X,EAAoB,WAItB,OAHUZ,EAAK3F,QACX,SAACwG,GAAD,OAAOA,EAAEC,OAAOC,SAASX,IAAUS,EAAET,QAAUA,IAAUS,EAAEG,MAAQH,KAE9D/F,QAGb,OACI,yBAAK3O,UAAU,qDACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,yBACIA,UAAU,sDACVE,MAAO,CACH2C,SAAS,aAGb,yBACI7C,UAAU,eACVE,MAAO,CACHZ,MAAO,UACPiF,SAAS,SACTpE,WAAY,IACZoD,QAAQ,UACRJ,OAAO,OACPG,QAAQ,OACRL,WAAW,YAIf,kBAAC6R,GAAA,EAAD,CACI5H,KAAK,QACL6H,KAAK,QACLzV,MAAM,UACN0V,aAAW,cACX5U,QAAS,SAAC6F,GAAD,OA/Db,SAACA,GACzBA,EAAE4I,UACFoG,YAAW,WACP3H,EAAS7C,GAAWA,YAAY+I,MACjC,IA2DyC0B,CAAoBjP,KAOpC,kBAAC,KAAD,CAAU1B,SAAS,YAGvB,kBAAC,IAAD,CACIgC,GAAG,QAEHnG,QAAS,SAAC6F,GACNA,EAAE+N,iBAME1G,EALC3N,EAMG2P,GAAQE,gBAAe,GAJvBF,GAAQE,gBAAe,IAS/BlC,EAASwB,aAAK,IAAD,OAAK7R,MAEtBiD,MAAO,CACHZ,MAAO,UACPiF,SAAS,SACTpE,WAAY,IACZoD,QAAQ,UACRoB,eAAe,OACfwQ,WAAW,mCAIf,8BACI,0BACIjV,MAAO,CAAEkV,WAAW,WADxB,KADJ,cAIgB,IACZ,0BACIlV,MAAO,CAAEkV,WAAW,WADxB,aA2BZ,4BACIpV,UAAU,iBACVpD,KAAK,SACLyY,cAAY,WACZC,cAAY,0BACZC,gBAAc,yBACdC,gBAAc,QACdR,aAAW,qBAEX,0BAAMhV,UAAU,yBAGpB,yBACIA,UAAU,2BACV4F,GAAG,yBACH1F,MAAO,CAAEuV,YAAa,KAEtB,wBAAIzV,UAAU,mCACV,wBAAIA,UAAU,qCACV,kBAAC,IAAD,CACIA,UAAU,2BACVqV,cAAY,WACZzY,KAAK,SACL8Y,KAAK,SACLC,gBAAc,OACdH,gBAAc,QASdtV,MAAO,CACHZ,MAAO,qBACPa,WAAY,IACZoD,QAAQ,WAEZgD,GAAG,KAEF,IAtBL,QAyBA,yBAAKvG,UAAU,iBACX,uBACIE,MAAO,CACH8E,OAAO,UACP/B,YACe,IAAXtD,IACe,IAAfgU,GADA,UAGJrU,OACe,IAAXK,IACe,IAAfgU,GADA,QAIR3T,UAAU,gBACVI,QAAS,SAAC6F,GACNA,EAAE+N,iBACF1G,EACIgC,GAAQE,gBACJ,MAjBhB,UAwBA,uBACItP,MAAO,CACH8E,OAAO,UACP/B,YACe,IAAXtD,IACCiU,GADD,UAGJtU,OACe,IAAXK,IACCiU,GADD,QAIR5T,UAAU,gBACVI,QAAS,SAAC6F,GACNA,EAAE+N,iBACF1G,EACIgC,GAAQE,gBACJ,MAjBhB,UAwBA,uBACItP,MAAO,CACH8E,OAAO,UACP/B,YACoB,IAAhB2Q,GAAA,UAEJtU,OACoB,IAAhBsU,GAAA,QAGR5T,UAAU,gBACVI,QAAS,SAAC6F,GACNA,EAAE+N,iBACF1G,EACIwC,GAAeE,uBACV4D,MAfjB,gBAsBA,uBACI5T,UAAU,gBACVuG,GAAG,GACHrG,MAAO,CACH8E,OAAO,UACP/B,YACmB,IAAf0Q,GAAA,UAEJrU,OACmB,IAAfqU,GAAA,QAGRvT,QAAS,SAAC6F,GACNA,EAAE+N,iBAME1G,EALCqG,EAMGjE,GAAcG,uBAJdH,GAAcE,0BAQxB+D,EAEI,eADA,iBAKjB7R,GACG,wBACI9B,UAAU,qCACVE,MAAO,CAAE2C,SAAS,aAEjBf,GAAmBnF,GAChB,oCACI,kBAAC,IAAD,CACIqD,UAAU,8BACVqV,cAAY,WACZK,KAAK,SACLC,gBAAc,OACdH,gBAAc,QAEdjP,GAAG,GACHrG,MAAO,CACHZ,MAAO,qBACPa,WAAY,KAGhBC,QAziB1B,SAAC6F,GACvBA,EAAE+N,iBAEFf,MA0iBgD,0BACI/S,MAAO,CACH0D,QACI,eACJgS,WACI,SACJC,SACI,SACJC,aACI,WACJC,SACI,OACJxS,QAAQ,MAZhB,gBAiBA,0BACIrD,MAAO,CACH0D,QACI,eACJgS,WACI,SACJC,SACI,SACJC,aACI,WACJC,SACI,OACJxS,QAAQ,KAEZvD,UAAU,iBAETqC,EAAQ,YACEA,GACL,KApdtD,yBACIrC,UAAU,gBACVE,MAAO,CACH8V,UAAU,QACVnT,SAAS,WACTI,WAAW,OACX8D,OAAO,OACPnI,UAAWuU,EAASxE,QAAU,GAAnB,SAAmC,SAC9CoH,SAAS,QACTE,UAAU,OACVtT,KAAM,IAGV,uBACI+J,KAAMZ,GAEN9L,UAAU,gBACVI,QAAS,SAAC6F,GAAD,OA5HN,SAACA,GAChBA,EAAE+N,iBACFrW,aAAaC,QACT,YACAC,KAAKC,UAAL,2MAUJH,aAAaC,QACT,WACAC,KAAKC,UAAL,olCA0DJH,aAAaC,QACT,UACAC,KAAKC,UAAL,4JAMJ4P,OAAOC,SAASjB,KAAOZ,GA0CKoK,CAAWjQ,KAE3B,yBACI/F,MAAO,CACH0D,QAAQ,OACRE,eAAgB,kBAGnB,IACD,4CACA,6BACK,IACD,kBAAC,KAAD,CACIuB,GAAI,CACAd,SACwB,IAApB4O,EAASxE,OAAT,oBAOxB,yBACIzO,MAAO,CACH2C,SAAS,WACTyC,aAAa,QACbR,UAAU,UAGd,kBAAC,KAAD,CACIO,GAAI,CACAxC,SAAS,WACTF,KAAM,EACND,IAAK,IACLyT,YAAY,iBACZ5S,QAAQ,eAGhB,2BACI3G,KAAK,OACLD,KAAK,SACLiJ,GAAG,SACHE,YAAY,WACZzG,SAAUmV,KAGjBN,EAAiBlG,KAAI,SAACoI,EAAS3Y,GAAV,OAClB,uBACIA,IAAKA,EACLuC,UAAU,2BACV0M,KAAI,WAAM0J,EAAQC,KAClBnW,MAAO,CACH+C,WAAYmT,EAAQzZ,OAAS0F,GAAjB,UACZ/C,MAAO8W,EAAQzZ,OAAS0F,GAAjB,SAGV,IACD,0BACInC,MAAO,CACH0D,QAAS,eACTgS,WAAY,SACZC,SAAU,SACVC,aAAc,WACdC,SAAU,OACVxS,QAAQ,MAGX6S,EAAQzZ,OAAS0F,EACd,kBAAC,KAAD,CACIgD,GAAI,CACAd,SAAS,OACT+R,aAAa,SAIrB,kBAAC,KAAD,CACIjR,GAAI,CACAd,SAAS,OACT+R,aAAa,SAWxBF,EAAQzZ,aAmXA0F,GAAYP,GACT,wBAAI9B,UAAU,sCACT8B,GAAmBnF,GAChB,uBACIqD,UAAU,2BACVqV,cAAY,WACZK,KAAK,SACLC,gBAAc,OACdH,gBAAc,SAEd,0BACItV,MAAO,CACHZ,MAAM,qBACNa,WAAW,MACXyD,QACI,eACJgS,WACI,SACJC,SAAU,SACVC,aACI,WACJC,SAAU,MACVxS,QAAQ,KAEZvD,UAAU,YAETqC,IAIb,yBAAKrC,UAAU,iBACX,uBACIE,MAAO,CACH8E,OAAO,WAEXhF,UAAU,gBACVI,QAvX5B,WAChBkN,EAAS4B,GAAeC,sBAAsBlS,MAiXN,SASA,uBACIiD,MAAO,CACH8E,OAAO,WAEXhF,UAAU,gBACVI,QAAS,SAAC6F,GAAD,OACL8N,EAAW9N,KANnB,QAWA,uBACI/F,MAAO,CACH8E,OAAO,WAEXhF,UAAU,gBACVI,QA3oBvB,WACrBqB,GAAqB,GACrBqR,MAooBwC,eASA,uBACI9S,UAAU,gBACVuG,GAAG,GACHrG,MAAO,CACH8E,OAAO,WAEX5E,QAhpB3B,SAAC6F,GAClBA,EAAE+N,iBAEFrS,GAAqB,GACrBmR,MAsoBwC,YAaZ,wBACI9S,UAAS,6CAAwCD,EAAQuT,cAEzD,kBAAC,IAAD,CACItT,UAAU,WACVpD,KAAK,SACLwD,QAAS,SAAC6F,GAAD,OAAO8N,EAAW9N,IAC3B/F,MAAO,CACHZ,MAAO,qBACPa,WAAY,IACZoD,QAAQ,WAEZgD,GAAG,KATP,SAcJ,wBAAIvG,UAAU,sDACT8B,GAAmBnF,GAChB,kBAAC,IAAD,CACIqD,UAAU,2BACVqV,cAAY,WACZK,KAAK,SACLC,gBAAc,OACdH,gBAAc,QACdjP,GAAG,IAEH,0BACIrG,MAAO,CACHZ,MAAM,qBACNa,WAAW,QAGf,yBACID,MAAO,CACH0D,QAAQ,SAGZ,kBAAC,WAAD,KACK8P,EACG,0BACIxT,MAAO,CACHuV,YAAY,MACZ3Q,UAAU,QACVlB,QAAQ,QACR2S,UAAU,SACVzT,MAAO,iBACPjE,OAAO,oBAGX,yBACI2N,IACIkH,EAEJjH,IAAI,GACJ3J,MAAM,OACN0T,MAAM,OACNtW,MAAO,CACH4C,MAAO,iBACPkT,UAAU,mBAEdhW,UAAU,iBAIlB,IAGR,kBAAC,WAAD,KACI,0BACIE,MAAO,CACHqW,UAAU,WAFlB,WAIM5Z,IACL8X,IACG,GACA,kBAACtO,EAAA,EAAD,CACIC,UACI,OAEJO,QACI,QAEJtB,GAAI,CACAxC,SAAS,sBACTI,WAAW,UACX3D,MAAM,UACNkE,aAAa,kBACbe,SAAS,kBACT5B,KAAK,iBACLD,IAAI,kBACJa,QACI,uBAhBZ,WAmBSkR,UAQjC,yBAAKzU,UAAU,iBAQX,kBAACmG,EAAA,EAAD,CACIC,UAAU,IACVpG,UAAU,gBACVI,QAhgBhB,SAAC6F,GACzBA,EAAE+N,iBAEF1G,EAASgF,GAAcE,sBAAqB,KA8fJnN,GAAI,CACAL,OAAO,qBACPT,SAAS,oBANjB,YAUKkQ,IAAsB,GACnB,kBAACtO,EAAA,EAAD,CACIC,UAAW,OACXO,QAAS,QACTtB,GAAI,CACAxC,SAAS,sBACTI,WAAW,UACX3D,MAAM,UACNkE,aAAa,kBACbe,SAAS,kBACT5B,KAAK,iBACLD,IAAI,kBACJa,QACI,qBACJ+S,aAAa,mBAbrB,WAgBS7B,OAIjB,kBAAC,IAAD,CACIzU,UAAU,gBACVuG,GAAE,yBAAoB5I,aAAY,eAFtC,WAMA,kBAAC,gBAAD,CACI8Y,SAAUrK,GACVsK,OAAQ,SAACC,GAAD,OACJ,kBAAC,IAAD,CACI3W,UAAU,gBACVuG,GAAG,GACHnG,QAAS,SAAC6F,GAAD,OAj1BxC,SAACA,EAAGgI,GACrBhI,EAAE+N,iBAGFZ,EAAUwD,QAAQC,KAAK,aAAc5C,GAErC3G,EAASoE,GAAWE,mBAAkB,IAEtC3D,IAIAtQ,aAAamZ,WAAW,gBACxB9D,IACA1F,EAASwB,aAAK,WAo0BsCiI,CACI9Q,EACA0Q,EAAYvW,WANxB,aAaJ4W,gBA10BlB,SAACC,GACvBtZ,aAAamZ,WAAW,sBAg1BMhV,GACE,wBAAI9B,UAAU,sCACV,kBAAC,IAAD,CACIA,UAAU,WACVuG,GAAG,UAFP,UASR,wBAAIvG,UAAU,sCACV,oCACI,kBAAC,IAAD,CACIA,UAAU,2BACVqV,cAAY,WACZK,KAAK,SACLC,gBAAc,OACdH,gBAAc,QACdjP,GAAG,GACHrG,MAAO,CACHZ,MAAO,qBACPa,WAAY,MATpB,QAeA,yBAAKH,UAAU,iBACX,4BACIA,UAAU,gBAEVI,QAAS,WACLkN,EACItQ,EAAO,SAGXsQ,EACIjF,GAAY,OAEhBiF,EACIwB,aAAK,eAZjB,SAmBA,4BACI9O,UAAU,gBACVI,QAhpB3B,WAEjBkN,EAAS/C,GAAgBA,gBAAgBuD,KACzCR,EAAS5N,GAAQA,SAAQ,MA2oBe,QAMA,4BACIM,UAAU,gBACVI,QAhpB5B,WAEhBkN,EAAS/C,GAAgBA,gBAAgBwC,KACzCO,EAAS5N,GAAQA,SAAQ,MA2oBe,OAMA,4BACIM,UAAU,gBACVI,QAjpB7B,WAEfkN,EAAS/C,GAAgBA,gBAAgB4C,KACzCG,EAAS5N,GAAQA,SAAQ,MA4oBe,eAsBnCyC,GACG,kBAACkE,EAAA,EAAD,CACIhB,GAAI,CACAvC,MAAO,OACPwC,aAAa,UACb4R,cAAe,IAGnB,kBAACrQ,EAAA,EAAD,W,0CCvwBd9H,GAAoB,CAKtBoY,aAAcrP,EACdsP,mBAAoB9V,EACpB+V,qBAAsBjP,GACtBkP,kBAAmBhP,IAGjBiP,GAActY,aArBI,SAACY,GAAD,oBAGpBiC,gBAAiBjC,EAAMkC,KAAKD,gBAE5B/E,IAAK8C,EAAMkC,KAAKG,MAChBC,SAAUtC,EAAMuC,MAAMD,UANF,kBAOHtC,EAAMkC,KAAKD,mBAca/C,IAE9ByY,eAAQD,GAAalL,YAAWvF,GAAhC0Q,EA3PD,SAACtY,GAAW,IAElBa,EAQAb,EARAa,QACAhD,EAOAmC,EAPAnC,IACAoa,EAMAjY,EANAiY,aAEAhV,GAIAjD,EALAkY,mBAKAlY,EAJAiD,UACAL,EAGA5C,EAHA4C,gBACAuV,EAEAnY,EAFAmY,qBACAC,EACApY,EADAoY,kBATiB,EAYSpZ,mBAAS,CACnCuZ,MAAO,GACPC,SAAU,KAdO,mBAYdxE,EAZc,KAYLyE,EAZK,KAgBftV,EAAWzC,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKM,YAC7CiL,EAAWC,cAEjBhP,qBAAU,WAEN4Y,EAAa,MACI,OAAb9U,GAAsBP,GACtBuV,EAAqB,MAEzBC,MACD,IAGH,IAAMjY,EAAW,SAAC4G,GACd0R,EAAW,2BACJzE,GADG,kBAELjN,EAAEC,OAAOvJ,KAAOsJ,EAAEC,OAAOxI,UAsClC,OACI,kBAAC,WAAD,KACI,yBAAKsC,UAAWD,EAAQkD,YACpB,yBAAKjD,UAAWD,EAAQ+H,OACpB,kBAAC8P,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,0BAAMC,OAAO,IACT,yBAAK9X,UAAU,wBACX,kBAACmG,EAAA,EAAD,CACIQ,QAAQ,UACRtB,GAAI,CAAEd,SAAS,WAFnB,sBAOJ,kBAACmB,EAAA,EAAD,CACIE,GAAG,QACHC,MAAM,QACN7F,UAAWD,EAAQkE,UACnB8T,WAAS,EACT1T,OAAO,SACP1H,KAAK,QACLe,MAAOwV,EAAQuE,MACfpY,SAAUA,IAEd,kBAACqG,EAAA,EAAD,CACIE,GAAG,WACHC,MAAM,WACN7F,UAAWD,EAAQkE,UACnB8T,WAAS,EACT1T,OAAO,SACPzH,KAAK,WACLD,KAAK,WACLe,MAAOwV,EAAQwE,SACfrY,SAAUA,IAGbtC,GACG,kBAACoI,EAAA,EAAD,CACIwB,QAAQ,WACRvB,SAAS,QACTpF,UAAWD,EAAQqH,OAElBrK,GAIT,kBAACsJ,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,UACNyY,WAAS,EACTnb,KAAK,SACLoD,UAAWD,EAAQsH,IACnBjH,QAxFhB,SAAC6F,GACjBA,EAAE+N,iBACFmD,EAAajE,KAgFe,SAUA,kBAAC,IAAD,CACI3M,GAAG,iBACHvG,UAAWD,EAAQwH,MAEnB,kBAACb,EAAA,EAAD,CACIrB,GAAI,CACAzB,QAAQ,QACRS,OAAO,cACPd,QAAS,EACTT,MAAM,OACNkE,UAAU,QACVvC,cAAc,OACdF,SAAS,OACT,UAAW,CACPjB,QAAQ,SAGhBlD,QAAS,kBACLiX,EAAqB,QAd7B,0BAsBR,yBACInX,MAAO,CACH0D,QAAQ,OACR4C,cAAc,WAGlB,kBAAC,KAAD,CACIiQ,SAAUrK,GACVsK,OAAQ,SAACC,GAAD,OACJ,kBAACjQ,EAAA,EAAD,CACIC,QAAQ,WACRvG,QAASuW,EAAYvW,QACrBF,MAAO,CACHqE,SAAS,SACTzB,MAAM,cACNuB,OAAO,oBAGX,kBAAC,KAAD,CACIgB,GAAI,CACAoQ,YAAY,SAXxB,sBAiBJuC,WAAW,oBACXC,UAxIb,SAAChB,GAGpB3J,EAAS/E,GAAQC,eAAeyO,KAsIAiB,UApIN,SAACjB,GAE3B3J,EAASwB,aAAK,YAmIkBqJ,aAAc,uBAGlB,kBAAC,KAAD,CAEIC,MAAM,kBAENC,UAAU,EACVC,OAAO,qBACPC,SAAS,kEACTjY,KAAK,cACLkY,SA3IX,SAACvB,GACtB3J,EAAS3E,GAAQC,eAAeqO,KA2IAiB,UAtIJ,SAACjB,QA0IL,yBAAKjX,UAAU,uBACX,kBAAC,IAAD,CAEIuG,GAAG,aAEH,kBAACG,EAAA,EAAD,CACIrB,GAAI,CAAEd,SAAS,QACfnE,QAAS,kBACLiX,EAAqB,QAH7B,6BAYflV,GACG,kBAACkE,EAAA,EAAD,CAAKhB,GAAI,CAAEvC,MAAO,OAAQwC,aAAc,IACpC,kBAACuB,EAAA,EAAD,c,oBC/PnB4R,GAAS/Q,YAAc,CAChCgR,cAAe,SAACvb,GAAD,OAASA,GACxBwb,cAAe,SAACxb,GAAD,OAASA,GACxByb,cAAe,SAACzb,GAAD,OAASA,KAGf0b,GAAmBnR,YAAc,CAC1CoR,wBAAyB,SAAC3b,GAAD,OAASA,GAClC4b,wBAAyB,SAAC5b,GAAD,OAASA,GAClC6b,wBAAyB,SAAC7b,GAAD,OAASA,K,UCuEvB8b,GApEM,WACjB,IAAMC,EAAOtZ,aAAY,SAACC,GAAD,OAAWA,EAAM4Y,OAAOS,QAD1B,EAEOhb,mBAASgb,GAFhB,mBAEhBC,EAFgB,KAEPC,EAFO,KAGjB9L,EAAWC,cAiBjB,OAfAhP,qBAAU,WACU,IAAZ4a,EACAlE,YAAW,WACP3H,EAASmL,GAAOG,eAAc,IAC9BtL,EAASlF,GAAc,SAGxB,KACI+Q,GACPlE,YAAW,WACPmE,EAAWD,EAAU,KACtB,OAER,CAACA,EAASD,IAGT,yBACIhZ,MAAO,CACHqE,SAAS,OACTjF,MAAM,OACNuD,SAAS,WACTkE,OAAO,OACPzB,aAAa,QAGjB,kBAACe,EAAA,EAAD,CACIhB,GAAI,CACAxC,SAAU,WACVe,QAAS,cACTlB,IAAI,SAGR,kBAAC2W,GAAA,EAAD,CACIC,eAAa,EACbpZ,MAAO,CAAEZ,MAAM,8BAGnB,kBAAC+G,EAAA,EAAD,CACIhB,GAAI,CACA3C,IAAK,EACLC,KAAM,EACN4W,OAAQ,EACRC,MAAO,EACP3W,SAAU,WACVe,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGpB,kBAACqC,EAAA,EAAD,CACIQ,QAAQ,UACRP,UAAU,MACVf,GAAI,CAAEd,SAAS,QACfjF,MAAM,kBAEO,IAAZ6Z,EAAgBA,EAAU,QCRpCM,I,OA3DC,WACZ,IAAMC,EAAY9Z,aAAY,SAACC,GAAD,OAAWA,EAAM4Y,OAAOiB,aAChDC,EAAS/Z,aAAY,SAACC,GAAD,OAAWA,EAAM4Y,OAAOkB,UAC7CC,EAAUha,aAAY,SAACC,GAAD,OAAWA,EAAM4Y,OAAOmB,WAIpD,OAHArb,qBAAU,WACNsa,GAAiBC,yBAAwB,KAC1C,IAEC,kBAAC,WAAD,KACI,yBAAK9Y,UAAU,WACX,wBAAI6Z,YAAU,gBAAgB7Z,UAAU,YAAxC,iBAIC0Z,GACG,wBAAIG,YAAU,iBAAiB7Z,UAAU,WAAzC,mBAKF0Z,GACE,yBAAK1Z,UAAU,kBACX,uBACIA,UAAU,yBACVE,MAAO,CAAE0D,QAAQ,qBAFrB,UAMA,6BACI,uBACI5D,UAAU,cACVE,MAAO,CAAE0D,QAAS,qBAIjBgW,EACAD,GAAU,kBAAC,GAAD,aCpBrCnb,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC0D,MAAO,CACHM,IAAI,MACJC,KAAK,MACLC,UAAU,wBACVC,SAAS,WACTC,MAAO,IACPC,gBAAiBrE,EAAMsE,QAAQC,WAAWC,MAC1CC,OAAO,+BACPC,UAAW1E,EAAM2E,QAAQ,GAEzBC,QAAQ,OACRC,QAAS,EACTC,aAAa,UACb,2BAA4B,CACxBV,MAAM,kBAEV,4BAA6B,CAEzBJ,IAAI,kBAER,4BAA6B,CAEzBA,IAAI,kBAER,gEAAiE,CAE7DA,IAAI,mBAGZe,OAAQ,CACJV,gBAAiBrE,EAAMY,MAAMoE,UAC7BpE,MAAOZ,EAAMY,MAAMoE,UACnBH,QAAS7E,EAAMiF,QAAQ,GACvBC,QAAS,OACTC,WAAY,SACZC,eAAgB,iBAEpBC,MAAO,CACHzE,MAAOZ,EAAMY,MAAMoE,UACnBvD,WAAY,IAEZ2C,MAAM,QAEVkB,QAAS,CACLT,QAAS7E,EAAMiF,QAAQ,IAE3BM,UAAW,CACPnB,MAAM,QAEVoB,aAAc,CACVN,QAAQ,QACRO,SAAS,QAGbC,IAAK,CACDC,OAAO,iBAEXC,YAAa,CACTD,OAAO,cACPE,SAAS,SACTjF,MAAOZ,EAAMY,MAAM4C,OAEvBC,SAAU,CACN7C,MAAO,WAEXkF,YAAa,CACTC,cAAc,OACd3B,MAAM,cACNxD,MAAM,UACNa,WAAW,MACXoE,SAAS,kBACTF,OAAO,eAEXK,YAAa,CACTD,cAAc,OACd3B,MAAM,cACNxD,MAAM,UACNiF,SAAS,kBACTI,eAAe,OACf,cAAe,CACXrF,MAAM,YAGdsF,KAAM,CACFC,WAAW,MACXC,UAAU,MAEdC,KAAM,CACFD,UAAU,KACVD,WAAW,OAEfvE,KAAM,CACFwE,UAAW,EACXE,OAAO,eA+NA/F,gBAfS,SAACY,GAAD,gBAGpBiC,gBAAiBjC,EAAMkC,KAAKD,gBAC5BE,QAASnC,EAAMoC,KAAKC,MACpBnF,IAAK8C,EAAMkC,KAAKG,MAChBC,SAAUtC,EAAMuC,MAAMD,UANF,gCAOHtC,EAAMkC,KAAKD,iBAPR,yBAQVjC,EAAMkC,KAAKM,UARD,2BASRxC,EAAMoC,KAAKK,YATH,2BAURzC,EAAMoC,KAAKM,YAVH,IAaE,GAEXtD,EA3NI,SAACC,GAAW,IAAD,EACpBa,EAAUvB,KAMZ2D,EAaAjD,EAbAiD,SAEAH,EAWA9C,EAXA8C,QAEAK,EASAnD,EATAmD,SACAC,EAQApD,EARAoD,WAGAC,EAKArD,EALAqD,WAfsB,EAiDArE,mBAAS,IAjDT,mBAiDnBR,EAjDmB,KAiDZY,EAjDY,KAkDpBwb,EAAUC,iBAAO,MACjBC,EAAmBpa,aACrB,SAACC,GAAD,OAAWA,EAAMoa,WAAWD,oBAE1BzS,EAAO3H,aAAY,SAACC,GAAD,OAAWA,EAAMoa,WAAW1S,QAC/C2S,EAAYta,aAAY,SAACC,GAAD,OAAWA,EAAMoa,WAAWC,aACpD5M,EAAWC,cAEXtI,EAAc,WAChBqI,EAAS4B,GAAeG,yBACxB/Q,EAAS,KAYb,OAFAC,qBAAU,cAAU,IAGhB,kBAAC,WAAD,KACK2b,EACG,kBAAC,GAAD,MAEA,kBAAChV,EAAA,EAAD,CAAOzF,KAAMua,GACT,yBAAKha,UAAWD,EAAQqC,OACpB,yBACIlC,MAAO,CACH0D,QAAQ,OAERL,QAAS,EACTc,OAAQ,IAIZ,kBAACc,EAAA,EAAD,CACI7E,MAAM,EACN8E,SAAS,UACTC,GAAI,CACAvC,MAAM,OACNc,QAAQ,UAGZ,yBACI1D,MAAO,CACH0D,QAAQ,OACRE,eAAe,kBAGnB,uBACI5D,MAAO,CACHC,WAAW,MACXoE,SAAS,OACTe,aAAa,QAGf/C,EAEI,SADA,mBAGV,kBAAC,IAAD,CACIvC,UAAWD,EAAQO,KACnBF,QAAS,kBAAM6E,UAK/B,yBACIjF,UAAWD,EAAQ0D,OACnBvD,MAAO,CAAE4E,UAAU,QAEnB,0BAAM9E,UAAWD,EAAQgE,OACpBzB,GAAcD,GACX,kBAACkD,EAAA,EAAD,CACIC,OAAK,EACLzB,MAAO,wBACP0B,UAAsB,OAEtB,kBAACC,EAAA,GAAD,GACIC,UAAU,EACVC,GAAG,oBACHC,MAAO,uBACPC,YAAY,qBAJhB,4BAKgB,qBALhB,oCAMkB/F,EAAQkE,UAN1B,iCAOW5B,GAPX,mBAQQ,CAAEiD,aAAa,SARvB,KAYR,kBAACC,EAAA,EAAD,CACIC,OAAK,EACLzB,MAAO,iBACP0B,UAAsB,OAEtB,kBAACC,EAAA,EAAD,CACIM,UAAQ,EACRL,UAAU,EACVC,GAAG,oBACHC,MAAO,iBACPC,YAAY,iBACZ9F,UAAWD,EAAQkE,UACnBvG,MAAO6J,EAEP4S,SAAUL,KApItC,kBAAC,WAAD,KACK9X,GACG,kBAACmE,EAAA,EAAD,CAAYnG,UAAWD,EAAQuE,YAAa8B,UAAU,OAClD,0BAAMlG,MAAO,CAAEmE,OAAO,gBAAtB,YAGP3G,EACG,kBAAC2I,EAAA,EAAD,CAAKrG,UAAWD,EAAQ6E,MACpB,kBAACuB,EAAA,EAAD,CACIC,UAAU,MACVE,cAAY,EACZtG,UAAWD,EAAQyE,aAEnB,kBAAC,KAAD,CAAaa,GAAI,CAAEC,aAAa,SALpC,aASJ,MAyHI,kBAACe,EAAA,EAAD,CACIzC,QAAQ,OACR4C,cAAc,cACdC,GAAI,EACJzG,UAAWD,EAAQqE,KAEnB,kBAACiC,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,UACNyG,UAAU,EACV3F,QA/GjB,SAAC6F,GAEZmU,UAAUC,UAAUC,UAChBR,EAAQlD,QAAQ2D,cAAcvc,cAElCM,EAASwb,EAAQlD,QAAQlZ,SAsGD,SAUJ,kBAAC2I,EAAA,EAAD,CAAKO,GAAI,GACL,kBAACF,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,QACNc,QAAS,kBAAM6E,MAHnB,YAWP9C,GACG,kBAACkE,EAAA,EAAD,CAAKhB,GAAI,CAAEvC,MAAO,SACd,kBAAC+D,EAAA,EAAD,aCtS1BrI,GAAYC,aAAW,SAAC+b,GAAD,MAAW,CACpCC,cAAe,CAEX7W,QAAQ,OACR4C,cAAc,SACd1B,UAAU,OACV4V,yBAAyB,SACzBC,WAAW,SACX5T,OAAO,gBAEX,2BAA4B,CACxB,KAAM,CACFjC,UAAW,SAEf,OAAQ,CACJ8V,QAAS,EACT9V,UAAW,QAGnB,4BAA6B,CACzB,KAAM,CACFD,WAAY,UAEhB,OAAQ,CACJ+V,QAAS,EACT/V,WAAY,QAGpBgW,QAAS,CAEL/X,MAAO,iBACPgY,MAAO,QACPlX,QAAS,kBACT4C,cAAe,oBACf3H,OAAQ,yBACR6b,yBAAyB,SACzBC,WAAW,SACXI,UAAU,mCAEdjb,KAAK,aAEDgD,MAAO,iBACPgY,MAAO,kBACP/T,OAAQ,IACRlE,SAAU,mBACV2W,MAAO,IACP3a,OAAQ,OACR6b,yBAAyB,SACzBC,WAAW,SACXI,UAAU,kCACT,2BAA6B,CAC1BjW,UAAU,kBAGlB6O,WAAY,CACR/P,QAAQ,mBAEZoX,WAAY,CACRnc,OAAO,QACPoc,UAAU,QACVnW,UAAU,YAgTZ/F,GAAoB,CACtBC,kBAAmBtC,EACnBwe,elGnYmB,SAAC1b,GAAD,MAAQ,CAC3B5C,KAAM,WACNC,QAAS,CACL2C,OkGiYJ2b,iB7FlYqB,iBAAO,CAC5Bve,KCHe,aDIfC,QAAS,O6FiYTgF,kBAAmBR,EACnB8V,aAAcrP,GAGZyP,GAActY,aAjBI,SAACY,GAAD,MAAY,CAChCub,SAAUvb,EAAMoC,KAAKmZ,SACrB5Y,YAAa3C,EAAMuC,MAAMI,YACzBV,gBAAiBjC,EAAMkC,KAAKD,gBAC5B/E,IAAK8C,EAAMoC,KAAKC,MAChBmZ,SAAUxb,EAAMkC,KAAKG,MACrBgY,UAAWra,EAAMuC,MAAM8X,aAWkBnb,IAE9ByY,eAAQD,GAARC,EAtTE,SAAC,GAcX,IAAD,IAZF0D,EAYE,EAZFA,eAEc1b,GAUZ,EAXF4b,SAWE,EAVFE,MAASre,KACTuF,EASE,EATFA,YAEAX,GAOE,EARFsZ,iBAQE,EAPFtZ,mBACAC,EAME,EANFA,gBAEA/E,GAIE,EALFoa,aAKE,EAJFpa,KAGAwe,GACE,EAHFF,SAGE,EADFE,YACE,EACoBxd,EAAgB,OAAQ,IAD5C,mBACGyd,EADH,KACSC,EADT,OAiBoB1d,EAAgB,MAAO,IAjB3C,mBAiBK2d,EAjBL,KAiBUC,EAjBV,OAkBkB5d,EAAgB,KAAM,IAlBxC,mBAkBK6d,EAlBL,KAkBSC,EAlBT,OAmB0B3d,mBAAS,IAnBnC,mBAmBK4d,EAnBL,KAmBaC,EAnBb,KAsBIpc,EAASC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,UAC3Cqc,EAASpc,aAAY,SAACC,GAAD,OAAWA,EAAMoa,WAAWC,aACjDvG,EAAa/T,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAK6T,cAC/CC,EAAchU,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAK8T,eAgEhD7T,EAAUvB,KACVyd,EAAWV,IAGXvB,EAAmBpa,aACrB,SAACC,GAAD,OAAWA,EAAMoa,WAAWD,oBAI1B1M,EAAWC,cAGjBhP,qBAAU,WACN+O,EAASlF,GAAc,OACvB8S,EAAe1b,KAChB,IAEHjB,qBAAU,WACN,IAAM2d,EAAUjH,YAAW,WACvB8G,EAAU,qCAAD,OAEHP,EAFG,qCAGFE,EAHE,mDAIWE,EAJX,0CAOV,KAEH,OAAO,kBAAMO,aAAaD,MAC3B,CAACV,EAAME,EAAKE,IAEf,IAAMQ,EAAY,SAACnW,GACfA,EAAE+N,iBACF/N,EAAEoW,YAAc,IAEpB9d,qBAAU,WAEN,OADAmP,OAAO4O,iBAAiB,eAAgBF,GACjC,WACH1O,OAAO6O,oBAAoB,eAAgBH,MAEhD,IAEH,IA2BM3Z,EAAmB,WACrBZ,KAGJ,OACI,yBAWI3B,MAAO,CACH0D,QAAQ,OACR4C,cAAc,SACd1B,UAAU,QAEd9E,UAAWC,IAAG,iBAAD,eACRF,EAAQ0a,eAA2B,IAAX9a,KAG7B,kBAAC,WAAD,KAGI,kBAAC,EAAD,CACI6C,YAAaA,EACbC,iBAAkB,kBAAMA,KACxBX,gBAAiBA,EACjB/E,IAAKA,IAET,kBAAC,GAAD,CACIid,iBAAkBA,EAElBlY,gBAAiBA,KAQnBka,GACE,kBAAC,WAAD,KACI,yBACIhc,UAAWC,IACP,OACA,YAFS,mBAIJF,EAAQ8a,SAAqB,IAAXlb,GAJd,cAKJI,EAAQ4T,YAA4B,IAAfA,GALjB,kBAQJsI,EAASpB,SACK,IAAXlb,IAAmC,IAAhBiU,KAI/B,kBAAC,EAAD,CACIzU,SAAS,MACTC,YAAY,OACZ1B,MAAO8d,EACPnc,SAAUoc,EACVnc,MAAM,UACNC,IAAI,OACJC,EAAGA,IAEP,kBAAC,EAAD,CACIL,SAAS,MACTC,YAAY,MACZ1B,MAAOge,EACPrc,SAAUsc,EACVrc,MAAM,eACNC,IAAI,MACJC,EAAGA,IAEP,kBAAC,EAAD,CACIF,MAAM,OACNH,SAAS,aACTC,YAAY,KACZ1B,MAAOke,EACPvc,SAAUwc,EACVtc,IAAI,KACJC,EAAGA,KAGX,yBACIQ,UAAWC,IACP,OACA,QAFS,mBAIJF,EAAQD,MAAkB,IAAXH,GAJX,cAKJI,EAAQib,YAA4B,IAAfrH,GALjB,kBAQJsI,EAASnc,MACK,IAAXH,IAAmC,IAAhBiU,KAI/B,4BACIkI,OAAQA,EACR/X,MAAM,SACNyY,QAAQ,gBACRC,YAAY,IACZ3Z,MAAM,OACNjE,OAAO,gBCrWxB6d,GARE,WACb,OACI,0C,+CC6DFnF,GAActY,aApBI,SAACY,GAAD,oBAGpBiC,gBAAiBjC,EAAMkC,KAAKD,gBAE5B/E,IAAK8C,EAAMkC,KAAKG,MAChBC,SAAUtC,EAAMuC,MAAMD,UANF,kBAOHtC,EAAMkC,KAAKD,mBAaa,M,IAE9B0V,YAAQD,GAARC,EAvDA,SAACtY,GAAW,IACf4C,EAAoB5C,EAApB4C,gBACR,OACI,gBAACuE,EAAA,EAAD,CAAKhB,GAAI,CAAEsX,SAAU,IACjB,gBAACC,GAAA,EAAD,CACI/Z,SAAS,SACTvD,MAAM,cACN+F,GAAI,CAAEtC,gBAAiB,6BAEvB,gBAAC8Z,GAAA,EAAD,KACI,gBAAC/H,GAAA,EAAD,CACI5H,KAAK,QACL6H,KAAK,QACLzV,MAAM,UACN0V,aAAW,OACX3P,GAAI,CAAEuB,GAAI,IAEV,gBAAC,KAAD,OAEJ,gBAACT,EAAA,EAAD,CACIQ,QAAQ,KACRP,UAAU,MACVf,GAAI,CAAEsX,SAAU,IAHpB,SAOE7a,GAAmB,gBAAC4E,EAAA,EAAD,CAAQpH,MAAM,WAAd,e,4BC6D1BwH,GAlGA,SAACpI,GAAD,cAAY,CACvBoe,mBAAoB,CAChBnY,eAAe,kBACfrF,MAAO,kBACP2D,WAAW,UACX,UAAW,CACPA,WAAW,2BACX0B,eAAe,oBAIvBoY,aAAc,CACVpY,eAAe,kBACfrF,MAAO,qBACP,UAAW,CACP2D,WAAW,2BACX0B,eAAe,kBACfrF,MAAM,oBAId0d,aAAW,mBACN,2BAA6B,CAC1Bla,MAAM,iBAFH,cAIP,sBAJO,GAOHma,mBAAmB,SACnBC,iBAAiB,SACjBC,eAAe,QAEfta,SAAU,WACVua,UAAW,aACXta,MAAO,IACPiT,SAAU,IACVhP,OAAQ,IACRkU,UAAU,OACVpc,OAAO,QAEPD,UAAU,UAnBP,cAoBF,2BAA6B,CAC1BkE,MAAM,mBACNiT,SAAS,qBAtBV,cAwBF,0BAA4B,CACzBjT,MAAM,mBACNiT,SAAS,qBA1BV,cA4BF,0BAA4B,CACzBjT,MAAM,mBACNiT,SAAS,qBA9BV,cAgCF,0BAA4B,CACzBlT,SAAS,sBACTC,MAAM,mBACNiT,SAAS,qBAnCV,kBAsCN,2BAA6B,CAC1BhP,OAAO,OACPlI,OAAO,kBACPoc,UAAU,oBAzCP,cA2CN,0BAA4B,CACzBpY,SAAS,mBACTkE,OAAO,OAEPlI,OAAO,kBACPoc,UAAU,oBAhDP,cAkDN,0BAA4B,CACzBpY,SAAS,mBACTkE,OAAO,OAEPlI,OAAO,kBACPoc,UAAU,kBACVnW,UAAU,SAxDP,cA0DN,0BAA4B,CACzBjC,SAAS,mBACTkE,OAAO,OAEPlI,OAAO,kBACPoc,UAAU,kBAEVlF,SAAS,iBAjEN,GAoEXxO,KAAM,CACF3D,QAAQ,QACRe,eAAe,kBACfrF,MAAM,wBCAC+M,eAAWvF,GAAXuF,EAxEC,SAACnN,GAAU,IAEfa,EAAuDb,EAAvDa,QAAsBsd,GAAiCne,EAA9Coe,YAA8Cpe,EAAjCme,iBAAiB7J,EAAgBtU,EAAhBsU,YACzC+J,EAAe3d,aAAY,SAACC,GAAD,OAAWA,EAAM4T,SAAS8J,gBACrD5P,EAAW/N,aAAY,SAACC,GAAD,OAAWA,EAAM4T,SAAS9F,YAMjD6P,EAAe,WACjB,IAAM/P,EAAIC,OAAOC,SAASjB,KAAKkB,WAU/B,OATuBE,GAAeC,OAClChB,GACAI,IAEwBe,QACxB,SAACC,GAAD,OACIV,EAAEW,QAAQD,EAAOnB,KAAKqB,MAAM,EAAGF,EAAOnB,KAAKsB,YAAY,OACvD,MAyCZ,OACI,gBAACmP,GAAA,EAAD,CACIhe,KAAM+T,EACNkK,QAAS,WAxDbL,GAwDgC,IAC5Brd,UAAWD,EAAQid,YACnBrW,QAAQ,cAzCG,WACf,IAEMgX,OACc,GAAhBJ,GAA0BA,EAAa5O,OACjC4O,EACAC,IACAA,IACA,GAyBV,OAvBI,uBAAKxd,UAAWD,EAAQ8N,MACpB,gBAAC+P,GAAA,EAAD,CAAMxX,UAAU,OACXuX,EAAmB3P,KAAI,SAACG,GAAD,OACpB,gBAAC,IAAD,CACI5H,GAAI4H,EAAOnB,KACXC,MAAOkB,EAAOlB,MACdjN,UAAWD,EAAQwH,KACnB9J,IAAK0Q,EAAOnB,MAEZ,gBAAC6Q,GAAA,EAAD,CACI7d,UACI2N,GAAYA,IAAaQ,EAAOnB,KAC1BjN,EAAQ+c,mBACR/c,EAAQgd,cAGjB5O,EAAOxR,YAiB3BmhB,OCeEhX,GAtGA,SAACpI,GAAD,gBAAY,CACvBqf,WAAS,GACLna,QAAQ,OACR4C,cAAc,MACdyU,UAAU,QACVnW,UAAW,IAJN,cAKJ,0BAA4B,CACzBjC,SAAS,sBACTC,MAAM,oBAPL,cAUJ,0BAA4B,CACzBD,SAAS,sBACTC,MAAM,kBACN+B,WAAW,mBAbV,cAeJ,0BAA4B,CACzBhC,SAAS,sBACTC,MAAM,kBACN+B,WAAW,iBAlBV,cAoBJ,0BAA4B,CACzBhC,SAAS,sBACTC,MAAM,oBAtBL,GA4CTkB,SAAO,GACHlB,MAAM,OACNS,QAAS,GACToX,WAAYjc,EAAMsf,YAAYC,OAAO,SAAU,CAC3CC,OAAQxf,EAAMsf,YAAYE,OAAOC,MACjCC,SAAU1f,EAAMsf,YAAYI,SAASC,kBALtC,cAOF,2BAA6B,CAC1Bxb,SAAS,sBACTC,MAAM,OACNuB,OAAO,oBAVR,cAYF,2BAA6B,CAC1BxB,SAAS,sBACTC,MAAM,OACN+B,WAAW,UAfZ,cAiBF,0BAA4B,CACzBhC,SAAS,sBACTC,MAAM,OACN+B,WAAW,mBApBZ,cAsBF,0BAA4B,CACzBhC,SAAS,sBACTC,MAAM,OACN+B,WAAW,mBAzBZ,cA2BF,0BAA4B,CACzBR,OAAQ,IA5BT,cA8BF,0BAA4B,CACzBxB,SAAS,sBACTC,MAAM,OACN+B,WAAY,IAjCb,GAoCPyZ,UAAQ,GACJzZ,YAAa,IACb8V,WAAYjc,EAAMsf,YAAYC,OAAO,SAAU,CAC3CC,OAAQxf,EAAMsf,YAAYE,OAAOK,QACjCH,SAAU1f,EAAMsf,YAAYI,SAASI,iBAJrC,cAMH,2BAA6B,CAC1B3Z,WAAW,iBAPX,cASH,0BAA4B,CACzBA,WAAW,iBAVX,cAYH,0BAA4B,CACzBA,WAAW,iBAbX,cAeH,0BAA4B,CACzBA,WAAW,iBAhBX,KC3CGwH,eAAWvF,GAAXuF,EA3BE,SAACnN,GAAW,IACjBuf,EAAmCvf,EAAnCuf,SAAUC,EAAyBxf,EAAzBwf,YAAa3e,EAAYb,EAAZa,QACzByT,EAAc5T,aAAY,SAACC,GAAD,OAAWA,EAAM4T,SAASD,eACpDlG,EAAWC,cAMjB,OALAhP,qBAAU,WAEN+O,EAAS9C,GAAYA,YAAYkU,EAAYpD,MAAMre,QACpD,IAGC,yBAAK+C,UAAWD,EAAQge,WACpB,kBAAC,GAAD,CAASvK,YAAaA,IACtB,yBACIxT,UAAW2e,IAAG5e,EAAQiE,QAAT,eACRjE,EAAQue,UAA2B,IAAhB9K,KAGvBiL,O,UCZFG,GAZQ,SAAC1f,GAAW,IACZ2f,EAAuB3f,EAAlCkH,UAAyB0Y,EADH,aACY5f,EADZ,eAE9B,OACI,kBAAC,IAAD,iBACQ4f,EADR,CAEIpI,OAAQ,SAACgI,GAAD,OACJ,kBAAC,GAAD,iBAAcI,EAAd,CAAoBJ,YAAaA,IAAcG,EAAUH,S,wCCqBnEK,GAAaxL,cAAiB,SAAoBrU,EAAO8f,GAC3D,OAAO,gBAACC,GAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAAS9f,OA2IhCigB,OAxIf,WAEI,IAAM1f,EAAOG,aAAY,SAACC,GAAD,OAAWA,EAAM4T,SAAShU,QAC7CkO,EAAW/N,aAAY,SAACC,GAAD,OAAWA,EAAM4T,SAAS9F,YAEjD4P,EAAe3d,aAAY,SAACC,GAAD,OAAWA,EAAM4T,SAAS8J,gBACrDjQ,EAAWC,cAMXtI,EAAc,WAChBqI,EAASjF,GAAY,OACrBiF,EAAStQ,EAAO,SAEhBsQ,EAAS5N,GAAQA,SAAQ,KAGvB0f,EAAoB,WACtB9R,EAAS5N,GAAQA,SAAQ,KAGvBqd,EAAe,CACjBpY,eAAe,kBACfrF,MAAO,qBACP,WAAY,CACR2D,WAAW,2BACX0B,eAAe,kBACfrF,MAAM,oBAIRwd,EAAqB,CACvBnY,eAAe,kBACfrF,MAAO,kBACP2D,WAAW,UACX,WAAY,CACRA,WAAW,2BACX0B,eAAe,oBAqCvB,OACI,2BACI,gBAAC0a,GAAA,EAAD,CACI1L,YAAU,EACVlU,KAAMA,EACNie,QAAS0B,EACTE,oBAAqBP,IAErB,gBAACnC,GAAA,EAAD,CACIvX,GAAI,CACAxC,SAAU,WAEVI,WAAW,YAGf,gBAAC4Z,GAAA,EAAD,KACI,gBAAC/H,GAAA,EAAD,CACIC,KAAK,QACLzV,MAAM,UACNc,QAASgf,EACTpK,aAAW,SAEX,gBAAC,KAAD,OAEJ,gBAAC7O,EAAA,EAAD,CACId,GAAI,CAAEka,GAAI,EAAGtY,KAAM,GACnBN,QAAQ,KACRP,UAAU,OAEV,gBAACM,EAAA,EAAD,CAAQ8Y,WAAS,EAACpf,QAASgf,GACvB,gBAAC,IAAD,CACI7Y,GAAG,QACHrG,MAAO,CACHZ,MAAM,OACNqF,eAAe,SAJvB,WAWR,gBAAC+B,EAAA,EAAD,CAAQ8Y,WAAS,GACb,gBAAC,IAAD,CACIjZ,GAAG,WACHrG,MAAO,CACHZ,MAAM,OACNqF,eAAe,SAJvB,YAYZ,gBAACiZ,GAAA,EAAD,KAtFIL,EACNA,EAAavP,KAAI,SAACG,GAEd,OACI,gBAAC,WAAD,CAAgB1Q,IAAK0Q,EAAOnB,MAExB,gBAAC,IAAD,CACIzG,GAAE,UAAK4H,EAAOnB,MACd9M,MAAO,CAAEyE,eAAe,SAGxB,gBAACkZ,GAAA,EAAD,CACI4B,QAAM,EACNrf,QAAS6E,EACTI,GACIsI,GAAYA,IAAaQ,EAAOnB,KAC1B8P,EACAC,GAGT5O,EAAOxR,OAIhB,gBAAC4P,GAAA,EAAD,UAIZ,SCwMRxN,GAAoB,CAKtBoY,aAAcrP,EACdsP,mBAAoB9V,EACpB+V,qBAAsBjP,IAGpBmP,GAActY,aApBI,SAACY,GAAD,oBAGpBiC,gBAAiBjC,EAAMkC,KAAKD,gBAE5B/E,IAAK8C,EAAMkC,KAAKG,MAChBC,SAAUtC,EAAMuC,MAAMD,UANF,kBAOHtC,EAAMkC,KAAKD,mBAaa/C,IAE9ByY,eAAQD,GAAalL,YAAWvF,GAAhC0Q,EAxRE,SAACtY,GAAW,IAAD,EAEpBa,EAOAb,EAPAa,QACAhD,EAMAmC,EANAnC,IACAoa,EAKAjY,EALAiY,aAEAhV,GAGAjD,EAJAkY,mBAIAlY,EAHAiD,UANoB,GASpBjD,EAFAmY,qBAEAnY,EADA4C,gBAG0B5D,mBAAS,CACnCuZ,MAAO,GACP9a,KAAM,GACN+a,SAAU,GACVgI,gBAAiB,MAfG,mBAWjBxM,EAXiB,KAWRyE,EAXQ,KAiBlBrK,EAAWC,cACXoS,EAAc/f,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAK4d,eAEtDphB,qBAAU,WAEN4Y,EAAa,QACd,IAGH,IAAM9X,EAAW,SAAC4G,GACd0R,EAAW,2BACJzE,GADG,kBAELjN,EAAEC,OAAOvJ,KAAOsJ,EAAEC,OAAOxI,UAiC5BkiB,EACF,kBAAC,IAAD,CACIrZ,GAAG,SACHH,UAAW,gBAAGkV,EAAH,EAAGA,MAAH,OAAe,kBAAC,GAAD,CAAOA,MAAOA,OAIhD,OACI,kBAAC,WAAD,KACK3d,aAAY,aACTiiB,EAEA,kBAAC,WAAD,KACI,yBACI5f,UAAWD,EAAQmH,YACnBhH,MAAO,CAAE4E,UAAU,OAASjG,OAAO,UAEnC,yBAAKmB,UAAWD,EAAQuH,QACpB,kBAACsQ,EAAA,EAAD,CACIvS,IAAE,mBACG,4BAA8B,CAC3BP,UAAU,QAFhB,cAIG,2BAA6B,CAC1BA,UAAU,OALhB,cAOG,2BAA6B,CAC1BA,UAAU,QARhB,IAYF,kBAAC+S,EAAA,EAAD,CAAa3X,MAAO,CAAE4C,MAAM,SACxB,0BAAMgV,OAAO,IACT,yBAAK9X,UAAU,6BACX,kBAACmG,EAAA,EAAD,CACIQ,QAAQ,UACRtB,GAAI,CAAEd,SAAS,WAFnB,yBAOJ,kBAACmB,EAAA,EAAD,CACIE,GAAG,QACHC,MAAM,QACN7F,UAAWD,EAAQkE,UACnB8T,WAAS,EACT1T,OAAO,SACP1H,KAAK,QACLe,MAAOwV,EAAQuE,MACfpY,SAAUA,IAEd,kBAACqG,EAAA,EAAD,CACIE,GAAG,OACHC,MAAM,OACN7F,UAAWD,EAAQkE,UACnB8T,WAAS,EACT1T,OAAO,SACP1H,KAAK,OACLe,MAAOwV,EAAQvW,KACf0C,SAAUA,IAEd,kBAACqG,EAAA,EAAD,CACIE,GAAG,WACHC,MAAM,WACN7F,UAAWD,EAAQkE,UACnB8T,WAAS,EACT1T,OAAO,SACPzH,KAAK,WACLD,KAAK,WACLe,MAAOwV,EAAQwE,SACfrY,SAAUA,IAEd,kBAACqG,EAAA,EAAD,CACIE,GAAG,kBACHC,MAAM,mBACN7F,UAAWD,EAAQkE,UACnB8T,WAAS,EACT1T,OAAO,SACPzH,KAAK,WACLD,KAAK,kBACLe,MAAOwV,EAAQwM,gBACfrgB,SAAUA,IAGbtC,GACG,kBAACoI,EAAA,EAAD,CACIwB,QAAQ,WACRvB,SACIua,EACM,QACA,UAEV3f,UAAWD,EAAQqH,OAElBrK,GAIT,kBAACsJ,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,UACNyY,WAAS,EACTnb,KAAK,SACLoD,UAAWD,EAAQsH,IACnBjH,QAtIrB,SAAC6F,GACpBA,EAAE+N,iBACF1G,EAAS7F,EAASE,gBAAgBuL,MA8HE,aAuDJ,yBAAKlT,UAAU,uBACX,kBAAC,IAAD,CAGIuG,GAAG,UAEH,kBAACG,EAAA,EAAD,CACIrB,GAAI,CACAZ,cAAc,OACdF,SAAS,SACTF,OAAO,UACPd,QAAS,GAEbnD,QAAS,kBACLkN,EACIlF,GAAc,SAT1B,sCAoBfjG,GACG,kBAACkE,EAAA,EAAD,CACIhB,GAAI,CAAEvC,MAAO,OAAQwC,aAAc,IAEnC,kBAACuB,EAAA,EAAD,eCzFlC9H,GAAoB,CAKtBoY,aAAcrP,EACdsP,mBAAoB9V,EACpB+V,qBAAsBjP,IAGpBmP,GAActY,aApBI,SAACY,GAAD,oBAGpBiC,gBAAiBjC,EAAMkC,KAAKD,gBAE5B/E,IAAK8C,EAAMkC,KAAKG,MAChBC,SAAUtC,EAAMuC,MAAMD,UANF,kBAOHtC,EAAMkC,KAAKD,mBAaa/C,IAE9ByY,eAAQD,GAAalL,YAAWvF,GAAhC0Q,EA1KQ,SAACtY,GAAW,IAE3Ba,EAMAb,EANAa,QACAhD,EAKAmC,EALAnC,IAGAoF,GAEAjD,EAJAiY,aAIAjY,EAHAkY,mBAGAlY,EAFAiD,UAN0B,GAQ1BjD,EADAmY,qBAG0BnZ,mBAAS,CACnCuZ,MAAO,GACPoI,eAAgB,MAZU,mBAUvB3M,EAVuB,KAUdyE,EAVc,KAcxBrK,EAAWC,cACXoS,EAAc/f,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAK4d,eAOhDtgB,EAAW,SAAC4G,GACd0R,EAAW,2BACJzE,GADG,kBAELjN,EAAEC,OAAOvJ,KAAOsJ,EAAEC,OAAOxI,UAQlC,OACI,kBAAC,WAAD,KACI,yBAAKsC,UAAWD,EAAQoH,aACpB,yBAAKnH,UAAWD,EAAQ+H,OACpB,kBAAC8P,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,0BAAMC,OAAO,IACT,yBAAK9X,UAAU,wBACX,kBAACmG,EAAA,EAAD,CACIQ,QAAQ,UACRtB,GAAI,CACAd,SAAS,SACTpE,WAAW,QAJnB,oBAUJ,kBAACuF,EAAA,EAAD,CACIE,GAAG,QACHC,MAAM,QACN7F,UAAWD,EAAQkE,UACnB8T,WAAS,EACT1T,OAAO,SACP1H,KAAK,QACLe,MAAOwV,EAAQuE,MACfpY,SAAUA,IAEd,kBAAC8G,EAAA,EAAD,CACIQ,QAAQ,UACRtB,GAAI,CACAd,SAAS,SACTyC,UAAU,SAGd,0BACI9G,MAAO,CACH8G,UAAU,OACVlE,MAAM,SAHd,yEAUJ,kBAAC4C,EAAA,EAAD,CACIE,GAAG,iBACHC,MAAM,iCACN7F,UAAWD,EAAQkE,UACnB8T,WAAS,EACT1T,OAAO,SACPzH,KAAK,WACLD,KAAK,iBACLe,MAAOwV,EAAQ2M,eACf/Z,YAAW,iCACXzG,SAAUA,IAGbtC,GACG,kBAACoI,EAAA,EAAD,CACIwB,QAAQ,WACRvB,SAAUua,EAAc,QAAU,UAClC3f,UAAWD,EAAQqH,OAElBrK,GAIT,kBAACsJ,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,UACNyY,WAAS,EACTnb,KAAK,SACLoD,UAAWD,EAAQsH,IACnBjH,QAAS,SAAC6F,GAAD,OAhFlB,SAACA,GACxBA,EAAE+N,iBACF1G,EAASrE,GAAaC,oBAAoBgK,IA8EM4M,CAAmB7Z,KANvC,YAUA,kBAAC,IAAD,CAAMM,GAAG,YAAYvG,UAAWD,EAAQyH,OACpC,kBAACd,EAAA,EAAD,CACIrB,GAAI,CACAzB,QAAQ,QACRS,OAAO,cACPd,QAAS,EACTT,MAAM,OACNkE,UAAU,SACVvC,cAAc,OACdF,SAAS,SACT,UAAW,CACPjB,QAAQ,SAGhBlD,QAAS,kBACLkN,EAASlF,GAAc,SAd/B,6BAuBfjG,GACG,kBAACkE,EAAA,EAAD,CAAKhB,GAAI,CAAEvC,MAAO,OAAQwC,aAAc,IACpC,kBAACuB,EAAA,EAAD,cCgE1B9H,GAAoB,CAKtBoY,aAAcrP,EACdsP,mBAAoB9V,EACpB+V,qBAAsBjP,GACtB2X,mBAAoB5X,IAGlBoP,GAActY,aArBI,SAACY,GAAD,oBAGpBiC,gBAAiBjC,EAAMkC,KAAKD,gBAE5B/E,IAAK8C,EAAMkC,KAAKG,MAChBC,SAAUtC,EAAMuC,MAAMD,UANF,kBAOHtC,EAAMkC,KAAKD,mBAca/C,IAE9ByY,eAAQD,GAAalL,YAAWvF,GAAhC0Q,EAjNU,SAACtY,GAAW,IAE7Ba,EAOAb,EAPAa,QACAhD,EAMAmC,EANAnC,IAGAoF,GAGAjD,EALAiY,aAKAjY,EAJAkY,mBAIAlY,EAHAiD,UAEAmZ,GACApc,EAFAmY,qBAEAnY,EADAoc,OAR4B,EAWFpd,mBAAS,CACnC8hB,YAAa,GACbN,gBAAiB,KAbW,mBAWzBxM,EAXyB,KAWhByE,EAXgB,KAe1BrK,EAAWC,cACXoS,EAAc/f,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAK4d,eAChDhG,EAAS/Z,aAAY,SAACC,GAAD,OAAWA,EAAM4Y,OAAOkB,UAC7CsG,EAAWrgB,aAAY,SAACC,GAAD,OAAWA,EAAM4Y,OAAOwH,YAI/C5gB,EAAW,SAAC4G,GACd0R,EAAW,2BACJzE,GADG,kBAELjN,EAAEC,OAAOvJ,KAAOsJ,EAAEC,OAAOxI,UAuBlC,OAVAa,qBAAU,WAEN+O,EACIuL,GAAiBC,wBAAwB,CACrCmH,UAAU,EACVhjB,IAAKqe,EAAMre,IAAIoR,MAAM,QAG9B,IAGC,kBAAC,WAAD,KACK4R,EACG,kBAAC,GAAD,MAEA,yBAAKjgB,UAAWD,EAAQoH,aACpB,yBAAKnH,UAAWD,EAAQ+H,OACpB,kBAAC8P,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,0BAAMC,OAAO,IACT,yBAAK9X,UAAU,wBACX,kBAACmG,EAAA,EAAD,CACIQ,QAAQ,UACRtB,GAAI,CACAd,SAAS,SACTpE,WAAW,QAJnB,oBAUJ,kBAACuF,EAAA,EAAD,CACIE,GAAG,cACHC,MAAM,eACN7F,UAAWD,EAAQkE,UACnB8T,WAAS,EACT1T,OAAO,SACP1H,KAAK,cACLC,KAAK,WACLc,MAAOwV,EAAQ8M,YACf3gB,SAAUA,IAEd,kBAACqG,EAAA,EAAD,CACIE,GAAG,kBACHC,MAAM,2BACN7F,UAAWD,EAAQkE,UACnB8T,WAAS,EACT1T,OAAO,SACPzH,KAAK,WACLD,KAAK,kBACLe,MAAOwV,EAAQwM,gBACf5Z,YAAW,2BACXzG,SAAUA,IAEd,kBAAC,IAAD,CACIkH,GAAG,iBACHvG,UAAWD,EAAQwH,MAEnB,kBAACb,EAAA,EAAD,CACIrB,GAAI,CACAzB,QAAQ,QACRS,OAAO,cACPd,QAAS,EACTT,MAAM,OACNkE,UAAU,QACVvC,cAAc,OACdF,SAAS,OACT,UAAW,CACPjB,QAAQ,SAGhBlD,QAAS,kBACLkN,EAASlF,GAAc,SAd/B,sBAsBHrL,GACG,kBAACoI,EAAA,EAAD,CACIwB,QAAQ,WACRvB,SACIua,EACM,QACA,UAEV3f,UAAWD,EAAQqH,OAElBrK,GAGR4c,GAAU,kBAAC,GAAD,MAEX,kBAACtT,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,UACNyY,WAAS,EACTnb,KAAK,SACLoD,UAAWD,EAAQsH,IACnBjH,QAAS,SAAC6F,GAAD,OAhHnB,SAACA,GAC3BA,EAAE+N,iBACF1G,EACIjE,GAAgBC,uBAAhB,2BACO4J,GADP,IAEIjW,IAAKqe,EAAMre,IAAIoR,MAAM,OA4GW6R,CAAsBja,KAP9B,YAaA,kBAAC,IAAD,CAAMM,GAAG,aACL,kBAACG,EAAA,EAAD,CACIrB,GAAI,CACAzB,QAAQ,QACRS,OAAO,cACPd,QAAS,EACTT,MAAM,OACNkE,UAAU,SACVvC,cAAc,OACdF,SAAS,SACT,UAAW,CACPjB,QAAQ,SAGhBlD,QAAS,kBACLkN,EACIlF,GAAc,SAf1B,6BAyBfjG,GACG,kBAACkE,EAAA,EAAD,CAAKhB,GAAI,CAAEvC,MAAO,OAAQwC,aAAc,IACpC,kBAACuB,EAAA,EAAD,c,gDC5GrBC,I,OA/GA,iBAAO,CAClBqZ,QAAQ,aACJtd,SAAU,WAIVkT,SAAU,OACV1R,OAAO,OACPxF,OAAO,OACPkI,OAAQ,GACRxD,QAAS,GACTK,QAAQ,OAERE,eAAe,SACfkD,UAAU,SACVlC,UAAU,SACT,0BAA4B,CACzBA,UAAU,kBACVhC,MAAO,OACPc,QAAQ,OACR4C,cAAc,WA2BtB4Z,SAAU,CACNtd,MAAM,QAEVud,WAAY,CACRvd,MAAM,QAEVwd,YAAa,CACTxd,MAAM,OACNK,OAAO,kBAGXY,MAAO,CACHwc,aAAa,iBACbpgB,WAAW,MACXgV,WAAW,WAEfxS,KAAM,CAEFwT,YAAY,iBACZ9R,OAAQ,EACRd,QAAS,GAEbiW,MAAO,GAGPgH,QAAQ,aACJ1d,MAAM,OACNc,QAAQ,QAGP,0BAA4B,CACzBkB,UAAU,gBACVhC,MAAO,OACPc,QAAQ,OACR4C,cAAc,WAGtBia,OAAO,aACH3d,MAAM,MACNuB,OAAO,OACPd,QAAQ,eAER1E,OAAO,oBACN,0BAA4B,CACzBiE,MAAO,SAQf4d,MAAO,GAGPC,SAAU,CACN7d,MAAM,MACNuB,OAAO,OACPS,UAAU,iBACV3E,WAAW,U,8BCxGNygB,GAAalZ,YAAc,CACpCmZ,kBAAmB,SAAC1jB,GAAD,OAASA,GAC5B2jB,kBAAmB,SAAC3jB,GAAD,OAASA,GAC5B4jB,kBAAmB,SAAC5jB,GAAD,OAASA,KAGnB6jB,GAAgBtZ,YAAc,CACvCuZ,qBAAsB,SAAC9jB,GAAD,OAASA,GAC/B+jB,qBAAsB,SAAC/jB,GAAD,OAASA,GAC/BgkB,qBAAsB,SAAChkB,GAAD,OAASA,KCiT7B4B,GAAoB,CAKtBoY,aAAcrP,EACdsP,mBAAoB9V,EACpB+V,qBAAsBjP,GACtB2X,mBAAoB5X,IAGlBoP,GAActY,aArBI,SAACY,GAAD,oBAGpBiC,gBAAiBjC,EAAMkC,KAAKD,gBAE5B/E,IAAK8C,EAAMkC,KAAKG,MAChBC,SAAUtC,EAAMuC,MAAMD,UANF,kBAOHtC,EAAMkC,KAAKD,mBAca/C,IAE9ByY,eAAQD,GAAalL,YAAWvF,IAAhC0Q,EAtRC,SAACtY,GAAW,IAChBa,EAAmBb,EAAnBa,QAASub,EAAUpc,EAAVoc,MAEXhO,EAAWC,cAHM,EAIOrP,qBAJP,mBAMjBgV,GANiB,UAKRtT,aAAY,SAACC,GAAD,OAAWA,EAAM4Y,OAAOkB,UACnC/Z,aAAY,SAACC,GAAD,OAAWA,EAAM2gB,QAAQA,YAC/CP,EAAWrgB,aAAY,SAACC,GAAD,OAAWA,EAAM4Y,OAAOwH,YAC/CmB,EAAMxhB,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKsf,cAAcD,OACtDE,EAAM1hB,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKwf,cAAcD,OACtDE,EAAM5hB,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKmR,QAAQsO,OAChD7kB,EAAOiD,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKmR,QAAQvW,QAIjD0C,EAAW,SAAC4G,GACdqH,EACI0T,GAAcE,qBAAd,eACKjb,EAAEC,OAAOvJ,KAAOsJ,EAAEC,OAAOxI,UAwDtC,OAXAa,qBAAU,WACN,IAAMgQ,EAAIkT,OAAOnG,EAAMre,IAAIqR,YAAY,MAEvChB,EACIsT,GAAWC,kBAAkB,CACzBZ,UAAU,EACVhjB,IAAKqe,EAAMre,IAAIoR,MAAME,EAAI,QAGlC,IAGC,kBAAC,WAAD,KACK0R,EACG,kBAAC,GAAD,MAEA,kBAAC5Z,EAAA,EAAD,CAAKrG,UAAWD,EAAQogB,SACpB,kBAAC9Z,EAAA,EAAD,CAAKrG,UAAWD,EAAQugB,aACpB,kBAACoB,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAI7hB,UAAWD,EAAQgE,OAC1C,kBAAC+d,GAAA,EAAD,CAAY/d,MAAK,UAAKpH,EAAL,qBAErB,yBAAKqD,UAAWD,EAAQygB,SACpB,kBAACkB,GAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAI7hB,UAAWD,EAAQ4C,MAMlC,yBAAK3C,UAAWD,EAAQqgB,UACpB,2BACI2B,QAAQ,aACR/hB,UAAWD,EAAQsgB,aAEjBnN,EAAQQ,SACN,kBAACsO,GAAA,EAAD,CACIhiB,UAAWD,EAAQ0gB,OACnBra,UAAU,MAEV6b,MAAM,uGAGb/O,EAAQQ,SACL,yBACI1T,UAAWD,EAAQ0gB,OACnBjU,IAAK0G,EAAQQ,WAKzB,2BACI9N,GAAG,aACHhJ,KAAK,OACLD,KAAK,QACL0C,SAzEd,SAAC4G,GACnBA,EAAE+N,iBAZc,SAACkO,GACjB,GAAKA,EAAL,CACA,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcH,GACrBC,EAAOG,UAAY,WACfhV,EACI0T,GAAcE,qBAAqB,CAAExN,QAASyO,EAAOI,YAQ7DC,CAAYvc,EAAEC,OAAOuc,MAAM,KAuEKviB,MAAO,CAAE0D,QAAQ,YAI7B,kBAAC8d,GAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAI7hB,UAAWD,EAAQyZ,OAClC,kBAACnT,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACf,EAAA,EAAD,CACIE,GAAG,QACH8c,WAAY,CACR/c,UAAU,GAEdE,MAAM,QACNnI,MAAOwV,EAAQuE,MACf9Q,QAAQ,WACR3G,UAAWD,EAAQ4gB,WAEtBa,GACG,kBAAC9b,EAAA,EAAD,CACIE,GAAG,MACH8c,WAAY,CACR/c,UAAU,GAEdE,MAAM,KACNnI,MAAO8jB,EACP7a,QAAQ,WACR3G,UAAWD,EAAQ4gB,WAG1BS,GACG,kBAAC1b,EAAA,EAAD,CACIE,GAAG,MACH8c,WAAY,CACR/c,UAAU,GAEdE,MAAM,KACNnI,MAAO0jB,EACPza,QAAQ,WACR3G,UAAWD,EAAQ4gB,WAG1BW,GACG,kBAAC5b,EAAA,EAAD,CACIE,GAAG,MACH8c,WAAY,CACR/c,UAAU,GAEdE,MAAM,KACNnI,MAAO4jB,EACP3a,QAAQ,WACR3G,UAAWD,EAAQ4gB,WAI3B,kBAACjb,EAAA,EAAD,CACIE,GAAG,OAIHC,MAAM,OACNlJ,KAAK,OACLqJ,UAAU,EACVtI,MAAOwV,EAAQvW,KACf0C,SAAUA,EACVsH,QAAQ,WACR3G,UAAWD,EAAQ4gB,WAEvB,kBAACjb,EAAA,EAAD,CACIE,GAAG,WACH8c,WAAY,CACR/c,UAAU,GAEd/I,KAAK,WACLiJ,MAAM,WACNnI,MAAOwV,EAAQwE,SACf/Q,QAAQ,WACR3G,UAAWD,EAAQ4gB,WAEvB,kBAACjb,EAAA,EAAD,CACIE,GAAG,UAIHC,MAAM,UACNnI,MAAOwV,EAAQyP,QACfhmB,KAAK,UACLgK,QAAQ,WACR3G,UAAWD,EAAQ4gB,SACnBthB,SAAUA,IAEd,kBAACqG,EAAA,EAAD,CACIE,GAAG,QAIHC,MAAM,QACNnI,MAAOwV,EAAQ0P,MACfjc,QAAQ,WACR3G,UAAWD,EAAQ4gB,SACnBthB,SAAUA,EACV1C,KAAK,UAET,kBAAC+I,EAAA,EAAD,CACIE,GAAG,MAIHC,MAAM,MACNnI,MAAOwV,EAAQ2P,IACflc,QAAQ,WACR3G,UAAWD,EAAQ4gB,SACnBthB,SAAUA,EACV1C,KAAK,QAET,kBAAC0J,EAAA,EAAD,CAAKI,GAAI,EAAGqc,GAAI,GACZ,kBAACpc,EAAA,EAAD,CACIC,QAAQ,YAERvG,QAzLnB,SAAC6F,GAClB,IAAMsI,EAAIkT,OAAOnG,EAAMre,IAAIqR,YAAY,MACvCrI,EAAE+N,iBACF1G,EACI0T,GAAcC,qBAAqB,CAC/B/N,QAASA,EACT+M,UAAU,EACVhjB,IAAKqe,EAAMre,IAAIoR,MAAME,EAAI,GACzB6S,IAAKA,EACLE,IAAKA,MAiLuBjc,GAAI,CACApC,WAAW,UACX,UAAW,CACPA,WAAW,wBAPvB,kBCxR3B8f,GAAerb,YAAc,CACtCsb,oBAAqB,SAAC7lB,GAAD,OAASA,GAC9B8lB,oBAAqB,SAAC9lB,GAAD,OAASA,GAC9B+lB,oBAAqB,SAAC/lB,GAAD,OAASA,KCenBgmB,GAdM,SAAC,GAAe,IAAb7H,EAAY,EAAZA,MAEdpB,EAAYta,aAAY,SAACC,GAAD,OAAWA,EAAMkjB,aAAa7I,aACtD5M,EAAWC,cAIjB,OAHAhP,qBAAU,WACN+O,EAASyV,GAAaC,oBAAoB1H,EAAM8H,OAAOxd,OACxD,CAAC0H,EAAUgO,EAAM8H,OAAOxd,KAEvB,kBAAC,WAAD,KACKsU,EAAY,kBAAC,GAAD,MAAc,kBAAC,IAAD,CAAU3T,GAAG,Y,oDCN9C/H,I,OAAYC,aAAW,SAACC,GAAD,MAAY,CACrC2kB,SAAU,CACNve,UAAU,gBACVP,SAAS,OACTyC,UAAU,kBAEVnI,OAAO,QAGPykB,UAAU,oBACVC,WAAW,MACX3kB,UAAU,QAEd4kB,WAAY,CACRjf,SAAS,OACTe,aAAa,OACbhG,MAAO,MACPa,WAAW,YAyBJsjB,GArBF,SAACvkB,GAAW,IACb6E,EAAyB7E,EAAzB6E,MAAO4I,EAAkBzN,EAAlByN,KAAM+W,EAAYxkB,EAAZwkB,QACf3jB,EAAUvB,KAEhB,OACI,6BACI,yBAAKwB,UAAWC,IAAGF,EAAQsjB,WACvB,yBAAKrjB,UAAWC,IAAGF,EAAQyjB,aAAczf,GACzC,kBAAC,KAAD,CACIrD,OAAQijB,KACRhjB,KAAMgM,EACNtN,SAAU,SAACukB,EAAOljB,GACd,IAAMC,EAAOD,EAAOmjB,UACpBH,EAAQ/iB,SCzCnBmjB,GAAkBpc,YAAc,CACzCqc,uBAAwB,SAAC5mB,GAAD,OAASA,GACjC6mB,uBAAwB,SAAC7mB,GAAD,OAASA,GACjC8mB,uBAAwB,SAAC9mB,GAAD,OAASA,KAGxB+mB,GAAexc,YAAc,CACtCyc,oBAAqB,SAAChnB,GAAD,OAASA,GAC9BinB,oBAAqB,SAACjnB,GAAD,OAASA,GAC9BknB,oBAAqB,SAAClnB,GAAD,OAASA,KAGrBmnB,GAAe5c,YAAc,CACtC6c,oBAAqB,SAACpnB,GAAD,OAASA,GAC9BqnB,oBAAqB,SAACrnB,GAAD,OAASA,GAC9BsnB,oBAAqB,SAACtnB,GAAD,OAASA,KAGrBunB,GAAahd,YAAc,CACpCid,kBAAmB,SAACxnB,GAAD,OAASA,GAC5BynB,kBAAmB,SAACznB,GAAD,OAASA,GAC5B0nB,kBAAmB,SAAC1nB,GAAD,OAASA,KAGnB2nB,GAAYpd,YAAc,CACnCqd,iBAAkB,SAAC5nB,GAAD,OAASA,GAC3B6nB,iBAAkB,SAAC7nB,GAAD,OAASA,GAC3B8nB,iBAAkB,SAAC9nB,GAAD,OAASA,KAGlB+nB,GAAkBxd,YAAc,CACzCyd,uBAAwB,SAAChoB,GAAD,OAASA,GACjCioB,uBAAwB,SAACjoB,GAAD,OAASA,GACjCkoB,uBAAwB,SAACloB,GAAD,OAASA,KAGxBmoB,GAA0B5d,YAAc,CACjD6d,+BAAgC,SAACpoB,GAAD,OAASA,GACzCqoB,+BAAgC,SAACroB,GAAD,OAASA,GACzCsoB,+BAAgC,SAACtoB,GAAD,OAASA,KAGhCuoB,GAAche,YAAc,CACrCie,mBAAoB,SAACxoB,GAAD,OAASA,GAC7ByoB,mBAAoB,SAACzoB,GAAD,OAASA,GAC7B0oB,mBAAoB,SAAC1oB,GAAD,OAASA,KAGpB2oB,GAAepe,YAAc,CACtCqe,oBAAqB,SAAC5oB,GAAD,OAASA,GAC9B6oB,oBAAqB,SAAC7oB,GAAD,OAASA,GAC9B8oB,oBAAqB,SAAC9oB,GAAD,OAASA,KAGrB+oB,GAAoBxe,YAAc,CAC3Cye,yBAA0B,SAAChpB,GAAD,OAASA,GACnCipB,yBAA0B,SAACjpB,GAAD,OAASA,GACnCkpB,yBAA0B,SAAClpB,GAAD,OAASA,KAG1BmpB,GAAe5e,YAAc,CACtC6e,oBAAqB,SAACppB,GAAD,OAASA,GAC9BqpB,oBAAqB,SAACrpB,GAAD,OAASA,GAC9BspB,oBAAqB,SAACtpB,GAAD,OAASA,KAGrBupB,GAAehf,YAAc,CACtCif,oBAAqB,SAACxpB,GAAD,OAASA,GAC9BypB,oBAAqB,SAACzpB,GAAD,OAASA,GAC9B0pB,oBAAqB,SAAC1pB,GAAD,OAASA,KAGrB2pB,GAAwBpf,YAAc,CAC/Cqf,6BAA8B,SAAC5pB,GAAD,OAASA,GACvC6pB,6BAA8B,SAAC7pB,GAAD,OAASA,GACvC8pB,6BAA8B,SAAC9pB,GAAD,OAASA,KAG9B+pB,GAAmBxf,YAAc,CAC1Cyf,wBAAyB,SAAChqB,GAAD,OAASA,KAGzBiqB,GAAe1f,YAAc,CACtC2f,oBAAqB,SAAClqB,GAAD,OAASA,GAC9BmqB,oBAAqB,SAACnqB,GAAD,OAASA,GAC9BoqB,oBAAqB,SAACpqB,GAAD,OAASA,KAGrBqqB,GAAwB9f,YAAc,CAC/C+f,6BAA8B,SAACtqB,GAAD,OAASA,GACvCuqB,6BAA8B,SAACvqB,GAAD,OAASA,GACvCwqB,6BAA8B,SAACxqB,GAAD,OAASA,KAG9ByqB,GAAgBlgB,YAAc,CACvCmgB,qBAAsB,SAAC1qB,GAAD,OAASA,GAC/B2qB,qBAAsB,SAAC3qB,GAAD,OAASA,GAC/B4qB,qBAAsB,SAAC5qB,GAAD,OAASA,KAGtB6qB,GAAOtgB,YAAc,CAC9BugB,YAAa,SAAC9qB,GAAD,OAASA,GACtB+qB,YAAa,SAAC/qB,GAAD,OAASA,GACtBgrB,YAAa,SAAChrB,GAAD,OAASA,KAEbirB,GAAU1gB,YAAc,CACjC2gB,eAAgB,SAAClrB,GAAD,OAASA,GACzBmrB,eAAgB,SAACnrB,GAAD,OAASA,GACzBorB,eAAgB,SAACprB,GAAD,OAASA,KAGhBqrB,GAAa9gB,YAAc,CACpC+gB,kBAAmB,SAACtrB,GAAD,OAASA,GAC5BurB,kBAAmB,SAACvrB,GAAD,OAASA,GAC5BwrB,kBAAmB,SAACxrB,GAAD,OAASA,KAEnByrB,GAAgBlhB,YAAc,CACvCmhB,qBAAsB,SAAC1rB,GAAD,OAASA,GAC/B2rB,qBAAsB,SAAC3rB,GAAD,OAASA,GAC/B4rB,qBAAsB,SAAC5rB,GAAD,OAASA,KAGtB6rB,GAAYthB,YAAc,CACnCuhB,iBAAkB,SAAC9rB,GAAD,OAASA,GAC3B+rB,iBAAkB,SAAC/rB,GAAD,OAASA,GAC3BgsB,iBAAkB,SAAChsB,GAAD,OAASA,KAGlBisB,GAAM1hB,YAAc,CAC7B2hB,WAAY,SAAClsB,GAAD,OAASA,GACrBmsB,WAAY,SAACnsB,GAAD,OAASA,GACrBosB,WAAY,SAACpsB,GAAD,OAASA,KAGZqsB,GAAQ9hB,YAAc,CAC/B+hB,aAAc,SAACtsB,GAAD,OAASA,GACvBusB,aAAc,SAACvsB,GAAD,OAASA,GACvBwsB,aAAc,SAACxsB,GAAD,OAASA,KAGdysB,GAASliB,YAAc,CAChCmiB,cAAe,SAAC1sB,GAAD,OAASA,GACxB2sB,cAAe,SAAC3sB,GAAD,OAASA,GACxB4sB,cAAe,SAAC5sB,GAAD,OAASA,KAGf6sB,GAActiB,YAAc,CACrCuiB,mBAAoB,SAAC9sB,GAAD,OAASA,GAC7B+sB,mBAAoB,SAAC/sB,GAAD,OAASA,GAC7BgtB,mBAAoB,SAAChtB,GAAD,OAASA,KAGpBitB,GAAoB1iB,YAAc,CAC3C2iB,yBAA0B,SAACltB,GAAD,OAASA,GACnCmtB,yBAA0B,SAACntB,GAAD,OAASA,GACnCotB,yBAA0B,SAACptB,GAAD,OAASA,KAG1BqtB,GAAgB9iB,YAAc,CACvC+iB,qBAAsB,SAACttB,GAAD,OAASA,GAC/ButB,qBAAsB,SAACvtB,GAAD,OAASA,GAC/BwtB,qBAAsB,SAACxtB,GAAD,OAASA,KCrJ7BqB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuF,UAAW,GACX2mB,kBAAmB,CACf9lB,UAAU,SAEd+lB,OAAQ,GACRC,iBAAkB,CACd9jB,UAAU,cAIZ9G,GAAQ,CACV2C,SAAU,WACVH,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXE,MAAM,MACNioB,QAAS,mBACT5nB,OAAQ,iBACRC,UAAW,GACX4nB,EAAG,EACHxnB,aAAa,QAGF,SAASynB,GAAS/rB,GAC7B,IAAMa,EAAUvB,KACRyG,EAAsB/F,EAAtB+F,YAAaxF,EAASP,EAATO,KACfyC,EAAQtC,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMhpB,SAC3CipB,EAAmBvrB,aACrB,SAACC,GAAD,OAAWA,EAAMqrB,MAAMC,oBAErBN,EAASjrB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAML,UAPd,EAQZtX,WAAe,IARH,mBAQ7B5G,EAR6B,KAQvB+W,EARuB,OASVnQ,WAAe,IATL,mBAS7BxP,EAT6B,KAStBqnB,EATsB,KAU9BC,EAAK9d,cAQX,OACI,2BACI,gBAACrI,EAAA,EAAD,CACIzF,KAAMA,EACNie,QAASzY,EACTqmB,kBAAgB,oBAChBC,mBAAiB,2BAEjB,gBAACllB,EAAA,EAAD,CAAKhB,GAAInF,IACL,gBAACiG,EAAA,EAAD,CACIQ,QAAQ,KACRP,UAAU,KACVf,GAAI,CAAE2B,UAAU,sBAHpB,sBAOA,gBAACtB,EAAA,EAAD,CACIE,GAAG,QACHC,MAAM,QACN7F,UAAWD,EAAQkE,UACnB6B,YAAa,QACbiS,WAAS,EACT1T,OAAO,SACP1H,KAAK,QACLe,MAAOqG,EACP1E,SA/BH,SAAC4G,GACdmlB,EAASnlB,EAAEC,OAAOxI,UAiCN,uBAAKsC,UAAWC,IAAGF,EAAQ6qB,oBACvB,gBAAC,GAAD,CACI7mB,MAAO,gBACP4I,KAAMA,EACN+W,QAASA,KAGhByH,EACG,gBAAC9kB,EAAA,EAAD,CAAKrG,UAAWC,IAAGF,EAAQ+qB,mBACvB,gBAACzR,GAAA,EAAD,OAGJwR,GACI,gBAAC1lB,EAAA,EAAD,CACIwB,QAAQ,WACRvB,SAAWlD,EAAoB,UAAZ,WAElB2oB,GAYb,uBAAK7qB,UAAWC,IAAG,SACf,gBAACyG,EAAA,EAAD,CACItG,QAAS6E,EACT0B,QAAQ,YACR3G,UAAWC,IAAG,SAHlB,UAOA,gBAACyG,EAAA,EAAD,CAAQtG,QApEP,WACjBirB,EAAGnH,GAAaC,oBAAoB,CAAEpgB,QAAOC,QAAS2I,MAmEPhG,QAAQ,aAAvC,c,+CChHlBzG,IAAK,IACP2C,SAAU,WACVH,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXE,MAAM,QACNioB,QAAS,mBACT3nB,UAAW,GACX4nB,EAAG,EAQH1nB,QAAQ,kBACRid,aAAa,oBACbiL,WAAW,qBAlBJ,0GAyBN,2BAA6B,CAC1B1oB,MAAM,MACNuB,OAAO,SA3BJ,IA+BI,SAASonB,GAAT,GAA8D,IAAlChsB,EAAiC,EAAjCA,KAAkBwF,GAAe,EAA3BymB,WAA2B,EAAfzmB,aACzD,OACI,2BAEI,gBAACC,EAAA,EAAD,CACIomB,kBAAgB,yBAChBC,mBAAiB,+BACjB9rB,KAAMA,EACNie,QAASzY,EACT0mB,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACX5P,QAAS,MAGb,gBAAC6P,GAAA,EAAD,CAAMC,GAAIvsB,GACN,gBAAC4G,EAAA,EAAD,CAAKhB,GAAInF,IACL,gBAACiG,EAAA,EAAD,CACIP,GAAG,yBACHe,QAAQ,KACRP,UAAU,KACVf,GAAI,CACA8P,WAAW,mCALnB,mBAUA,gBAAChP,EAAA,EAAD,CACIP,GAAG,+BACHP,GAAI,CACAoB,GAAI,EACJO,UAAU,oBAJlB,iCAQI,gBAAC,IAAD,CAAMT,GAAG,UACL,gBAACG,EAAA,EAAD,CACIrB,GAAI,CACAd,SAAS,SAFjB,eCoPhC,I,GAkjCe0nB,GAljCD,SAAC/sB,GACX,IAAMO,EAAOG,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMzrB,QAC1CysB,EAAUtsB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMgB,WAE7ChS,GADWta,aAAY,SAACC,GAAD,OAAWA,EAAM4Y,OAAOwH,YACnCrgB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMhR,cAJhC,EAKehc,oBAAS,GALxB,mBAKdiuB,EALc,KAKFC,EALE,KAkbfrsB,EAxaYtB,aAAW,SAACC,GAAD,0BAAY,CACrC+M,SAAU,CACNnM,MAAM,UACN2D,WAAW,UACXoB,OAAO,QACPxF,OAAO,MACP2E,aAAa,WAEjBkI,UAAQ,GACJpM,MAAM,UACN2D,WAAW,UACXoB,OAAO,eACPxF,OAAO,MACP2E,aAAa,WALT,2HAWR6oB,eAAgB,CAEZ/mB,aAAa,MAEjBgnB,WAAY,CACRxpB,MAAM,MACNuB,OAAO,WAQXkoB,eAAa,GACTzpB,MAAM,MACNuB,OAAO,OACPS,UAAU,iBAHD,sTAqBR,2BAA6B,CAC1BA,UAAU,mBAtBL,cAyBR,0BAA4B,CAIzBhC,MAAM,iBACNuB,OAAO,oBACPkc,aAAa,oBACbiL,WAAW,oBAEXpoB,UAAU,yBACVI,aAAa,MACbsB,UAAU,mBApCL,cAsCR,0BAA4B,CACzBhC,MAAM,iBACNuB,OAAO,oBACPkc,aAAa,oBACbiL,WAAW,oBAEXpoB,UAAU,yBACVI,aAAa,MACbsB,UAAU,mBA9CL,cAgDR,0BAA4B,CACzBhC,MAAM,iBACNuB,OAAO,oBACPkc,aAAa,oBACbiL,WAAW,oBAEXpoB,UAAU,yBACVI,aAAa,MACbsB,UAAU,mBAxDL,cA0DR,0BAA4B,CACzBhC,MAAM,iBACNuB,OAAO,oBACPkc,aAAa,oBACbiL,WAAW,oBAEXpoB,UAAU,yBACVI,aAAa,MACbsB,UAAU,mBAlEL,cAoER,0BAA4B,CACzBhC,MAAM,iBACNuB,OAAO,oBACPkc,aAAa,oBACbiL,WAAW,oBAEXpoB,UAAU,yBACVI,aAAa,MACbsB,UAAU,mBA5EL,cA8ER,0BAA4B,CACzBA,UAAU,mBA/EL,cAiFR,0BAA4B,CACzBA,UAAU,mBAlFL,GAqFb0nB,OAAO,aACHlnB,aAAa,OAEbib,aAAa,oBACbiL,WAAW,oBACXrV,YAAY,oBACZ3S,aAAa,UAEbI,QAAQ,OACRE,eAAgB,gBAChBsZ,UAAU,aACVta,MAAM,OACNM,UAAU,uBACT,0BAA4B,CACzBQ,QAAQ,SACR0B,aAAa,OAGrBmnB,YAAY,aACRloB,SAAU,OACVpE,WAAY,IACZkE,OAAQ,IACRd,QAAS,IAETjE,MAAO,UACP8d,UAAU,aAEVvH,SAAU,SACVC,aAAc,WACdlS,QAAS,cACT8oB,gBAAiB,IACjBC,UAAW,EACXC,gBAAiB,WAEjBrJ,WAAW,MACXze,UAAU,MACV+nB,UAAW,cACV,0BAA4B,CACzBtoB,SAAS,SAGjBuoB,eAAe,aACXvoB,SAAU,OACVF,OAAQ,IACRd,QAAS,IACTjE,MAAO,UACP8d,UAAU,aACVpW,UAAU,mBAET,0BAA4B,CACzBzC,SAAS,oBAGjBwoB,QAAS,CACLxoB,SAAU,OACVF,OAAQ,IACRd,QAAS,IACTjE,MAAO,WAEX0tB,MAAO,CACHzoB,SAAU,OACVF,OAAQ,IACRd,QAAS,IACTjE,MAAO,WAEX2tB,YAAU,GACNpqB,SAAS,WACTe,QAAQ,OACR4C,cAAc,SACd1D,MAAM,MAGNsa,UAAU,aAEV9X,aAAa,OATP,cAWL,2BAA6B,IAXxB,cAcL,0BAA4B,CACzB/B,QAAQ,UACRsB,WAAW,oBAhBT,cAkBL,0BAA4B,CAIzBjB,QAAQ,oBAtBN,GA6BVspB,aAAW,GACPrqB,SAAS,WACTC,MAAM,MACN+B,WAAW,MACX2mB,WAAW,oBACXjoB,QAAQ,WACRuB,UAAU,OANH,cAON,0BAA4B,CACzBD,WAAW,OACXtB,QAAQ,YATL,cAWN,0BAA4B,CACzBsB,WAAW,OACX2mB,WAAW,kBACXjoB,QAAQ,YAdL,GAyBX4pB,WAAS,GACLrqB,MAAM,iBACNjE,OAAO,kBAGPue,UAAU,cALL,cAMJ,2BAA6B,CAI1BxZ,QAAQ,mBACRd,MAAM,mBACNjE,OAAO,mBACP0E,QAAQ,OACRyD,UAAU,oBACVxD,aAAa,mBAfZ,cAuBJ,2BAA6B,CAC1BV,MAAM,kBACNiT,SAAS,mBACTlX,OAAO,mBACP0E,QAAQ,MACRC,aAAa,mBA5BZ,cA8BJ,0BAA4B,CACzBV,MAAM,kBACNiT,SAAS,mBACTlX,OAAO,mBACP0E,QAAQ,IACRC,aAAa,iBACbqB,WAAW,mBApCV,cAsCJ,0BAA4B,CACzB/B,MAAM,mBACNjE,OAAO,oBAxCN,cA2CJ,0BAA4B,CACzB+E,QAAQ,mBACRwZ,UAAU,aACVta,MAAM,kBACNjE,OAAO,oBA/CN,GAkDTuuB,cAAY,GACR7oB,SAAU,OACVhB,QAAS,IACTjE,MAAO,UACP8d,UAAU,cAJF,oHASP,0BAA4B,CACzB7Y,SAAS,QAVL,GAaZ8oB,kBAAgB,GACZzpB,QAAQ,QAMRoD,UAAU,kBACVlC,UAAU,MACVD,WAAW,MACXgR,SAAU,SACVC,aAAc,YAXF,wBAYH,eAZG,gCAaK,KAbL,0BAcD,GAdC,gCAeK,YAfL,cAgBZ,wBAAyB,CACrBvR,SAAS,kBACTpE,WAAW,oBACXoD,QAAQ,qBACRggB,WAAW,iBACXvc,UAAU,SArBF,cAuBZ,UAAW,CACPpD,QAAQ,oBAxBA,GA2BhB0pB,SAAS,aACLxoB,UAAU,OACVjC,SAAS,WACT0W,OAAO,QACN,2BAA6B,CAC1B1W,SAAS,sBACT0W,OAAO,oBAWfgU,gBAAiB,CACbzoB,UAAU,OAEd0oB,gBAAiB,CAEb3qB,SAAS,WACTmE,UAAU,SACV/D,WAAW,kBACXH,MAAM,iBACNuB,OAAO,kBACPxF,OAAO,kBACP0hB,aAAa,oBACbiL,WAAW,oBACXrV,YAAY,oBACZ/S,UAAU,yBACVI,aAAa,OAIjBiqB,WAAY,CACR5qB,SAAS,mBACTC,MAAM,mBACNiE,OAAO,MACPrE,IAAI,MACJmC,WAAasnB,EAAwB,IAAzB,SACZxR,WAAW,UACXnX,aAAa,kBAEjBkqB,YAAa,CACT,WAAY,CACRpqB,QAAQ,kBACRF,UAAU,kBACVD,OAAO,mBAEX,UAAW,CACPG,QAAQ,kBACRH,OAAO,kBACPC,UAAU,uBAGlBuqB,aAAa,eACR,2BAA6B,CAC1BppB,SAAS,oBAGjBqpB,uBAAqB,GACjBhqB,QAAQ,mBADS,cAEhB,2BAA6B,CAC1BA,QAAQ,kBACRf,SAAS,WACTC,MAAM,yBACNqS,WAAW,iCACXhV,WAAW,iBACXqZ,MAAM,KACND,OAAO,kBATM,cAWhB,2BAA6B,CAC1B3V,QAAQ,kBACRf,SAAS,WACTC,MAAM,yBACNqS,WAAW,iCACXhV,WAAW,iBACXqZ,MAAM,KACND,OAAO,gBACPzU,UAAU,mBAnBG,GAsBrB+oB,eAAgB,CACZ/qB,MAAM,kBACNjE,OAAO,kBACP2E,aAAa,iBACbiS,YAAY,kBAEhBqY,oBAAoB,aAChBhpB,UAAU,kBACT,2BAA6B,CAC1B+nB,UAAU,kBAINruB,GAlbK,EAobiBN,mBAASguB,GApb1B,mBAobd6B,EApbc,KAobDC,EApbC,KAqbflsB,EAAkBlC,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKD,mBAElDwZ,EAAUpc,EAAVoc,MAEF2S,EAAOxM,OAAOnG,EAAM8H,OAAO6K,MAzbZ,EA2bO/vB,mBAAS,IA3bhB,mBA2bdgwB,EA3bc,KA2bNC,EA3bM,KAkcjBC,EADU,GACSH,EAAO,GAC1BI,EAFU,EAEJJ,EAEJ5C,EAAK9d,cArcU,EAuc2BgG,IAAMrV,UAAS,GAvc1C,mBAucdowB,EAvcc,KAucIC,EAvcJ,KAwcfC,EAAyB,kBAAMD,GAAoB,IAGnD7C,EAAa,WACV5pB,EAILupB,EAAGvH,GAAgBE,wBAAuB,IAHtCwK,KAuCRjwB,qBAAU,WACDwvB,EAAYpf,SACb0c,EAAGnG,GAAgBC,0BACnBkG,EACI3G,GAAWC,kBAAkB,CACzBrJ,MAAO,WAIpB,IAQH,IArgBqB,EAolBmBpd,mBAAS,KAplB5B,mBAolBduwB,EAplBc,KAolBAC,EAplBA,KAimBrBnwB,qBAAU,WACNyvB,EACI9B,EACK7d,MAAM+f,EAAOC,GACbngB,QACG,SAACse,GAAD,OACIA,EAAOzoB,MACF4qB,cACAvgB,QAAQ8f,EAAOS,gBAAkB,GAAKnC,QAG5D,CAAClR,EAAO4Q,EAASgC,EAAQD,EAAMQ,IAwBlC,OACI,kBAAC,WAAD,KAKQvU,EACI,kBAAC7T,EAAA,EAAD,CAAKrG,UAAWC,IAAGF,EAAQytB,kBACvB,yBAAKxtB,UAAWC,IAAGF,EAAQ6uB,oBACvB,kBAACvV,GAAA,EAAD,CAAkBhU,GAAI,CAAEP,UAAU,WAI1C,kBAAC,WAAD,KACI,kBAAC,GAAD,CACIrF,KAAM6uB,EACN5C,WAAY8C,EACZvpB,YA5MQ,kBAAMspB,GAAoB,MA8MtC,yBAAKvuB,UAAWC,IAAG,cAAeF,EAAQ0tB,aACtC,2BACI7wB,KAAK,OACLoD,UAAWC,IACP,eACAF,EAAQ2tB,aAEZ5nB,YAAY,YACZnJ,KAAK,SAELe,MAAOwwB,EACP7uB,SArON,SAAC4G,GACnBkoB,EAAUloB,EAAEC,OAAOxI,UAsOC,yBACIsC,UAAU,kBACVE,MAAO,CACH2C,SAAU,WAGV2W,MAAO,GAEXpZ,QArqBH,WACrBgsB,GAAeD,KAsqBS,4BACInsB,UAAU,kBACVpD,KAAK,SACLsD,MAAO,CAAE+C,WAAW,YAEpB,kBAAC,KAAD,CAAYoC,GAAI,CAAE/F,MAAM,gBAIpC,kBAAC2rB,GAAD,CACIxrB,KAAMA,EACNisB,WAAYA,EACZzmB,YAxOJ,WAChBomB,EAAGvG,GAAUE,iBAAiB,KAE9BqG,EAAGvH,GAAgBE,wBAAuB,OAwO1B,yBAAKhkB,UAAWC,IAAGF,EAAQwsB,gBACvB,yBAAKvsB,UAAWC,IAAGF,EAAQssB,iBACvB,yBAAKrsB,UAAWC,IAAGF,EAAQ2C,MACvB,kBAACgE,EAAA,EAAD,CACItG,QAASsrB,EACTrmB,GAAI,CACAR,WAAW,OACXC,UAAU,OACV,UAAW,CACPxB,QAAQ,kBACRH,OAAO,qBAPnB,eAWiB,IACb,0BACIjD,MAAO,CACH2E,WAAW,QAFnB,MAQJ,kBAAC6B,EAAA,EAAD,CACItG,QAhIX,WACrBsuB,EAAgB,KAChBrD,EAAGrC,GAAUE,iBAAiB,CAAEzrB,IAAK,QA+HL4H,GAAI,CACAR,WAAW,OACXC,UAAU,OACVwe,UACqB,MAAjBmL,GAAA,oBAEJ,UAAW,CACPnrB,QAAQ,qBATpB,UAeA,kBAACoD,EAAA,EAAD,CACItG,QAtHZ,WACpBsuB,EAAgB,KAChBrD,EAAGrC,GAAUE,iBAAiB,CAAEzrB,IAAK,QAqHL4H,GAAI,CACAR,WAAW,OACXC,UAAU,OACVwe,UACqB,MAAjBmL,GAAA,oBAEJ,UAAW,CACPnrB,QAAQ,qBATpB,SAeA,kBAACoD,EAAA,EAAD,CACItG,QA1HR,WACxBsuB,EAAgB,KAChBrD,EAAGrC,GAAUE,iBAAiB,CAAEzrB,IAAK,QAyHL4H,GAAI,CACAR,WAAW,OACXC,UAAU,OACVwe,UACqB,MAAjBmL,GAAA,oBAEJ,UAAW,CACPnrB,QAAQ,qBATpB,eAgBJ,kBAACiJ,GAAA,EAAD,CAASvM,UAAWD,EAAQ2L,WAC5B,yBAAK1L,UAAWC,IAAGF,EAAQusB,aAGnByB,EAAY/f,KAAI,SAACwe,GACb,OACI,yBACIxsB,UAAWC,IACPF,EAAQysB,QAEZ/uB,IAAK+uB,EAAOnW,KAEZ,yBACIrW,UAAWC,IACPF,EAAQktB,aAGZ,6BACI,yBACIzgB,IACIggB,EAAOqC,KACFnb,QAETjH,IAAI,GACJzM,UAAWC,IACPF,EAAQotB,cAKpB,yBACIntB,UAAWC,IACPF,EAAQwtB,kBAGZ,yBACIvtB,UAAWC,IACPF,EAAQqtB,eAGZ,0BACIltB,MAAO,CACH0D,QAAQ,eACRgS,WACI,SACJC,SACI,SACJC,aACI,WACJC,SACI,SAVZ,KAeO,IAECyW,EACKqC,KACAlyB,OAIjB,yBACIqD,UAAWC,IACPF,EAAQqtB,eAIR0B,KACItC,EAAOuC,WAENC,GACG,oBAEHC,OACG,wBAgBxB,yBACIjvB,UAAWC,IACPF,EAAQmtB,cAGZ,kBAAC,IAAD,CACI3mB,GAAE,sBAxYpCxC,EAyYsCyoB,EAAOzoB,MAnYxDA,EACFwQ,cACA2a,QAAQ,KAAM,KACdA,QAAQ,WAAY,KA+X6B,YAEG1C,EAAOnW,IAFV,OAKF,yBACIrW,UAAWC,IACPF,EAAQ0sB,cAGXD,EAAOzoB,QAGhB,yBACI/D,UAAWC,IACPF,EAAQ+sB,iBAGZ,0BACI9sB,UAAWC,IACPF,EAAQstB,kBAEZntB,MAAO,CACH2V,SACI,SACJC,aACI,WACJlS,QACI,cACJ8oB,gBACI,IACJC,UAAW,EACXC,gBACI,aAGPvuB,aACGmuB,EAAOxoB,WAInB,yBACIhE,UAAWC,IACPF,EAAQutB,WAGX,IACD,yBACIttB,UAAWC,IACPF,EAAQgtB,UAFhB,WAKa,IACRP,EAAOO,SAEZ,yBACI/sB,UAAWC,IACPF,EAAQitB,QAFhB,SAKW,IACNR,EAAOQ,QAGhB,yBACIhtB,UAAWC,IACPF,EAAQ6tB,wBAGZ,yBACIphB,IACIggB,EAAOqC,KACFnb,QAETjH,IAAI,GACJzM,UAAWC,IACPF,EAAQ8tB,kBAGhB,0BACI7tB,UAAWC,IACPF,EAAQ+tB,sBAIRtB,EAAOqC,KACFlyB,SA9drE,IAAsBoH,MA8gBM,yBACI7D,MAAO,CACH4C,MAAM,OACNkE,UAAU,WAGd,kBAACN,EAAA,EAAD,CACIX,SAAUqoB,GAAS,EACnB9uB,MAAM,YACN+F,GAAE,aACE9B,QAAS,GACR,2BAA6B,CAC1BK,QAAQ,UAIhB,kBAAC,IAAD,CACI2C,GAAE,iBAAY0nB,EAAO,GACrB/tB,MAAO,CACH4C,MAAM,OACNc,QAAQ,QACRL,QAAS,EACTc,OAAQ,IAGZ,kBAAC,KAAD,CACIgB,GAAI,CACAvC,MAAM,OACNc,QAAQ,aAjgBvC,WACb,IAAIgc,EAAM,GACV,GAAa,IAATqO,EAAY,CACZ,IAAK,IAAI1f,EAAI0f,EAAM1f,GAAK0f,EAAO,EAAG1f,IAC9BqR,EAAI9Q,KACA,kBAACpI,EAAA,EAAD,CACIjJ,IAAK8Q,EACLjP,MAAM,YACNyG,SA5EN,GA4EiBwI,EAAI,IAAgB2d,EAAQvd,OACvCtJ,GAAI,CACA9B,QAAS,EACTK,QA/EV,GAgFe2K,EAAI,IAAgB2d,EAAQvd,QAA7B,SAGR,kBAAC,IAAD,CACIpI,GAAE,iBAAYgI,GACdrO,MAAO,CACH4C,MAAM,OACNS,QAAS,EACTgB,SAAS,OACTF,OAAQ,IAGZ,0BACIrE,UAAWC,IAAGF,EAAQ4tB,cACtBztB,MAAO,CACH4C,MAAM,OACNc,QAAQ,QACRtE,MAAO2uB,IAAS1f,GAAT,UACPtL,WAAYgrB,IAAS1f,GAAT,YAGfA,MAMrB,OAAOqR,EAEX,IAASrR,EAAI0f,EAAO,EAAG1f,GAAK0f,EAAO,EAAG1f,IAClCqR,EAAI9Q,KACA,kBAACpI,EAAA,EAAD,CACIjJ,IAAK8Q,EACLjP,MAAM,YACNyG,SAlHF,GAkHawI,EAAI,IAAgB2d,EAAQvd,OACvCtJ,GAAI,CACA9B,QAAS,EACTK,QArHN,GAqHgB2K,EAAI,IAAgB2d,EAAQvd,QAA7B,SAGb,kBAAC,IAAD,CACIpI,GAAE,iBAAYgI,GACdrO,MAAO,CACH4C,MAAM,OACNS,QAAS,EACTgB,SAAS,OACTF,OAAQ,IAGZ,0BACIrE,UAAWC,IAAGF,EAAQ4tB,cACtBztB,MAAO,CACH4C,MAAM,OACNc,QAAQ,QACRX,WAAYgrB,IAAS1f,GAAT,UACZjP,MAAO2uB,IAAS1f,GAAT,YAGVA,MAMrB,OAAOqR,EA0bsBuP,GAED,kBAACzoB,EAAA,EAAD,CACIpH,MAAM,YACNyG,SAAUsoB,GAAOnC,EAAQvd,OACzBtJ,GAAE,aACE9B,QAAS,GACR,2BAA6B,CAC1BK,QAAQ,UAIhB,kBAAC,IAAD,CACI2C,GAAE,iBAAY0nB,EAAO,GACrB/tB,MAAO,CACH4C,MAAM,OACNc,QAAQ,QACRL,QAAS,EACTc,OAAQ,IAGZ,kBAAC,KAAD,CACIgB,GAAI,CACAvC,MAAM,OACNc,QAAQ,mB,2MCnjC7C3E,gBAbS,SAACY,GAAD,gBACpBiC,gBAAiBjC,EAAMkC,KAAKD,gBAC5BE,QAASnC,EAAMoC,KAAKC,MACpBnF,IAAK8C,EAAMkC,KAAKG,MAChBC,SAAUtC,EAAMuC,MAAMD,UAJF,gCAKHtC,EAAMkC,KAAKD,iBALR,yBAMVjC,EAAMkC,KAAKM,UAND,2BAORxC,EAAMoC,KAAKK,YAPH,2BAQRzC,EAAMoC,KAAKM,YARH,IAWE,GAEXtD,EAvRW,SAACC,GAAW,IAE9B4C,EAMA5C,EANA4C,gBACAK,EAKAjD,EALAiD,SAEAitB,EAGAlwB,EAHAkwB,uBACAC,EAEAnwB,EAFAmwB,mBACAC,EACApwB,EADAowB,cA8FEvvB,EA3FYtB,aAAW,SAACC,GAAD,MAAY,CACrC0D,MAAO,CACHM,IAAI,MACJC,KAAK,MACLC,UAAU,wBACVC,SAAS,WACTC,MAAO,IACPC,gBAAiBrE,EAAMsE,QAAQC,WAAWC,MAC1CC,OAAO,+BACPC,UAAW1E,EAAM2E,QAAQ,GAEzBC,QAAQ,OACRC,QAAS,EACTC,aAAa,UACb,2BAA4B,CACxBV,MAAM,mBAGdW,OAAQ,CACJV,gBAAiBrE,EAAMY,MAAMoE,UAC7BpE,MAAOZ,EAAMY,MAAMoE,UACnBH,QAAS7E,EAAMiF,QAAQ,GACvBC,QAAS,OACTC,WAAY,SACZC,eAAgB,iBAEpBC,MAAO,CACHzE,MAAOZ,EAAMY,MAAMoE,UACnBvD,WAAY,IAEZ2C,MAAM,QAEVkB,QAAS,CACLT,QAAS7E,EAAMiF,QAAQ,IAE3BM,UAAW,CACPnB,MAAM,QAEVoB,aAAc,CACVN,QAAQ,QACRO,SAAS,QAGbC,IAAK,CACDC,OAAO,iBAEXC,YAAa,CACTD,OAAO,cACPE,SAAS,SACTjF,MAAOZ,EAAMY,MAAM4C,OAEvBC,SAAU,CACN7C,MAAO,WAEXkF,YAAY,aACRC,cAAc,OACd3B,MAAM,cACNxD,MAAQgwB,EAAcC,SAAf,oBACPpvB,WAAW,MACXoE,SAAS,kBACTF,OAAO,mBANA,2BASXK,YAAa,CACTD,cAAc,OACd3B,MAAM,cACNxD,MAAM,UACNiF,SAAS,kBACTI,eAAe,OACf,cAAe,CACXrF,MAAM,YAGdsF,KAAM,CACFC,WAAW,MACXR,OAAO,mBAEXU,KAAM,CACFD,UAAU,KACVD,WAAW,OAEfvE,KAAM,CACFwE,UAAW,EACXE,OAAO,WAEX6lB,OAAQ,CACJvrB,MAAM,OACN0H,UAAU,OACVzD,QAAQ,QAGA/E,GAiDVgxB,GALUzV,iBAAO,MACEna,aACrB,SAACC,GAAD,OAAWA,EAAMoa,WAAWD,oBAEnBpa,aAAY,SAACC,GAAD,OAAWA,EAAMoa,WAAW1S,QAC/B3H,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMsE,kBACnDC,EAAoB7vB,aACtB,SAACC,GAAD,OAAWA,EAAMqrB,MAAMuE,qBAErB5E,EAASjrB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAML,UACjCtd,cAMjB,OACI,kBAAC,WAAD,KAEQ,kBAACrI,EAAA,EAAD,CAAOzF,KAAMgwB,GACT,yBAAKzvB,UAAWD,EAAQqC,OACpB,yBACIlC,MAAO,CACH0D,QAAQ,OAERL,QAAS,EACTc,OAAQ,IAIZ,kBAACc,EAAA,EAAD,CACI7E,MAAM,EACN8E,SAAS,UACTC,GAAI,CACAvC,MAAM,OACNc,QAAQ,UAGZ,yBACI1D,MAAO,CACH0D,QAAQ,OACRE,eAAe,kBAGnB,uBACI5D,MAAO,CACHC,WAAW,MACXoE,SAAS,OACTe,aAAa,QAJrB,YASA,kBAAC,IAAD,CACItF,UAAWD,EAAQO,KACnBF,QAAS,kBAAMgvB,UAK/B,yBACIpvB,UAAWD,EAAQ0D,OACnBvD,MAAO,CAAE4E,UAAU,QAEnB,0BAAM9E,UAAWD,EAAQgE,OAEjB,uBAAG/D,UAAS,UAAKD,EAAQ8qB,OAAb,WAAZ,wFAzGxB,kBAAC,WAAD,KAMKA,EACG,kBAACxkB,EAAA,EAAD,CAAKrG,UAAWD,EAAQ6E,MACpB,kBAACuB,EAAA,EAAD,CACIC,UAAU,MACVE,cAAY,EACZtG,UAAWD,EAAQyE,aAEjB8qB,EAAcC,SAQZ,kBAAC,KAAD,CACIlqB,GAAI,CACAC,aAAa,MACbmQ,YAAY,SAVpB,kBAAC,KAAD,CACIpQ,GAAI,CACAC,aAAa,MACbmQ,YAAY,SAWvBoV,IAIT,MAmFI,kBAACxkB,EAAA,EAAD,CACIzC,QAAQ,OACR4C,cAAc,cACdC,GAAI,EACJzG,UAAWD,EAAQqE,KAEnB,kBAACiC,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,UACNyG,WACIjE,IAAoB0tB,GAIxBpvB,QAASivB,GARb,WAcJ,kBAAChpB,EAAA,EAAD,CAAKO,GAAI,GACL,kBAACF,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,QACNc,QAAS,kBAAMgvB,MAHnB,YAWPjtB,GACG,kBAACkE,EAAA,EAAD,CAAKhB,GAAI,CAAEvC,MAAO,SACd,kBAAC+D,EAAA,EAAD,aCpQ1B3G,IAAK,IACP2C,SAAU,WACVH,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXE,MAAM,QACNioB,QAAS,mBACT3nB,UAAW,GACX4nB,EAAG,EACH1nB,QAAQ,kBACRid,aAAa,oBACbiL,WAAW,qBAXJ,yIAgBN,2BAA6B,CAC1B1oB,MAAM,MACNuB,OAAO,OAEP2mB,EAAG,IApBA,IAuBLxsB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCgxB,aAAc,CACV9rB,QAAQ,OACRE,eAAe,gBAEnB6rB,cAAe,CACX7sB,MAAM,OACNwC,aAAa,MACb9B,aAAa,mBAIjBosB,KAAM,CACF9qB,UAAU,OAEd+qB,WAAY,CACR,UAAW,CACPvsB,QAAQ,kBACRH,OAAO,wBAIJ,SAAS2sB,GAAT,GAWX,IAVArwB,EAUD,EAVCA,KAEAwF,GAQD,EATCymB,WASD,EARCzmB,aACA8qB,EAOD,EAPCA,MACAC,EAMD,EANCA,SACAC,EAKD,EALCA,WACAC,EAID,EAJCA,cACAtqB,EAGD,EAHCA,GACAuqB,EAED,EAFCA,OACA3B,EACD,EADCA,uBAEMzuB,EAAUvB,KADjB,EAGqCN,mBAAS6xB,GAH9C,mBAGQK,EAHR,KAGoBC,EAHpB,KAKOvuB,EAAkBlC,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKD,mBAK1DvD,qBAAU,WAEF8xB,EADe,IAAfJ,EACcF,EAEAC,KAEnB,CAACD,EAAOC,EAAUC,IAErB,IA+DM5E,EAAK9d,cAYX,OACI,2BAEI,gBAACrI,EAAA,EAAD,CACIomB,kBAAgB,yBAChBC,mBAAiB,+BACjB9rB,KAAMA,EACNie,QAASzY,EACT0mB,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACX5P,QAAS,MAGb,gBAAC6P,GAAA,EAAD,CAAMC,GAAIvsB,GACN,gBAAC4G,EAAA,EAAD,CAAKhB,GAAInF,IACL,uBAAKF,UAAWC,IAAGF,EAAQ2vB,eACvB,gBAACvpB,EAAA,EAAD,CACIP,GAAG,yBACHQ,UAAU,MACVf,GAAI,CACA8P,WAAW,iCACXoL,aACmB,IAAf0P,GAAA,oBACJjrB,OAAO,sBAEX5E,QAAS,kBAAM8vB,EAAc,IAC7BlwB,UAAWC,IAAGF,EAAQioB,OAEtB,gBAAClT,GAAA,EAAD,CACIzP,GAAI,CACA/F,MAAsB,IAAf2wB,GAAoB,UAC3B,UAAW,CACP3sB,QAAQ,kBACRH,OAAO,qBAOf,gBAAC,KAAD,CACIkC,GAAI,CACA/F,MACmB,IAAf2wB,GAAoB,cA3BxC,QAiCA,gBAAC9pB,EAAA,EAAD,CACIP,GAAG,yBACHQ,UAAU,MACVf,GAAI,CACA8P,WAAW,iCAEXoL,aACmB,IAAf0P,GAAA,oBACJjrB,OAAO,sBAEX5E,QAAS,kBAAM8vB,EAAc,KAE7B,gBAACpb,GAAA,EAAD,CACIzP,GAAI,CACA/F,MAAsB,IAAf2wB,GAAoB,UAC3B,UAAW,CACP3sB,QAAQ,kBACRH,OAAO,qBAIf,gBAAC,KAAD,CACIkC,GAAI,CACA/F,MACmB,IAAf2wB,GAAoB,cAxBxC,YA+BJ,gBAAC9pB,EAAA,EAAD,CACId,GAAI,CACAoB,GAAI,EACJO,UAAU,kBACVnI,OAAO,MAEPD,UAAU,QAEdwH,UAAU,OAETgqB,EAAWzhB,OAAS,GACjByhB,EAAWpiB,KACP,SAACsiB,GAAD,OACIA,EAAOC,YAAP,OAAoBJ,QAApB,IAAoBA,OAApB,EAAoBA,EAAQ9Z,MAC5Bia,EAAOE,aAAe5qB,GAClB,gBAAC,WAAD,CAAgBnI,IAAK6yB,EAAOja,KACxB,gBAACuB,EAAA,EAAD,CACI5X,UAAWC,IACPF,EAAQ4vB,gBAGZ,gBAAC7N,GAAA,EAAD,CACIrB,OACI,gBAACgQ,GAAA,EAAD,KACK,IACD,gBAACzO,GAAA,EAAD,CACIC,MACIqO,EAAO5c,QAEX3P,MAAM,QACNqC,UAAU,MACVpG,UACID,EAAQ2wB,SAMxB3sB,MACI,4BACKusB,EAAO3zB,MAMhBg0B,UAAW7B,KACPwB,EAAOM,WAEN5B,GACG,oBAEHC,OACG,qBAGRnX,OACIhW,GAeI,gBAACgT,GAAA,EAAD,CACI9U,UAAWC,IACPF,EAAQ8wB,gBAEZzwB,QAAS,kBAvKjD6T,EAyKgDqc,EAAOrc,WAxKtEnS,GAILupB,EAAGna,GAAcE,qBAAqB6C,IACtCoX,EAAG3Z,GAAWE,mBAAkB,IAChC3M,KALIupB,KAFe,IAACva,IA6KyC,IACD,gBAAC,KAAD,CACI5O,GAAI,CAEA/F,MAAM,sBAM1BU,UAAWC,IACPF,EAAQ+wB,4BC9TpE,IAAMtyB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC0D,MAAO,CACHM,IAAI,MACJC,KAAK,MACLC,UAAU,wBACVC,SAAS,WACTC,MAAO,IACPC,gBAAiBrE,EAAMsE,QAAQC,WAAWC,MAC1CC,OAAO,+BACPC,UAAW1E,EAAM2E,QAAQ,GAEzBC,QAAQ,OACRC,QAAS,EACTC,aAAa,UACb,2BAA4B,CACxBV,MAAM,mBAGdW,OAAQ,CACJV,gBAAiBrE,EAAMY,MAAMoE,UAC7BpE,MAAOZ,EAAMY,MAAMoE,UACnBH,QAAS7E,EAAMiF,QAAQ,GACvBC,QAAS,OACTC,WAAY,SACZC,eAAgB,iBAEpBC,MAAO,CACHzE,MAAOZ,EAAMY,MAAMoE,UACnBvD,WAAY,IAEZ2C,MAAM,QAEVkB,QAAS,CACLT,QAAS7E,EAAMiF,QAAQ,IAE3BM,UAAW,CACPnB,MAAM,QAEVoB,aAAc,CACVN,QAAQ,QACRO,SAAS,QAGbC,IAAK,CACDC,OAAO,iBAEXC,YAAa,CACTD,OAAO,cACPE,SAAS,SACTjF,MAAOZ,EAAMY,MAAM4C,OAEvBC,SAAU,CACN7C,MAAO,WAEXkF,YAAa,CACTC,cAAc,OACd3B,MAAM,cACNxD,MAAM,UACNa,WAAW,MACXoE,SAAS,kBACTF,OAAO,mBAEXK,YAAa,CACTD,cAAc,OACd3B,MAAM,cACNxD,MAAM,UACNiF,SAAS,kBACTI,eAAe,OACf,cAAe,CACXrF,MAAM,YAGdsF,KAAM,CACFC,WAAW,MACXR,OAAO,mBAEXU,KAAM,CACFD,UAAU,KACVD,WAAW,OAEfvE,KAAM,CACFwE,UAAW,EACXE,OAAO,WAEX6lB,OAAQ,CACJvrB,MAAM,OACN0H,UAAU,OACVzD,QAAQ,SAyLDtE,gBAbS,SAACY,GAAD,gBACpBiC,gBAAiBjC,EAAMkC,KAAKD,gBAC5BE,QAASnC,EAAMoC,KAAKC,MACpBnF,IAAK8C,EAAMkC,KAAKG,MAChBC,SAAUtC,EAAMuC,MAAMD,UAJF,gCAKHtC,EAAMkC,KAAKD,iBALR,yBAMVjC,EAAMkC,KAAKM,UAND,2BAORxC,EAAMoC,KAAKK,YAPH,2BAQRzC,EAAMoC,KAAKM,YARH,IAWE,GAEXtD,EArLQ,SAACC,GACpB,IAAMa,EAAUvB,KAEZsD,EAMA5C,EANA4C,gBACAK,EAKAjD,EALAiD,SACA4uB,EAIA7xB,EAJA6xB,SAEAC,GAEA9xB,EAHA+xB,mBAGA/xB,EAFA8xB,qBACA1B,EACApwB,EADAowB,cAsCEE,GALUzV,iBAAO,MACEna,aACrB,SAACC,GAAD,OAAWA,EAAMoa,WAAWD,oBAEnBpa,aAAY,SAACC,GAAD,OAAWA,EAAMoa,WAAW1S,QAC/B3H,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMsE,kBACnD3E,EAASjrB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAML,UAC5Cvd,EAAWC,cAWjB,OACI,kBAAC,WAAD,KAEQ,kBAACrI,EAAA,EAAD,CAAOzF,KAAMsxB,GACT,yBAAK/wB,UAAWD,EAAQqC,OACpB,yBACIlC,MAAO,CACH0D,QAAQ,OAERL,QAAS,EACTc,OAAQ,IAIZ,kBAACc,EAAA,EAAD,CACI7E,MAAM,EACN8E,SAAS,UACTC,GAAI,CACAvC,MAAM,OACNc,QAAQ,UAGZ,yBACI1D,MAAO,CACH0D,QAAQ,OACRE,eAAe,kBAGnB,uBACI5D,MAAO,CACHC,WAAW,MACXoE,SAAS,OACTe,aAAa,QAJrB,YASA,kBAAC,IAAD,CACItF,UAAWD,EAAQO,KACnBF,QAAS,kBAAM4wB,UAK/B,yBACIhxB,UAAWD,EAAQ0D,OACnBvD,MAAO,CAAE4E,UAAU,QAEnB,0BAAM9E,UAAWD,EAAQgE,OAEjB,uBAAG/D,UAAS,UAAKD,EAAQ8qB,OAAb,WACNyE,EAAcC,SAEV,6EADA,+EAjGlC,kBAAC,WAAD,KAMK1E,EACG,kBAACxkB,EAAA,EAAD,CAAKrG,UAAWD,EAAQ6E,MACpB,kBAACuB,EAAA,EAAD,CACIC,UAAU,MACVE,cAAY,EACZtG,UAAWD,EAAQyE,aAEnB,kBAAC,KAAD,CACIa,GAAI,CAAEC,aAAa,MAAQmQ,YAAY,SAE1CoV,IAIT,MAqFI,kBAACxkB,EAAA,EAAD,CACIzC,QAAQ,OACR4C,cAAc,cACdC,GAAI,EACJzG,UAAWD,EAAQqE,KAEnB,kBAACiC,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,UACNyG,WACIjE,IAAoB0tB,GAIxBpvB,QACKkvB,EAAcC,SAhF/B,WAChBjiB,EAASkc,GAAMC,aAAa6F,KANd,WAEdhiB,EAAS8b,GAAIC,WAAWiG,MAwFMA,EAAcC,SAAmB,QAAR,QAInC,kBAAClpB,EAAA,EAAD,CAAKO,GAAI,GACL,kBAACF,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,QACNc,QAAS,kBAAM4wB,MAHnB,YAWP7uB,GACG,kBAACkE,EAAA,EAAD,CAAKhB,GAAI,CAAEvC,MAAO,SACd,kBAAC+D,EAAA,EAAD,aC5N1BrI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCwyB,kBAAmB,CACfjuB,WAAW,QAEfspB,cAAe,CACXzpB,MAAM,MACNuB,OAAO,OACPF,SAAS,mBACTW,UAAU,kBAEdqsB,SAAU,CACNvtB,QAAQ,QAEZwtB,aAAc,CACV9rB,aAAa,QAEjBorB,MAAO,CACH7xB,OAAO,kBACPiE,MAAM,QAEVguB,eAAgB,CACZvQ,aAAa,mCAEb,UAAW,CACPtd,WAAW,wCAGnBouB,YAAa,CACTtuB,gBAAgB,mBAEpBuuB,cAAe,CACX/sB,SAAU,OACVpE,WAAY,IACZkE,OAAQ,IACRd,QAAS,IACTjE,MAAO,OACP8d,UAAU,cAEdmU,sBAAuB,CACnB3tB,QAAQ,QACRgS,WAAY,SACZC,SAAU,SACVC,aAAc,WACdC,SAAU,QAEdsN,SAAU,CACN9e,SAAS,OACTyC,UAAU,mBAEd6pB,eAAgB,CACZ/rB,UAAU,QAEd0sB,cAAe,CACX,OAAQ,CACJjtB,SAAS,kBACTpE,WAAW,kBACXoD,QAAQ,qBACRc,OAAO,eACPkf,WAAW,iBACXvc,UAAU,QAEd,OAAQ,CACJzC,SAAS,kBACTpE,WAAW,kBACXoD,QAAQ,qBACRc,OAAO,eACPkf,WAAW,iBACXvc,UAAU,QAEd,OAAQ,CACJzC,SAAS,kBACTpE,WAAW,kBACXkE,OAAO,eACPd,QAAQ,qBACRggB,WAAW,iBACXvc,UAAU,QAEd,MAAO,CACHA,UAAW,OACX3C,OAAQ,EACRd,QAAS,IAGjBkuB,YAAY,aACR3uB,MAAM,OACNkE,UAAU,UACT,2BAA6B,CAC1BzC,SAAS,kBACTqR,WAAW,WAGnB8b,aAAc,CACV5uB,MAAM,OACNS,QAAS,EACTgB,SAAS,OACTF,OAAQ,GAEZspB,aAAa,eACR,2BAA6B,CAC1BppB,SAAS,wBA4sBNotB,GAvsBA,SAACzyB,GAAW,IAAD,EACEhB,mBAAS,IADX,mBACfyO,EADe,KACT+W,EADS,OAEoBxlB,mBAAS,IAF7B,mBAEfoxB,EAFe,KAEAsC,EAFA,OAGc1zB,mBAAS,MAHvB,mBAGf2zB,EAHe,KAGHC,EAHG,KAMlBC,EAKA7yB,EALA6yB,QACAnsB,EAIA1G,EAJA0G,GACAosB,EAGA9yB,EAHA8yB,aAIElwB,EAAkBlC,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKD,mBACpDmwB,EAAUryB,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKmR,QAAQ+e,WAEpDlC,EAAQnwB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAM6E,SAC3CC,EAAWpwB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAM8E,YAC9CkC,EAAWtyB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMgH,YAC9CC,EAAiBvyB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMiH,kBAEpDjwB,EAAQtC,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMhpB,SAC3C2oB,EAASjrB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAML,UAC5CM,EAAmBvrB,aACrB,SAACC,GAAD,OAAWA,EAAMqrB,MAAMC,oBAErBlX,EAAQrU,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKmR,QAAQe,SAClDlU,EAAUvB,KACV6sB,EAAK9d,cA3BW,EA8BgBrP,mBAAS6zB,GA9BzB,mBA8BfK,EA9Be,KA8BFC,EA9BE,KA+Bd/W,EAAUpc,EAAVoc,MACF2S,EAAOxM,OAAOnG,EAAM8H,OAAO6K,MAG7BG,EADU,GACSH,EAAO,GAC1BI,EAFU,EAEJJ,EAGV1vB,qBAAU,WACN8zB,EAAeN,EAAQ1jB,MAAM+f,EAAOC,MACrC,CAAC/S,EAAO2S,EAAM8D,EAASG,EAAU9D,EAAOC,IAE3C,IA3CsB,EA8HUnwB,mBAAS,MA9HnB,mBA8Hfo0B,EA9He,KA8HLC,EA9HK,KAoIhBttB,EAAcutB,uBAAY,WAC5BD,EAAY,QACb,IAMGE,GAAqB,SAACtC,GACxB9E,EAAGvG,GAAUE,iBAAiB,KAC9BtX,OAAOglB,SAAS,CACZhwB,IAAKiwB,SAASC,gBAAgBC,aAE9BC,SAAU,WAEdpP,EAAQ4L,EAActrB,SACtB8tB,GAAc,GAEd7sB,KAGE8tB,GAAqB,WACvBjB,GAAc,GACdpO,EAAQ,KAYNsP,GAAwB,WAC1B/tB,IACAomB,EAAGvG,GAAUE,iBAAiB,KAC9BqG,EAAGvE,GAAsBE,8BAA6B,IACtD8K,GAAc,GACdpO,EAAQ,KASNuP,GAAa,SAAC9C,GAShB,OAPQJ,EAAMmD,MACV,SAAClL,GAAD,OACIA,EAAK/T,QAAUA,GACf+T,EAAKwI,aAAeL,EAAOK,YAC3BxI,EAAKuI,WAAaJ,EAAO9Z,QAM/B8c,GAAgB,SAAChD,GAQnB,OANQH,EAASkD,MACb,SAAC9K,GAAD,OACIA,EAAQnU,QAAUA,GAClBmU,EAAQoI,aAAeL,EAAOK,YAC9BpI,EAAQmI,WAAaJ,EAAO9Z,QAvMlB,GAwO0B9C,IAAMrV,UAAS,GAxOzC,qBAwOfowB,GAxOe,MAwOGC,GAxOH,MAyOhBC,GAAyB,kBAAMD,IAAoB,IAzOnC,GA4Ochb,IAAMrV,SAAS,GA5O7B,qBA4Of+xB,GA5Oe,MA4OHC,GA5OG,SA8OlB3c,IAAMrV,UAAS,GA9OG,qBA6Ofk1B,GA7Oe,MA6OYC,GA7OZ,MAkPhBC,GAAkC,SAACrlB,EAAGkiB,GACxCD,GAAcjiB,GACd2jB,EAAiBzB,GACjBkD,IAA6B,IAe3BE,GAA2B,WAC7BtuB,IACAomB,EAAGvG,GAAUE,iBAAiB,KAC9BqG,EAAGjB,GAAkBE,0BAAyB,KAOlD,OACI,kBAAC,WAAD,KACI,kBAAC,GAAD,CACI7qB,KAAM6uB,GACN5C,WAAY8C,GACZvpB,YAzCoB,kBAAMspB,IAAoB,MA2ClD,kBAACuB,GAAD,CACIlqB,GAAIA,EACJqqB,WAAYA,GACZC,cAAeA,GACfH,MAAOA,EACPC,SAAUA,EACVvwB,KAAM2zB,GACN1H,WAAY4H,GACZruB,YAtC6B,WACrCouB,IAA6B,IAsCrBlD,OAAQb,EACRd,uBAAwBA,KAE5B,kBAAC,GAAD,CACIY,uBAnHmB,WAC3B/D,EAAGnE,GAAiBC,yBAAwB,IAC5CkE,EAAGvE,GAAsBE,8BAA6B,IACtDqE,EAAGvG,GAAUE,iBAAiB,MAiHtBqK,mBAhIe,WACvBhE,EAAG3E,GAAaC,oBAAoB,CAAE2I,oBAgI9BA,cAAeA,IAEnB,kBAAC,GAAD,CACIyB,SAAUoB,EACVlB,mBAAoBsC,GACpBvC,oBAhCsB,WAC9B3F,EAAGjB,GAAkBE,0BAAyB,IAC9Ce,EAAGvG,GAAUE,iBAAiB,MA+BtBsK,cAAeA,IAElByC,EAAQpjB,OAAS,GAEdyjB,EAAYpkB,KAAI,SAACmiB,GAAD,OACZ,kBAACvY,EAAA,EAAD,CAAM5X,UAAWD,EAAQqxB,aAAc3zB,IAAK0yB,EAAO9Z,KAC/C,kBAACyL,GAAA,EAAD,CACIrB,OACI,kBAACgQ,GAAA,EAAD,KACK,IACD,kBAACzO,GAAA,EAAD,CACIC,MAAOkO,EAAOtB,KAAKnb,QACnB3P,MAAM,QACNqC,UAAU,MACVpG,UAAWD,EAAQ2wB,SAK/B3sB,MACI,0BACI7D,MAAO,CAAE8E,OAAO,WAChB5E,QAAS,kBArElB,SAAC6T,GACfnS,GAILupB,EAAGna,GAAcE,qBAAqB6C,IACtCoX,EAAG3Z,GAAWE,mBAAkB,KAJ5B4c,KAmEuCgF,CAAerD,EAAOlc,SAEpCkc,EAAOtB,KAAKlyB,KAAM,IAClBwzB,EAAOZ,SACJ,kBAACppB,EAAA,EAAD,CACIC,UAAW,OACXO,QAAS,QACTtB,GAAI,CACApC,WAAW,iBACX3D,MAAM,qBACNiE,QAAQ,qBACRpD,WAAW,mBAPnB,UAaA,IAIZwwB,UAAS,oBAAe7B,KAAOqB,EAAOpB,WACjCC,GAAG,oBACHC,OAAO,sBAGZnX,OACKqY,EAAOtB,KAAK5a,QAAUA,GACnBnS,GACHmwB,GAAWnwB,EACR,kBAACgT,GAAA,EAAD,CACI9U,UAAWC,IACP,MACAF,EAAQ8wB,gBAEZzwB,QAAS,SAAC6F,GAAD,OApO1B,SAACA,EAAGkqB,GACnBoC,EAAYtsB,EAAEwtB,eACd7B,EAAiBzB,GAkO+BzE,CAAWzlB,EAAGkqB,KAE9B,kBAAC,KAAD,OAGJ,kBAACrb,GAAA,EAAD,CACI9U,UAAWC,IACP,MACAF,EAAQ8wB,gBAEZzwB,QAAS,WACLsN,OAAOglB,SAAS,CACZhwB,IAAKiwB,SAASC,gBACTC,aAELC,SAAU,WAEdhB,EAAc,QAGjB,IACD,kBAAC,KAAD,CACIzsB,GAAI,CAEA/F,MAAM,yBAM1BU,UAAWC,IAAGF,EAAQ+wB,kBAE1B,kBAAC,KAAD,CACIlrB,GAAG,cACH8tB,SAAUpB,EACV7yB,KAAMk0B,QAAQrB,GACd5U,QAASzY,GAUT,kBAAC2uB,GAAA,EAAD,CAAUxzB,QAASqyB,IACf,8BACI,kBAAC,KAAD,CACIluB,SAAS,QACTc,GAAI,CAAEoQ,YAAa,MAG3B,kBAAC/O,EAAA,EAAD,gBAEJ,kBAACktB,GAAA,EAAD,CAAUxzB,QAAS4yB,IACd,IACD,8BACI,kBAAC,KAAD,CACIzuB,SAAS,QACTc,GAAI,CACAoQ,YAAa,EACb3Q,UAAU,WAItB,kBAAC4B,EAAA,EAAD,gBAEHurB,GACG,kBAAC2B,GAAA,EAAD,CACIxzB,QAASmzB,GACTxtB,UACIupB,EAAcC,UAGlB,8BACI,kBAAC,KAAD,CACIhrB,SAAS,QACTc,GAAI,CACAoQ,YAAa,EACb3Q,UAAU,WAItB,kBAAC4B,EAAA,EAAD,eAGPurB,GACG,kBAAC2B,GAAA,EAAD,CACIxzB,QAASmzB,GACTxtB,WACKupB,EAAcC,UAGnB,8BACI,kBAAC,KAAD,CACIhrB,SAAS,QACTc,GAAI,CACAoQ,YAAa,EACb3Q,UAAU,WAItB,kBAAC4B,EAAA,EAAD,cAKZ,kBAACmR,EAAA,EAAD,KACI,kBAAC1R,EAAA,EAAD,CACIQ,QAAQ,IACRrH,MAAM,cACNU,UAAWC,IAAGF,EAAQyxB,gBAErBnzB,aAAM8xB,EAAOnsB,WAUtB,kBAAC6vB,GAAA,EAAD,CAAa7zB,UAAWC,IAAGF,EAAQsxB,cAC/B,kBAAClrB,EAAA,EAAD,CACIC,UAAU,OACV9G,MAAM,gBACN+F,GAAI,CACAR,WAAW,MACXG,OAAO,UACP,UAAW,CACP1F,MAAM,UACNihB,aAAa,oBACbhc,SAAS,OACToW,WAAW,YAGnBva,QAAS,kBACLkzB,GAAgC,EAAGnD,KAGtCA,EAAOJ,OAEZ,kBAACjb,GAAA,EAAD,CACIzP,GAAI,CAAER,WAAW,OACjBzE,QAAS,kBAzSZ,SAAC+vB,GACjBruB,EAGDupB,EACI7C,GAAWC,kBAAkB,CACzB+H,WAAY0B,EAAS7b,IACrBpC,QACAsc,SAAUJ,EAAO9Z,OANzBmY,KAuSmCsF,CAAiB3D,KAEhC,kBAAC,KAAD,CACI9qB,GAAI,CACA/F,MAAO2zB,GAAW9C,GACZ,UACA,uBAIlB,kBAAChqB,EAAA,EAAD,CACIC,UAAU,OACV9G,MAAM,gBACNc,QAAS,kBACLkzB,GAAgC,EAAGnD,IAEvC9qB,GAAI,CACAR,WAAW,MACXG,OAAO,UACP,UAAW,CACP1F,MAAM,UACNihB,aAAa,oBACbhc,SAAS,OACToW,WAAW,aAIlBwV,EAAOH,UAEZ,kBAAClb,GAAA,EAAD,CACI1U,QAAS,kBAzTT,SAAC+vB,GACpBruB,EAGDupB,EACIzC,GAAcC,qBAAqB,CAC/B2H,WAAY0B,EAAS7b,IACrBpC,QACAsc,SAAUJ,EAAO9Z,OANzBmY,KAuTmCuF,CAAoB5D,KAEnC,kBAAC,KAAD,CACI9qB,GAAI,CACA/F,MAAO6zB,GAAchD,GACf,UACA,4BAQjC4B,EAAQpjB,OA/fH,GAggBF,yBAAK3O,UAAWC,IAAGF,EAAQ0xB,cACvB,kBAAC/qB,EAAA,EAAD,CACIX,SAAUqoB,GAAS,EACnB9uB,MAAM,YACN+F,GAAE,aACE9B,QAAS,GACR,2BAA6B,CAC1BK,QAAQ,UAIhB,kBAAC,IAAD,CACI2C,GAAE,qBAAgByrB,EAAaE,EAASnuB,OAAtC,YACEmuB,EAAS7b,IADX,YAEE4X,EAAO,GACX/tB,MAAO,CACH4C,MAAM,OACNc,QAAQ,QACRL,QAAS,EACTc,OAAQ,IAGZ,kBAAC,KAAD,CACIgB,GAAI,CACAvC,MAAM,OACNc,QAAQ,aAhhBvB,WACb,IAAIgc,EAAM,GACV,GAAa,IAATqO,EAAY,CACZ,IAAK,IAAI1f,EAAI0f,EAAM1f,GAAK0f,EAAO,EAAG1f,IAC9BqR,EAAI9Q,KACA,kBAACpI,EAAA,EAAD,CACIjJ,IAAK8Q,EACLjP,MAAM,YACNyG,SAjBN,GAiBiBwI,EAAI,IAAgBwjB,EAAQpjB,OACvCtJ,GAAI,CACA9B,QAAS,EACTK,QApBV,GAqBe2K,EAAI,IAAgBwjB,EAAQpjB,QAA7B,SAGR,kBAAC,IAAD,CACIpI,GAAE,qBAAgByrB,EAAaE,EAASnuB,OAAtC,YACEmuB,EAAS7b,IADX,YAEE9H,GACJrO,MAAO,CACH4C,MAAM,OACNS,QAAS,EACTgB,SAAS,OACTF,OAAQ,IAGZ,0BACIrE,UAAWC,IAAGF,EAAQ4tB,cACtBztB,MAAO,CACH4C,MAAM,OACNc,QAAQ,QACRtE,MAAO2uB,IAAS1f,GAAT,UACPtL,WAAYgrB,IAAS1f,GAAT,YAGfA,MAMrB,OAAOqR,EAEX,IAAK,IAAIrR,EAAI0f,EAAO,EAAG1f,GAAK0f,EAAO,EAAG1f,IAClCqR,EAAI9Q,KACA,kBAACpI,EAAA,EAAD,CACIjJ,IAAK8Q,EACLjP,MAAM,YACNyG,SAzDF,GAyDawI,EAAI,IAAgBwjB,EAAQpjB,OACvCtJ,GAAI,CACA9B,QAAS,EACTK,QA5DN,GA4DgB2K,EAAI,IAAgBwjB,EAAQpjB,QAA7B,SAGb,kBAAC,IAAD,CACIpI,GAAE,qBAAgByrB,EAAaE,EAASnuB,OAAtC,YACEmuB,EAAS7b,IADX,YAEE9H,GACJrO,MAAO,CACH4C,MAAM,OACNS,QAAS,EACTgB,SAAS,OACTF,OAAQ,IAGZ,0BACIrE,UAAWC,IAAGF,EAAQ4tB,cACtBztB,MAAO,CACH4C,MAAM,OACNc,QAAQ,QACRX,WAAYgrB,IAAS1f,GAAT,UACZjP,MAAO2uB,IAAS1f,GAAT,YAGVA,MAMrB,OAAOqR,EAqcMuP,GAED,kBAACzoB,EAAA,EAAD,CACIpH,MAAM,YACNyG,SAAUsoB,GAAO0D,EAAQpjB,OACzBtJ,GAAE,aACE9B,QAAS,GACR,2BAA6B,CAC1BK,QAAQ,UAIhB,kBAAC,IAAD,CACI2C,GAAE,qBAAgByrB,EAAaE,EAASnuB,OAAtC,YACEmuB,EAAS7b,IADX,YAEE4X,EAAO,GACX/tB,MAAO,CACH4C,MAAM,OACNc,QAAQ,QACRL,QAAS,EACTc,OAAQ,IAGZ,kBAAC,KAAD,CACIgB,GAAI,CACAvC,MAAM,OACNc,QAAQ,cAQ/B9B,EACG,kBAAC,WAAD,KACI,kBAAC,GAAD,CACIiC,MAAO,cACP4I,KAAMA,EACN+W,QAASA,EACT4L,cAAeA,EACfsC,iBAAkBA,EAClBmB,mBAAoBA,KAGvB5H,EACG,kBAAC9kB,EAAA,EAAD,CACIhB,GAAI,CACA2B,UAAU,WAGd,kBAACqS,GAAA,EAAD,OAGJwR,GACI,kBAAC1lB,EAAA,EAAD,CACIwB,QAAQ,WACRvB,SAAWlD,EAAoB,UAAZ,WAElB2oB,GAIXgH,EAaE,kBAAC,WAAD,KACI,kBAACnrB,EAAA,EAAD,CACIC,QAAQ,YACRvG,QAhfA,WACxBirB,EAAG/E,GAAaC,oBAAoB,CAAE5Z,OAAM2iB,oBAgfpBjqB,GAAI,CACA2B,UAAU,SACV1B,aAAa,KACbR,UAAU,SANlB,UAWA,kBAAC4B,EAAA,EAAD,CACIC,QAAQ,YACRvG,QAAS2yB,GACT1tB,GAAI,CACA2B,UAAU,SACV1B,aAAa,KACbR,UAAU,OACVD,WAAW,MAEfvF,MAAM,WATV,WAxBJ,kBAACoH,EAAA,EAAD,CACIC,QAAQ,YACRvG,QA1fG,WACvBirB,EAAGvF,GAAaC,oBAAoB,CAAEpZ,OAAM/G,SA0fxBP,GAAI,CACA2B,UAAU,SACV1B,aAAa,KACbR,UAAU,SANlB,WAyCR,kBAAC,WAAD,KACI,yBACI5E,MAAO,CACH8G,UAAU,SACV1B,aAAa,OACbR,UAAU,SAGd,kBAACqB,EAAA,EAAD,CAAYC,UAAU,OAAO9G,MAAM,iBAAnC,oDAGA,kBAAC,IAAD,CAAMiH,GAAG,SAASrG,MAAO,CAAEyE,eAAe,SACtC,kBAAC+B,EAAA,EAAD,CAAQxG,MAAO,CAAEqE,SAAS,SAA1B,cCn0BtB/F,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuF,UAAW,GACX2mB,kBAAmB,CACf9lB,UAAU,SAEd+lB,OAAQ,GACRC,iBAAkB,CACd9jB,UAAU,cAIZ9G,GAAQ,CACV2C,SAAU,WACVH,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXE,MAAM,MACNioB,QAAS,mBACT5nB,OAAQ,iBACRC,UAAW,GACX4nB,EAAG,GAGQ,SAASgJ,GAAe90B,GACnC,IAAMa,EAAUvB,KACRyG,EAAoC/F,EAApC+F,YAAaxF,EAAuBP,EAAvBO,KAAMyyB,EAAiBhzB,EAAjBgzB,SAAUtsB,EAAO1G,EAAP0G,GAC/B1D,EAAQtC,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMhpB,SAC3CipB,EAAmBvrB,aACrB,SAACC,GAAD,OAAWA,EAAMqrB,MAAMC,oBAErBN,EAASjrB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAML,UAPR,EAQlBtX,WAAe2e,EAASluB,SARN,mBAQnC2I,EARmC,KAQ7B+W,EAR6B,OAShBnQ,WAAe2e,EAASnuB,OATR,mBASnCA,EATmC,KAS5BqnB,EAT4B,KAW1C7X,aAAgB,WACZmQ,EAAQwO,EAASluB,SACjBonB,EAAS8G,EAASnuB,SACnB,CAACmuB,IAEJ,IAAM7G,EAAK9d,cAQL9K,EAAmB,WACrBwC,IACAye,EAAQwO,EAASluB,SACjBonB,EAAS8G,EAASnuB,QAEtB,OACI,2BACI,gBAACmB,EAAA,EAAD,CACIzF,KAAMA,EACNie,QAASjb,EACT6oB,kBAAgB,oBAChBC,mBAAiB,2BAEjB,gBAACllB,EAAA,EAAD,CAAKhB,GAAInF,IACL,gBAACiG,EAAA,EAAD,CACIQ,QAAQ,KACRP,UAAU,KACVf,GAAI,CAAE2B,UAAU,sBAHpB,yBAOA,gBAACtB,EAAA,EAAD,CACIE,GAAG,QACHC,MAAM,QACN7F,UAAWD,EAAQkE,UACnB6B,YAAa,QACbiS,WAAS,EACT1T,OAAO,SACP1H,KAAK,QACLe,MAAOqG,EACP1E,SApCH,SAAC4G,GACdmlB,EAASnlB,EAAEC,OAAOxI,UAsCN,uBAAKsC,UAAWC,IAAGF,EAAQ6qB,oBACvB,gBAAC,GAAD,CACI7mB,MAAO,gBACP4I,KAAMA,EACN+W,QAASA,KAGhByH,EACG,gBAAC9kB,EAAA,EAAD,CAAKrG,UAAWC,IAAGF,EAAQ+qB,mBACvB,gBAACzR,GAAA,EAAD,OAGJwR,GACI,gBAAC1lB,EAAA,EAAD,CACIwB,QAAQ,WACRvB,SAAWlD,EAAoB,UAAZ,WAElB2oB,GAYb,uBAAK7qB,UAAWC,IAAG,SACf,gBAACyG,EAAA,EAAD,CACItG,QAASqC,EACTkE,QAAQ,YACR3G,UAAWC,IAAG,SAHlB,UAOA,gBAACyG,EAAA,EAAD,CAAQtG,QAzEP,WACjBirB,EAAG/G,GAAaC,oBAAoB,CAAExgB,QAAOC,QAAS2I,EAAM/G,SAwEbe,QAAQ,aAAvC,cC5GxB,I,GA8Re1H,gBAbS,SAACY,GAAD,gBACpBiC,gBAAiBjC,EAAMkC,KAAKD,gBAC5BE,QAASnC,EAAMoC,KAAKC,MACpBnF,IAAK8C,EAAMkC,KAAKG,MAChBC,SAAUtC,EAAMuC,MAAMD,UAJF,gCAKHtC,EAAMkC,KAAKD,iBALR,yBAMVjC,EAAMkC,KAAKM,UAND,2BAORxC,EAAMoC,KAAKK,YAPH,2BAQRzC,EAAMoC,KAAKM,YARH,IAWE,GAEXtD,EA9RW,SAACC,GACvB,IAAMgzB,EAAWtyB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMgH,YA6F9CnyB,EA3FYtB,aAAW,SAACC,GAAD,MAAY,CACrC0D,MAAO,CACHM,IAAI,MACJC,KAAK,MACLC,UAAU,wBACVC,SAAS,WACTC,MAAO,IACPC,gBAAiBrE,EAAMsE,QAAQC,WAAWC,MAC1CC,OAAO,+BACPC,UAAW1E,EAAM2E,QAAQ,GAEzBC,QAAQ,OACRC,QAAS,EACTC,aAAa,UACb,2BAA4B,CACxBV,MAAM,mBAGdW,OAAQ,CACJV,gBAAiBrE,EAAMY,MAAMoE,UAC7BpE,MAAOZ,EAAMY,MAAMoE,UACnBH,QAAS7E,EAAMiF,QAAQ,GACvBC,QAAS,OACTC,WAAY,SACZC,eAAgB,iBAEpBC,MAAO,CACHzE,MAAOZ,EAAMY,MAAMoE,UACnBvD,WAAY,IAEZ2C,MAAM,QAEVkB,QAAS,CACLT,QAAS7E,EAAMiF,QAAQ,IAE3BM,UAAW,CACPnB,MAAM,QAEVoB,aAAc,CACVN,QAAQ,QACRO,SAAS,QAGbC,IAAK,CACDC,OAAO,iBAEXC,YAAa,CACTD,OAAO,cACPE,SAAS,SACTjF,MAAOZ,EAAMY,MAAM4C,OAEvBC,SAAU,CACN7C,MAAO,WAEXkF,YAAY,aACRC,cAAc,OACd3B,MAAM,cACNxD,MAAQ4yB,EAAS3C,SAAuB,UAAjC,UACPpvB,WAAW,MACXoE,SAAS,kBACTF,OAAO,mBANA,2BASXK,YAAa,CACTD,cAAc,OACd3B,MAAM,cACNxD,MAAM,UACNiF,SAAS,kBACTI,eAAe,OACf,cAAe,CACXrF,MAAM,YAGdsF,KAAM,CACFC,WAAW,MACXR,OAAO,mBAEXU,KAAM,CACFD,UAAU,KACVD,WAAW,OAEfvE,KAAM,CACFwE,UAAW,EACXE,OAAO,WAEX6lB,OAAQ,CACJvrB,MAAM,OACN0H,UAAU,OACVzD,QAAQ,QAGA/E,GAEZsD,EAOA5C,EAPA4C,gBACAK,EAMAjD,EANAiD,SAEA8xB,EAIA/0B,EAJA+0B,6BAEAC,GAEAh1B,EAHAi1B,4BAGAj1B,EAFAg1B,yBACAtuB,EACA1G,EADA0G,GA+CE4pB,GAFUzV,iBAAO,MAEDna,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMsE,kBAInD3E,GAHoBjrB,aACtB,SAACC,GAAD,OAAWA,EAAMqrB,MAAMuE,qBAEZ7vB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAML,WAC5Cvd,EAAWC,cAUjB,OACI,kBAAC,WAAD,KAEQ,kBAACrI,EAAA,EAAD,CAAOzF,KAAMy0B,GACT,yBAAKl0B,UAAWD,EAAQqC,OACpB,yBACIlC,MAAO,CACH0D,QAAQ,OAERL,QAAS,EACTc,OAAQ,IAIZ,kBAACc,EAAA,EAAD,CACI7E,MAAM,EACN8E,SAAS,UACTC,GAAI,CACAvC,MAAM,OACNc,QAAQ,UAGZ,yBACI1D,MAAO,CACH0D,QAAQ,OACRE,eAAe,kBAGnB,uBACI5D,MAAO,CACHC,WAAW,MACXoE,SAAS,OACTe,aAAa,QAJrB,YASA,kBAAC,IAAD,CACItF,UAAWD,EAAQO,KACnBF,QAAS,kBACL6zB,UAMpB,yBACIj0B,UAAWD,EAAQ0D,OACnBvD,MAAO,CAAE4E,UAAU,QAEnB,0BAAM9E,UAAWD,EAAQgE,OAEjB,uBAAG/D,UAAS,UAAKD,EAAQ8qB,OAAb,WAAZ,0FA5GxB,kBAAC,WAAD,KAMKA,EACG,kBAACxkB,EAAA,EAAD,CAAKrG,UAAWD,EAAQ6E,MACpB,kBAACuB,EAAA,EAAD,CACIC,UAAU,MACVE,cAAY,EACZtG,UAAWD,EAAQyE,aAEjB0tB,EAAS3C,SAQP,kBAAC,KAAD,CACIlqB,GAAI,CACAC,aAAa,MACbmQ,YAAY,SAVpB,kBAAC,KAAD,CACIpQ,GAAI,CACAC,aAAa,MACbmQ,YAAY,SAWvBoV,IAIT,MAsFI,kBAACxkB,EAAA,EAAD,CACIzC,QAAQ,OACR4C,cAAc,cACdC,GAAI,EACJzG,UAAWD,EAAQqE,KAEnB,kBAACiC,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,UACNyG,WACIjE,IAAoB0tB,GAIxBpvB,QAjFL,WACvBkN,EAAS8Z,GAAaC,oBAAoB,CAAEzhB,UAwEpB,WAcJ,kBAACS,EAAA,EAAD,CAAKO,GAAI,GACL,kBAACF,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,QACNc,QAAS,kBACL6zB,MAJR,YAaP9xB,GACG,kBAACkE,EAAA,EAAD,CAAKhB,GAAI,CAAEvC,MAAO,SACd,kBAAC+D,EAAA,EAAD,aC5Q1B3G,IAAK,IACP2C,SAAU,WACVH,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXE,MAAM,QACNioB,QAAS,mBACT3nB,UAAW,GACX4nB,EAAG,EACH1nB,QAAQ,kBACRid,aAAa,oBACbiL,WAAW,qBAXJ,yIAgBN,2BAA6B,CAC1B1oB,MAAM,MACNuB,OAAO,OAEP2mB,EAAG,IApBA,IAuBLxsB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCgxB,aAAc,CACV9rB,QAAQ,OACRE,eAAe,gBAEnB6rB,cAAe,CACX7sB,MAAM,OACNwC,aAAa,MACb9B,aAAa,mBAIjBosB,KAAM,CACF9qB,UAAU,OAEd+qB,WAAY,CACR,UAAW,CACPvsB,QAAQ,kBACRH,OAAO,wBAIJ,SAASixB,GAAT,GAWX,IAVA30B,EAUD,EAVCA,KAEAwF,GAQD,EATCymB,WASD,EARCzmB,aACA8qB,EAOD,EAPCA,MACAC,EAMD,EANCA,SACAC,EAKD,EALCA,WACAC,EAID,EAJCA,cACAtqB,EAGD,EAHCA,GAEA4oB,GACD,EAFC6F,eAED,EADC7F,wBAEMzuB,EAAUvB,KADjB,EAGqCN,mBAAS6xB,GAH9C,mBAGQK,EAHR,KAGoBC,EAHpB,KAKOvuB,EAAkBlC,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKD,mBACpDupB,EAAK9d,cAKXhP,qBAAU,WAEF8xB,EADe,IAAfJ,EACcF,EAEAC,KAEnB,CAACD,EAAOC,EAAUC,IA2ErB,OACI,2BAEI,gBAAC/qB,EAAA,EAAD,CACIomB,kBAAgB,yBAChBC,mBAAiB,+BACjB9rB,KAAMA,EACNie,QAASzY,EACT0mB,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACX5P,QAAS,MAGb,gBAAC6P,GAAA,EAAD,CAAMC,GAAIvsB,GACN,gBAAC4G,EAAA,EAAD,CAAKhB,GAAInF,IACL,uBAAKF,UAAWC,IAAGF,EAAQ2vB,eACvB,gBAACvpB,EAAA,EAAD,CACIP,GAAG,yBACHQ,UAAU,MACVf,GAAI,CACA8P,WAAW,iCACXoL,aACmB,IAAf0P,GAAA,oBACJjrB,OAAO,sBAEX5E,QAAS,kBAAM8vB,EAAc,IAC7BlwB,UAAWC,IAAGF,EAAQioB,OAEtB,gBAAClT,GAAA,EAAD,CACIzP,GAAI,CACA/F,MAAsB,IAAf2wB,GAAoB,UAC3B,UAAW,CACP3sB,QAAQ,kBACRH,OAAO,qBAOf,gBAAC,KAAD,CACIkC,GAAI,CACA/F,MACmB,IAAf2wB,GAAoB,cA3BxC,QAiCA,gBAAC9pB,EAAA,EAAD,CACIP,GAAG,yBACHQ,UAAU,MACVf,GAAI,CACA8P,WAAW,iCAEXoL,aACmB,IAAf0P,GAAA,oBACJjrB,OAAO,sBAEX5E,QAAS,kBAAM8vB,EAAc,KAE7B,gBAACpb,GAAA,EAAD,CACIzP,GAAI,CACA/F,MAAsB,IAAf2wB,GAAoB,UAC3B,UAAW,CACP3sB,QAAQ,kBACRH,OAAO,qBAIf,gBAAC,KAAD,CACIkC,GAAI,CACA/F,MACmB,IAAf2wB,GAAoB,cAxBxC,YA+BJ,gBAAC9pB,EAAA,EAAD,CACId,GAAI,CACAoB,GAAI,EACJO,UAAU,kBACVnI,OAAO,MAEPD,UAAU,QAEdwH,UAAU,OAETgqB,EAAWzhB,OAAS,GACjByhB,EAAWpiB,KACP,SAACsiB,GAAD,MACwB,KAApBA,EAAOC,UACPD,EAAOE,aAAe5qB,GAClB,gBAAC,WAAD,CAAgBnI,IAAK6yB,EAAOja,KACxB,gBAACuB,EAAA,EAAD,CACI5X,UAAWC,IACPF,EAAQ4vB,gBAGZ,gBAAC7N,GAAA,EAAD,CACIrB,OACI,gBAACgQ,GAAA,EAAD,KACK,IACD,gBAACzO,GAAA,EAAD,CACIC,MACIqO,EAAO5c,QAEX3P,MAAM,QACNqC,UAAU,MACVpG,UACID,EAAQ2wB,SAMxB3sB,MACI,4BACKusB,EAAO3zB,MAMhBg0B,UAAW7B,KACPwB,EAAOM,WAEN5B,GACG,oBAEHC,OACG,qBAGRnX,OACIhW,GACI,gBAACgT,GAAA,EAAD,CACI9U,UAAWC,IACPF,EAAQ8wB,gBAEZzwB,QAAS,kBAzJjD6T,EA2JgDqc,EAAOrc,WA1JtEnS,GAILupB,EAAGna,GAAcE,qBAAqB6C,IACtCoX,EAAG3Z,GAAWE,mBAAkB,IAChC3M,KALIupB,KAFe,IAACva,IA+JyC,IACD,gBAAC,KAAD,CACI5O,GAAI,CAEA/F,MAAM,sBAM1BU,UAAWC,IACPF,EAAQ+wB,4B,yBC/S9DtyB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC0D,MAAO,CACHM,IAAI,MACJC,KAAK,MACLC,UAAU,wBACVC,SAAS,WACTC,MAAO,IACPC,gBAAiBrE,EAAMsE,QAAQC,WAAWC,MAC1CC,OAAO,+BACPC,UAAW1E,EAAM2E,QAAQ,GAEzBC,QAAQ,OACRC,QAAS,EACTC,aAAa,UACb,2BAA4B,CACxBV,MAAM,mBAGdW,OAAQ,CACJV,gBAAiBrE,EAAMY,MAAMoE,UAC7BpE,MAAOZ,EAAMY,MAAMoE,UACnBH,QAAS7E,EAAMiF,QAAQ,GACvBC,QAAS,OACTC,WAAY,SACZC,eAAgB,iBAEpBC,MAAO,CACHzE,MAAOZ,EAAMY,MAAMoE,UACnBvD,WAAY,IAEZ2C,MAAM,QAEVkB,QAAS,CACLT,QAAS7E,EAAMiF,QAAQ,IAE3BM,UAAW,CACPnB,MAAM,QAEVoB,aAAc,CACVN,QAAQ,QACRO,SAAS,QAGbC,IAAK,CACDC,OAAO,iBAEXC,YAAa,CACTD,OAAO,cACPE,SAAS,SACTjF,MAAOZ,EAAMY,MAAM4C,OAEvBC,SAAU,CACN7C,MAAO,WAEXkF,YAAa,CACTC,cAAc,OACd3B,MAAM,cACNxD,MAAM,UACNa,WAAW,MACXoE,SAAS,kBACTF,OAAO,mBAEXK,YAAa,CACTD,cAAc,OACd3B,MAAM,cACNxD,MAAM,UACNiF,SAAS,kBACTI,eAAe,OACf,cAAe,CACXrF,MAAM,YAGdsF,KAAM,CACFC,WAAW,MACXR,OAAO,mBAEXU,KAAM,CACFD,UAAU,KACVD,WAAW,OAEfvE,KAAM,CACFwE,UAAW,EACXE,OAAO,WAEX6lB,OAAQ,CACJvrB,MAAM,OACN0H,UAAU,OACVzD,QAAQ,SAwLDtE,gBAbS,SAACY,GAAD,gBACpBiC,gBAAiBjC,EAAMkC,KAAKD,gBAC5BE,QAASnC,EAAMoC,KAAKC,MACpBnF,IAAK8C,EAAMkC,KAAKG,MAChBC,SAAUtC,EAAMuC,MAAMD,UAJF,gCAKHtC,EAAMkC,KAAKD,iBALR,yBAMVjC,EAAMkC,KAAKM,UAND,2BAORxC,EAAMoC,KAAKK,YAPH,2BAQRzC,EAAMoC,KAAKM,YARH,IAWE,GAEXtD,EApLE,SAACC,GACd,IAAMa,EAAUvB,KAEZsD,EAMA5C,EANA4C,gBACAK,EAKAjD,EALAiD,SACA4uB,EAIA7xB,EAJA6xB,SAEAC,GAEA9xB,EAHA+xB,mBAGA/xB,EAFA8xB,qBACAkB,EACAhzB,EADAgzB,SAsCE1C,GALUzV,iBAAO,MACEna,aACrB,SAACC,GAAD,OAAWA,EAAMoa,WAAWD,oBAEnBpa,aAAY,SAACC,GAAD,OAAWA,EAAMoa,WAAW1S,QAC/B3H,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMsE,kBACnD3E,EAASjrB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAML,UAC5Cvd,EAAWC,cAUjB,OACI,kBAAC,WAAD,KAEQ,kBAACrI,EAAA,EAAD,CAAOzF,KAAMsxB,GACT,yBAAK/wB,UAAWD,EAAQqC,OACpB,yBACIlC,MAAO,CACH0D,QAAQ,OAERL,QAAS,EACTc,OAAQ,IAIZ,kBAACc,EAAA,EAAD,CACI7E,MAAM,EACN8E,SAAS,UACTC,GAAI,CACAvC,MAAM,OACNc,QAAQ,UAGZ,yBACI1D,MAAO,CACH0D,QAAQ,OACRE,eAAe,kBAGnB,uBACI5D,MAAO,CACHC,WAAW,MACXoE,SAAS,OACTe,aAAa,QAJrB,YASA,kBAAC,IAAD,CACItF,UAAWD,EAAQO,KACnBF,QAAS,kBAAM4wB,UAK/B,yBACIhxB,UAAWD,EAAQ0D,OACnBvD,MAAO,CAAE4E,UAAU,QAEnB,0BAAM9E,UAAWD,EAAQgE,OAEjB,uBAAG/D,UAAS,UAAKD,EAAQ8qB,OAAb,WACNqH,EAAS3C,SAEL,6EADA,+EAhGlC,kBAAC,WAAD,KAMK1E,EACG,kBAACxkB,EAAA,EAAD,CAAKrG,UAAWD,EAAQ6E,MACpB,kBAACuB,EAAA,EAAD,CACIC,UAAU,MACVE,cAAY,EACZtG,UAAWD,EAAQyE,aAEnB,kBAAC,KAAD,CACIa,GAAI,CAAEC,aAAa,MAAQmQ,YAAY,SAE1CoV,IAIT,MAoFI,kBAACxkB,EAAA,EAAD,CACIzC,QAAQ,OACR4C,cAAc,cACdC,GAAI,EACJzG,UAAWD,EAAQqE,KAEnB,kBAACiC,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,UACNyG,WACIjE,IAAoB0tB,GAIxBpvB,QACK8xB,EAAS3C,SAhF1B,WAChBjiB,EAASkc,GAAMC,aAAayI,KALd,WACd5kB,EAAS8b,GAAIC,WAAW6I,MAwFMA,EAAS3C,SAAmB,QAAR,QAI9B,kBAAClpB,EAAA,EAAD,CAAKO,GAAI,GACL,kBAACF,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,QACNc,QAAS,kBAAM4wB,MAHnB,YAWP7uB,GACG,kBAACkE,EAAA,EAAD,CAAKhB,GAAI,CAAEvC,MAAO,SACd,kBAAC+D,EAAA,EAAD,aCrN1BrI,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrCwyB,kBAAmB,CAUf3Q,aAAa,oBACbiL,WAAW,oBAGXpoB,UAAU,6BAEVI,aAAa,MACbD,QAAQ,sBAEZgpB,eAAa,GACTzpB,MAAM,iBACNuB,OAAO,kBACPF,SAAS,mBACTW,UAAU,kBAJD,cAMR,0BAA4B,CACzBX,SAAS,mBACTrB,MAAM,iBACNuB,OAAO,oBATF,cAWR,0BAA4B,CACzBS,UAAU,qBAZL,GAebqsB,SAAU,CACNvtB,QAAQ,QAEZwtB,aAAc,CACVtsB,UAAU,KACVQ,aAAa,KAEbrC,WAAW,mBAEfytB,MAAO,CACH7xB,OAAO,kBACPiE,MAAM,QAEVguB,eAAgB,CACZvQ,aAAa,mCACb,UAAW,CACPtd,WAAW,wCAKnBouB,YAAa,CACT/N,UAAU,qBAOdgO,cAAe,CACX/sB,SAAU,OACVpE,WAAY,IACZkE,OAAQ,IACRd,QAAS,IACTjE,MAAO,OACP8d,UAAU,cAEdmU,sBAAuB,CAMnB1b,SAAU,SACVC,aAAc,WACdlS,QAAS,cACT8oB,gBAAiB,IACjBC,UAAW,EACXC,gBAAiB,YAErBiE,eAAgB,CACZ/rB,UAAU,QAEdwvB,WAAY,CACRzH,UAAU,aACV,OAAQ,CACJtoB,SAAS,kBACTpE,WAAW,kBACXoD,QAAQ,qBACRggB,WAAW,iBACXvc,UAAU,QAEd,OAAQ,CACJzC,SAAS,kBACTpE,WAAW,kBACXoD,QAAQ,qBACRggB,WAAW,iBACXvc,UAAU,QAEd,OAAQ,CACJzC,SAAS,kBACTpE,WAAW,kBACXoD,QAAQ,qBACRggB,WAAW,iBACXvc,UAAU,QAEd,MAAO,CACHzC,SAAS,kBACTpE,WAAW,oBACXoD,QAAQ,qBACRggB,WAAW,iBACXvc,UAAU,SAGlBwmB,gBAAiB,CAEb3qB,SAAS,WACTmE,UAAU,SACV/D,WAAW,kBACXH,MAAM,iBACNuB,OAAO,kBACPxF,OAAO,kBACP0hB,aAAa,oBACbiL,WAAW,oBACXrV,YAAY,oBACZ/S,UAAU,yBACVI,aAAa,OAGjBorB,kBAAmB,OAylBR2F,GAtlBE,SAACr1B,GACd,IAAMa,EAAUvB,KACR8c,EAAUpc,EAAVoc,MACF1V,EAAK0V,EAAM8H,OAAOxd,GAClBylB,EAAK9d,cAELinB,EAAoB50B,aACtB,SAACC,GAAD,OAAWA,EAAMqrB,MAAMsJ,qBAErBtI,EAAUtsB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMgB,WAC7C6F,EAAUnyB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAM6G,WAC7ChC,EAAQnwB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAM6E,SAC3CC,EAAWpwB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAM8E,YAE9CkC,GADWtyB,aAAY,SAACC,GAAD,OAAWA,EAAM4Y,OAAOwH,YACpCrgB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMgH,aAC9Cje,EAAQrU,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKmR,QAAQe,SAClDge,EAAUryB,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKmR,QAAQ+e,WACpDnwB,EAAkBlC,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKD,mBAjBlC,EAkBQ5D,mBAAS,MAlBjB,mBAkBjBo0B,EAlBiB,KAkBPC,EAlBO,KAmBlB9yB,EAAOG,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMzrB,QAC1CsxB,EAAWnxB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAM6F,YAC9CxB,EAAW3vB,aAAY,SAACC,GAAD,OAAWA,EAAMqrB,MAAMqE,YAC9C2E,EAA0Bt0B,aAC5B,SAACC,GAAD,OAAWA,EAAMqrB,MAAMgJ,2BAvBH,EA0BwB3gB,IAAMrV,UAAS,GA1BvC,mBA0BjBowB,EA1BiB,KA0BCC,EA1BD,KA2BlBC,EAAyB,kBAAMD,GAAoB,IAGnD0C,EAAqB,SAACwD,GACxBpJ,EAAGvG,GAAUE,iBAAiB,KAC9B/f,IACAomB,EAAGrB,GAAYE,oBAAmB,KAEhC8G,EAAsB,SAACyD,GACzBpJ,EAAGvG,GAAUE,iBAAiB,KAC9BqG,EAAGrB,GAAYE,oBAAmB,KAOhCwK,EAAkB,WACpBrJ,EAAGvG,GAAUE,iBAAiB,KAC9B/f,IACAomB,EAAGvH,GAAgBE,wBAAuB,KAOxC0H,EAAa8G,uBAAY,SAACvsB,GAC5BssB,EAAYtsB,EAAEwtB,iBACf,IAEGxuB,EAAcutB,uBAAY,WAC5BD,EAAY,QACb,IASHh0B,qBACI,WACI,GAAI2tB,EAAQvd,QAAU,EAClB0c,EAAG3G,GAAWC,kBAAkB,CAAErJ,gBAC/B,GAAI4Q,EAAQvd,OAAS,EAAG,CAE3B,IAAIV,EAAIie,EAAQgH,MAAK,SAAC1G,GAAD,OAAYA,EAAOnW,MAAQzQ,KAC3CqI,GAGDod,EACI3F,GAAYE,mBAER3X,IAGRod,EACI/F,GAAwBE,gCACpB,IAGR6F,EAAGzD,GAAcC,qBAAqBjiB,KAbtCylB,EAAGvc,aAAK,wBAyBpB,CAAClJ,EAAI0V,EAAOyU,EAAOC,EAAU+B,IAEjC,IAAM4C,EAAyB5C,EAAQ7jB,QACnC,SAACiiB,GAAD,OAAYvqB,IAAOuqB,EAAOK,YAAcL,KAKtCgE,EAA8B,WAChClvB,IACAomB,EAAGvG,GAAUE,iBAAiB,KAC9BqG,EAAG7D,GAAsBE,8BAA6B,KAjHlC,EA+JYnU,IAAMrV,SAAS,GA/J3B,mBA+JjB+xB,EA/JiB,KA+JLC,EA/JK,OAiKpB3c,IAAMrV,UAAS,GAjKK,mBAgKjBk1B,EAhKiB,KAgKUC,EAhKV,OAmKoB9f,IAAMrV,SAAS,IAnKnC,oBAqKlBo1B,IArKkB,YAqKgB,SAACrlB,GACrCiiB,EAAcjiB,GACdolB,GAA6B,KA4BjC,OACI,kBAAC,WAAD,KACKmB,EACG,kBAACnuB,EAAA,EAAD,CAAKrG,UAAWC,IAAGF,EAAQytB,kBACvB,yBAAKxtB,UAAWC,IAAGF,EAAQ6uB,oBACvB,kBAACvV,GAAA,EAAD,CAAkBhU,GAAI,CAAEP,UAAU,WAI1C,kBAAC,WAAD,KACI,kBAAC,GAAD,CACIrF,KAAM6uB,EACN5C,WAAY8C,EACZvpB,YApLY,kBAAMspB,GAAoB,MAuL1C,kBAAC6F,GAAD,CACIxuB,GAAIA,EACJqqB,WAAYA,EACZC,cAAeA,EACfH,MAAOA,EACPC,SAAUA,EACVvwB,KAAM2zB,EACN1H,WAAY4H,GACZruB,YAlDqB,WACrCouB,GAA6B,IAkDb7E,uBAAwBA,IAE5B,kBAAC,GAAD,CACI0F,wBAAyBA,EACzBD,6BA7GiB,WACjC5I,EAAGvG,GAAUE,iBAAiB,KAC9BqG,EAAG7D,GAAsBE,8BAA6B,KA8GtCyM,4BACIA,EAEJvuB,GAAIA,IAER,kBAAC,GAAD,CACImrB,SAAUA,EACVE,mBAAoBA,EACpBD,oBAAqBA,EACrBkB,SAAUA,IAEd,kBAAC8B,GAAD,CACItI,WAAYgJ,EACZzvB,YA/LK,WACrBomB,EAAGvG,GAAUE,iBAAiB,KAC9BqG,EAAGvH,GAAgBE,wBAAuB,KA8L1BvkB,KAAMA,EACNyyB,SAAUA,EACVtsB,GAAIA,IAER,yBAAK5F,UAAWC,IAAGF,EAAQwsB,gBACvB,yBAAKvsB,UAAWC,IAAGF,EAAQmxB,oBACvB,kBAAC,IAAD,CAAM3qB,GAAG,WAAWrG,MAAO,CAAE4C,MAAM,SAC9B,IACD,kBAAC4D,EAAA,EAAD,KACI,kBAAC,KAAD,MADJ,OAES,MAQb,kBAACkR,EAAA,EAAD,CAAMvS,GAAI,CAAEC,aAAa,QACrB,kBAACuS,EAAA,EAAD,CACIxS,GAAI,CAAEpC,WAAW,uBAEjB,kBAACkD,EAAA,EAAD,CAAYQ,QAAQ,IAAIrH,MAAM,eAC1B,yBACIU,UAAWC,IACPF,EAAQuxB,gBAGZ,0BACItxB,UAAWC,IACPF,EAAQwxB,wBAGXW,EAASnuB,QAGlB,6BAeQ+qB,KAAOoD,EAASnD,WACXC,GAAG,oBACHC,OAAO,sBAGpB,6BAAMiD,EAASnF,QAAf,eAYZ,kBAACnV,EAAA,EAAD,CAAM5X,UAAWD,EAAQqxB,cACrB,kBAACtP,GAAA,EAAD,CACIrB,OACI,kBAACgQ,GAAA,EAAD,KACK,IACD,kBAACzO,GAAA,EAAD,CACIC,MAAOiQ,EAASrD,KAAKnb,QACrB3P,MAAM,QACNqC,UAAU,MACVpG,UAAWD,EAAQ2wB,SAI/BrrB,GAAI,CAAEpC,WAAW,sBAEjBc,MACI,0BACI7D,MAAO,CAAE8E,OAAO,WAChB5E,QA7IjB,WACd0B,GAILupB,EAAGna,GAAcE,qBAAqB8gB,EAASje,QAC/CoX,EAAG3Z,GAAWE,mBAAkB,KAJ5B4c,MA6IiC0D,EAASrD,KAAKlyB,KAAM,IACpBu1B,EAAS3C,SACN,kBAACppB,EAAA,EAAD,CACIC,UAAW,OACXO,QAAS,QACTtB,GAAI,CACApC,WAAW,iBACX3D,MAAM,qBACNiE,QAAQ,qBACRpD,WAAW,oBAPnB,UAaA,IAOZwwB,UAAS,mBAAc7B,KACnBoD,EAASnD,WAERC,GAAG,oBACHC,OAAO,sBAEZnX,OACKoa,EAASrD,KAAK5a,QAAUA,GACrBnS,IACCytB,GACJ0C,GACGnwB,IACCytB,EACD,kBAACza,GAAA,EAAD,CACI9U,UAAWC,IACP,GACAF,EAAQ8wB,gBAEZzwB,QAASsrB,GAET,kBAAC,KAAD,OAGJ,kBAAC5W,GAAA,EAAD,CACI9U,UAAWC,IACP,MACAF,EAAQ8wB,gBAEZzwB,QAAS,WACLsN,OAAOglB,SAAS,CACZhwB,IAAKiwB,SACAC,gBACAC,aAELC,SAAU,aAKjB,IACD,kBAAC,KAAD,CACIztB,GAAI,CAEA/F,MAAM,yBAM1BU,UAAWC,IAAGF,EAAQ+wB,kBAE1B,kBAAC,KAAD,CACIlrB,GAAG,cACH8tB,SAAUpB,EACV7yB,KAAMk0B,QAAQrB,GACd5U,QAASzY,GAQT,kBAAC2uB,GAAA,EAAD,CAAUxzB,QAASs0B,GACd,IACD,8BACI,kBAAC,KAAD,CACInwB,SAAS,QACTc,GAAI,CACAoQ,YAAa,MAIzB,kBAAC/O,EAAA,EAAD,gBAEJ,kBAACktB,GAAA,EAAD,CACIxzB,QAAS+zB,GAER,IACD,8BACI,kBAAC,KAAD,CACI5vB,SAAS,QACTc,GAAI,CACAP,UAAU,OACV2Q,YAAa,MAIzB,kBAAC/O,EAAA,EAAD,gBAEHurB,GACG,kBAAC2B,GAAA,EAAD,CACIxzB,QAAS6wB,EACTlrB,UACImsB,EAAS3C,UAGb,8BACI,kBAAC,KAAD,CACIhrB,SAAS,QACTc,GAAI,CACAoQ,YAAa,EACb3Q,UAAU,WAItB,kBAAC4B,EAAA,EAAD,eAGPurB,GACG,kBAAC2B,GAAA,EAAD,CACIxzB,QAAS6wB,EACTlrB,WACKmsB,EAAS3C,UAKd,8BACI,kBAAC,KAAD,CACIhrB,SAAS,QACTc,GAAI,CACAP,UAAU,OACV2Q,YAAa,MAIzB,kBAAC/O,EAAA,EAAD,cAKZ,kBAACmR,EAAA,EAAD,CACIxS,GAAI,CAAEpC,WAAW,uBAEjB,kBAACkD,EAAA,EAAD,CACIQ,QAAQ,IACRrH,MAAM,cACNU,UAAWC,IAAGF,EAAQu0B,aAErBj2B,aAAM6zB,EAASluB,WAUxB,kBAAC6vB,GAAA,EAAD,CACI7zB,UAAWC,IAAGF,EAAQsxB,cAEtB,kBAAClrB,EAAA,EAAD,CACIC,UAAU,OAEVf,GAAI,CACAR,WAAW,MACXG,OAAO,UACP,UAAW,CACP1F,MAAM,UACNihB,aAAa,oBACbhc,SAAS,OACToW,WAAW,YAGnBva,QAAS,kBACLkzB,GAAgC,KAGnCpB,EAASnC,OAEd,kBAACjb,GAAA,EAAD,CACI1U,QA7Xf,WACZ0B,EAGDupB,EAAGrD,GAAKC,YAAY,CAAEiK,WAAUje,QAAOkc,OAAQ,MAF/C3B,KA4X4BnpB,GAAI,CAAER,WAAW,QAGjB,kBAAC,KAAD,CACIQ,GAAI,CACA/F,MAxZhCywB,EAAMmD,MACV,SAAClL,GAAD,OACIA,EAAK/T,QAAUA,GACf+T,EAAKwI,aAAe0B,EAAS7b,KACX,KAAlB2R,EAAKuI,YAqZiC,UACA,uBAIlB,kBAACpqB,EAAA,EAAD,CACIC,UAAU,OAEVhG,QAAS,kBACLkzB,GAAgC,IAEpCjuB,GAAI,CACAL,OAAO,UACP,UAAW,CACP1F,MAAM,UACNihB,aAAa,oBACbhc,SAAS,OACToW,WAAW,aAIlBuX,EAASlC,UAEd,kBAAClb,GAAA,EAAD,CAAY1U,QAnZpB,WACf0B,EAGDupB,EAAGjD,GAAQC,eAAe,CAAE6J,WAAUje,QAAOkc,OAAQ,MAFrD3B,MAkZ4B,kBAAC,KAAD,CACInpB,GAAI,CACA/F,MAvahC0wB,EAASkD,MACb,SAAC9K,GAAD,OACIA,EAAQnU,QAAUA,GAClBmU,EAAQoI,aAAe0B,EAAS7b,KACX,KAArB+R,EAAQmI,YAoa8B,UACA,yBAO1B,kBAACpqB,EAAA,EAAD,CACIP,GAAG,yBACHQ,UAAU,MACVf,GAAI,CACA8P,WAAW,iCACXoL,aACmB,IAAf0P,GAAA,oBACJ1rB,SAAS,kBACTe,aAAa,MAEjBlF,QAAS,kBAAM8vB,EAAc,IAC7BlwB,UAAWC,IAAGF,EAAQioB,OAErBkK,EAASnF,QAbd,YAeA,kBAAC,GAAD,CACIiF,aAzZ5B,SAAsBjuB,GAUlB,OAJOA,EACFwQ,cACA2a,QAAQ,KAAM,KACdA,QAAQ,WAAY,KAiZD6C,QAAS4C,EACT/uB,GAAIA,EACJssB,SAAUA,EACV5W,MAAOA,EAEP2V,mBAAoBA,EACpBD,oBAAqBA,S,ICjwBtC4D,aAfO,SAAC,GAAkB,IAAhBjnB,EAAe,EAAfA,SAYrB,OAXApP,qBAAU,WACN,IAAMs2B,EAAUlC,SAASmC,eAAennB,EAASonB,MAEjD9f,YAAW,WACPvH,OAAOglB,SAAS,CACZI,SAAU+B,EAAU,SAAW,OAC/BnyB,IAAKmyB,EAAUA,EAAQG,UAAY,MAExC,OACJ,CAACrnB,IAEG,Q,sPCsCLsnB,GAAgBC,cAAO,gBAAGl1B,EAAH,EAAGA,UAAcd,EAAjB,qCACzB,kBAACqG,EAAA,EAAD,iBAAarG,EAAb,CAAoBa,QAAS,CAAEo1B,OAAQn1B,QADrBk1B,CAAA,4BAGXE,KAAeC,SAAY,CAC9B9wB,SAAS,OACThB,QAAQ,oBACRC,aAAa,oBA2+CN8xB,GAv+CF,SAACp2B,GACV,IAAM0E,EAAUhE,aAAY,SAACC,GAAD,OAAWA,EAAMiU,UAAUlQ,WADnC,EAEgB1F,mBAAS,IAFzB,mBAEbq3B,EAFa,KAEDC,EAFC,KAIdh3B,EAAYC,aAAW,SAACC,GAAD,YAAY,CACrC+2B,SAAU,CACN3yB,MAAM,kBAEN+pB,UAAU,cAWd6I,OAAQ,CACJ72B,OAAO,SAEX82B,QAAQ,aACJ5uB,OAAO,kBAEPlE,SAAS,QACTC,MAAO,QACPjE,OAAO,mBACP0hB,aAAa,oBACbiL,WAAW,oBAIXpoB,UAAU,sBAGVI,aAAa,MAEbgW,MAAM,QACND,OAAO,eAEPqc,gBACI,sFACJ3Y,mBAAoB,SACpBC,iBAAkB,SAClBC,eAAgB,KAChBvZ,QAASA,EAAU,GAAK,OACxB+W,WAAW,WACV,2BAA6B,CAC1BnB,MAAM,oBAGdqc,gBAAc,GAEV5a,UAAW,QACXjF,UAAW,QACXpX,UAAW,QAJD,0BAME22B,EAAW5mB,OAEjB4mB,EAAW5mB,OAAS,EACpB,QACA,mBAHA,oBAPI,0BAcE4mB,EAAW5mB,OAEjB4mB,EAAW5mB,OAAS,EACpB,QACA,mBAHA,oBAfI,GAwBdmnB,QAAS,CACLjzB,SAAS,WACTC,MAAO,OAEPc,QAAQ,QAEZmyB,SAAU,CACNjzB,MAAO,OACPjE,OAAO,OACPwF,OAAQ,IACRd,QAAS,SACTN,WAAY,UAEZO,aAAc,MACdI,QAAS,OACTkX,MAAO,OACPkb,WAAW,qBAEfC,SAAU,CACNnzB,MAAM,OAEVozB,QAAS,CACL1yB,aAAa,kBACb3E,OAAO,QAEXs3B,YAAa,CACTtzB,SAAS,WAITW,aAAc,MAEdD,QAAS,iBACTjE,MAAO,QACPwb,MAAO,mBACP9T,UAAU,mBACVwS,MAAM,KAGV4c,aAAc,CACVvzB,SAAS,WAKTW,aAAc,MACdD,QAAS,QACTjE,MAAO,OACP0H,UAAW,kBACXrE,KAAK,IACLmY,MAAO,mBAGXkQ,EAAG,CACC/nB,WAAY,UACZW,QAAQ,mBACRL,QAAS,QACTjE,MAAO,QACPwD,MAAM,yBACNiT,SAAS,mBACTvS,aAAc,mBAIlB6yB,GAAI,CACAzyB,QAAQ,mBACRL,QAAS,QACTjE,MAAO,QACPwD,MAAM,yBACNiT,SAAS,mBACTvS,aAAc,mBAIlB8yB,SAAU,CACN/c,OAAO,oBACPoB,WAAW,WAEf4a,WAAY,CACR1yB,SAAS,sBACT0zB,UAAU,mBACV/yB,aAAa,iBACbV,MAAO,kBACPjE,OAAQ,mBAEZ23B,SAAU,CACN3zB,SAAS,sBACTiY,MAAM,kBACN7X,WAAW,OACX4B,WAAW,kBACXS,aAAa,iBACbR,UAAU,mBAEd2xB,YAAa,CACT7yB,SAAU2xB,EAAW5mB,QAAU,kBAC/B9L,SAAS,sBACTH,IAAK,mBACL8W,MAAO,mBACPvW,WAAW,sBAEfyzB,aAAc,GACdC,UAAW,CACP9zB,SAAS,sBACT0W,OAAO,kBAEXqd,cAAe,CACXhzB,QAAQ,kBACRizB,SAAS,mBAEbC,WAAY,CACRtzB,aAAa,iBACb3E,OAAQ,kBACRg4B,SAAU,kBACV/zB,MAAO,OACPuB,OAAQ,8BAEZ0yB,YAAa,CACTvzB,aAAa,iBACba,OAAQ,8BAEZ2yB,YAAa,CACTC,UAAU,KAEdC,SAAU,CACNr0B,SAAU,sBACVe,QAAQ,mBACRjB,KAAM,IACNkC,WAAY,iBACZiW,MAAO,kBACPhY,MAAM,kBACNjE,OAAO,kBACP2E,aAAa,mBAEjB2zB,QAAS,CACLr0B,MAAM,kBACNjE,OAAO,kBACP2E,aAAa,kBAEjB4zB,YAAa,CACTt0B,MAAM,kBACNjE,OAAO,kBACP2E,aAAa,sBAIb4P,EAAclU,EAAdkU,UACFrT,EAAUvB,IACV6sB,EAAK9d,cAEL0G,EAAQrU,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKmR,QAAQe,SAClD2F,EAAUha,aAAY,SAACC,GAAD,OAAWA,EAAMiU,UAAU8F,WACjD/F,EAAOjU,aAAY,SAACC,GAAD,OAAWA,EAAMiU,UAAUD,QAC9CjO,EAAKhG,aAAY,SAACC,GAAD,OAAWA,EAAMiU,UAAUlO,MAC5CsN,EAAUtT,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKmR,WAC5CmkB,EAAUz3B,aAAY,SAACC,GAAD,OAAWA,EAAMiU,UAAUujB,WACjDC,EAAa13B,aAAY,SAACC,GAAD,OAAWA,EAAMiU,UAAUwjB,cAvOtC,GAwOA13B,aAAY,SAACC,GAAD,OAAWA,EAAMiU,UAAUyjB,eAC3Br5B,mBAAS,OAzOrB,mBAyObo0B,EAzOa,KAyOHC,EAzOG,OA0O0Br0B,mBAAS,MA1OnC,mBA0Obs5B,EA1Oa,KA0OIC,EA1OJ,OA2OkCv5B,mBAAS,MA3O3C,mBA2OQw5B,GA3OR,aA4OgBx5B,mBAAS,MA5OzB,mBA4Oby5B,EA5Oa,KA4ODC,EA5OC,OA6OoB15B,mBAAS,MA7O7B,mBA6Ob25B,EA7Oa,KA6OCC,EA7OD,OA8OI55B,oBAAS,GA9Ob,mBA8Ob65B,EA9Oa,KA8OPC,EA9OO,KAsPd/yB,EAAcutB,uBAAY,WAC5BD,EAAY,QACb,IAOG0F,EAAqBzF,uBAAY,WACnCiF,EAAmB,QACpB,IAiBGS,GARyB1F,uBAAY,WACvCkF,EAAuB,QACxB,IAMqBlF,uBAAY,WAChCsF,EAAgB,QACjB,KAGGK,EAAcpe,mBAGpBxb,qBAAU,WACN,GAAI0V,EA+CA,OA9CAb,EAAUwD,QAAUwhB,KAAen5B,QpHjV3B,0CoHoVRmU,EAAUwD,QAAQyhB,GAAG,iBAAiB,SAAC13B,GAEnC0qB,EAAG/Z,GAAWE,kBAAkB7Q,OAIpCyS,EAAUwD,QAAQyhB,GAAG,mBAAmB,SAAC13B,GAErC0qB,EAAG3a,GAAWE,kBAAkBjQ,EAAKkT,UAGzCT,EAAUwD,QAAQyhB,GAAG,iBAAiB,SAAC13B,GAEnC0qB,EAAGnZ,GAAcE,qBAAqBzR,EAAKkT,UAG/CT,EAAUwD,QAAQyhB,GAAG,4BAA4B,SAAC13B,GAE9C0qB,EAAG/Z,GAAWE,kBAAkB7Q,OAGpCyS,EAAUwD,QAAQyhB,GAAG,SAAS,SAAC13B,GAC3ByS,EAAUwD,QAAQC,KAAK,YAAa5C,GAGpCoX,EAAGva,GAAME,aAAarQ,EAAKiF,QAK/BwN,EAAUwD,QAAQyhB,GAAG,kBAAkB,SAACC,GAEpCjN,EAAG/a,GAAQE,eAAe,CAAC8nB,EAAQ33B,QACnC43B,QAGJnlB,EAAUwD,QAAQyhB,GAAG,kBAAkB,SAAC13B,GAEpC0qB,EAAG/Z,GAAWE,kBAAkB7Q,EAAK02B,aAKlC,WAIHjkB,EAAUwD,QAAQ4hB,gBAI3B,CAACvkB,IACJ,IAAMskB,GAAiB,WACfJ,EAAYvhB,SACZuhB,EAAYvhB,QAAQ6hB,eAAe,CAAE3F,SAAU,YAIvDv0B,qBAAU,WACNo0B,SAASmC,eAAe,WAAW2D,iBACnCC,OAMD,CAAC90B,EAAS0zB,IAEb,IAAMqB,GAAc,WAChB,IAAK/e,EAAQgf,UAAUrD,EAAW5mB,QAAU,MAGxCiL,GAAW2b,EAAW5mB,OAAS,IAC3BsF,IAAUqjB,EAAWrjB,MAAO,CAE5B,IAAM4kB,EAAM,CACRjf,QAAuC,KAA9BA,EAAQhM,WAAWgrB,OAAgBhf,EAAU,GACtDhU,GAAIA,EACJqO,MAAOA,EACPqjB,WAAYA,EACZwB,aAAcxB,EAAWrjB,MACzBU,OAAQ,CAACV,EAAOqjB,EAAWrjB,OAC3B8kB,SAAUxD,EACV54B,KAAMuW,EAAQvW,KACd+W,QAASR,EAAQQ,SAGrBN,EAAUwD,QAAQC,KAAK,iBAAkBgiB,GACzCxN,EAAGnb,GAAWE,kBAAkB,KAChColB,EAAc,MAodpBkD,GAAa,SAACzyB,GACZ+yB,OAAOC,KAAK3B,GAAY3oB,OAAS,GACjC0c,EAAGna,GAAcE,qBAAqBkmB,EAAWrjB,QAEjD0jB,GACAC,GAAeD,GAEnB,IAAM1pB,EACF4F,EAAKlF,OAAS,GACdkF,EAAK3F,QACD,SAACwG,GAAD,OACIA,EAAEC,OAAOC,SAASX,IAClBS,EAAEC,OAAOC,SAAS0iB,EAAWrjB,QACR,OAArBqjB,EAAWrjB,OACXqjB,EAAWrjB,QAAUA,KAE3BilB,EAAWjrB,EAAEA,EAAEU,OAAS,GAExBwqB,KAAID,IAAYA,EAASrkB,OAAOqkB,EAASrkB,KACzCukB,EAAIF,GAAYA,EAASvkB,OAASukB,EAASvkB,OAAO,GAAK,KAG7D,IAAIwkB,IAEQA,EAAG,CACX,GAAIC,IAAMnlB,EACN,OACG,IAAKmlB,EAER,OAIAhmB,EAAUwD,QAAQC,KACd,iBAKAqiB,KAOVG,GAAqB,SAACpzB,GAexB,OAbI4N,EAAKlF,OAAS,GACdkF,EAAK3F,QACD,SAACwG,GAAD,OACIA,EAAEC,OAAOC,SAASX,IAClBS,EAAEC,OAAOC,SAAS0iB,EAAWrjB,SAC5BS,EAAEG,MACHH,EAAEC,OAAO,KAAOV,GACK,OAArBqjB,EAAWrjB,OACXqjB,EAAWrjB,QAAUA,MAKxBtF,QAgBP6T,GAAc,SAACN,GAGjB,GAFA+V,IAEK/V,EAAL,CACA,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcH,GACrBC,EAAOG,UAAY,SAACrc,GAChB,IAAMgI,EAAIsnB,EAAWxnB,OAAO9H,EAAEC,OAAOqc,QAErCiT,EAAcvnB,MAsBhBqrB,GAAcjC,EAAQnE,MAAK,SAACqG,GAAD,OAASA,EAAItlB,QAAUA,KAGlDulB,GAAQF,IAA4B,GAE1C,OACI,kBAAC,WAAD,KACI,kBAAC,WAAD,KAMKhC,GACG,yBACIt3B,UAAWC,IAAGF,EAAQ41B,QAAS,UAAlB,eACR51B,EAAQu2B,UAAoB,IAATyB,IAGxB33B,QAASs4B,IAET,kBAAC9gB,EAAA,EAAD,CACI5X,UAAWC,IAAGF,EAAQm2B,SACtB7wB,GAAI,CACAL,OAAO,YAGX,kBAAC8c,GAAA,EAAD,CACIrB,OACI,kBAACgQ,GAAA,EAAD,KACK,IACD,kBAACzO,GAAA,EAAD,CACIC,MAAOqV,EAAW5jB,QAClB3P,MAAM,QACNqC,UAAU,MACVpG,UAAWD,EAAQ2wB,SAI/BrrB,GAAI,CACApC,WAAW,qBACX,UAAW,CACPA,WAAW,wCAGnB7C,QAvtBL,SAAC6F,GACpB6xB,EAAgB7xB,EAAEwtB,gBAutBM1vB,MACI,8BACI,kBAACoC,EAAA,EAAD,CACIC,UAAW,OACXO,QAAS,QACTtB,GAAI,CACAd,SAAS,kBACTpE,WAAW,mBAGdm3B,EAAW36B,MAEf08B,KAAuB,GACpB,kBAAClzB,EAAA,EAAD,CACIC,UAAW,OACXO,QAAS,QACTtB,GAAI,CACAxC,SAAS,sBACTI,WAAW,UACX3D,MAAM,UACNkE,aAAa,kBACbe,SAAS,kBACT5B,KAAM,mBACND,IAAK,kBACLa,QACI,uBAGP81B,OAQjB1I,UACI,8BACI,kBAAC,KAAD,CACItrB,GAAI,CACAd,SAAS,iBACTkR,YAAY,MACZnW,MAAOg4B,EAAWmC,OAAX,QAED,aAGbnC,EAAWmC,OAAX,mBAEgB,KAGzB3hB,OACI,kBAAChD,GAAA,EAAD,CACI9U,UAAWC,IACP,GACAF,EAAQ8wB,gBAEZzwB,QAjzBjB,SAAC6F,GAChBA,EAAEyzB,kBAGFnH,EAAYtsB,EAAEwtB,iBA+yBkB,kBAAC,KAAD,OAGRzzB,UAAWC,IAAGF,EAAQ+wB,mBAG9B,yBACI9wB,UAAWC,IAAGF,EAAQ81B,gBACtBjwB,GAAG,sBAjpBR,WACf,IAAMqI,EACF4F,EAAKlF,OAAS,GACdkF,EAAK3F,QACD,SAACwG,GAAD,OACIA,EAAEC,OAAOC,SAASX,IAClBS,EAAEC,OAAOC,SAAS0iB,EAAWrjB,QACR,OAArBqjB,EAAWrjB,OACXqjB,EAAWrjB,QAAUA,GACrBS,KAEZ,OAAOzG,EAAEU,OAAS,EACZV,EAAED,KACE,SAAC0G,EAAGilB,GAAJ,OAIIjlB,EAAEC,OAAOC,SAASX,IAClBS,EAAEC,OAAOC,SAAS0iB,EAAWrjB,QACR,OAArBqjB,EAAWrjB,OACXqjB,EAAWrjB,QAAUA,GACjB,kBAAC,WAAD,CAAUxW,IAAKk8B,GACVjlB,EAAEC,OAAO,KAAOV,GACb,kBAAC,WAAD,KACI,0BAAMjU,UAAWC,IAAGF,EAAQm3B,WACxB,yBACIl3B,UAAWC,IAAGF,EAAQo3B,SACtB3qB,IAAK8qB,EAAW5jB,YAc/BgB,EAAEkF,SACC,yBACI5Z,UAAWC,IACPF,EAAQ01B,SADC,eAGJ11B,EAAQo2B,YACLliB,IAAUS,EAAEC,OAAO,IAJlB,eASJ5U,EAAQq2B,aACL1hB,EAAEC,OAAO,KAAOV,KAe5B,kBAACghB,GAAD,CACIj1B,UAAWD,EAAQ65B,YACnBp0B,OAAK,EACLzB,MAAK,UAAK+qB,KAAOpa,EAAEqa,WACdC,GAAG,oBACHC,OAAO,sBACZxpB,UACIwO,IAAUS,EAAEC,OAAO,GACb,OACA,SAGV,uBACIU,cAAY,WACZC,cAAA,kBAAwBqkB,GACxB/zB,GACIqO,IAAUS,EAAEC,OAAO,GACb,UACA,SAEV3U,UACIC,IAAG,YAAaF,EAAQirB,GAS5B9qB,MAAO,CACH+C,WACIgR,IAAUS,EAAEC,OAAO,GACb,UACA,UACVmG,MACI7G,IAAUS,EAAEC,OAAO,GACb,mBACA,oBAGbD,EAAEkF,WA6ClBlF,EAAEqkB,SAASpqB,OAAS,GACjB,yBACI3O,UAAWC,IACPF,EAAQ01B,SADC,eAGJ11B,EAAQo2B,YACLliB,IAAUS,EAAEC,OAAO,IAJlB,eAOJ5U,EAAQq2B,aACL1hB,EAAEC,OAAO,KAAOV,KAI5B,uBACIrO,GACIqO,IAAUS,EAAEC,OAAO,GACb,UACA,SAEV3U,UAAWC,IACP,YACAF,EAAQs2B,IAEZn2B,MAAO,CACH+C,WACIgR,IAAUS,EAAEC,OAAO,GACb,0BACA,UACVmG,MACI7G,IAAUS,EAAEC,OAAO,GACb,mBACA,oBAGd,kBAACxO,EAAA,EAAD,CACIC,UAAW,OACXO,QAAS,QACT3G,UAAWC,IACPF,EAAQ62B,eAEZvxB,GAAI,CACAzB,QACI8Q,EAAEqkB,SAASpqB,QAAU,GACrB,SAGP+F,EAAEqkB,SAASpqB,OAAS,GACjB+F,EAAEqkB,SAAS/qB,KAAI,SAAC6rB,EAAItrB,GAAL,OACX,kBAAC0mB,GAAD,CACIx3B,IAAK8Q,EACLvO,UACID,EAAQ65B,YAEZp0B,OAAK,EACLzB,MAAK,UAAK+qB,KACNpa,EAAEqa,WAEDC,GACG,oBAEHC,OACG,sBAERxpB,UACIwO,IACAS,EAAEC,OAAO,GACH,OACA,SAGV,kBAACxO,EAAA,EAAD,CACI1I,IAAK8Q,EACLnI,UAAW,OACXO,QAAS,QACT3G,UAAWC,IACPF,EAAQi3B,aAEZ92B,MAAO,CACH8E,OAAO,WAEX5E,QAAS,kBACLirB,EACIvZ,GAAmBE,0BACf6nB,MAKZ,yBACI75B,UAAWC,IAAG,eAELF,EAAQ+2B,WACLpiB,EACKqkB,SACApqB,QACL,GANC,eASJ5O,EAAQg3B,YACLriB,EACKqkB,SACApqB,OACL,IAGZnC,IAAKqtB,YAUxCnlB,EAAEC,OAAO,KAAOV,GAASS,EAAEG,MACxB,yBACI7U,UAAWC,IACPF,EAAQ01B,SADC,eAGJ11B,EAAQo2B,YACLliB,IAAUS,EAAEC,OAAO,IAJlB,eAOJ5U,EAAQq2B,aACL1hB,EAAEC,OAAO,KAAOV,GAExB,CAAE6lB,SAAUH,IAAU1rB,EAAEU,OAAS,IAErC/I,GAAE,iBAAY+zB,IAEd,uBACI/zB,GAEI,UAGJ5F,UAAWC,IACP,YACAF,EAAQs2B,IAEZn2B,MAAO,CAKHZ,MAAM,UACNwb,MACI7G,IAAUS,EAAEC,OAAO,GACb,mBACA,oBAGd,kBAACxO,EAAA,EAAD,CACIC,UAAW,OACXO,QAAS,QACT3G,UAAWC,IACPF,EAAQ62B,eAEZvxB,GAAI,CACAzB,QACI8Q,EAAEqkB,SAASpqB,QAAU,GACrB,SAGR,kBAACsmB,GAAD,CACIj1B,UACID,EAAQ65B,YAEZp0B,OAAK,EACLzB,MAAK,kBAAa+qB,KACdpa,EAAEkc,WAED5B,GAAG,oBACHC,OACG,sBAERxpB,UACIwO,IAAUS,EAAEC,OAAO,GACb,OACA,SAGV,kBAACxO,EAAA,EAAD,CACIC,UAAW,OACXO,QAAS,QACT3G,UAAWC,IACPF,EAAQi3B,aAEZ92B,MAAO,CACH8E,OAAO,YAGX,0BACIhF,UAAWC,IACPF,EAAQg6B,eAGZ,yBACI/5B,UAAWC,IACPF,EAAQq3B,aAEZ5qB,IACI8qB,EAAW5jB,oBAc/D,GAgSesmB,GACD,yBACIp0B,GAAG,UACH1F,MAAO,CAAE4a,MAAO,OAAQmf,MAAO,QAC/Bjb,IAAKmZ,IAGRR,GACG,yBAAKz3B,MAAO,IACR,kBAAC,KAAD,CACIg6B,YAAa,GACbC,aA5Kf,SAACvW,EAAOwW,GACzBxW,EAAM8V,kBAENrO,EAAGnb,GAAWE,kBAAkBwJ,EAAUwgB,EAAYC,aAqMtC,yBACIn6B,MAAO,CACH0D,QAAS,kBACTd,MAAO,kBACPgY,MAAO,OACPlF,WAAY,oBACZC,SAAU,mBAEd7V,UAAWC,IAAG,YAAaF,EAAQ42B,YAElCpB,EAAW5mB,OAAS,GACjB4mB,EAAWvnB,KAAI,SAAC6rB,EAAItrB,GAAL,OACX,yBACIvO,UAAWC,IAAGF,EAAQy2B,UACtB/4B,IAAK8Q,GAEL,kBAAC,WAAD,KACI,yBACIvO,UAAWC,IACPF,EAAQ22B,eAGZ,yBACI9wB,GAAG,cACH5F,UAAWC,IACPF,EAAQw1B,YAEZ/oB,IAAKqtB,IAET,kBAAC/kB,GAAA,EAAD,CACI9U,UAAWC,IACPF,EAAQ02B,aAEZr2B,QAAS,kBA9SrC,SAACmO,GACjB,IAAMN,EAAIsnB,EAAWrnB,QAAO,SAAC2rB,EAAIF,GAAL,OAAeprB,IAAMorB,GAASE,KAC1DrE,EAAcvnB,GA6SkCwoB,CAAYloB,KAGhB,kBAAC,KAAD,CACIlJ,GAAI,CACAd,SAAS,6BAU5C+yB,GACDA,EAAWgD,YACVhD,EAAWgD,UAAU1lB,SAASX,IAC/BulB,GAAMc,YACLd,GAAMc,UAAU1lB,SAAS0iB,EAAWrjB,OACjC,yBAAKjU,UAAWC,IAAGF,EAAQ+1B,UACvB,yBAAK91B,UAAWC,IAAGF,EAAQw6B,UACvB,kBAACzlB,GAAA,EAAD,CAAY1U,QAl5BlB,SAAC6F,GAEvBwxB,EAAmBxxB,EAAEwtB,iBAi5BW,kBAAC,KAAD,CACIpuB,GAAI,CACA/F,MACIsa,EAAQgf,OAAOjqB,OAAS,GAAxB,UAEJgM,WAAW,eAK3B,yBAAK3a,UAAWC,IAAGF,EAAQk2B,WACvB,8BACIj2B,UAAWC,IAAGF,EAAQg2B,UACtBr4B,MAAOkc,EACP4gB,UAvYf,SAACv0B,GACD,IAAbA,EAAEw0B,SAA+B,GAAdx0B,EAAEy0B,UACrB/B,MAsY4Bt5B,SA5Yf,SAAC4G,GAClBolB,EAAGnb,GAAWE,kBAAkBnK,EAAEC,OAAOxI,SA4YTi9B,QAjXpB,SAAC/W,GAMb,IALA,IAAIgX,GAAShX,EAAMiX,eAAiBjX,EAAMkX,cAAcD,eACnDD,MAGDG,EAAO,KACFxsB,EAAI,EAAGA,EAAIqsB,EAAMjsB,OAAQJ,IACS,IAAnCqsB,EAAMrsB,GAAG3R,KAAKwR,QAAQ,WACtB2sB,EAAOH,EAAMrsB,GAAGysB,aAIxB,GAAa,OAATD,EAAe,CACf,IAAI5Y,EAAS,IAAIC,WACjBD,EAAOE,cAAc0Y,GAErB5Y,EAAO8Y,OAAS,SAAUrX,GAItB,IAAM3V,EAAIsnB,EAAWxnB,OAAO6V,EAAM1d,OAAOqc,QACzCiT,EAAcvnB,MA6VUnI,YAAY,QAMZo1B,aAAa,MACb95B,YAAY,MACZ+5B,eAAe,MACfC,WAAW,WAKnB,6BACI,kBAACtmB,GAAA,EAAD,CACI1U,QAASu4B,GACTtzB,GAAI,CACA/F,MACIsa,EAAQgf,OAAOjqB,OAAS,GAAxB,UAEJgM,WAAW,YAGf,kBAAC,KAAD,SAKZ6e,IACAA,GAAMc,YACLd,GAAMc,UAAU1lB,SAAS0iB,EAAWrjB,QAChCqjB,GACGA,EAAWgD,WACXhD,EAAWgD,UAAU1lB,SAASX,KAClC,yBACIjU,UAAWC,IAAGF,EAAQ+1B,SACtBzwB,GAAI,CACA2B,UAAU,oBACVlE,MAAM,oBAGV,yBAAK9C,UAAWC,IAAGF,EAAQk2B,WACvB,kBAACvvB,EAAA,EAAD,CACIC,QAAQ,YACRrH,MAAM,UACN+F,GAAI,CACAd,SAAS,kBACTqR,WAAW,sBALnB,8CAgBhB,kBAAC,KAAD,CACIhQ,GAAG,0BACH8tB,SAAUpB,EACV7yB,KAAMk0B,QAAQrB,GACd5U,QAASzY,GAUT,kBAAC2uB,GAAA,EAAD,CAAUxzB,QAtcjB,WACb43B,GAASD,GACT9yB,MAqc0B8yB,EAwBE,kBAAC,WAAD,KACI,8BACI,kBAAC,KAAD,CACIxzB,SAAS,QACTc,GAAI,CACAoQ,YAAa,EACb3Q,UAAW,MAIvB,kBAAC4B,EAAA,EAAD,CACIrB,GAAI,CACA9B,QAAQ,eACR,UAAW,CACPD,QAAQ,kBACRH,OAAO,qBALnB,SAjCJ,kBAAC,WAAD,KACI,8BACI,kBAAC,KAAD,CACIoB,SAAS,QACTc,GAAI,CACAoQ,YAAa,EACb3Q,UAAW,MAIvB,kBAAC4B,EAAA,EAAD,CACIrB,GAAI,CACA9B,QAAQ,eACR,UAAW,CACPD,QAAQ,kBACRH,OAAO,qBALnB,UAqCZ,kBAACywB,GAAA,EAAD,CAAUxzB,QAlfpB,WACV6E,IAEAomB,EAAG3Z,GAAWE,mBAAkB,MAgfP,IACD,8BACI,kBAAC,KAAD,CACIrN,SAAS,QACTc,GAAI,CACAoQ,YAAa,EACb5Q,WAAW,MACXN,SAAS,WAIrB,kBAACmC,EAAA,EAAD,CACIrB,GAAI,CACA9B,QAAQ,eACRuB,UAAU,iBACV,UAAW,CACPxB,QAAQ,kBACRH,OAAO,qBANnB,WAeR,kBAAC,KAAD,CACIyC,GAAG,oBACH8tB,SAAU8D,EACV/3B,KAAMk0B,QAAQ6D,GACd9Z,QAASua,GAET,kBAACrE,GAAA,EAAD,CAAUxzB,QAtjCJ,SAAC6F,GAG3B2xB,GAAeD,GACfM,MAojC4B,kBAAC,WAAD,KACI,8BACI,kBAAC,KAAD,CACI1zB,SAAS,QACTc,GAAI,CACAoQ,YAAa,EACb3Q,UAAU,WAItB,kBAAC4B,EAAA,EAAD,CACI20B,kBAAkB,EAClBh2B,GAAI,CACA9B,QAAQ,eACR,UAAW,CACPD,QAAQ,kBACRH,OAAO,qBANnB,WAeZ,kBAACywB,GAAA,EAAD,CACIxtB,UAAU,QACV2b,QAAQ,+BAGR,8BACI,kBAAC,KAAD,CACIxd,SAAS,QACTc,GAAI,CACAoQ,YAAa,EACb3Q,UAAU,WAItB,kBAAC4B,EAAA,EAAD,CACIrB,GAAI,CACA9B,QAAQ,eACR,UAAW,CACPD,QAAQ,kBACRH,OAAO,oBAGfk4B,kBAAkB,GAElB,kBAACl1B,EAAA,EAAD,CACIC,UAAU,QACV2b,QAAQ,8BACR1c,GAAI,CACAlF,WAAW,MACXoE,SAAS,kBACTzB,MAAM,oBANd,SAYJ,2BACI8C,GAAG,8BACHhJ,KAAK,OACLD,KAAK,QACL0C,SA1eV,SAAC4G,GACnBA,EAAE+N,iBAGFwO,GAAYvc,EAAEC,OAAOuc,MAAM,KAueCviB,MAAO,CAAE0D,QAAQ,YAK7B,kBAAC,KAAD,CACIgC,GAAG,mBACH8tB,SAAUmE,EACVp4B,KAAMk0B,QAAQkE,GACdna,QAASwa,GAERsB,IACDA,GAAMc,YACLd,GAAMc,UAAU1lB,SAAS0iB,EAAWrjB,OACjC,kBAAC2f,GAAA,EAAD,CACIxzB,QAteX,WACjBgT,EAAUwD,QAAQC,KAAK,kBAAmB,CACtC5C,MAAOA,EACP6kB,aAAcxB,EAAWrjB,QAE7BikB,KAke4B7yB,GAAI,CACApC,WAAW,uBAIX,kBAAC,WAAD,KACI,8BACI,kBAAC,KAAD,CACIsB,SAAS,QACTc,GAAI,CACAoQ,YAAa,EACb3Q,UAAU,WAItB,kBAAC4B,EAAA,EAAD,CACI20B,kBAAkB,EAClBh2B,GAAI,CACA9B,QAAQ,eACR,UAAW,CACPD,QAAQ,kBACRH,OAAO,qBANnB,WAgBZ,kBAACywB,GAAA,EAAD,CACIxzB,QA/fT,WACnBgT,EAAUwD,QAAQC,KAAK,oBAAqB,CACxC5C,MAAOA,EACP6kB,aAAcxB,EAAWrjB,QAE7BikB,KA2f4B7yB,GAAI,CACApC,WAAW,uBAIX,kBAAC,WAAD,KACI,8BACI,kBAAC,KAAD,CACIsB,SAAS,QACTc,GAAI,CACAoQ,YAAa,EACb3Q,UAAU,WAItB,kBAAC4B,EAAA,EAAD,CACI20B,kBAAkB,EAClBh2B,GAAI,CAEA,UAAW,CACP/B,QAAQ,kBACRH,OAAO,qBANnB,kBC9+CtCjD,GAAK,aACP2C,SAAU,WACVH,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXE,MAAM,iBAINkoB,EAAG,EAEH1nB,QAAQ,kBACRH,OAAO,kBAUPkB,OAAO,mBACN,2BAA6B,CAC1BvB,MAAM,MACNuB,OAAO,OAEP2mB,EAAG,IAULxsB,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrC48B,gBAAc,GACVv0B,OAAO,kBACPlE,SAAU,sBACVH,IAAK,iBACLO,WAAY,qBACZuW,MAAO,oBALG,cAMT,4BAA8B,CAC3BzS,OAAO,kBACPlE,SAAU,sBACVH,IAAK,kBACLC,KAAM,qBAVA,cAYT,4BAA8B,CAC3BoE,OAAO,kBACPlE,SAAU,sBACVH,IAAK,oBAfC,GAmBd8zB,SAAS,aACL3zB,SAAS,uBAOR,4BAA8B,CAC3BS,QAAQ,kBACRid,aAAa,oBACbiL,WAAW,oBACXrV,YAAY,oBACZ/S,UAAU,2BAEVI,aAAa,MACbmX,WAAW,sBAGnB4gB,QAAS,OASE,SAASC,KACpB,IAAMz7B,EAAUvB,KACV6sB,EAAK9d,cAELtI,EAAc,kBAChBomB,EAAGvZ,GAAmBG,8BAEpBwpB,EAAkB77B,aACpB,SAACC,GAAD,OAAWA,EAAMiU,UAAU2nB,mBAEzBC,EAAiB97B,aACnB,SAACC,GAAD,OAAWA,EAAMiU,UAAU4nB,kBAG/B,OACI,2BACI,gBAACx2B,EAAA,EAAD,CACIomB,kBAAgB,yBAChBC,mBAAiB,+BACjB9rB,KAAMi8B,EACNhe,QAASzY,EACT0mB,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACX5P,QAAS,KAEb7W,GAAI,CAAEvC,MAAM,kBAAoBuB,OAAO,oBAEvC,gBAAC0nB,GAAA,EAAD,CAAMC,GAAI0P,GACN,gBAACr1B,EAAA,EAAD,CAAKhB,GAAInF,IACL,gBAACiG,EAAA,EAAD,CACIP,GAAG,+BACH5F,UAAWC,IAAGF,EAAQy2B,WAEtB,uBACIhqB,IAAKivB,EACLhvB,IAAI,GACJzM,UAAWC,IAAGF,EAAQw7B,WAE1B,gBAACzmB,GAAA,EAAD,CACI9U,UAAWC,IAAGF,EAAQu7B,gBACtBl7B,QAAS6E,GAET,gBAAC,KAAD,CACII,GAAE,aACEd,SAAS,mBACR,4BAA8B,CAC3BA,SAAS,4B,uFCjF/C/F,GAAYC,aAAW,SAACC,GAAD,kBACzBgxB,aAAc,CACV9rB,QAAQ,OACRE,eAAe,eACfiD,OAAO,mBAEX4oB,cAAe,CACX7sB,MAAM,OACNwC,aAAa,iBACb9B,aAAa,kBACbL,OAAO,kBACPG,QAAQ,kBAGRF,UAAU,kBACV,2BAA4B,CACxBN,MAAM,kBAENjE,OAAO,mBAEX,UAAW,CACPmG,OAAO,qBACP/B,WAAW,uBAGnB2sB,KAAM,CACF9qB,UAAU,OAEd+qB,WAAY,CACR,UAAW,CACPvsB,QAAQ,kBACRH,OAAO,oBAGfw4B,YAAa,CACT74B,MAAM,oBAnCe,2BAsCb,CACRyB,SAAS,oBAvCY,mCA0CrBX,QAAS,eACTmS,SAAU,OACVF,SAAU,SACVC,aAAc,WACdF,WAAY,UA9CS,cA+CpB,2BAA6B,CAC1BhS,QAAS,eACTmS,SAAU,OACVF,SAAU,SACVC,aAAc,WACdF,WAAY,WApDK,cAsDpB,2BAA6B,CAC1BhS,QAAS,eACTmS,SAAU,OACVF,SAAU,SACVC,aAAc,WACdF,WAAY,WA3DK,cA6DpB,2BAA6B,CAC1BhS,QAAS,eACTmS,SAAU,OACVF,SAAU,SACVC,aAAc,WACdF,WAAY,WAlEK,cAoEpB,2BAA6B,CAC1BhS,QAAS,eACTmS,SAAU,OACVF,SAAU,SACVC,aAAc,WACdF,WAAY,sBAzEK,SA6Ed,SAASgmB,GAAT,GAA2B,IAAD,oBACrC,IAAM77B,EAAUvB,KACV6sB,EAAK9d,cACL0G,EAAQrU,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKmR,QAAQe,SAElDojB,GADUz3B,aAAY,SAACC,GAAD,OAAWA,EAAMiU,UAAU8F,WACvCha,aAAY,SAACC,GAAD,OAAWA,EAAMiU,UAAUujB,YACjDwE,EAAgBj8B,aAAY,SAACC,GAAD,OAAWA,EAAMiU,UAAU+nB,iBACvDC,EAAkBl8B,aACpB,SAACC,GAAD,OAAWA,EAAMiU,UAAUgoB,mBAIzBjoB,GAFajU,aAAY,SAACC,GAAD,OAAWA,EAAMiU,UAAUwjB,cAE7C13B,aAAY,SAACC,GAAD,OAAWA,EAAMiU,UAAUD,SAZf,EAcL3V,mBAAS,MAdJ,mBAc9Bo0B,EAd8B,KAcpBC,EAdoB,KAe/BwJ,EAAiB,SAAC91B,GACpBA,EAAEyzB,kBAGFnH,EAAYtsB,EAAEwtB,gBAGZuI,EAAkBxJ,uBAAY,WAChCD,EAAY,QACb,IAxBkC,EA0BDr0B,mBAAS,IA1BR,mBA0B9BkyB,EA1B8B,KA0BlBC,EA1BkB,OA2BDnyB,mBAAS,IA3BR,mBA2B9B+9B,EA3B8B,KA2BlBC,EA3BkB,OA4BKh+B,mBAAS,IA5Bd,mBA4B9Bi+B,EA5B8B,KA4BfC,EA5Be,OA6BKl+B,mBAAS,IA7Bd,mBA6B9Bu1B,EA7B8B,KA6Bf4I,EA7Be,KAiC/Bn8B,GAFkBN,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKD,mBAE/C,GACPe,SAAU,WACVH,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXE,MAAyB,IAAlB+4B,EAAA,gBACP9Q,QAAS,mBACT3nB,UAAW,GACX4nB,EAAG,EACH1nB,QAAQ,kBAGRH,OAAO,mBAZA,oIAiBN,2BAA6B,CAC1BL,MAAM,MACNuB,OAAO,OAEP2mB,EAAG,IArBA,GAwBXzsB,qBAAU,WAGN,GAAsB,IAAlBs9B,EAAqB,CACrB,IAAM5tB,EACF4F,EAAKlF,OAAS,GACdkF,EAAK3F,QAAO,SAACwG,GAAD,OAAOA,EAAEC,OAAOC,SAASX,IAAUS,KAAGJ,UAChD6kB,EAAI,GAGNlrB,EAAEU,OAAS,GACXV,EAAED,KAAI,SAAC0G,EAAGnG,GACN,IAAI+tB,GAAa,EACjBnD,EAAEnrB,KAAI,SAACuuB,GAUCA,EAAG5nB,QAAU4nB,EAAG5nB,OAAOC,SAASX,KAC5BsoB,EAAG5nB,OAAO,KAAOV,EACbS,EAAEC,OAAO,KAAOV,EACZsoB,EAAG5nB,OAAO,KAAOD,EAAEC,OAAO,KAC1B2nB,GAAa,GAEV5nB,EAAEC,OAAO,KAAOV,GACnBsoB,EAAG5nB,OAAO,KAAOD,EAAEC,OAAO,KAC1B2nB,GAAa,GAGdC,EAAG5nB,OAAO,KAAOV,IACpBS,EAAEC,OAAO,KAAOV,EACZsoB,EAAG5nB,OAAO,KAAOD,EAAEC,OAAO,KAC1B2nB,GAAa,GAEV5nB,EAAEC,OAAO,KAAOV,GACnBsoB,EAAG5nB,OAAO,KAAOD,EAAEC,OAAO,KAC1B2nB,GAAa,QAM5BA,GACDnD,EAAErqB,KAAK4F,MAInB2b,EAAc8I,GACd+C,EAAc/C,QAId9I,EAAcgH,KAGnB,CAACxjB,EAAMgoB,EAAexE,EAASyE,IAElC,IAWMtI,EAAiB,SAACvf,GAEpBoX,EAAGna,GAAcE,qBAAqB6C,IACtCoX,EAAG3Z,GAAWE,mBAAkB,IAChCyZ,EAAG/Y,GAAcE,sBAAqB,IACtC6d,EAAc,KAYlB9xB,qBAAU,WACgB,IAAlBs9B,EACAxL,EACI4L,EAAW/tB,QAAO,SAACsuB,GACf,GAAIA,EAAIvoB,QAAUA,GACd,GACIuoB,EAAIlF,WAAW36B,KACVgyB,cACA/gB,WACAQ,QACG+tB,EAAcxN,cAAc/gB,aAC3B,EAET,OAAO4uB,OAGX,GACIA,EAAI7/B,KACCgyB,cACA/gB,WACAQ,QACG+tB,EAAcxN,cAAc/gB,aAC3B,EAET,OAAO4uB,MAKE,IAAlBX,GACPxL,EACIgH,EAAQnpB,QAAO,SAACuuB,GACZ,GACIA,EAAG9/B,KACEgyB,cACA/gB,WACAQ,QAAQ+tB,EAAcxN,cAAc/gB,aACzC,EAEA,OAAO6uB,QAKxB,CAACN,IAEJ,IAAM9C,EAAqB,SAAC5E,GAgBxB,OAdI5gB,EAAKlF,OAAS,GACdkF,EAAK3F,QACD,SAACwG,GAAD,OACIA,EAAEC,OAAOC,SAASX,IAClBS,EAAEC,OAAOC,SAAS6f,EAAExgB,SACnBS,EAAEG,MACHH,EAAEC,OAAO,KAAOV,GAChBwgB,EAAExgB,QAAUS,EAAEC,OAAO,IACrBD,MAMH/F,QAGP+tB,EAAgB,SAACxjB,GACnB,IAAMjL,EAAI6gB,KAAO1Q,SAAS0Q,OAAS6N,KAAK7N,KAAO5V,KAAQ0jB,YACjDzD,EAAIrK,KAAO1Q,SAAS0Q,OAAS6N,KAAK7N,KAAO5V,KAC/C,OAAIjL,EAAI,EAAS,GAAN,OAAU4uB,KAAKC,MAAM3D,EAAE4D,aAAvB,YACF9uB,GAAK,GAAKA,EAAI,GACb,GAAN,OAAU4uB,KAAKC,MAAM3D,EAAEyD,aAAvB,YACK3uB,GAAK,IAAMA,EAAI,KACd,GAAN,OAAU4uB,KAAKC,MAAM3D,EAAE6D,WAAvB,UACK/uB,GAAK,MAAWA,EAAI,MACnB,GAAN,OAAU4uB,KAAKC,MAAM3D,EAAE8D,UAAvB,SACKhvB,GAAK,MAAoB,GAAN,OAAU4uB,KAAKC,MAAM3D,EAAE+D,YAAvB,gBAAvB,GAMT,OACI,2BAEI,gBAACh4B,EAAA,EAAD,CACIomB,kBAAgB,yBAChBC,mBAAiB,+BACjB9rB,KAAMq8B,EACNpe,QApHQ,WAChB2S,EAAc,IACd+L,EAAiB,IAEjB/Q,EAAG/Y,GAAcE,sBAAqB,KAiH9BmZ,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACX5P,QAAS,MAGb,gBAAC6P,GAAA,EAAD,CAAMC,GAAI8P,GACN,gBAACz1B,EAAA,EAAD,CAAKhB,GAAInF,GACL,uBAAKF,UAAWC,IAAGF,EAAQ2vB,eACvB,gBAACvpB,EAAA,EAAD,CACIP,GAAG,yBACHQ,UAAU,MACVf,GAAI,CACA8P,WAAW,iCACXoL,aACsB,IAAlBsb,GAAA,oBAEJ72B,OAAO,sBAEX5E,QAAS,WACiB,IAAlBy7B,IAGJxL,EAAc,IAEdhF,EACI3Y,GAAiBE,wBACb,MAIZ5S,UAAWC,IAAGF,EAAQioB,OAEtB,gBAAClT,GAAA,EAAD,CACIzP,GAAI,CACA/F,MAAyB,IAAlBu8B,GAAuB,UAC9B,UAAW,CACPv4B,QAAQ,kBACRH,OAAO,qBAOf,gBAAC,KAAD,CACIkC,GAAI,CACA/F,MACsB,IAAlBu8B,GACA,cAxCpB,aA8CA,gBAAC11B,EAAA,EAAD,CACIP,GAAG,yBACHQ,UAAU,MACVf,GAAI,CACA8P,WAAW,iCAEXoL,aACsB,IAAlBsb,GAAA,oBAEJ72B,OAAO,sBAEX5E,QAAS,WACiB,IAAlBy7B,IAGJxL,EAAc,IAEdhF,EACI3Y,GAAiBE,wBACb,OAKZ,gBAACkC,GAAA,EAAD,CACIzP,GAAI,CACA/F,MAAyB,IAAlBu8B,GAAuB,UAC9B,UAAW,CACPv4B,QAAQ,kBACRH,OAAO,qBAIf,gBAAC,KAAD,CACIkC,GAAI,CACA/F,MACsB,IAAlBu8B,GACA,cArCpB,mBA4CJ,gBAAC11B,EAAA,EAAD,CACId,GAAI,CACAoB,GAAI,EACJO,UAAU,kBACVnI,OAAO,MAEPD,UAAU,QAEdwH,UAAU,OAEV,gBAACV,EAAA,GAAD,GACIE,GAAG,iBACH8c,WAAY,CACR/c,UAAU,GAEdG,YAAY,SACZpI,MAAOy+B,EACP98B,SAlOJ,SAAC4G,GACrBm2B,EAAiBn2B,EAAEC,OAAOxI,QAkOFiJ,QAAQ,YARZ,2BASgB,CACRw2B,eACI,gBAACC,GAAA,EAAD,CAAgBv6B,SAAS,SACrB,gBAAC,KAAD,SAZhB,0BAgBe9C,EAAQ47B,aAhBvB,IAkBmB,IAAlBE,GACGzL,EAAWzhB,OAAS,GACpByhB,EAAWpiB,KAAI,SAAC0G,GAAD,OACX,gBAAC,WAAD,CAAgBjX,IAAKiX,EAAE2B,KACnB,gBAACuB,EAAA,EAAD,CACI5X,UAAWC,IACPF,EAAQ4vB,eAEZvvB,QAAS,kBACLsU,EAAET,QAAUA,EACNuf,EACI9e,EAAE4iB,WAAWrjB,OAEjBuf,EAAe9e,EAAET,SAG3B,gBAAC6N,GAAA,EAAD,CACIrB,OACI,gBAACgQ,GAAA,EAAD,KACK,IACD,gBAACzO,GAAA,EAAD,CACIC,MACIvN,EAAET,QACFA,EACMS,EACK4iB,WACA5jB,QACLgB,EAAEhB,QAEZ3P,MAAM,QACNqC,UAAU,MACVpG,UACID,EAAQ2wB,SAMxB3sB,MACI,gBAACoC,EAAA,EAAD,CACIC,UAAW,OACXO,QAAS,QACTtB,GAAI,CACAxC,SAAS,WACTe,QAAQ,QACRtE,OACIoV,EAAET,QACEA,GACHS,EAAEG,KAFH,mBAKJ1U,WACIuU,EAAET,QACEA,GACHS,EAAEG,KAFH,qCAOPH,EAAET,QAAUA,EACPS,EAAE4iB,WAAW36B,KACb+X,EAAE/X,KACP08B,EAAmB3kB,GAChB,GACA,gBAACvO,EAAA,EAAD,CACIC,UACI,OAEJO,QACI,QAEJtB,GAAI,CACAxC,SAAS,sBACTI,WAAW,UACX3D,MAAM,UACNkE,aAAa,kBACbe,SAAS,kBACT5B,KAAK,iBACLD,IAAI,kBACJa,QACI,uBAGP81B,EACG3kB,KASpBic,UAQI,gBAAC,WAAD,KACI,gBAACxqB,EAAA,EAAD,CACIC,UAAU,OACVO,QAAS,QACT3G,UAAWC,IACPF,EAAQs9B,gBAEZh4B,GAAI,CACA/F,MACIoV,EAAET,QACEA,IACHS,EAAEG,MAFH,qBAIJ1U,WACIuU,EAAET,QACEA,IACHS,EAAEG,MAFH,oBAbZ,UAoBQH,EAAET,QACFA,EACM,MACAS,EAAE/X,KAvBhB,aAyBQ+X,EAAEkF,QACIlF,EAAEkF,QADR,eAEclF,EAAEqkB,SAASpqB,OAFzB,aAKR,gBAACxI,EAAA,EAAD,CACIC,UAAU,OACVO,QAAS,QACTtB,GAAI,CACAxC,SAAS,sBACTH,IAAI,kBAEJvC,WACIuU,EAAET,QACEA,GACHS,EAAEG,KAFH,kCAKJjR,QAAQ,mBACRiB,WAAW,mBAdnB,UAgBK63B,EACDhoB,EAAEqa,cAKdjX,OACI,gBAAChD,GAAA,EAAD,CACI9U,UAAWC,IACPF,EAAQ8vB,YAEZzvB,QAAS,SAAC6F,GACNyO,EAAET,QAAUA,EACNooB,EACI3nB,EACK4iB,WACArjB,OAETooB,EACI3nB,EAAET,OAGZ8nB,EAAe91B,KAGnB,gBAAC,KAAD,CACIjG,UAAWC,IACPF,EAAQ6vB,SAKxB5vB,UAAWC,IACPF,EAAQ+wB,uBAOb,IAAlB+K,GACGzL,EAAWzhB,OAAS,GACpByhB,EAAWpiB,KAAI,SAAC0G,GAAD,OACX,gBAAC,WAAD,CAAgBjX,IAAKiX,EAAE2B,KACnB,gBAACuB,EAAA,EAAD,CACI5X,UAAWC,IACPF,EAAQ4vB,eAEZvvB,QAAS,kBACLozB,EAAe9e,EAAET,SAGrB,gBAAC6N,GAAA,EAAD,CACIrB,OACI,gBAACgQ,GAAA,EAAD,KACK,IACD,gBAACzO,GAAA,EAAD,CACIC,MAAOvN,EAAEhB,QACT3P,MAAM,QACNqC,UAAU,MACVpG,UACID,EAAQ2wB,SAMxB3sB,MAAO,4BAAO2Q,EAAE/X,MAIhBg0B,UACI,4BACI,gBAAC,KAAD,CACItrB,GAAI,CACAd,SAAS,iBACTkR,YAAY,MACZnW,MAAOoV,EAAE+kB,OAAF,QAED,aAGb/kB,EAAE+kB,OAAF,oBAMT3hB,OACI,gBAAChD,GAAA,EAAD,CACI9U,UAAWC,IACPF,EAAQ8vB,YAEZzvB,QAAS,SAAC6F,GACNo2B,EACI3nB,EAAET,OAGN8nB,EAAe91B,KAGnB,gBAAC,KAAD,CACIjG,UAAWC,IACPF,EAAQ6vB,SAKxB5vB,UAAWC,IACPF,EAAQ+wB,uBAOhC,gBAAC,KAAD,CACIlrB,GAAG,uBACH8tB,SAAUpB,EACV7yB,KAAMk0B,QAAQrB,GACd5U,QAASse,GAET,gBAACpI,GAAA,EAAD,CAAUxzB,QA/eT,WAEzBiwB,EAAc,IACdhF,EAAGna,GAAcE,qBAAqBqiB,IACtCpI,EAAG3Z,GAAWE,mBAAkB,IAChCoqB,IACA3Q,EAAG/Y,GAAcE,sBAAqB,MA0eV,4BACI,gBAAC,KAAD,CACIjO,SAAS,QACTc,GAAI,CACAoQ,YAAa,EACb3Q,UAAU,WAItB,gBAAC4B,EAAA,EAAD,CACIrB,GAAI,CACA9B,QAAQ,eACR,UAAW,CACPD,QAAQ,kBACRH,OAAO,oBAGfk4B,kBAAkB,GAElB,gBAACl1B,EAAA,EAAD,CACIC,UAAU,QACV2b,QAAQ,8BACR1c,GAAI,CACAlF,WAAW,MACXoE,SAAS,kBACTzB,MAAM,kBACNw6B,YAAY,mBAPpB,wBCpuBtBC,EAAQ,KACTA,EAAQ,IACPC,CAAW,CACzB,CAEIC,OAAQ,6CACRC,eAAgB,CAAC,MAAO,MAAO,WAEnC,CAEID,OAAQ,0CACRC,eAAgB,CAAC,MAAO,MAAO,aAXvC,IAeaC,GAAUC,eAiVvB,IAIM7+B,GAAoB,CACtBC,kBAAmBtC,EACnB4a,kBAAmBhP,IAGjBiP,GAActY,aATI,SAACY,GAAD,MAAY,CAChCub,SAAUvb,EAAMoC,KAAKmZ,YAQoBrc,IAE9ByY,eAAQD,GAARC,EA1Vf,YAAiE,EAAlDxY,kBAAkD,EAA/Boc,SAAgC,IAAtB9D,EAAqB,EAArBA,kBAAqB,GACrC1X,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKD,mBACpC/D,EAAgB,OAAQ,KAFe,mBAiCvDkW,GAjCuD,UAiC/CrU,aAAY,SAACC,GAAD,OAAWA,EAAMkC,KAAKmR,QAAQe,UAExD1V,qBAAU,WACD0V,GACDqD,MAEL,CAACrD,IAoBJ,IAAMzV,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+b,cAAe,CAEX7W,QAAQ,OACR4C,cAAc,SACd1B,UAAU,OACV4V,yBAAyB,SACzBC,WAAW,SACX5T,OAAO,gBAEX,2BAA4B,CACxB,KAAM,CACFjC,UAAW,SAEf,OAAQ,CACJ8V,QAAS,EACT9V,UAAW,QAGnB,4BAA6B,CACzB,KAAM,CACFD,WAAY,UAEhB,OAAQ,CACJ+V,QAAS,EACT/V,WAAY,QAGpBgW,QAAS,CACL/X,MAAO,iBAEPgY,MAAO,QACPlX,QAAS,kBACT4C,cAAe,oBACf3H,OAAQ,yBACR6b,yBAAyB,SACzBC,WAAW,SACXI,UAAU,mCAEdjb,KAAK,aACDgD,MAAO,iBAEPgY,MAAO,kBACP/T,OAAQ,IACRlE,SAAU,mBACV2W,MAAO,IACP3a,OAAQ,OACR6b,yBAAyB,SACzBC,WAAW,SACXI,UAAU,kCACT,2BAA6B,CAC1BjW,UAAU,kBAGlB6O,WAAY,CACR/P,QAAQ,mBAEZoX,WAAY,CACRnc,OAAO,QACPoc,UAAU,aAoBP1N,cAQXhP,qBAAU,WAEY,YADF6b,UAAUyjB,OAAS,SAAW,WAG1CC,MAAM,0BAA2B,CAE7B/8B,KAAM,YAELg9B,MAAK,eAGLC,OAAM,WACHC,aAAM,wCAIdA,KAAMC,QACF,6BACI,kBAAC,KAAD,CAAa74B,GAAI,CAAEC,aAAa,SAChC,0BACIpF,MAAO,CACH0D,QAAQ,eACRS,OAAO,qBAHf,4BAWb,IAEH,IAAM+O,EAAY2G,mBAGlB,OAEI,kBAAC,KAAD,CAAiB4jB,QAASA,IACtB,kBAAC,GAAD,CACItqB,eAAgBsqB,GAAQhwB,SAASwwB,SAASC,MAAM,KAAK,GACrDhrB,UAAWA,IAGf,yBAAKlT,MAAO,CAAE4E,UAAW,KAErB,kBAAC,GAAD,MACA,kBAAC,KAAD,CACIjC,SAAS,gBACTw7B,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,IAsBf3qB,GAAS,kBAAC,GAAD,CAAMb,UAAWA,IAC1Ba,GAAS,kBAAC2nB,GAAD,CAAcxoB,UAAWA,IACnC,kBAACooB,GAAD,MACA,kBAAC,IAAD,KAEI,kBAAC,IAAD,CACIxuB,KAAK,aACLC,OAAK,EACL7G,UAAW,cAAGkV,MAAH,OACP,kBAAC,GAAD,CAGIlI,UAAWA,OAOvB,kBAAC,IAAD,CACIpG,KAAK,yBACLC,OAAK,EACL7G,UAAW,gBAAGkV,EAAH,EAAGA,MAAH,OACP,kBAAC,IAAD,CAAU/U,GAAE,UAAK+U,EAAMre,IAAX,WAGpB,kBAAC,IAAD,CACI+P,KAAK,8BACLC,OAAK,EACL7G,UAAW,gBAAGkV,EAAH,EAAGA,MAAH,OAAe,kBAAC,GAAD,CAAUA,MAAOA,OAE/C,kBAAC,IAAD,CACItO,KAAK,SACLC,OAAK,EACL7G,UAAW,cAAGkV,MAAH,OACP,kBAAC,IAAD,CAAU/U,GAAG,gBAGrB,kBAAC,IAAD,CACIyG,KAAK,eACLC,OAAK,EACL7G,UAAW,gBAAGkV,EAAH,EAAGA,MAAH,OAAe,kBAAC,GAAD,CAAOA,MAAOA,OAE5C,kBAAC,IAAD,CACItO,KAAK,gBACLC,OAAK,EACL7G,UAAW,gBAAGkV,EAAH,EAAGA,MAAH,OACP,kBAAC,GAAD,CAAcA,MAAOA,OAI7B,kBAAC,IAAD,CACItO,KAAK,qBACLC,OAAK,EACL7G,UAAW,gBAAGkV,EAAH,EAAGA,MAAH,OAAe,kBAAC,GAAD,CAASA,MAAOA,OAE9C,kBAAC,IAAD,CACItO,KAAK,wBACLC,OAAK,EACL7G,UAAW,gBAAGkV,EAAH,EAAGA,MAAH,OACP,kBAAC,GAAD,CAAkBA,MAAOA,OAGjC,kBAAC,IAAD,CACItO,KAAK,iBACLC,OAAK,EACL7G,UAAWy4B,KAEf,kBAAC,IAAD,CACI7xB,KAAK,IACLC,OAAK,EACL7G,UAAW,kBAAM,kBAAC,IAAD,CAAUG,GAAG,cAElC,kBAAC,IAAD,CACIyG,KAAK,YACLC,OAAK,EAML7G,UAAW04B,KAGf,kBAAC,IAAD,CACI9xB,KAAK,SACLC,OAAK,EACL7G,UAAW,gBAAGkV,EAAH,EAAGA,MAAH,OAAe,kBAAC,GAAD,CAAOA,MAAOA,OA1LxDxN,GAAeE,KAAI,SAAC+wB,GAChB,OAAO,kBAAC,GAAD,iBAAoBA,EAApB,CAA2BthC,IAAKshC,EAAM/xB,WAIjDD,GAAciB,KAAI,SAAC+wB,GACf,OAAO,kBAAC,GAAD,iBAAoBA,EAApB,CAA2BthC,IAAKshC,EAAM/xB,WAIjDG,GAAaa,KAAI,SAAC+wB,GACd,OAAO,kBAAC,GAAD,iBAAoBA,EAApB,CAA2BthC,IAAKshC,EAAM/xB,WAyLrC,kBAAC,IAAD,CACIA,KAAK,OACLC,OAAK,EACL7G,UAAW,gBAAGkV,EAAH,EAAGA,MAAH,OACP,kBAAC,GAAD,CAAUC,WAAY/c,EAAW8c,MAAOA,OAGhD,kBAAC,IAAD,CAAOlV,UAAWsW,W,4BCnYzBsiB,GAAU,SAACC,GACpB,GAAIA,EACA,OAAQC,KAAMC,SAASC,QAAQC,OAAvB,+BAEMJ,UAEPC,KAAMC,SAASC,QAAQC,OAAvB,eAIFC,GAAY,SAACriC,EAAKsiC,GAAwC,IAAhCC,EAA+B,uDAApB,GAAIC,EAAgB,uDAAT,KACzD,GAAIxiC,IAAQkP,GAAW,CACnB,GAAIozB,IAAW5zB,GACX,OAAOuzB,KAAMQ,IAAN,UAAaziC,EAAb,YAAoBuiC,IACxB,GAAID,IAAW3zB,GAClB,OAAOszB,KAAMS,KAAN,UAAc1iC,EAAd,YAAqBuiC,GAAYC,GAGhD,GAAIxiC,IAAQiP,GAAU,CAClB,GAAIqzB,IAAW5zB,GACX,OAAOuzB,KAAMQ,IAAN,UAAaziC,EAAb,YAAoBuiC,IACxB,GAAID,IAAW3zB,GAClB,OAAOszB,KAAMS,KAAN,UAAc1iC,EAAd,YAAqBuiC,GAAYC,GAGhD,GAAIxiC,IAAQ+O,GAAK,CACb,GAAIuzB,IAAW5zB,GACX,OAAOuzB,KAAMQ,IAAN,UAAaziC,EAAb,YAAoBuiC,IACxB,GAAID,IAAW3zB,GAClB,OAAOszB,KAAMS,KAAN,UAAc1iC,EAAd,YAAqBuiC,GAAYC,GACrC,GxHxCI,QwHwCAF,EACP,OAAOL,KAAMU,IAAN,UAAa3iC,EAAb,YAAoBuiC,GAAYC,GACpC,GxHzCO,WwHyCHF,EACP,OAAOL,KAAMW,OAAN,UAAgB5iC,EAAhB,YAAuBuiC,SAE/B,GAAIviC,IAAQgP,IACXszB,IAAW3zB,GACX,OAAOszB,KAAMS,KAAN,UAAc1iC,EAAd,YAAqBuiC,GAAYC,IC/CvCK,GAAW,SAACriC,GACrB,OAAOE,aAAaS,QAAb,UtIHS,SsIGT,OAA+BX,K,aCoHhCsiC,I,aA+EAC,I,aA4GAC,I,aAmCAC,I,aAqGAxL,I,aAgBAyL,I,aAwEAC,I,aAMArpB,I,aAeAspB,I,aAqCAC,I,aA6BAC,I,aAwCAC,I,aA6CAC,I,aA4CA3gB,I,aAgCAI,I,aA2CAwgB,I,aA8GAC,I,aAsFAC,I,aA0FAC,I,aAoBAC,I,aAkGAC,I,aAgEAC,I,aAoGAC,I,aAsCAxO,I,aA4CApD,I,aAoCA6R,I,aAqDAC,I,aAmCAC,I,aAcAC,I,aA6BAC,I,aA8BAxN,I,aA+BAC,I,aA8BAwN,I,aA2BAC,I,aAwBAC,IA7nDV,SAAU1B,KAAV,kFAEgB,OADNh+B,EAAOpE,aAAY,aAD7B,SAEsB+jC,cAAO,SAAC7hC,GAAD,OAAWA,EAAMoC,KAAKhF,OAFnD,UAEUA,EAFV,OAKS8E,EALT,qDASQA,EATR,iBAYwB,OAFhBi9B,GAAQj9B,GAVhB,mBAY8B4/B,cAAK,kBACnBrC,GAAUrzB,GAAWL,GAAM,kBAb3C,aAYkBqL,EAZlB,QAeoBtW,KAAKihC,QAfzB,iBAkBgB,OAlBhB,UAkBsBhC,aAAItuB,GAAWE,kBAAkByF,EAAItW,KAAK02B,UAlBhE,QAoBgB,OApBhB,UAoBsBuI,aAAI53B,GAAaiP,EAAItW,KAAKhE,OApBhD,QAqBgB,OArBhB,UAqBsBijC,aAAI71B,GAASE,gBAAgBgN,EAAItW,KAAKkuB,KAAK5a,QArBjE,YAsBoBgD,EAAItW,KAAKkuB,KAAKoD,QAtBlC,iBAuBoB,OAvBpB,UAuB0B2N,aAAIz1B,GAASE,gBAAgB4M,EAAItW,KAAKkuB,KAAKoD,UAvBrE,gCAyBoB,OAzBpB,UAyB0B2N,aAAIz1B,GAASE,iBAAgB,IAzBvD,QAkCgB,OAFIqJ,EADAuD,EAAItW,KAAK+S,QACCuD,EAAItW,KAAK+S,QAAQ9F,WACd,KAjCjC,UAkCsBgyB,aAAI33B,GAAWC,kBAAkBwL,IAlCvD,YAmCoBuD,EAAItW,KAAKkuB,KAAKzN,IAnClC,iBAqCoB,OArCpB,UAqC0Bwe,aAAIn2B,GAAUC,iBAAiBuN,EAAItW,KAAKkuB,KAAKzN,MArCvE,oCAsC2BnK,EAAItW,KAAKkuB,KAAKvN,IAtCzC,iBAyCoB,OAzCpB,UAyC0Bse,aAAIj2B,GAAUC,iBAAiBqN,EAAItW,KAAKkuB,KAAKvN,MAzCvE,gCA2CoB,OA3CpB,UA2C0Bse,aAAI/1B,GAAUC,iBAAiBmN,EAAItW,KAAKkuB,KAAK5a,QA3CvE,WA+CgB+qB,GAAQj9B,GAEI,SAAR9E,EAjDpB,iBAmDqC,OAnDrC,oBAmD2C0kC,cAAK,kBAAMrC,GAAUtzB,GAAKL,GAAK1O,MAnD1E,WAmD8B4kC,EAnD9B,SAqDwDA,EAAKlhC,KAAKsB,KArDlE,EAqDgCuZ,KArDhC,EAqDsCE,IArDtC,EAqD2CE,GArD3C,EAqD+Cjf,MACnBklC,EAAKlhC,KAAKhB,OAtDtC,iBAuD4B,OAvD5B,UAuDkCigC,aAAI9wB,aAAK,IAAD,OAAK7R,KAvD/C,gCA0DwB,OA1DxB,qCA0D8B2iC,aAAIt+B,GAAY,IA1D9C,QA2DwB,OA3DxB,UA2D8Bs+B,aAAI9wB,aAAK,UA3DvC,kEAkEY,OAlEZ,oCAkEkB8wB,aAAIt+B,GAAY,IAlElC,QAsEY,OAHA09B,GAAQ,MACRrhC,aAAamZ,WAAW,gBACxBnZ,aAAamZ,WAAW,QArEpC,UAsEkB8oB,aAAI9wB,aAAK,WAtE3B,gCAyEQ,OAzER,UAyEc8wB,aAAIt+B,GAAY,IAzE9B,QA2EQ,OA3ER,UA2Ecs+B,aAAI9wB,aAAK,WA3EvB,+DA+EA,SAAUkxB,KAAV,gMAIY,OAJZ,SAIkB8B,aC1MD,YDsMjB,OAOQ,OAPR,SAGuBtiC,EAHvB,EAGY3C,QAAW2C,EAGTuC,EAAOpE,aAAY,aANjC,SAOciiC,anIjMmB,CAC7BhjC,KCXgB,cDYhBC,QAAS,OmIwLb,OAQQ,OARR,SAQc+iC,aAAI9iC,EAAS,OAR3B,OASQ,OATR,UASc8iC,aAAIt+B,GAAY,IAT9B,QAUQ,OAVR,UAUcs+B,aAAIp1B,GAAYA,YAAY,OAV1C,WAYkB,UADVhL,EAAIA,EAAE4+B,MAAM,KAAK,GAAGxF,QAX5B,qBAcgB72B,EAdhB,iBAiBgC,OAFhBi9B,GAAQj9B,GAfxB,oBAiBsC4/B,cAAK,kBACnBrC,GAAUrzB,GAAWL,GAAM,kBAlBnD,aAiB0BqL,EAjB1B,QAoB4BtW,KAAKihC,QApBjC,iBAsBwB,OAtBxB,UAsB8BhC,aAAI53B,GAAaiP,EAAItW,KAAKhE,OAtBxD,QA0BwBqiC,GAAQj9B,GA1BhC,gCAgCoB,OAhCpB,2BA6BoBi9B,GAAQ,MACRrhC,aAAamZ,WAAW,gBACxBnZ,aAAamZ,WAAW,QA/B5C,UAgC0B8oB,aAAI9wB,aAAK,WAhCnC,QAqCY,OADAnR,aAAamZ,WAAW,QApCpC,UAqCkB8oB,aAAIv3B,GAAY,OArClC,QAsCY,OAtCZ,UAsCkBu3B,aAAI5iC,EAAO,SAtC7B,QAyCY,OAzCZ,UAyCkB4iC,aAAI9wB,aAAK,UAzC3B,qCA0CmB/M,GAAc,SAANvC,EA1C3B,iBA+C4B,OAFhBw/B,GAAQj9B,GA7CpB,oBA+CkC4/B,cAAK,kBACnBrC,GAAUrzB,GAAWL,GAAM,kBAhD/C,aA+CsBqL,EA/CtB,QAkDwBtW,KAAKihC,QAlD7B,iBAqDoB,OArDpB,UAqD0BhC,aAAI53B,GAAaiP,EAAItW,KAAKhE,OArDpD,QAsDoBqiC,GAAQj9B,GAtD5B,gCA6DgB,OA7DhB,2BA2DgBi9B,GAAQ,MACRrhC,aAAamZ,WAAW,gBA5DxC,UA6DsB8oB,aAAI9wB,aAAK,WA7D/B,QAkE4B,OAlE5B,oBAkEkC6yB,cAAK,kBAAMrC,GAAUtzB,GAAKL,GAAKnM,MAlEjE,WAkEsByX,EAlEtB,SAoEgDA,EAAItW,KAAKsB,KAAjCuZ,EApExB,EAoEwBA,KAAME,EApE9B,EAoE8BA,IAAKE,EApEnC,EAoEmCA,GAAIjf,EApEvC,EAoEuCA,MACnBsa,EAAItW,KAAKhB,QAAgB,SAANH,EArEvC,iBA4EoB,OAHAhC,EvI9QA,OuI8Qege,GACfhe,EvI9QD,MuI8Qeke,GACdle,EAASD,EAAIqe,GA3EjC,UA4E0BgkB,aAAI1iC,EAAQ,CAAEse,OAAME,MAAKE,KAAIjf,UA5EvD,QA8EoB,OA9EpB,UA8E0BijC,aAAIv3B,GAAY1L,IA9E1C,QAiFoB,OAFAgB,aAAaC,QAAQ,OAAQqZ,EAAItW,KAAKsB,KAAKtF,MA/E/D,UAiF0BijC,aAAI5iC,EAAOwC,IAjFrC,QAoFoB,OApFpB,UAoF0BogC,aAAI9wB,aAAK,IAAD,OAAKtP,KApFvC,6EA4FgB,OA5FhB,2BAyFgBw/B,GAAQ,MAzFxB,UA4FsBY,aAAI9wB,aAAK,qBA5F/B,oCA8FoB/M,GAAc,SAANvC,EA9F5B,iBA+FY,OA/FZ,UA+FkBogC,aAAI5iC,EAAOwC,IA/F7B,QAgGY,OAhGZ,UAgGkBogC,aAAI9wB,aAAK,WAhG3B,oCAiGyB,SAANtP,EAjGnB,kBAkGY,OAlGZ,UAkGkBogC,aAAI9wB,aAAK,UAlG3B,kCAuGY,OAFAkwB,GAAQ,MACRrhC,aAAamZ,WAAW,gBAtGpC,WAuGkB8oB,aAAI9wB,aAAK,WAvG3B,qQA4GA,SAAUmxB,GAAenoB,GAAzB,wEACI,OADJ,SACU8nB,aAAIx3B,GAAc,OAD5B,OAEI,OAFJ,SAEUw3B,aAAIt+B,GAAY,IAF1B,OAGI,OAHJ,SAGUygC,aAAM,KAHhB,OAKoB,OALpB,kBAK0BJ,cAAK,kBACnBrC,GAAUrzB,GAAWL,GAAM,WAAYkM,EAAOjb,YAN1D,YAKcoa,EALd,QAQgBtW,KAAKihC,QARrB,iBAYY,OAZZ,UAYkBG,aAAM,KAZxB,QAaY,OAbZ,UAakBnC,aAAIt+B,GAAY,IAblC,QAeY,OAfZ,UAekBs+B,aAAI72B,GAAeC,uBAAsB,IAf3D,QAgBY,OAhBZ,UAgBkB42B,aAAIx3B,GAAc6O,EAAItW,KAAKiZ,UAhB7C,0CAoBY,OApBZ,UAoBkBgmB,aAAIt+B,GAAY,IApBlC,8DAuBY,KAAI0gC,SAASrhC,KAvBzB,iBAwBY,OAxBZ,UAwBkBi/B,aAAI72B,GAAeC,uBAAsB,IAxB3D,QA0BY,OA1BZ,UA0BkB+4B,aAAM,KA1BxB,QA2BY,OA3BZ,UA2BkBnC,aAAIt+B,GAAY,IA3BlC,QA4BY,OA5BZ,UA4BkBs+B,aAAIx3B,GAAc,KAAI45B,SAASrhC,KAAKiZ,UA5BtD,0CAgCI,OAhCJ,UAgCUgmB,aAAIt+B,GAAY,IAhC1B,uDAmCA,SAAU4+B,GAAYpoB,GAAtB,4FACI,OADJ,SACU8nB,aAAIt+B,GAAY,IAD1B,OAIgB,OADN4R,EAAU4E,EAAOjb,QAH3B,SAIsB6kC,cAAO,SAAC7hC,GAAD,OAAWA,EAAMoC,KAAKhF,OAJnD,UAIUA,EAJV,SAMU8E,EAAOpE,aAAY,eAEL,SAARV,EARhB,iBAWQ,OAFA+hC,GAAQj9B,GAThB,UAWcggC,aAAM,KAXpB,QAayB,OAbzB,oBAa+BJ,cAAK,kBACpBrC,GAAUrzB,GAAWL,GAAM,kBAd3C,aAakBi2B,EAblB,QAgBqBlhC,KAAKihC,QAhB1B,iBAiBgB,OAjBhB,UAiBsBhC,aAAI53B,GAAa65B,EAAKlhC,KAAKhE,OAjBjD,QAoBgB,OApBhB,UAoBsBijC,aAAI71B,GAASE,gBAAgB43B,EAAKlhC,KAAKkuB,KAAK5a,QApBlE,YAqBoB4tB,EAAKlhC,KAAKkuB,KAAKoD,QArBnC,iBAsBoB,OAtBpB,UAsB0B2N,aAAIz1B,GAASE,gBAAgBw3B,EAAKlhC,KAAKkuB,KAAKoD,UAtBtE,gCAwBoB,OAxBpB,UAwB0B2N,aAAIz1B,GAASE,iBAAgB,IAxBvD,QA4BgB,OADA1M,aAAamZ,WAAW,QA3BxC,UA4BsB8oB,aAAI9wB,aAAK,UA5B/B,gCAkCY,OAlCZ,2BA+BYkwB,GAAQ,MACRrhC,aAAamZ,WAAW,gBACxBnZ,aAAamZ,WAAW,QAjCpC,UAkCkB8oB,aAAI9wB,aAAK,WAlC3B,oCAoC2B,OAAZoE,EApCf,iBAqCQ,OArCR,UAqCc6uB,aAAM,KArCpB,QAuCkB,OAvClB,oBAuCwBJ,cAAK,kBACbrC,GAAUrzB,GAAWL,GAAM,QAASsH,MAxCpD,aAuCY+D,EAvCZ,QA0CoBtW,KAAKihC,QA1CzB,iBA+CgB,OAJU5C,GAAQ/nB,EAAItW,KAAKshC,aAE3BtkC,aAAaC,QAAQ,eAAgBqZ,EAAItW,KAAKshC,aA7C9D,UA+CsBrC,aAAI53B,GAAaiP,EAAItW,KAAKhE,OA/ChD,QAkDgB,OAlDhB,UAkDsBijC,aAAI71B,GAASE,gBAAgBgN,EAAItW,KAAKsT,QAlD5D,QAmDgB,OAnDhB,UAmDsB2rB,aAAIz1B,GAASE,iBAAgB,IAnDnD,WAsD4B,SAARpN,EAtDpB,iBAwDqC,OAxDrC,oBAwD2C0kC,cAAK,kBAAMrC,GAAUtzB,GAAKL,GAAK1O,MAxD1E,WAwD8B4kC,EAxD9B,SA0DwDA,EAAKlhC,KAAKsB,KAAlCuZ,EA1DhC,EA0DgCA,KAAME,EA1DtC,EA0DsCA,IAAKE,EA1D3C,EA0D2CA,GAAIjf,EA1D/C,EA0D+CA,MACnBklC,EAAKlhC,KAAKhB,OA3DtC,iBAkE4B,OAHAnC,EvInZR,OuImZuBge,GACfhe,EvInZT,MuImZuBke,GACdle,EAASD,EAAIqe,GAjEzC,UAkEkCgkB,aAAI1iC,EAAQ,CAAEse,OAAME,MAAKE,QAlE3D,QAmE4B,OAnE5B,UAmEkCgkB,aAAIv3B,GAAY1L,IAnElD,QAqE4B,OADAgB,aAAaC,QAAQ,OAAQjB,GApEzD,UAqEkCijC,aAAIt+B,GAAY,IArElD,QAsE4B,OAtE5B,UAsEkCs+B,aAAI9wB,aAAK,IAAD,OAAK7R,KAtE/C,gCAyEwB,OAzExB,qCAyE8B2iC,aAAIt+B,GAAY,IAzE9C,QA0EwB,OA1ExB,UA0E8Bs+B,aAAI9wB,aAAK,UA1EvC,iGAmFgB,KAAIkzB,SAASrhC,KAnF7B,iBAqFgB,OArFhB,UAqFsBi/B,aAAIz3B,GAAY,KAAI65B,SAASrhC,OArFnD,QAwFgB,OAxFhB,UAwFsBi/B,aAAIt+B,GAAY,IAxFtC,mEA8FQ,OA9FR,UA8FcygC,aAAM,KA9FpB,QA+FQ,OA/FR,WA+FcnC,aAAIt+B,GAAY,IA/F9B,yEAqGA,SAAUozB,GAAgB5c,GAA1B,kEACI,OADJ,SACUiqB,aAAM,KADhB,UAEmBpkC,aAAaS,QAAQ,gBAFxC,iBAIQ,OAJR,SAIcwhC,aAAI9iC,EAAS,sCAJ3B,OAMQ,OANR,SAMcilC,aAAM,KANpB,+BASQ,OATR,UAScnC,aAAI9iC,EAAS,OAT3B,yCAgBA,SAAUqjC,GAAaroB,GAAvB,wFACI,OADJ,SACU8nB,aAAIt+B,GAAY,IAD1B,OAEI,OAFJ,SAEUs+B,aAAI9iC,EAAS,OAFvB,OAGI,OAHJ,SAGUilC,aAAM,KAHhB,OAI4B,OAJ5B,SAIkCL,cAAO,SAAC7hC,GAAD,OAAWA,EAAMkC,KAAKD,mBAJ/D,OAOgB,OAHNA,EAJV,OAKUnF,EAAOmb,EAAOjb,QALxB,UAOsB6kC,cAAO,SAAC7hC,GAAD,OAAWA,EAAMoC,KAAKhF,OAPnD,WAOUA,EAPV,OAQUue,EAAO3d,KAAKQ,MAAMyhC,GvIjdR,SuIkdVpkB,EAAM7d,KAAKQ,MAAMyhC,GvIjdR,QuIkdTlkB,EAAK/d,KAAKQ,MAAMyhC,GAASviC,IACzBkiC,EAAO,CAAEjkB,OAAME,MAAKE,KAAIjf,QACzB6e,GAASE,GAAQE,EAZ1B,iBAaQ,OAbR,UAacmmB,aAAM,KAbpB,QAeQ,OAfR,UAecnC,aAAI9iC,EAAS,gCAf3B,QAgBQ,OAhBR,UAgBc8iC,aAAIt+B,GAAY,IAhB9B,oCAiBeQ,EAjBf,oBAkBoB,SAAR7E,EAlBZ,iBAqB4B,OArB5B,oBAqBkC0kC,cAAK,kBACnBrC,GAAU,GAAD,OAAItzB,IAAOJ,GAAM,SAAU6zB,MAtBxD,aAqBsBxoB,EArBtB,QAwBwBtW,KAAKihC,QAxB7B,iBAyBoB,OAzBpB,UAyB0BG,aAAM,KAzBhC,QA0BoB,OA1BpB,UA0B0BnC,aAAIt+B,GAAY,IA1B1C,QA2BoB,OA3BpB,UA2B0Bs+B,anIzdO,CAC7BhjC,KCXgB,cDYhBC,QAAS,OmI4bb,QA4BoB,OA5BpB,UA4B0B+iC,aAAIv3B,GAAY1L,IA5B1C,QA6BoB,OA7BpB,UA6B0BijC,axIlcQ,CAC9BhjC,KAAM,eACNC,QAAS,OwImab,QA8BoB,OA9BpB,UA8B0B+iC,aAAI5iC,EAAO,GAAD,OAAIia,EAAItW,KAAK1D,OA9BjD,QA+BoB,OA/BpB,UA+B0B2iC,aAAI9wB,aAAK,IAAD,OAAKmI,EAAItW,KAAK1D,OA/BhD,+DAkCoB,KAAI+kC,SAASrhC,KAlCjC,iBAmCoB,OAnCpB,UAmC0BohC,aAAM,KAnChC,QAqCoB,OArCpB,UAqC0BnC,aAAI9iC,EAAS,KAAIklC,SAASrhC,KAAKiZ,UArCzD,QAsCoB,OAtCpB,UAsC0BgmB,aAAIt+B,GAAY,IAtC1C,kEA+C6B,OA/C7B,oBA+CmCogC,cAAO,SAAC7hC,GAAD,OAAWA,EAAMkC,KAAKM,YA/ChE,QAgD4B,OADN1F,EA/CtB,iBAgDkCglC,cAAK,kBACnBrC,GAAU,GAAD,OAAItzB,I1Hzfd,M0Hyf0B/O,EAAK,CAAEue,OAAME,MAAKE,KAAIjf,YAjDnE,mBAmDwBgE,KAAKihC,QAnD7B,iBAoDoB,OApDpB,UAoD0BG,aAAM,KApDhC,QAqDoB,OArDpB,UAqD0BnC,aAAIt+B,GAAY,IArD1C,QAsDoB,OAtDpB,UAsD0Bs+B,aAAI5iC,EAAOC,IAtDrC,QAuDoB,OAvDpB,UAuD0B2iC,anIrfO,CAC7BhjC,KCXgB,cDYhBC,QAAS,OmI4bb,QAwDoB,OAxDpB,UAwD0B+iC,axI7dQ,CAC9BhjC,KAAM,eACNC,QAAS,OwImab,+DA6DoB,KAAImlC,SAASrhC,KA7DjC,iBA+DoB,OA/DpB,UA+D0Bi/B,aAAI9iC,EAAS,KAAIklC,SAASrhC,KAAKiZ,UA/DzD,QAgEoB,OAhEpB,UAgE0BgmB,aAAIt+B,GAAY,IAhE1C,kGAwEA,SAAU8+B,KAAV,kEACI,OADJ,SACUR,aAAIv3B,GAAY,OAD1B,OAEI,OAFJ,SAEUu3B,aAAI5iC,EAAO,SAFrB,OAGI,OAHJ,SAGU4iC,aAAI9wB,aAAK,UAHnB,wCAMA,SAAUiI,KAAV,kEAOI,OAPJ,SAOUgrB,aAAM,KAPhB,OAWI,OAHA/C,GAAQ,MACRrhC,aAAamZ,WAAW,gBAT5B,SAWU8oB,a/Hnf0B,CAChChjC,KAAM,iBACNC,QAAS,O+Hseb,OAYI,OAZJ,SAYU+iC,aAAI9wB,aAAK,WAZnB,wCAeA,SAAUuxB,GAAkBvoB,GAA5B,8EAEI,OADM/V,EAAOpE,aAAY,aAD7B,SAEUqhC,GAAQj9B,GAFlB,WAGQA,EAHR,iBAMwB,OAFhBi9B,GAAQj9B,GAJhB,kBAM8B4/B,cAAK,kBACnBrC,GAAUrzB,GAAWL,GAAM,kBAP3C,YAMkBqL,EANlB,QASoBtW,KAAKihC,QATzB,iBAUgB,OAVhB,UAUsBhC,aAAI53B,GAAaiP,EAAItW,KAAKhE,OAVhD,QAegB,OAFI+W,EADAuD,EAAItW,KAAK+S,QACCuD,EAAItW,KAAK+S,QAAQ9F,WACd,KAdjC,UAesBgyB,aAAI33B,GAAWC,kBAAkBwL,IAfvD,QAiBgBsrB,GAAQj9B,GAjBxB,QAoB4B,OApB5B,oBAoBkC4/B,cAAK,kBAAMrC,GAAUtzB,GAAKL,GAAK,eApBjE,QAqBgB,OADMsL,EApBtB,iBAqBsB2oB,axIlhBwB,CAC1ChjC,KAAM,uBACNC,QwIghByCoa,EAAItW,KAAKwS,WArBtD,gCA0BgB,OA1BhB,2BAuBgB6rB,GAAQ,MACRrhC,aAAamZ,WAAW,gBACxBnZ,aAAamZ,WAAW,QAzBxC,UA0BsB8oB,aAAI9wB,aAAK,WA1B/B,gCAgCY,OAhCZ,0BA6BYkwB,GAAQ,MACRrhC,aAAamZ,WAAW,gBACxBnZ,aAAamZ,WAAW,QA/BpC,UAgCkB8oB,aAAI9wB,aAAK,WAhC3B,+DAqCA,SAAUwxB,GAAiBxoB,GAA3B,4EACI,OADJ,SACU8nB,aAAI9iC,EAAS,OADvB,OAEI,OAFJ,SAEU8iC,aAAIt+B,GAAY,IAF1B,OAGI,OAHJ,SAGUygC,aAAM,KAHhB,OAKgB,OADNplC,EAAOmb,EAAOjb,QAJxB,SAKsB6kC,cAAO,SAAC7hC,GAAD,OAAWA,EAAMoC,KAAKhF,OALnD,UAKUA,EALV,OAOSN,EAPT,iBAQQ,OARR,UAQcolC,aAAM,KARpB,QASQ,OATR,UAScnC,aAAIt+B,GAAY,IAT9B,QAUQ,OAVR,UAUcs+B,aAAI9iC,EAAS,gDAV3B,0CAegB,OADZkiC,GAAQrhC,aAAY,cAdxB,UAesBgkC,cAAK,kBACnBrC,GAAUtzB,G1H1lBC,M0H0lBF,sBAA0B/O,GAAO,CAAEN,YAhBpD,QAkBI,OAHMsa,EAfV,iBAkBU8qB,aAAM,KAlBhB,QAoBI,OApBJ,UAoBUnC,aAAIviC,GAAc,IApB5B,QAqBI,OArBJ,UAqBUuiC,aAAIv3B,GAAY4O,EAAItW,KAAKsB,KAAKtF,OArBxC,QAsBI,OAtBJ,UAsBUijC,aAAIt+B,GAAY,IAtB1B,QAuBI,OAvBJ,UAuBUygC,aAAM,KAvBhB,QAwBI,OAxBJ,UAwBUnC,aAAI5iC,EAAOC,IAxBrB,QAyBI,OAzBJ,UAyBU2iC,anIzlBuB,CAC7BhjC,KCXgB,cDYhBC,QAAS,OmI8jBb,QA0BI,OA1BJ,UA0BU+iC,aAAI9wB,aAAK,IAAD,OAAK7R,KA1BvB,yCA6BA,SAAUsjC,GAAazoB,GAAvB,wEACI,OADJ,SACU8nB,aAAI9iC,EAAS,OADvB,OAEI,OAFJ,SAEU8iC,aAAIt+B,GAAY,IAF1B,OAGI,OAHJ,SAGUygC,aAAM,KAHhB,OAIgB,OAJhB,SAIsBL,cAAO,SAAC7hC,GAAD,OAAWA,EAAMoC,KAAKhF,OAJnD,OAMoB,OAFVA,EAJV,0BAM0B0kC,cAAK,kBAAMrC,GAAUtzB,G1H5mBzB,S0H4mBsC/O,MAN5D,QAQQ,OARR,iBAQc2iC,axI5kBoB,CAC9BhjC,KAAM,eACNC,QAAS,OwIkkBb,QASQ,OATR,UASc+iC,aAAItiC,GAAc,IAThC,QAWQ,OAXR,UAWcsiC,aAAIt+B,GAAY,IAX9B,QAYQ,OAZR,UAYcs+B,aAAIv3B,GAAY,OAZ9B,QAaQ,OAbR,UAacu3B,aAAI5iC,EAAO,SAbzB,QAcQ,OAdR,UAcc4iC,anI3mBmB,CAC7BhjC,KCXgB,cDYhBC,QAAS,OmI2lBb,QA2BQ,OA3BR,UA2Bc+iC,aAAI9wB,aAAK,UA3BvB,wEA+BY,KAAIkzB,SAASrhC,KA/BzB,iBAiCY,OAjCZ,UAiCkBi/B,aAAI9iC,EAAS,KAAIklC,SAASrhC,KAAKiZ,UAjCjD,QAkCY,OAlCZ,UAkCkBgmB,aAAIt+B,GAAY,IAlClC,yFAwCA,SAAUk/B,GAAc1oB,GAAxB,wFACI,OADJ,SACU8nB,aAAIt+B,GAAY,IAD1B,OAEI,OAFJ,SAEUygC,aAAM,KAFhB,OAYoB,OAZpB,EAMQjqB,EAAOjb,QANf,IAIQqlC,WAAczqB,EAJtB,EAIsBA,MAAO9a,EAJ7B,EAI6BA,KAAgB+W,EAJ7C,EAImCyuB,SAA6B7gB,EAJhE,EAIsD8gB,SACrCC,EALjB,EAKQC,QAGEr0B,EAAI,CAAEwJ,QAAO9a,OAAM+W,UAAS4N,MAAK+gB,gBAEvCrD,GAAQqD,GAVZ,mBAY0BV,cAAK,kBACnBrC,GAAUrzB,GAAWL,GAAM,YAAa,CAAE0V,WAbtD,aAYcrK,EAZd,QAegBtW,KAAKihC,QAfrB,iBAiBY,OADAjkC,aAAaC,QAAQ,eAAgBqZ,EAAItW,KAAKshC,aAhB1D,UAiBkBrC,aAAIr3B,GAAQE,eAAewF,IAjB7C,QAkBY,OAlBZ,UAkBkB2xB,aAAI71B,GAASE,gBAAgBgN,EAAItW,KAAKsT,QAlBxD,YAmBgBgD,EAAItW,KAAKsxB,QAnBzB,iBAoBgB,OApBhB,UAoBsB2N,aAAIz1B,GAASE,gBAAgB4M,EAAItW,KAAKsxB,UApB5D,gCAsBgB,OAtBhB,UAsBsB2N,aAAIz1B,GAASE,iBAAgB,IAtBnD,QAyBY,OAzBZ,UAyBkB03B,aAAM,KAzBxB,QA0BY,OA1BZ,UA0BkBnC,aAAIt+B,GAAY,IA1BlC,QA2BY,OA3BZ,UA2BkBs+B,aAAI9wB,aAAK,UA3B3B,gCA8BY,OADAnR,aAAamZ,WAAW,gBA7BpC,UA8BkBirB,aAAM,KA9BxB,QA+BY,OA/BZ,UA+BkBnC,aAAIt+B,GAAY,IA/BlC,QAgCY,OAhCZ,UAgCkBs+B,aAAI9wB,aAAK,WAhC3B,8DAmCY,KAAIkzB,SAASrhC,KAnCzB,iBAoCY,OApCZ,UAoCkBohC,aAAM,KApCxB,QAqCY,OArCZ,UAqCkBnC,aAAIt+B,GAAY,IArClC,QAyCI,OAzCJ,UAyCUygC,aAAM,KAzChB,QA0CI,OA1CJ,UA0CUnC,aAAIt+B,GAAY,IA1C1B,uDA6CA,SAAUm/B,GAAc3oB,GAAxB,oFACI,OADJ,SACU8nB,aAAIt+B,GAAY,IAD1B,OAEI,OAFJ,SAEUygC,aAAM,KAFhB,OAeoB,OAfpB,EAUQjqB,EAAOjb,QANHukB,EAJZ,EAIQxb,GACAjJ,EALR,EAKQA,KACA8a,EANR,EAMQA,MAEiB/D,EARzB,EAOQA,QACI/S,KAAQ1D,IARpB,SAccwiC,EAAO,CAAEre,MAAKzkB,OAAM8a,MAAOA,GAAgB,GAAI/D,WAd7D,SAe0BiuB,cAAK,kBACnBrC,GAAUrzB,GAAWL,GAAM,YAAa6zB,MAhBpD,YAecxoB,EAfd,QAkBgBtW,KAAKihC,QAlBrB,iBAqBY,OADAjkC,aAAaC,QAAQ,eAAgBqZ,EAAItW,KAAKshC,aApB1D,UAqBkBrC,aAAIj3B,GAAQE,eAAe42B,IArB7C,QAsBY,OAtBZ,UAsBkBG,aAAI71B,GAASE,gBAAgBgN,EAAItW,KAAKsT,QAtBxD,QAuBY,OAvBZ,UAuBkB2rB,aAAIz1B,GAASE,iBAAgB,IAvB/C,QAyBY,OAzBZ,UAyBkB03B,aAAM,KAzBxB,QA0BY,OA1BZ,UA0BkBnC,aAAIt+B,GAAY,IA1BlC,QA2BY,OA3BZ,UA2BkBs+B,aAAI9wB,aAAK,UA3B3B,gCA+BY,OADAnR,aAAamZ,WAAW,gBA9BpC,UA+BkB8oB,aAAIt+B,GAAY,IA/BlC,QAgCY,OAhCZ,UAgCkBs+B,aAAI9wB,aAAK,WAhC3B,8DAmCY,KAAIkzB,SAASrhC,KAnCzB,iBAoCY,OApCZ,UAoCkBi/B,aAAIt+B,GAAY,IApClC,QAuCQ,OAvCR,UAuCcs+B,aAAIt+B,GAAY,IAvC9B,QAyCI,OAzCJ,UAyCUs+B,aAAIt+B,GAAY,IAzC1B,uDA4CA,SAAUwe,GAAmBhI,GAA7B,8EACI,OADJ,SACU8nB,aAAIt+B,GAAY,IAD1B,OAEI,OAFJ,SAEUygC,aAAM,KAFhB,OAMoB,OANpB,EAGgDjqB,EAAOjb,QAA3C4a,EAHZ,EAGYA,MAAuBC,EAHnC,EAGmBmI,eAHnB,kBAM0B8hB,cAAK,kBACnBrC,GAAUrzB,GAAWL,GAAM,kBAAmB,CAAE6L,QAAOC,gBAPnE,YAMcT,EANd,QASgBtW,KAAKihC,UAAW3qB,EAAItW,KAAKshC,YATzC,iBAWY,OADAtkC,aAAaC,QAAQ,eAAgBqZ,EAAItW,KAAKshC,aAV1D,UAWkBF,aAAM,KAXxB,QAYY,OAZZ,UAYkBnC,aAAIt+B,GAAY,IAZlC,QAaY,OAbZ,UAakBs+B,aAAI53B,GAAaiP,EAAItW,KAAKhE,OAb5C,QAcY,OAdZ,UAckBijC,aAAI9wB,aAAK,WAd3B,gCAgBY,OAhBZ,UAgBkBizB,aAAM,KAhBxB,QAiBY,OAjBZ,UAiBkBnC,aAAIt+B,GAAY,IAjBlC,QAkBY,OAlBZ,UAkBkBs+B,aAAI72B,GAAeC,uBAAsB,IAlB3D,QAmBY,OAnBZ,UAmBkB42B,aAAIx3B,GAAc6O,EAAItW,KAAKiZ,UAnB7C,gCAsBQ,OAtBR,oCAsBcmoB,aAAM,KAtBpB,QAuBQ,OAvBR,UAuBcnC,aAAIt+B,GAAY,IAvB9B,YAwBY,KAAI0gC,SAASrhC,KAxBzB,iBA0BY,OA1BZ,UA0BkBi/B,aAAI72B,GAAeC,uBAAsB,IA1B3D,QA2BY,OA3BZ,UA2BkB42B,aAAIx3B,GAAc,KAAI45B,SAASrhC,KAAKiZ,UA3BtD,uDAgCA,SAAUsG,GAAsBpI,GAAhC,kFACI,OADJ,SACU8nB,aAAIt+B,GAAY,IAD1B,OAEI,OAFJ,SAEUygC,aAAM,KAFhB,OAMoB,OANpB,EAGkDjqB,EAAOjb,QAA7CmjB,EAHZ,EAGYA,YAAaN,EAHzB,EAGyBA,gBAAiBziB,EAH1C,EAG0CA,IAChCwiC,EAAO,CAAEzf,cAAaN,kBAAiBziB,OAJjD,kBAM0B0kC,cAAK,kBAAMrC,GAAUrzB,GAAWL,GAAM3O,EAAKwiC,MANrE,YAMcxoB,EANd,QAOgBtW,KAAKihC,UAAW3qB,EAAItW,KAAKshC,YAPzC,iBAQY,OARZ,UAQkBF,aAAM,KARxB,QASY,OATZ,UASkBnC,aAAIt+B,GAAY,IATlC,QAUY,OAVZ,UAUkBs+B,aAAI72B,GAAeC,uBAAsB,IAV3D,QAWY,OAXZ,UAWkB42B,aAAIx3B,GAAc6O,EAAItW,KAAKiZ,UAX7C,QAYY,OAZZ,UAYkBmoB,aAAM,MAZxB,QAaY,OAbZ,UAakBnC,aAAIt+B,GAAY,IAblC,QAcY,OAdZ,UAckBs+B,aAAInnB,GAAOE,cAAc,IAd3C,QAeY,OAfZ,UAekBopB,aAAM,MAfxB,QAiBY,OADApkC,aAAaC,QAAQ,eAAgBqZ,EAAItW,KAAKshC,aAhB1D,UAiBkBrC,aAAI53B,GAAaiP,EAAItW,KAAKhE,OAjB5C,QAkBY,OAlBZ,UAkBkBijC,aAAI9wB,aAAK,WAlB3B,8DAuBY,KAAIkzB,SAASrhC,KAvBzB,iBAwBY,OAxBZ,UAwBkBohC,aAAM,KAxBxB,QA0BY,OA1BZ,UA0BkBnC,aAAIt+B,GAAY,IA1BlC,QA2BY,OA3BZ,UA2BkBs+B,aAAI72B,GAAeC,uBAAsB,IA3B3D,QA4BY,OA5BZ,UA4BkB42B,aAAIx3B,GAAc,KAAI45B,SAASrhC,KAAKiZ,UA5BtD,QA6BY,OA7BZ,UA6BkBmoB,aAAM,MA7BxB,YA8BgB,KAAIC,SAASrhC,KAAK4hC,SA9BlC,iBA+BgB,OA/BhB,UA+BsB3C,aAAIt+B,GAAY,IA/BtC,QAgCgB,OAhChB,UAgCsBs+B,aAAInnB,GAAOE,cAAc,IAhC/C,QAiCgB,OAjChB,UAiCsBopB,aAAM,MAjC5B,QAkCgB,OAlChB,UAkCsBnC,aAAIt+B,GAAY,IAlCtC,QAmCgB,OAnChB,UAmCsBs+B,aAAInnB,GAAOG,eAAc,IAnC/C,QAoCgB,OApChB,UAoCsBgnB,aAAIx3B,GAAc,OApCxC,QAqCgB,OArChB,UAqCsBw3B,aAAI9wB,aAAK,mBArC/B,uDA2CA,SAAU4xB,GAAgB5oB,GAA1B,0EAGI,OAFQ7a,EAAQ6a,EAAOjb,QAAfI,IADZ,SAGU2iC,aAAIt+B,GAAY,IAH1B,OAWI,OAXJ,SAWUygC,aAAM,KAXhB,OAaoB,OAbpB,kBAa0BJ,cAAK,kBACnBrC,GAAUrzB,GAAWL,GAAZ,gBAA2B3O,OAdhD,YAacga,EAbd,QAgBgBtW,KAAKihC,QAhBrB,iBAiBY,OAjBZ,UAiBkBG,aAAM,KAjBxB,QAkBY,OAlBZ,UAkBkBnC,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS3C,EAAItW,KAAKiZ,WAtBtC,QAyBY,OAzBZ,UAyBkBgmB,aAAInnB,GAAOE,cAAc,KAzB3C,QA0BY,OA1BZ,UA0BkBopB,aAAM,MA1BxB,QA2BY,OA3BZ,UA2BkBnC,aAAInnB,GAAOG,eAAc,IA3B3C,QA4BY,OA5BZ,UA4BkBgnB,aAAInnB,GAAOE,cAAc,IA5B3C,QA6BY,OA7BZ,UA6BkBopB,aAAM,MA7BxB,QA8BY,OA9BZ,UA8BkBnC,aAAIt+B,GAAY,IA9BlC,QA+BY,OA/BZ,UA+BkBs+B,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS,MAnC7B,8DAwCY,KAAIooB,SAASrhC,OAAQ,KAAIqhC,SAASrhC,KAAK4hC,SAxCnD,iBAyCY,OAzCZ,UAyCkBR,aAAM,KAzCxB,QA0CY,OA1CZ,UA0CkBnC,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS,2CA9C7B,QAiDY,OAjDZ,UAiDkBgmB,aAAInnB,GAAOE,cAAc,KAjD3C,QAkDY,OAlDZ,UAkDkBopB,aAAM,KAlDxB,QAmDY,OAnDZ,UAmDkBnC,aAAInnB,GAAOG,eAAc,IAnD3C,QAoDY,OApDZ,UAoDkBgnB,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EAEXE,QACI,4EA1DxB,QA6DY,OA7DZ,UA6DkBmoB,aAAM,KA7DxB,QA8DY,OA9DZ,UA8DkBnC,aAAInnB,GAAOE,cAAc,IA9D3C,QA+DY,OA/DZ,UA+DkBopB,aAAM,MA/DxB,QAgEY,OAhEZ,UAgEkBnC,aAAIt+B,GAAY,IAhElC,QAiEY,OAjEZ,UAiEkBs+B,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS,MArE7B,QAwEY,OAxEZ,UAwEkBgmB,aAAI9wB,aAAK,mBAxE3B,gCA0EY,OA1EZ,UA0EkBizB,aAAM,KA1ExB,QA2EY,OA3EZ,UA2EkBnC,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS,2CA/E7B,QAkFY,OAlFZ,UAkFkBgmB,aAAInnB,GAAOE,cAAc,KAlF3C,QAmFY,OAnFZ,UAmFkBopB,aAAM,KAnFxB,QAoFY,OApFZ,UAoFkBnC,aAAInnB,GAAOG,eAAc,IApF3C,QAqFY,OArFZ,UAqFkBgnB,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EAEXE,QACI,4EA3FxB,QA8FY,OA9FZ,UA8FkBmoB,aAAM,KA9FxB,QA+FY,OA/FZ,UA+FkBnC,aAAInnB,GAAOE,cAAc,IA/F3C,QAgGY,OAhGZ,UAgGkBopB,aAAM,MAhGxB,QAiGY,OAjGZ,UAiGkBnC,aAAIt+B,GAAY,IAjGlC,QAkGY,OAlGZ,UAkGkBs+B,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS,MAtG7B,QAyGY,OAzGZ,UAyGkBgmB,aAAI9wB,aAAK,mBAzG3B,uDA8GA,SAAU6xB,GAAiB7oB,GAA3B,4EAGI,OAFM7a,EAAM6a,EAAOjb,QAAQI,IACrB8E,EAAOpE,aAAY,aAF7B,SAGUiiC,aAAIt+B,GAAY,IAH1B,OAOoB,OAPpB,SAMQ09B,GAAQj9B,GANhB,SAO0B4/B,cAAK,kBACnBrC,GAAUpzB,GAAUP,GAAX,kBAA2B1O,EAA3B,SARrB,YAOcga,EAPd,QAUgBtW,KAAKihC,QAVrB,iBAcY,OAdZ,UAckBG,aAAM,KAdxB,QAeY,OAfZ,UAekBnC,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS3C,EAAItW,KAAKiZ,WAnBtC,QAsBY,OAtBZ,UAsBkBgmB,aAAInnB,GAAOE,cAAc,KAtB3C,QAuBY,OAvBZ,UAuBkBopB,aAAM,KAvBxB,QAwBY,OAxBZ,UAwBkBnC,aAAInnB,GAAOG,eAAc,IAxB3C,QAyBY,OAzBZ,UAyBkBgnB,aAAInnB,GAAOE,cAAc,IAzB3C,QA0BY,OA1BZ,UA0BkBopB,aAAM,MA1BxB,QA2BY,OA3BZ,UA2BkBnC,aAAIt+B,GAAY,IA3BlC,QA4BY,OA5BZ,UA4BkBs+B,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS,MAhC7B,QA0CY,OALI3C,EAAItW,KAAKkuB,KAAKnX,SACdT,EAAItW,KAAKkuB,KAAKnX,SAAWT,EAAItW,KAAKkuB,KAAKnX,SAASrJ,MAAM,EAAG,IAEzD4I,EAAItW,KAAKkuB,KAAKnX,SACM,IAAhBmlB,KAAK2F,SAAwBvrB,EAAItW,KAAKkuB,KAAK5a,MAzC/D,UA0CkB2rB,aAAI5e,GAAcE,qBAAqBjK,EAAItW,KAAKkuB,OA1ClE,kEA+CQ,OA/CR,oCA+CckT,aAAM,KA/CpB,QAgDQ,OAhDR,UAgDcnC,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS,2CApDzB,QAuDQ,OAvDR,UAuDcgmB,aAAInnB,GAAOE,cAAc,KAvDvC,QAwDQ,OAxDR,UAwDcopB,aAAM,KAxDpB,QAyDQ,OAzDR,UAyDcnC,aAAInnB,GAAOG,eAAc,IAzDvC,QA4DQ,OA5DR,UA4DcgnB,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EAEXE,QAAS,0DAjEzB,QAoEQ,OApER,UAoEcmoB,aAAM,KApEpB,QAqEQ,OArER,UAqEcnC,aAAInnB,GAAOE,cAAc,IArEvC,QAsEQ,OAtER,UAsEcopB,aAAM,MAtEpB,QAuEQ,OAvER,UAuEcnC,aAAIt+B,GAAY,IAvE9B,QAwEQ,OAxER,UAwEcs+B,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS,MA5EzB,QAkFI,OADAjc,aAAaC,QAAQ,eAAgB,IAjFzC,UAkFUgiC,aAAIz3B,GAAY,KAlF1B,QAmFI,OAnFJ,UAmFUy3B,aAAI9wB,aAAK,WAnFnB,uDAsFA,SAAU8xB,GAAoB9oB,GAA9B,8FASI,OATJ,EAIQA,EAAOjb,QAJf,IAEQqW,QAAWvW,EAFnB,EAEmBA,KAAMkmB,EAFzB,EAEyBA,IAAKF,EAF9B,EAE8BA,QAASC,EAFvC,EAEuCA,MAAOlP,EAF9C,EAE8CA,QAAS0N,EAFvD,EAEuDA,IAAKE,EAF5D,EAE4DA,IACpDrkB,EAHR,EAGQA,IAIE8E,EAAOpE,aAAY,aACzBqhC,GAAQj9B,GARZ,SASU69B,aAAIt+B,GAAY,IAT1B,OAUI,OAVJ,SAUUygC,aAAM,MAVhB,OAYoB,OAZpB,mBAY0BJ,cAAK,kBACnBrC,GAAUpzB,GAAUN,GAAX,kBAA4B3O,GAAO,CACxCN,OACAkmB,MACAnP,UACAiP,UACAC,QACAxB,MACAE,WApBhB,aAYcrK,EAZd,QAuBgBtW,KAAKihC,QAvBrB,iBAwBY,OAxBZ,UAwBkBG,aAAM,KAxBxB,QAyBY,OAzBZ,UAyBkBnC,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS3C,EAAItW,KAAKiZ,WA7BtC,QAgCY,OAhCZ,UAgCkBgmB,aAAInnB,GAAOE,cAAc,KAhC3C,QAiCY,OAjCZ,UAiCkBopB,aAAM,KAjCxB,QAkCY,OAlCZ,UAkCkBnC,aAAInnB,GAAOG,eAAc,IAlC3C,QAmCY,OAnCZ,UAmCkBgnB,aAAInnB,GAAOE,cAAc,IAnC3C,QAoCY,OApCZ,UAoCkBopB,aAAM,MApCxB,QAqCY,OArCZ,UAqCkBnC,aAAIt+B,GAAY,IArClC,QAsCY,OAtCZ,UAsCkBs+B,aAAI5e,GAAcE,qBAAqBjK,EAAItW,KAAKkuB,OAtClE,QAuCY,OAvCZ,UAuCkB+Q,aAAI53B,GAAarL,IAvCnC,QAwCY,OAxCZ,UAwCkBijC,aAAI33B,GAAWC,kBAAkB+O,EAAItW,KAAKkuB,KAAKnb,UAxCjE,QAyCY,OAzCZ,UAyCkBksB,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS,MA7C7B,QAgDY,OAhDZ,UAgDkBgmB,aAAI9wB,aAAK,kBAAD,OAAmB7R,KAhD7C,gCAoDQ,OApDR,oCAoDc8kC,aAAM,MApDpB,QAqDQ,OArDR,UAqDcnC,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS,wCAzDzB,QA4DQ,OA5DR,UA4DcgmB,aAAInnB,GAAOE,cAAc,KA5DvC,QA6DQ,OA7DR,UA6DcopB,aAAM,MA7DpB,QA8DQ,OA9DR,UA8DcnC,aAAInnB,GAAOG,eAAc,IA9DvC,QAgEQ,OAhER,UAgEcgnB,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EAEXE,QACI,mEAtEpB,QAyEQ,OAzER,UAyEcmoB,aAAM,KAzEpB,QA0EQ,OA1ER,UA0EcnC,aAAInnB,GAAOE,cAAc,IA1EvC,QA2EQ,OA3ER,UA2EcopB,aAAM,MA3EpB,QA4EQ,OA5ER,UA4EcnC,aAAIt+B,GAAY,IA5E9B,QA6EQ,OA7ER,UA6Ecs+B,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS,MAjFzB,QAqFQ,OArFR,UAqFcgmB,aAAI9wB,aAAK,kBAAD,OAAmB7R,KArFzC,QAuFI,OAvFJ,UAuFU2iC,aAAI9wB,aAAK,kBAAD,OAAmB7R,KAvFrC,uDA0FA,SAAU4jC,GAAqB/oB,GAA/B,0EAGoB,OAFV7a,EAAM6a,EAAOjb,QADvB,kBAG0B8kC,cAAK,kBAAMrC,GAAUtzB,GAAKJ,GAAN,gBAAqB3O,OAHnE,YAGcga,EAHd,QAIgBtW,KAAKihC,QAJrB,iBAKY,OALZ,SAKkBG,aAAM,MALxB,OAOY,OAPZ,UAOkBnC,aACF1wB,GAAeE,sBAAf,UACOrD,GADP,YACqBkL,EAAItW,KAAK8hC,WAT9C,kEAeQ,OAfR,oCAec7C,aAAI1wB,GAAeG,yBAfjC,uDAoBA,SAAUyxB,GAAmBhpB,GAA7B,kFACI,OADJ,SACU8nB,aAAIt+B,GAAY,IAD1B,OAEI,OAFJ,SAEUygC,aAAM,MAFhB,OAKoB,OAFVn8B,EAAKkS,EAAOjb,QAHtB,kBAK0B8kC,cAAK,kBAAMrC,GAAUtzB,GAAKJ,GAAN,mBAAwBhG,OALtE,YAKcqR,EALd,QAMgBtW,KAAKihC,QANrB,iBASY,OATZ,EAOsC3qB,EAAItW,KAAKsB,KAA3BuZ,EAPpB,EAOoBA,KAAME,EAP1B,EAO0BA,IAAKE,EAP/B,EAO+BA,GAP/B,UASkBmmB,aAAM,MATxB,QAUY,OAVZ,UAUkBnC,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS3C,EAAItW,KAAKiZ,WAdtC,QAiBY,OAjBZ,UAiBkBgmB,aAAInnB,GAAOE,cAAc,KAjB3C,QAkBY,OAlBZ,UAkBkBopB,aAAM,KAlBxB,QAmBY,OAnBZ,UAmBkBnC,aAAInnB,GAAOG,eAAc,IAnB3C,QAoBY,OApBZ,UAoBkBgnB,aAAInnB,GAAOE,cAAc,IApB3C,QAqBY,OArBZ,UAqBkBopB,aAAM,MArBxB,QAsBY,OAtBZ,UAsBkBnC,aAAIt+B,GAAY,IAtBlC,QAuBY,OAvBZ,UAuBkBs+B,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS,MA3B7B,QAiCY,OAHApc,EvIpoCQ,OuIooCOge,GACfhe,EvIpoCO,MuIooCOke,GACdle,EAASD,EAAIqe,GAhCzB,UAiCkBgkB,aAAI1iC,EAAQ,CAAEse,OAAME,MAAKE,QAjC3C,QAkCY,OAlCZ,UAkCkBgkB,aAAI7c,GAAaE,uBAlCnC,QAoCY,OApCZ,UAoCkB2c,aAAI9wB,aAAK,UApC3B,gGAyCY,KAAIkzB,SAASrhC,KAzCzB,iBA4CY,OA5CZ,UA4CkBohC,aAAM,MA5CxB,QA6CY,OA7CZ,UA6CkBnC,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS,KAAIooB,SAASrhC,KAAKiZ,WAjD/C,QAoDY,OApDZ,UAoDkBgmB,aAAInnB,GAAOE,cAAc,KApD3C,QAqDY,OArDZ,UAqDkBopB,aAAM,KArDxB,QAsDY,OAtDZ,UAsDkBnC,aAAInnB,GAAOG,eAAc,IAtD3C,QAuDY,OAvDZ,UAuDkBgnB,aAAInnB,GAAOE,cAAc,IAvD3C,QAwDY,OAxDZ,UAwDkBopB,aAAM,MAxDxB,QAyDY,OAzDZ,UAyDkBnC,aAAIt+B,GAAY,IAzDlC,QA0DY,OA1DZ,UA0DkBs+B,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS,MA9D7B,QAiEY,OAjEZ,UAiEkBgmB,aAAI7c,GAAaG,uBAjEnC,QAkEY,OAlEZ,UAkEkB0c,aAAI9wB,aAAK,UAlE3B,0CAuEQ,OAvER,UAuEcizB,aAAM,MAvEpB,QAwEQ,OAxER,UAwEcnC,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS,KAAIooB,SAASrhC,KAAKiZ,WA5E3C,QA+EQ,OA/ER,UA+EcgmB,aAAInnB,GAAOE,cAAc,KA/EvC,QAgFQ,OAhFR,UAgFcopB,aAAM,KAhFpB,QAiFQ,OAjFR,UAiFcnC,aAAInnB,GAAOG,eAAc,IAjFvC,QAkFQ,OAlFR,UAkFcgnB,aAAInnB,GAAOE,cAAc,IAlFvC,QAmFQ,OAnFR,UAmFcopB,aAAM,MAnFpB,QAoFQ,OApFR,UAoFcnC,aAAIt+B,GAAY,IApF9B,QAqFQ,OArFR,UAqFcs+B,aACF/mB,GAAiBE,wBAAwB,CACrCkH,UAAU,EACVvG,WAAW,EACXE,QAAS,MAzFzB,QA4FQ,OA5FR,UA4FcgmB,aAAI7c,GAAaG,uBA5F/B,QA6FQ,OA7FR,UA6Fc0c,aAAI9wB,aAAK,UA7FvB,yFAkGA,SAAUiyB,GAAmBjpB,GAA7B,8EAGI,OAHJ,EAC+BA,EAAOjb,QAA1BkH,EADZ,EACYA,MAAOC,EADnB,EACmBA,QADnB,SAGU47B,aAAI1Z,GAAkBE,0BAAyB,IAHzD,OAII,OAJJ,SAIU2b,aAAM,MAJhB,UAMSh+B,KAASA,EAAM6J,WAAWgrB,OAAOjqB,QAAU,IANpD,iBAOQ,OAPR,SAOcixB,aACF1b,GAAaG,oBACT,4CAThB,OAaQ,OAbR,UAacub,aAAI1Z,GAAkBE,0BAAyB,IAb7D,6CAiBSpiB,KAAWA,EAAQ4J,WAAWgrB,OAAOjqB,QAAU,IAjBxD,iBAkBQ,OAlBR,UAkBcixB,aACF1b,GAAaG,oBACT,oDApBhB,QAuBQ,OAvBR,UAuBcub,aAAI1Z,GAAkBE,0BAAyB,IAvB7D,0CA8BoB,OA9BpB,oBA8B0Bub,cAAK,kBACnBrC,GAAUnzB,GAAWP,GAAM,gBAAiB,CAAE7H,QAAOC,eA/BjE,aA8BciT,EA9Bd,QAiCgBtW,KAAKihC,QAjCrB,iBAkCY,OAlCZ,UAkCkBhC,aAAI1b,GAAaE,oBAAoBnN,EAAItW,KAAK6rB,SAlChE,QAmCY,OAnCZ,UAmCkBoT,aAAI1Z,GAAkBE,0BAAyB,IAnCjE,+DAuCY,KAAI4b,SAASrhC,KAvCzB,iBAyCY,OAzCZ,UAyCkBi/B,aAAI1Z,GAAkBE,0BAAyB,IAzCjE,QA2CY,OA3CZ,UA2CkB2b,aAAM,MA3CxB,QA4CY,OA5CZ,UA4CkBnC,aACF1b,GAAaG,oBAAoB,KAAI2d,SAASrhC,KAAKiZ,UA7CnE,0FAoDA,SAASoY,GAAajuB,GAUlB,OAJOA,EACFwQ,cACA2a,QAAQ,KAAM,KACdA,QAAQ,WAAY,IAG7B,SAAU8R,GAAiBlpB,GAA3B,sFAGI,OAFQwD,EAAUxD,EAAOjb,QAAjBye,MADZ,SAGUskB,aAAIt+B,GAAY,IAH1B,OAII,OAJJ,SAIUs+B,aAAI1a,GAAgBC,0BAJ9B,OAMoB,OANpB,kBAM0Bwc,cAAK,kBAAMrC,GAAUnzB,GAAWR,GAAK,OAN/D,YAMcsL,EANd,QAOgBtW,KAAKihC,QAPrB,sBAQ0D3qB,EAAItW,KAA1CurB,EARpB,EAQoBA,QAAS6F,EAR7B,EAQ6BA,QAAShC,EARtC,EAQsCA,MAAOC,EAR7C,EAQ6CA,SAanB,OAAV1U,EArBhB,sBAuBsB4X,EAAOhH,EAAQgH,MACjB,SAAC1G,GAAD,MACI,qBAAcwF,GAAa1W,EAAM8H,OAAOrf,OAAxC,YACIuX,EAAM8H,OAAOxd,MADjB,qBAGcosB,GAAaxF,EAAOzoB,OAHlC,YAG4CyoB,EAAOnW,SA5B3E,iBAgCoB,OAhCpB,UAgC0BupB,aAAIla,GAAYE,mBAAmBsN,IAhC7D,QAiCoB,OAjCpB,UAiC0B0M,aAAI1a,GAAgBE,wBAAuB,IAjCrE,QAkCoB,OAlCpB,UAkC0Bwa,aACFta,GAAwBE,gCACpB,IApC5B,QAuCoB,OAvCpB,UAuC0Boa,aACFlb,GAAWE,kBAAkB,CACzBsH,UACA6F,UACAhC,QACAC,cA5C5B,QAgDoB,OAhDpB,UAgD0B4P,aAAIt+B,GAAY,IAhD1C,0CAmDoB,OAnDpB,UAmD0Bs+B,aAAIt+B,GAAY,IAnD1C,QAoDoB,OApDpB,UAoD0Bs+B,aAAI9wB,aAAK,qBApDnC,0CAmEY,OAnEZ,UAmEkB8wB,aAAI1a,GAAgBE,wBAAuB,IAnE7D,QAqEY,OArEZ,UAqEkBwa,aACFlb,GAAWE,kBAAkB,CACzBsH,UACA6F,UACAhC,QACAC,cA1EpB,QA8EY,OA9EZ,UA8EkB4P,aAAIt+B,GAAY,IA9ElC,8DAyFY,KAAI0gC,SAASrhC,KAzFzB,iBA2FY,OA3FZ,UA2FkBi/B,aAAIlb,GAAWG,qBA3FjC,QA4FY,OA5FZ,UA4FkB+a,aAAI1a,GAAgBE,wBAAuB,IA5F7D,yFAoGA,SAAU6b,GAAmBnpB,GAA7B,8EAEI,OAFJ,EAC8CA,EAAOjb,QAArC2zB,EADhB,EACY5qB,GAAsB5B,EADlC,EAC4B2I,KAD5B,SAEUizB,aAAI1Z,GAAkBE,0BAAyB,IAFzD,OAGI,OAHJ,SAGU2b,aAAM,MAHhB,UAIS/9B,KAAWA,EAAQ4J,WAAWgrB,OAAOjqB,QAAU,IAJxD,iBAKQ,OALR,SAKcixB,aACF9Z,GAAaG,oBACT,kDAPhB,OAUQ,OAVR,UAUc2Z,aAAI1Z,GAAkBE,0BAAyB,IAV7D,0CAgBoB,OAhBpB,UAeQ4Y,GAAQrhC,aAAY,cAf5B,UAgB0BgkC,cAAK,kBACnBrC,GAAUnzB,GAAWP,GAAM,gBAAiB,CAAE4kB,aAAYxsB,eAjBtE,aAgBciT,EAhBd,QAmBgBtW,KAAKihC,QAnBrB,iBAoBY,OApBZ,UAoBkBhC,aAAI9Z,GAAaE,oBAAoB/O,EAAItW,KAAKwvB,SApBhE,QAsBY,OAtBZ,UAsBkByP,aAAI1Z,GAAkBE,0BAAyB,IAtBjE,+DAyBY,KAAI4b,SAASrhC,KAzBzB,iBA2BY,OA3BZ,UA2BkBi/B,aACF9Z,GAAaG,oBAAoB,KAAI+b,SAASrhC,KAAKiZ,UA5BnE,QA8BY,OA9BZ,UA8BkBgmB,aAAI1Z,GAAkBE,0BAAyB,IA9BjE,0FAsCA,SAAUqM,GAAmB3a,GAA7B,8EAEI,OAFJ,EAC6CA,EAAOjb,QAAxCyyB,EADZ,EACYA,cAAqBtrB,EADjC,EAC2B2I,KAD3B,SAEUizB,aAAI1Z,GAAkBE,0BAAyB,IAFzD,OAGI,OAHJ,SAGU2b,aAAM,MAHhB,UAIS/9B,KAAWA,EAAQ4J,WAAWgrB,OAAOjqB,QAAU,IAJxD,iBAKQ,OALR,SAKcixB,aACFtZ,GAAaG,oBACT,kDAPhB,OAUQ,OAVR,UAUcmZ,aAAI1Z,GAAkBE,0BAAyB,IAV7D,0CAiBoB,OAjBpB,UAgBQ4Y,GAAQrhC,aAAY,cAhB5B,UAiB0BgkC,cAAK,kBACnBrC,GAAUnzB,GAAWP,GAAM,gBAAiB,CACxC0jB,gBACAtrB,eApBhB,aAiBciT,EAjBd,QAwBgBtW,KAAKihC,QAxBrB,iBAyBY,OAzBZ,UAyBkBhC,aAAItZ,GAAaE,oBAAoBvP,EAAItW,KAAK+hC,gBAzBhE,QA2BY,OA3BZ,UA2BkB9C,aAAI1Z,GAAkBE,0BAAyB,IA3BjE,yEA+BY,KAAI4b,SAASrhC,KA/BzB,iBAiCY,OAjCZ,UAiCkBi/B,aACFtZ,GAAaG,oBAAoB,KAAIub,SAASrhC,KAAKiZ,UAlCnE,QAoCY,OApCZ,UAoCkBgmB,aAAI1Z,GAAkBE,0BAAyB,IApCjE,0FA4CA,SAAUiJ,GAAmBvX,GAA7B,0EAEI,OADQwX,EAAkBxX,EAAOjb,QAAzByyB,cADZ,SAEUsQ,aAAIt+B,GAAY,IAF1B,OAGI,OAHJ,SAGUygC,aAAM,MAHhB,OAMoB,OANpB,SAKQ/C,GAAQrhC,aAAY,cAL5B,SAM0BgkC,cAAK,kBACnBrC,GAAUnzB,GAAWP,GAAM,gBAAiB,CACxC0jB,qBARhB,YAMcrY,EANd,QAYgBtW,KAAKihC,QAZrB,iBAaY,OAbZ,UAakBhC,aAAIlZ,GAAaE,oBAAoB3P,EAAItW,KAAKgiC,gBAbhE,QAeY,OAfZ,UAekB/C,aAAIt+B,GAAY,IAflC,wEAmBY,KAAI0gC,SAASrhC,KAnBzB,iBAoBY,OApBZ,UAoBkBi/B,aACFlZ,GAAaG,oBAAoB,KAAImb,SAASrhC,KAAKiZ,UArBnE,QAuBY,OAvBZ,UAuBkBgmB,aAAIt+B,GAAY,IAvBlC,uDAoCA,SAAU4/B,GAAmBppB,GAA7B,gFAGI,OAHJ,EACmCA,EAAOjb,QAA9BkH,EADZ,EACYA,MAAOC,EADnB,EACmBA,QAAS4B,EAD5B,EAC4BA,GAD5B,SAGUg6B,aAAI1Z,GAAkBE,0BAAyB,IAHzD,OAII,OAJJ,SAIU2b,aAAM,MAJhB,UAMSh+B,KAASA,EAAM6J,WAAWgrB,OAAOjqB,QAAU,IANpD,iBAOQ,OAPR,SAOcixB,aACF1b,GAAaG,oBACT,4CAThB,OAaQ,OAbR,UAacub,aAAI1Z,GAAkBE,0BAAyB,IAb7D,6CAiBSpiB,KAAWA,EAAQ4J,WAAWgrB,OAAOjqB,QAAU,IAjBxD,iBAkBQ,OAlBR,UAkBcixB,aACF1b,GAAaG,oBACT,oDApBhB,QAuBQ,OAvBR,UAuBcub,aAAI1Z,GAAkBE,0BAAyB,IAvB7D,0CA8BoB,OA9BpB,oBA8B0Bub,cAAK,kBACnBrC,GAAUnzB,GAAWP,GAAM,gBAAiB,CAAE7H,QAAOC,UAAS4B,UA/B1E,aA8BcqR,EA9Bd,QAiCgBtW,KAAKihC,QAjCrB,iBAkCY,OAlCZ,UAkCkBhC,aAAItb,GAAaE,oBAAoBvN,EAAItW,KAAKiiC,gBAlChE,QAmCY,OAnCZ,UAmCkBhD,aAAI1Z,GAAkBE,0BAAyB,IAnCjE,+DAuCY,KAAI4b,SAASrhC,KAvCzB,iBAyCY,OAzCZ,UAyCkBi/B,aAAI1Z,GAAkBE,0BAAyB,IAzCjE,QA2CY,OA3CZ,UA2CkB2b,aAAM,MA3CxB,QA4CY,OA5CZ,UA4CkBnC,aACFtb,GAAaG,oBAAoB,KAAIud,SAASrhC,KAAKiZ,UA7CnE,0FAqDA,SAAUunB,GAAmBrpB,GAA7B,0EAEI,OADQlS,EAAOkS,EAAOjb,QAAd+I,GADZ,SAEUg6B,aAAIt+B,GAAY,IAF1B,OAGI,OAHJ,SAGUygC,aAAM,MAHhB,OAMoB,OANpB,SAKQ/C,GAAQrhC,aAAY,cAL5B,SAM0BgkC,cAAK,kBACnBrC,GAAUnzB,GAAWP,GAAM,gBAAiB,CACxChG,UARhB,YAMcqR,EANd,QAYgBtW,KAAKihC,QAZrB,iBAcY,OAdZ,UAckBhC,aAAIt+B,GAAY,IAdlC,QAeY,OAfZ,UAekBs+B,aAAI9wB,aAAK,WAf3B,QAgBY,OAhBZ,UAgBkB8wB,aACFxY,GAAaE,oBAAoB,CAC7Bub,cAAe5rB,EAAItW,KAAKkiC,cACxBC,eAAgB7rB,EAAItW,KAAKmiC,kBAnB7C,wEAyBY,KAAId,SAASrhC,KAzBzB,iBA0BY,OA1BZ,UA0BkBi/B,aACFxY,GAAaG,oBAAoB,KAAIya,SAASrhC,KAAKiZ,UA3BnE,QA6BY,OA7BZ,UA6BkBgmB,aAAIt+B,GAAY,IA7BlC,uDAmCA,SAAU8/B,GAAoBtpB,GAA9B,wEAGoB,OAFVlS,EAAKkS,EAAOjb,QADtB,kBAG0B8kC,cAAK,kBACnBrC,GAAUnzB,GAAWP,GAAM,kBAAmB,CAAEhG,UAJ5D,kBAMgBjF,KAAKihC,QANrB,gBAOY,OAPZ,SAOkBhC,aAAIhY,GAAcE,qBAAqBliB,IAPzD,gHAcA,SAAUy7B,GAAWvpB,GAArB,gFAMoB,OANpB,EAEwCA,EAAOjb,QAAnCq1B,EAFZ,EAEYA,SAAUje,EAFtB,EAEsBA,MAAOkc,EAF7B,EAE6BA,OAF7B,SAKQ6O,GAAQrhC,aAAY,cAL5B,SAM0BgkC,cAAK,kBACnBrC,GAAUnzB,GAAWP,GAAM,gBAAiB,CACxC4kB,WAAY0B,EAAS7b,IACrB8Z,SACAlc,aAVhB,YAMcgD,EANd,QAagBtW,KAAKihC,QAbrB,gBAcY,OAdZ,SAckBhC,aACF5X,GAAKE,YAAY,CACbF,KAAM/Q,EAAItW,KAAKqnB,KACf+a,WAAY9rB,EAAItW,KAAKoiC,WACrBhT,MAAO9Y,EAAItW,KAAKovB,MAChBC,SAAU/Y,EAAItW,KAAKqvB,YAnBvC,gHA6BA,SAAUsR,GAAcxpB,GAAxB,gFAOoB,OAPpB,EAGwCA,EAAOjb,QAAnCq1B,EAHZ,EAGYA,SAAUje,EAHtB,EAGsBA,MAAOkc,EAH7B,EAG6BA,OAH7B,SAMQ6O,GAAQrhC,aAAY,cAN5B,SAO0BgkC,cAAK,kBACnBrC,GAAUnzB,GAAWP,GAAM,mBAAoB,CAC3C4kB,WAAY0B,EAAS7b,IACrB8Z,SACAlc,aAXhB,YAOcgD,EAPd,QAcgBtW,KAAKihC,QAdrB,gBAeY,OAfZ,SAekBhC,aACFxX,GAAQE,eAAe,CACnBF,QAASnR,EAAItW,KAAKynB,QAClB4a,cAAe/rB,EAAItW,KAAKqiC,cACxBjT,MAAO9Y,EAAItW,KAAKovB,MAChBC,SAAU/Y,EAAItW,KAAKqvB,YApBvC,gHA8BA,SAAU8D,GAAiBhc,GAA3B,gFAQoB,OARpB,EAG4CA,EAAOjb,QAAvC2zB,EAHZ,EAGYA,WAAYvc,EAHxB,EAGwBA,MAAOsc,EAH/B,EAG+BA,SAH/B,SAOQyO,GAAQrhC,aAAY,cAP5B,SAQ0BgkC,cAAK,kBACnBrC,GAAUnzB,GAAWP,GAAM,cAAe,CACtC4kB,aACAD,WACAtc,aAZhB,YAQcgD,EARd,QAegBtW,KAAKihC,QAfrB,gBAgBY,OAhBZ,SAgBkBhC,aACFpX,GAAWE,kBAAkB,CACzBV,KAAM/Q,EAAItW,KAAKqnB,KACf+a,WAAY9rB,EAAItW,KAAKoiC,WACrBhT,MAAO9Y,EAAItW,KAAKovB,MAChBC,SAAU/Y,EAAItW,KAAKqvB,YArBvC,gHA+BA,SAAU+D,GAAoBjc,GAA9B,gFAOoB,OAPpB,EAG4CA,EAAOjb,QAAvC2zB,EAHZ,EAGYA,WAAYvc,EAHxB,EAGwBA,MAAOsc,EAH/B,EAG+BA,SAH/B,SAMQyO,GAAQrhC,aAAY,cAN5B,SAO0BgkC,cAAK,kBACnBrC,GAAUnzB,GAAWP,GAAM,iBAAkB,CACzC4kB,aACAD,WACAtc,aAXhB,YAOcgD,EAPd,QAcgBtW,KAAKihC,QAdrB,gBAeY,OAfZ,SAekBhC,aACFhX,GAAcE,qBAAqB,CAC/BV,QAASnR,EAAItW,KAAKynB,QAClB4a,cAAe/rB,EAAItW,KAAKqiC,cACxBjT,MAAO9Y,EAAItW,KAAKovB,MAChBC,SAAU/Y,EAAItW,KAAKqvB,YApBvC,gHA8BA,SAAUuR,GAAUzpB,GAApB,kFAMI,OALMoa,EAAWpa,EAAOjb,QAEpBoX,EAEAie,EAFAje,MAHR,EAKQie,EADArD,KAAQpX,EAJhB,EAIgBA,MAAO9a,EAJvB,EAIuBA,KAJvB,SAMUijC,aAAIt+B,GAAY,IAN1B,OAQI,OARJ,SAQUygC,aAAM,MARhB,OAUoB,OAVpB,kBAU0BJ,cAAK,kBACnBrC,GAAUnzB,GAAWP,GAAM,MAAO,CAAEqI,QAAOwD,QAAO9a,YAX9D,YAUcsa,EAVd,QAagBtW,KAAKihC,QAbrB,iBAcY,OAdZ,UAckBhC,aAAIt+B,GAAY,IAdlC,QAgBY,OAhBZ,UAgBkBs+B,aAAIxW,GAAIE,WAAWrS,EAAItW,KAAKiZ,UAhB9C,8DAmBY,KAAIooB,SAASrhC,KAnBzB,iBAoBY,OApBZ,UAoBkBi/B,aAAIt+B,GAAY,IApBlC,QAqBY,OArBZ,UAqBkBs+B,aAAIxW,GAAIG,WAAW,KAAIyY,SAASrhC,KAAKiZ,UArBvD,uDA2BA,SAAU4nB,GAAY1pB,GAAtB,4EAGI,OAFMoa,EAAWpa,EAAOjb,QAChBoX,EAAUie,EAAVje,MAFZ,SAGU2rB,aAAIt+B,GAAY,IAH1B,OAKI,OALJ,SAKUygC,aAAM,MALhB,OAOoB,OAPpB,kBAO0BJ,cAAK,kBACnBrC,GAAUnzB,GAAWP,GAAM,QAAS,CAAEqI,aARlD,YAOcgD,EAPd,QAUgBtW,KAAKihC,QAVrB,iBAWY,OAXZ,UAWkBhC,aAAIt+B,GAAY,IAXlC,QAaY,OAbZ,UAakBs+B,aAAIpW,GAAME,aAAazS,EAAItW,KAAKiZ,UAblD,8DAgBY,KAAIooB,SAASrhC,KAhBzB,iBAiBY,OAjBZ,UAiBkBi/B,aAAIt+B,GAAY,IAjBlC,QAkBY,OAlBZ,UAkBkBs+B,aAAIpW,GAAMG,aAAa,KAAIqY,SAASrhC,KAAKiZ,UAlB3D,uDAwBA,SAAU6nB,KAAV,kEACI,OADJ,SACUwB,aAAKjD,IADf,OAEI,OAFJ,SAEUkD,aACFh0B,GAAeC,wBAAwBvS,KACvCikC,IAJR,OAMI,OANJ,SAMUqC,aAAW,cAAenD,IANpC,OAOI,OAPJ,SAOUmD,a9H3vDI,Q8H2vDchD,IAP5B,OAQI,OARJ,UAQUgD,aAAWz7B,EAASE,kBAAkB/K,KAAMqjC,IARtD,QASI,OATJ,UASUiD,aC5vDU,cD4vDc/C,IATlC,QAUI,OAVJ,UAUU+C,aAAW,iBAAkB9C,IAVvC,QAWI,OAXJ,UAWU8C,aAAW,SAAUnsB,IAX/B,QAYI,OAZJ,UAYUmsB,aAAW,eAAgB7C,IAZrC,QAaI,OAbJ,UAaU6C,aAAW,cAAe5C,IAbpC,QAcI,OAdJ,UAcU4C,aAAW,iBAAkB3C,IAdvC,QAeI,OAfJ,UAeU2C,aAAW36B,GAAQC,iBAAiB5L,KAAM4jC,IAfpD,QAgBI,OAhBJ,UAgBU0C,aAAWv6B,GAAQC,iBAAiBhM,KAAM6jC,IAhBpD,QAiBI,OAjBJ,UAiBUyC,alIpwDiB,qBkIowDcxO,IAjBzC,QAkBI,OAlBJ,UAkBUwO,aACFngB,GAAaC,sBAAsBpmB,KACnCkkC,IApBR,QAuBI,OAvBJ,UAuBUoC,aACFliB,GAAcC,uBAAuBrkB,KACrCgkC,IAzBR,QA4BI,OA5BJ,UA4BUsC,aAAWtiB,GAAWC,oBAAoBjkB,KAAM+jC,IA5B1D,QA6BI,OA7BJ,UA6BUuC,aACFrqB,GAAiBC,0BAA0Blc,KAC3C8jC,IA/BR,QAiCI,OAjCJ,UAiCUwC,aACFj6B,GAAaC,sBAAsBtM,KACnCkjB,IAnCR,QAqCI,OArCJ,UAqCUojB,aACF75B,GAAgBC,yBAAyB1M,KACzCsjB,IAvCR,QAyCI,OAzCJ,UAyCUgjB,aACFhf,GAAaC,sBAAsBvnB,KACnCmkC,IA3CR,QA6CI,OA7CJ,UA6CUmC,aAAWxe,GAAWC,oBAAoB/nB,KAAMokC,IA7C1D,QA8CI,OA9CJ,UA8CUkC,aACFpd,GAAaC,sBAAsBnpB,KACnCqkC,IAhDR,QAkDI,OAlDJ,UAkDUiC,aACF5c,GAAaC,sBAAsB3pB,KACnC61B,IApDR,QAsDI,OAtDJ,UAsDUyQ,aACFxc,GAAaC,sBAAsB/pB,KACnCyyB,IAxDR,QA0DI,OA1DJ,UA0DU6T,aACF5e,GAAaC,sBAAsB3nB,KACnCskC,IA5DR,QA8DI,OA9DJ,UA8DUgC,aACF9b,GAAaC,sBAAsBzqB,KACnCukC,IAhER,QAmEI,OAnEJ,UAmEU+B,aACFtb,GAAcC,uBAAuBjrB,KACrCwkC,IArER,QAwEI,OAxEJ,UAwEU8B,aAAWlb,GAAKC,cAAcrrB,KAAMykC,IAxE9C,QAyEI,OAzEJ,UAyEU6B,aAAW9a,GAAQC,iBAAiBzrB,KAAM0kC,IAzEpD,QA2EI,OA3EJ,UA2EU4B,aAAW1a,GAAWC,oBAAoB7rB,KAAMk3B,IA3E1D,QA4EI,OA5EJ,UA4EUoP,aACFta,GAAcC,uBAAuBjsB,KACrCm3B,IA9ER,QAiFI,OAjFJ,UAiFUmP,aAAW9Z,GAAIC,aAAazsB,KAAM2kC,IAjF5C,QAkFI,OAlFJ,UAkFU2B,aAAW1Z,GAAMC,eAAe7sB,KAAM4kC,IAlFhD,yCAqFeC,U,SEv0DT0B,GAAe,CACjB/nB,SAAU,CACNI,KAAM,GACNE,IAAK,GACLE,GAAI,GACJpc,EAAG,KACH7C,KAAM,MAEVwW,SAAU,GACVrR,iBAAiB,EACjBI,MAAO,KACPjF,IAAK,OACLqF,YAAY,EACZC,YAAY,GA2GD6gC,GAxGK,WAAmC,IAAlCvjC,EAAiC,uDAAzBsjC,GAAcrrB,EAAW,uCAClD,OAAQA,EAAOlb,MACX,IDpBS,WCoBO,IAAD,EACekb,EAAOjb,QADtB,EACH2e,KADG,EACGE,IADH,EACQE,GACnB,OAAO,eACA/b,GAGX,IAAK,YACD,IAAMqC,EAAQ4V,EAAOjb,QACrB,OAAO,2BACAgD,GADP,IAEIqC,UAIR,IAAK,WAAa,IAAD,EACmB4V,EAAOjb,QAA/BF,EADK,EACLA,KAAM6e,EADD,EACCA,KAAME,EADP,EACOA,IAAKE,EADZ,EACYA,GAEzB,OADAynB,QAAQC,IAAI,WAAYxrB,EAAOjb,SACxB,2BACAgD,GADP,IAEIub,SAAS,2BACFvb,EAAMub,UADL,IAEJI,OACAE,MACAE,KACAjf,WAKZ,IAAK,eACD,OAAO,eACAkD,GAIX,IAAK,uBACD,IAAMsT,EAAW2E,EAAOjb,QACxB,OAAO,2BACAgD,GADP,IAEIsT,SAAS,aAAKA,KAItB,IAAK,UACD,IAAMlW,EAAM6a,EAAOjb,QACnB,OAAO,2BACAgD,GADP,IAEI5C,QAIR,IAAK,kBACD,IAAMqF,EAAawV,EAAOjb,QAC1B,OAAO,2BACAgD,GADP,IAEIyC,eAIR,IAAK,cACD,OAAO,eACAzC,GAIX,IAAK,sBACD,IAAMlD,EAAOmb,EAAOjb,QACpB,OAAO,2BACAgD,GADP,IAEIub,SAAS,2BACFvb,EAAMub,UADL,IAEJze,SAEJ2F,YAAY,IAIpB,IAAK,kBACD,OAAO,2BACAzC,GADP,IAEI0C,WAAYuV,EAAOjb,UAQ3B,IAAK,yBACD,IAAIsW,EAAWtT,EAAMsT,SAASnF,KAAI,SAAAoI,GAAO,OAAIA,EAAQC,MAAQyB,EAAOjb,QAAQwZ,OAE5E,OADAgtB,QAAQC,IAAI,YAAanwB,GAClB,2BACAtT,GADP,IAEIsT,aAIR,QACI,OAAOtT,ICpGbsjC,GAAe,CACjBjwB,QAAS,CACLvW,KAAM,KACN+W,QAAS,KACT8N,IAAK,KACLvN,MAAO,KACPge,SAAS,GAEbnwB,iBAAiB,EACjBI,MAAO,KACPyd,aAAa,EACbtd,SAAU,KACVkf,cAAe,CACXD,IAAK,KACL7J,MAAO,KACP/D,QAAS,KACT/W,KAAM,KACN0lC,aAAc,MAElBhhB,cAAe,CACXD,IAAK,KACL3J,MAAO,KACPmL,MAAO,KACPjmB,KAAM,OAsMC4mC,GAlMM,WAAmC,IAAlC1jC,EAAiC,uDAAzBsjC,GAAcrrB,EAAW,uCACnD,OAAQA,EAAOlb,MACX,IjI/CM,QiIgDF,OAAO,eACAiD,GAeX,IjI/Dc,gBiIgEV,IAAMlD,EAAOmb,EAAOjb,QACpB,OAAO,2BACAgD,GADP,IAEIqT,QAAQ,2BACDrT,EAAMqT,SADN,IAEHvW,SAEJmF,iBAAiB,EACjBI,MAAO,OAGf,KAAK+F,GAAWC,oBAAoBtL,KAChC,OAAO,2BACAiD,GADP,IAEIqT,QAAQ,2BACDrT,EAAMqT,SADN,IAEHQ,QAASoE,EAAOjb,YAI5B,IjInFa,eiIoFT,IAAME,EAAM+a,EAAOjb,QACnB,OAAO,2BACAgD,GADP,IAEIiC,iBAAiB,EACjBI,MAAOnF,EAAI6c,UAGnB,IjI1FgB,kBiI2FZ,IAAM7c,EAAM+a,EAAOjb,QACnB,OAAO,2BACAgD,GADP,IAEIqC,MAAOnF,IAGf,IAAK,gBACD,IAAMsF,EAAWyV,EAAOjb,QAExB,OAAO,2BACAgD,GADP,IAEIwC,aAGR,IAAK,iBACD,OAAO,2BACAxC,GADP,IAEIiC,iBAAiB,EACjBO,SAAU,KACV6Q,QAAQ,2BACDrT,EAAMqT,SADN,IAEHvW,KAAM,KACN+W,QAAS,KACT8N,IAAK,KACLvN,MAAO,KACPge,SAAS,IAEb1Q,cAAe,CACXD,IAAK,KACL7J,MAAO,KACP/D,QAAS,KACT/W,KAAM,KACN0lC,aAAc,MAElBhhB,cAAe,CACXD,IAAK,KACL3J,MAAO,KACPmL,MAAO,KACPjmB,KAAM,QAKlB,KAAK4L,GAAQE,iBAAiB7L,KAE1B,OADAymC,QAAQC,IAAIxrB,EAAOjb,QAAS,MACrB,2BACAgD,GADP,IAEI0hB,cAAc,2BACP1hB,EAAM0hB,eACNzJ,EAAOjb,SAEdqW,QAAQ,2BACDrT,EAAMqT,SADN,IAEHvW,KAAMmb,EAAOjb,QAAQF,KACrB+W,QAASoE,EAAOjb,QAAQ6W,UAE5B5R,iBAAiB,EACjB/E,IAAK,OAIb,KAAK4L,GAAQE,iBAAiBjM,KAE1B,OADAymC,QAAQC,IAAIxrB,EAAOjb,QAAS,MACrB,2BACAgD,GADP,IAEI0hB,cAAc,2BACP1hB,EAAM0hB,eACNzJ,EAAOjb,SAEdqW,QAAQ,2BACDrT,EAAMqT,SADN,IAEHvW,KAAMmb,EAAOjb,QAAQF,KACrB+W,QAASoE,EAAOjb,QAAQ6W,UAE5B2N,cAAc,2BACPxhB,EAAMwhB,eACNvJ,EAAOjb,SAEdiF,iBAAiB,EACjB/E,IAAK,OAIb,KAAKgM,GAAeC,wBAAwBpM,KACxC,OAAO,2BACAiD,GADP,IAEI8f,YAAa7H,EAAOjb,UAI5B,KAAK4M,GAAUC,mBAAmB9M,KAC9B,OAAO,2BACAiD,GADP,IAEIwhB,cAAc,2BACPxhB,EAAMwhB,eADA,IAETD,IAAKtJ,EAAOjb,YAKxB,KAAK8M,GAAUC,mBAAmBhN,KAC9B,OAAO,2BACAiD,GADP,IAEI0hB,cAAc,2BACP1hB,EAAM0hB,eADA,IAETD,IAAKxJ,EAAOjb,YAKxB,KAAKgN,GAAUC,mBAAmBlN,KAC9B,OAAO,2BACAiD,GADP,IAEIqT,QAAQ,2BACDrT,EAAMqT,SADN,IAEHsO,IAAK1J,EAAOjb,YAKxB,KAAKkN,GAASE,kBAAkBrN,KAC5B,OAAO,2BACAiD,GADP,IAEIqT,QAAQ,2BACDrT,EAAMqT,SADN,IAEHe,MAAO6D,EAAOjb,YAK1B,KAAKsN,GAASE,kBAAkBzN,KAC5B,OAAO,2BACAiD,GADP,IAEIqT,QAAQ,2BACDrT,EAAMqT,SADN,IAEH+e,QAASna,EAAOjb,YAK5B,QACI,OAAOgD,ICzObsjC,GAAe,CACjB3gC,aAAa,EACbL,UAAU,EACV+X,WAAW,GAyCAspB,GAtCM,WAAmC,IAAlC3jC,EAAiC,uDAAzBsjC,GAAcrrB,EAAW,uCACnD,OAAQA,EAAOlb,MACX,ItIVW,asIWP,OAAO,eACAiD,GAGX,ItIdmB,qBsIef,OAAO,2BACAA,GADP,IAEI2C,aAAa,IAGrB,ItInBY,csIoBR,OAAO,2BACA3C,GADP,IAEI2C,aAAa,IAIrB,ItIzBa,esI0BT,OAAO,2BACA3C,GADP,IAEIsC,SAAU2V,EAAOjb,UAGzB,IAAK,cACD,OAAO,2BACAgD,GADP,IAEIqa,UAAWpC,EAAOjb,UAI1B,QACI,OAAOgD,ICxCbsjC,GAAe,CACjBnpB,kBAAkB,EAClBzS,KAAM,KACNpF,UAAU,EACV+X,WAAW,GA8CAupB,GA3CW,WAAmC,IAAlC5jC,EAAiC,uDAAzBsjC,GAAcrrB,EAAW,uCACxD,OAAQA,EAAOlb,MACX,KAAKsS,GAAeC,wBAAwBvS,KACxC,OAAO,2BACAiD,GADP,IAEIqa,WAAW,IAGnB,KAAKhL,GAAeE,wBAAwBxS,KACxC,OAAO,2BACAiD,GADP,IAEIma,kBAAkB,EAClBE,WAAW,EACX3S,KAAMuQ,EAAOjb,UAGrB,KAAKqS,GAAeG,wBAAwBzS,KACxC,OAAO,2BACAiD,GADP,IAEIma,kBAAkB,EAClBE,WAAW,EACX3S,KAAM,OAiBd,QACI,OAAO1H,ICzCbsjC,GAAe,CACjB1jC,MAAM,EACN8d,aAAc,KAEd5P,SAAU,KACV6F,aAAa,EAEbkwB,YAAa,IAoCFC,GAjCS,WAAmC,IAAlC9jC,EAAiC,uDAAzBsjC,GAAcrrB,EAAW,uCACtD,OAAQA,EAAOlb,MACX,KAAK8C,GAAQA,UAAU9C,KACnB,OAAO,2BACAiD,GADP,IAEIJ,KAAMqY,EAAOjb,UAGrB,KAAK0N,GAAgBA,kBAAkB3N,KACnC,OAAO,2BACAiD,GADP,IAEI0d,aAAczF,EAAOjb,UAG7B,KAAK2N,GAAYA,cAAc5N,KAC3B,OAAO,2BACAiD,GADP,IAEI8N,SAAUmK,EAAOjb,UAIzB,KAAK4N,GAAWA,aAAa7N,KACzB,OAAO,2BACAiD,GADP,IAEI2T,YAAasE,EAAOjb,UAI5B,QACI,OAAOgD,IC3CbsjC,GAAe,CACjBjqB,KAAM,EACNS,QAAQ,EAERsG,UAAU,EACVvG,WAAW,EACXmR,OAAQ,SACRjR,QAAS,IAsEEgqB,GAnEO,WAAmC,IAAlC/jC,EAAiC,uDAAzBsjC,GAAcrrB,EAAW,uCACpD,OAAQA,EAAOlb,MACX,KAAK6b,GAAOC,gBAAgB9b,KACxB,OAAO,eACAiD,GAGX,KAAK4Y,GAAOE,gBAAgB/b,KACxB,OAAO,2BACAiD,GADP,IAEIqZ,KAAMpB,EAAOjb,QACb8c,QAAQ,IAGhB,KAAKlB,GAAOG,gBAAgBhc,KACxB,OAAO,2BACAiD,GADP,IAEIqZ,KAAM,EACNS,OAAQ7B,EAAOjb,UAAW,IAIlC,KAAKgc,GAAiBC,0BAA0Blc,KAQhD,KAAKgkB,GAAWC,oBAAoBjkB,KAQpC,KAAKokB,GAAcC,uBAAuBrkB,KACtC,OAAO,2BACAiD,GADP,IAEIogB,SAAUnI,EAAOjb,QAAQojB,SACzBvG,WAAW,IAInB,KAAKb,GAAiBE,0BAA0Bnc,KAC5C,OAAO,2BACAiD,GADP,IAEIogB,SAAUnI,EAAOjb,QAAQojB,SACzBvG,UAAW5B,EAAOjb,QAAQ6c,UAC1BE,QAAS9B,EAAOjb,QAAQ+c,UAGhC,KAAKf,GAAiBG,0BAA0Bpc,KAC5C,OAAO,2BACAiD,GADP,IAEIogB,SAAUnI,EAAOjb,QACjB6c,WAAW,IAInB,QACI,OAAO7Z,I,UC1EbsjC,GAAe,CACjB3iB,QAAS,CACL/I,MAAO,GACP9a,KAAM,GACN+W,QAAS,GACTgE,SAAU,GACViL,QAAS,GACTC,MAAO,GACPC,IAAK,KAyBEghB,GArBQ,WAAmC,IAAlChkC,EAAiC,uDAAzBsjC,GAAcrrB,EAAW,uCACrD,OAAQA,EAAOlb,MACX,KAAKokB,GAAcC,uBAAuBrkB,KACtC,OAAO,eACAiD,GAGX,KAAKmhB,GAAcE,uBAAuBtkB,KACtC,OAAO,2BACAiD,GADP,IAEI2gB,QAAQ,2BACD3gB,EAAM2gB,SACN1I,EAAOjb,WAItB,QACI,OAAOgD,IC5BbsjC,GAAe,CAEjBjpB,WAAW,GA6BA4pB,GA1Ba,WAAmC,IAAlCjkC,EAAiC,uDAAzBsjC,GAAcrrB,EAAW,uCAC1D,OAAQA,EAAOlb,MACX,KAAKmmB,GAAaC,sBAAsBpmB,KACpC,OAAO,2BACAiD,GADP,IAEIqa,WAAW,IAGnB,KAAK6I,GAAaE,sBAAsBrmB,KAMxC,KAAKmmB,GAAaG,sBAAsBtmB,KACpC,OAAO,2BACAiD,GADP,IAEIqa,WAAW,IAInB,QACI,OAAOra,IC5BbsjC,GAAe,CACjBxjC,QAAQ,EACRgU,YAAY,EACZC,aAAa,GAgEFmwB,GA7DK,WAAmC,IAAlClkC,EAAiC,uDAAzBsjC,GAAcrrB,EAAW,uCAClD,OAAQA,EAAOlb,MACX,KAAK0S,GAAQC,iBAAiB3S,KAC1B,OAAO,2BACAiD,GADP,IAEIF,QAAQ,IAGhB,KAAK2P,GAAQE,iBAAiB5S,KAC1B,OAAO,2BACAiD,GADP,IAEIF,OAAQmY,EAAOjb,QACf8W,YAAY,EACZC,aAAa,IAGrB,KAAKtE,GAAQG,iBAAiB7S,KAC1B,OAAO,2BACAiD,GADP,IAEIF,QAAQ,IAIhB,KAAK+P,GAAcC,uBAAuB/S,KACtC,OAAO,2BACAiD,GADP,IAEIF,QAAQ,EACRgU,YAAY,IAGpB,KAAKjE,GAAcE,uBAAuBhT,KACtC,OAAO,2BACAiD,GADP,IAEIF,QAAQ,EACRgU,YAAY,EAEZC,aAAa,IAGrB,KAAKlE,GAAcG,uBAAuBjT,KACtC,OAAO,2BACAiD,GADP,IAEI8T,YAAY,EACZhU,QAAQ,IAIhB,KAAKmQ,GAAeE,wBAAwBpT,KACxC,OAAO,2BACAiD,GADP,IAEIF,QAAQ,EACRiU,YAAakE,EAAOjb,QACpB8W,YAAY,IAIpB,QACI,OAAO9T,IC/BbsjC,GAAe,CAEjB1jC,MAAM,EACNysB,QAAS,GACTrB,OAAQ,GACR3oB,OAAO,EACPgY,WAAW,EACXsa,mBAAmB,EACnBzC,QAAS,GACTG,SAAU,KACV/G,kBAAkB,EAClBsE,mBAAmB,EACnBD,eAAe,EACf0E,yBAAyB,EACzBnE,MAAO,GACPC,SAAU,GACVT,UAAU,EACVwB,UAAU,EACViT,YAAY,EACZ7R,gBAAgB,GA6uBL8R,GA1uBM,WAAmC,IAAlCpkC,EAAiC,uDAAzBsjC,GAAcrrB,EAAW,uCACnD,OAAQA,EAAOlb,MACX,KAAKknB,GAAgBC,yBAAyBnnB,KAC1C,OAAO,eACAiD,GAGX,KAAKikB,GAAgBE,yBAAyBpnB,KAC1C,OAAO,2BACAiD,GADP,IAEIJ,KAAMqY,EAAOjb,UAGrB,KAAKinB,GAAgBG,yBAAyBrnB,KAC1C,OAAO,2BACAiD,GADP,IAEIJ,MAAM,IAId,KAAKqlB,GAAUC,mBAAmBnoB,KAC9B,OAAO,eACAiD,GAGX,KAAKilB,GAAUE,mBAAmBpoB,KAC9B,OAAO,2BACAiD,GADP,IAEIgrB,OAAQ/S,EAAOjb,UAGvB,KAAKioB,GAAUG,mBAAmBroB,KAMlC,KAAKsnB,GAAaC,sBAAsBvnB,KACpC,OAAO,eACAiD,GAGX,KAAKqkB,GAAaE,sBAAsBxnB,KAEpC,OAAO,2BACAiD,GADP,IAEIgrB,OAAQ,6CACR3oB,OAAO,EACPgqB,QAASrsB,EAAMqsB,UAGvB,KAAKhI,GAAaG,sBAAsBznB,KACpC,OAAO,2BACAiD,GADP,IAEIqC,OAAO,EACP2oB,OAAQ/S,EAAOjb,UAIvB,KAAK6nB,GAAWC,oBAAoB/nB,KAChC,OAAO,eACAiD,GAGX,KAAK6kB,GAAWE,oBAAoBhoB,KAAO,IAAD,EACQkb,EAAOjb,QAA7CqvB,EAD8B,EAC9BA,QAAS6F,EADqB,EACrBA,QAAShC,EADY,EACZA,MAAOC,EADK,EACLA,SAC3BkU,EAAiBhY,EAAQ5X,UACzB6vB,EAAkBpS,EAAQqS,MAAK,SAAC3P,EAAG4P,GACrC,OAAOA,EAAEtU,MAAQ0E,EAAE1E,SAEvB,OAAO,2BACAlwB,GADP,IAEIqsB,QAASgY,EACTnS,QAASoS,EACTpU,QACAC,aAGR,KAAKtL,GAAWG,oBAAoBjoB,KAChC,OAAO,eACAiD,GAIX,KAAKqlB,GAAgBC,yBAAyBvoB,KAC1C,OAAO,2BACAiD,GADP,IAEIqa,WAAW,IAGnB,KAAKgL,GAAgBE,yBAAyBxoB,KAC1C,OAAO,2BACAiD,GADP,IAEIqa,UAAWpC,EAAOjb,UAG1B,KAAKqoB,GAAgBG,yBAAyBzoB,KAC1C,OAAO,2BACAiD,GADP,IAEIqa,WAAW,IAInB,KAAKoL,GAAwBC,iCAAiC3oB,KAC1D,OAAO,2BACAiD,GADP,IAEI20B,mBAAmB,IAG3B,KAAKlP,GAAwBE,iCAAiC5oB,KAC1D,OAAO,2BACAiD,GADP,IAEI20B,kBAAmB1c,EAAOjb,UAGlC,KAAKyoB,GAAwBG,iCAAiC7oB,KAC1D,OAAO,2BACAiD,GADP,IAEI20B,mBAAmB,IAI3B,KAAK9O,GAAYC,qBAAqB/oB,KAClC,OAAO,eACAiD,GAGX,KAAK6lB,GAAYE,qBAAqBhpB,KAClC,OAAO,2BACAiD,GADP,IAEIqyB,SAAUpa,EAAOjb,UAGzB,KAAK6oB,GAAYG,qBAAqBjpB,KAMtC,KAAKkpB,GAAaC,sBAAsBnpB,KACpC,OAAO,eACAiD,GAGX,KAAKimB,GAAaE,sBAAsBppB,KACpC,IAAMuzB,EAASrY,EAAOjb,QAEhBqvB,EAAUrsB,EAAMqsB,QAAQle,KAAI,SAACwe,GAC/B,OAAIA,EAAOnW,MAAQ8Z,EAAOK,WACf,2BACAhE,GADP,IAEIO,QAASP,EAAOO,QAAU,IAEpBP,KAGlB,OAAO,2BACA3sB,GADP,IAEIgrB,OAAQ,4CACR3oB,OAAO,EACP6vB,QAASlyB,EAAMkyB,QAAQhkB,OAAOoiB,GAC9BjE,YAGR,KAAKpG,GAAaG,sBAAsBrpB,KACpC,OAAO,2BACAiD,GADP,IAEIqC,OAAO,EACP2oB,OAAQ/S,EAAOjb,UAIvB,KAAKqpB,GAAkBC,2BAA2BvpB,KAC9C,OAAO,eACAiD,GAGX,KAAKqmB,GAAkBE,2BAA2BxpB,KAC9C,OAAO,2BACAiD,GADP,IAEIsrB,iBAAkBrT,EAAOjb,UAGjC,KAAKqpB,GAAkBG,2BAA2BzpB,KAC9C,OAAO,2BACAiD,GADP,IAEIsrB,kBAAkB,IAI1B,KAAK7E,GAAaC,sBAAsB3pB,KACpC,OAAO,eACAiD,GAGX,KAAKymB,GAAaE,sBAAsB5pB,KACpC,IAAM8lC,EAAgB5qB,EAAOjb,QACvBk1B,EAAUlyB,EAAMkyB,QAAQ/jB,KAAI,SAACmiB,GAAD,OAC9BA,EAAO9Z,MAAQqsB,EAAcrsB,IAAMqsB,EAAgBvS,KAEvD,OAAO,2BACAtwB,GADP,IAEIgrB,OAAQ,6CACR3oB,OAAO,EACP6vB,YAGR,KAAKzL,GAAaG,sBAAsB7pB,KACpC,OAAO,2BACAiD,GADP,IAEIgrB,OAAQ/S,EAAOjb,QACfqF,OAAO,IAIf,KAAKwkB,GAAaC,sBAAsB/pB,KACpC,OAAO,eACAiD,GAGX,KAAK6mB,GAAaE,sBAAsBhqB,KACpC,IAAM+lC,EAAgB7qB,EAAOjb,QAC7BwmC,QAAQC,IAAI,sBAAuBX,GACnC,IAAM5Q,EAAUlyB,EAAMkyB,QAAQ7jB,QAC1B,SAACiiB,GAAD,OAAYA,EAAO9Z,MAAQssB,EAActsB,KAAO8Z,KAE9CjE,EAAUrsB,EAAMqsB,QAAQle,KAAI,SAACwe,GAC/B,OAAIA,EAAOnW,MAAQssB,EAAcnS,WACtB,2BACAhE,GADP,IAEIO,QAASP,EAAOO,QAAU,IAEpBP,KAElB,OAAO,2BACA3sB,GADP,IAEIgrB,OAAQ,6CACR3oB,OAAO,EACP6vB,UACAvC,eAAe,EACftD,YAGR,KAAKxF,GAAaG,sBAAsBjqB,KACpC,OAAO,2BACAiD,GADP,IAEIgrB,OAAQ/S,EAAOjb,QACfqF,OAAO,EACPstB,eAAe,IAIvB,KAAK1I,GAAsBE,+BAA+BpqB,KACtD,OAAO,2BACAiD,GADP,IAEI4vB,kBAAmB3X,EAAOjb,UAIlC,KAAKqqB,GAAiBC,0BAA0BvqB,KAC5C,OAAO,2BACAiD,GADP,IAEI2vB,cAAe1X,EAAOjb,UAI9B,KAAKynB,GAAaE,sBAAsB5nB,KACpC,IAAMgmC,EAAgB9qB,EAAOjb,QACvBqvB,EAAUrsB,EAAMqsB,QAAQle,KAAI,SAACwe,GAAD,OAC9BA,EAAOnW,MAAQusB,EAAcvsB,IAAMusB,EAAgBpW,KAEvD,OAAO,2BACA3sB,GADP,IAEIgrB,OAAQ,4DACR3oB,OAAO,EACPgqB,QAASA,IAGjB,KAAK5H,GAAaG,sBAAsB7nB,KACpC,OAAO,2BACAiD,GADP,IAEIqC,OAAO,EACP2oB,OAAQ/S,EAAOjb,UAIvB,KAAKuqB,GAAaE,sBAAsB1qB,KAAO,IAEvCimC,EAEA/qB,EAAOjb,QAFPgmC,cAGE3W,EAAUrsB,EAAMqsB,QAAQhe,QAC1B,SAACse,GAAD,OAAYA,EAAOnW,MAAQwsB,EAAcxsB,KAAOmW,KAGpD,OAAO,2BACA3sB,GADP,IAGIqC,OAAO,EACPgqB,UACAgI,yBAAyB,IAKjC,KAAK9M,GAAaG,sBAAsB3qB,KACpC,OAAO,2BACAiD,GADP,IAEIqC,OAAO,EACP2oB,OAAQ/S,EAAOjb,UAIvB,KAAK2qB,GAAsBE,+BAA+B9qB,KACtD,OAAO,2BACAiD,GADP,IAEIq0B,wBAAyBpc,EAAOjb,UAIxC,KAAK+qB,GAAcC,uBAAuBjrB,KACtC,OAAO,eACAiD,GAGX,KAAK+nB,GAAcE,uBAAuBlrB,KACtC,IAAMgJ,EAAKkS,EAAOjb,QACZqvB,EAAUrsB,EAAMqsB,QAAQle,KAAI,SAACwe,GAC/B,OAAIA,EAAOnW,MAAQzQ,EACR,2BACA4mB,GADP,IAEIQ,MAAOR,EAAOQ,MAAQ,IAGnBR,KAGf,OAAO,2BACA3sB,GADP,IAEIqsB,YAIR,KAAKlE,GAAKC,cAAcrrB,KACpB,OAAO,eACAiD,GAGX,KAAKmoB,GAAKE,cAActrB,KAAO,IAAD,EACEkb,EAAOjb,QAA3BkzB,EADkB,EAClBA,MAAOC,EADW,EACXA,SACThI,EAAOlQ,EAAOjb,QAAQmrB,KAAOlQ,EAAOjb,QAAQmrB,KAAO,KACnD+a,EAAajrB,EAAOjb,QAAQkmC,WAC5BjrB,EAAOjb,QAAQkmC,WACf,KACN,OAAO,2BACAljC,GADP,IAEImwB,SAAUA,EAUVD,MAAOA,EAUP7D,SACIlE,GAASA,EAAKuI,UAAawS,EAwBrBA,EACAljC,EAAMqsB,QAAQle,KAAI,SAACwe,GAEf,OADA6W,QAAQC,IAAI,qBAAsBP,GAC9BA,EAAWvS,aAAehE,EAAOnW,IAC1B,2BACAmW,GADP,IAEIuD,MAAOvD,EAAOuD,MAAQ,IAEhBvD,KAElB3sB,EAAMqsB,QAjCNrsB,EAAMqsB,QAAQle,KAAI,SAACwe,GACf,OACIxE,EAAKwI,aAAehE,EAAOnW,KACT,KAAlB2R,EAAKuI,SAEE,2BACA/D,GADP,IAEIuD,MAAOvD,EAAOuD,MAAQ,EACtBC,SACInwB,EAAMmwB,SAASxhB,WACX,SAAC4Z,GAAD,OACIJ,EAAK/T,QACDmU,EAAQnU,OACZ+T,EAAKwI,aACDpI,EAAQoI,YACS,KAArBpI,EAAQmI,aACX,EACC/D,EAAOwD,SAAW,EAClBxD,EAAOwD,WAGXxD,OAgDpC,KAAKpE,GAAQC,iBAAiBzrB,KAC1B,OAAO,eACAiD,GAGX,KAAKuoB,GAAQE,iBAAiB1rB,KAAO,IAAD,EACJkb,EAAOjb,QAA3BkzB,EADwB,EACxBA,MAAOC,EADiB,EACjBA,SACT5H,EAAUtQ,EAAOjb,QAAQurB,QACzBtQ,EAAOjb,QAAQurB,QACf,KACA4a,EAAgBlrB,EAAOjb,QAAQmmC,cAC/BlrB,EAAOjb,QAAQmmC,cACf,KACN,OAAO,2BACAnjC,GADP,IAEIkwB,MAAOA,EAQPC,SAAUA,EAUV9D,SACI9D,GAAYA,EAAQmI,UAAayS,EAwB3BA,EACAnjC,EAAMqsB,QAAQle,KAAI,SAACwe,GACf,OAAIwW,EAAcxS,aAAehE,EAAOnW,IAC7B,2BACAmW,GADP,IAEIwD,SAAUxD,EAAOwD,SAAW,IAEtBxD,KAElB3sB,EAAMqsB,QAhCNrsB,EAAMqsB,QAAQle,KAAI,SAACwe,GACf,OACIpE,EAAQoI,aAAehE,EAAOnW,KACT,KAArB+R,EAAQmI,SAED,2BACA/D,GADP,IAEIwD,SAAUxD,EAAOwD,SAAW,EAC5BD,MACIlwB,EAAMkwB,MAAMvhB,WACR,SAACwZ,GAAD,OACIA,EAAK/T,QACDmU,EAAQnU,OACZ+T,EAAKwI,aACDpI,EAAQoI,YACM,KAAlBxI,EAAKuI,aACR,EACC/D,EAAOuD,MAAQ,EACfvD,EAAOuD,QAGXvD,OA6CpC,KAAKhE,GAAWE,oBAAoB9rB,KAChC,IAAMorB,EAAOlQ,EAAOjb,QAAQmrB,KAAOlQ,EAAOjb,QAAQmrB,KAAO,KACnD+a,EAAajrB,EAAOjb,QAAQkmC,WAC5BjrB,EAAOjb,QAAQkmC,WACf,KACN,OAAO,2BACAljC,GADP,IAEImwB,SAAUlY,EAAOjb,QAAQmzB,SAEzBD,MAAOjY,EAAOjb,QAAQkzB,MACtBgC,QACI/J,GAAQA,EAAKuI,WAAawS,EACpBljC,EAAMkyB,QAAQ/jB,KAAI,SAACmiB,GACf,OACInI,EAAKwI,aAAeL,EAAOK,YAC3BxI,EAAKuI,WAAaJ,EAAO9Z,IAElB,2BACA8Z,GADP,IAEIJ,MAAOI,EAAOJ,MAAQ,EACtBC,SACInwB,EAAMmwB,SAASxhB,WACX,SAAC4Z,GAAD,OACIJ,EAAK/T,QACDmU,EAAQnU,OACZ+T,EAAKwI,aACDpI,EAAQoI,YACZxI,EAAKuI,WACDnI,EAAQmI,aACf,EACCJ,EAAOH,SAAW,EAClBG,EAAOH,WAGXG,KAElB4S,EACAljC,EAAMkyB,QAAQ/jB,KAAI,SAACmiB,GAEf,OADAkT,QAAQC,IAAI,qBAAsBP,GAE9BA,EAAWvS,aAAeL,EAAOK,YACjCuS,EAAWxS,WAAaJ,EAAO9Z,IAExB,2BACA8Z,GADP,IAEIJ,MAAOI,EAAOJ,MAAQ,IAEhBI,KAElBtwB,EAAMkyB,UAIxB,KAAKnJ,GAAcE,uBAAuBlsB,KACtC,IAAMwrB,EAAUtQ,EAAOjb,QAAQurB,QACzBtQ,EAAOjb,QAAQurB,QACf,KACA4a,EAAgBlrB,EAAOjb,QAAQmmC,cAC/BlrB,EAAOjb,QAAQmmC,cACf,KACN,OAAO,2BACAnjC,GADP,IAEImwB,SAAUlY,EAAOjb,QAAQmzB,SAEzBD,MAAOjY,EAAOjb,QAAQkzB,MACtBgC,QACI3J,GAAWA,EAAQmI,WAAayS,EAC1BnjC,EAAMkyB,QAAQ/jB,KAAI,SAACmiB,GACf,OACI/H,EAAQoI,aAAeL,EAAOK,YAC9BpI,EAAQmI,WAAaJ,EAAO9Z,IAErB,2BACA8Z,GADP,IAEIH,SAAUG,EAAOH,SAAW,EAC5BD,MACIlwB,EAAMkwB,MAAMvhB,WACR,SAACwZ,GAAD,OACIA,EAAK/T,QACDmU,EAAQnU,OACZ+T,EAAKwI,aACDpI,EAAQoI,YACZxI,EAAKuI,WACDnI,EAAQmI,aACf,EACCJ,EAAOJ,MAAQ,EACfI,EAAOJ,QAGXI,KAElB6S,EACAnjC,EAAMkyB,QAAQ/jB,KAAI,SAACmiB,GACf,OACI6S,EAAczS,WAAaJ,EAAO9Z,KAClC8Z,EAAOK,aAAewS,EAAcxS,WAE7B,2BACAL,GADP,IAEIH,SAAUG,EAAOH,SAAW,IAEtBG,KAElBtwB,EAAMkyB,UAIxB,KAAK/I,GAAUE,mBAAmBtsB,KAAO,IAEjCsvB,EADIzuB,EAAQqa,EAAOjb,QAAfY,IAqBR,MAnBY,MAARA,EACAyuB,EAAUrsB,EAAMqsB,QAAQkY,MAAK,SAAC3P,EAAG4P,GAC7B,OAAOvV,KAAOuV,EAAEtV,WACXC,GAAG,oBACH2N,KAAK7N,KAAO2F,EAAE1F,WAAWC,GAAG,oBAEtB,MAARvxB,EACPyuB,EAAUrsB,EAAMqsB,QAAQkY,MAAK,SAAC3P,EAAG4P,GAC7B,OAAO5P,EAAE1E,QAAUsU,EAAEtU,MACfsU,EAAErX,MAAQqX,EAAEtU,OAAS0E,EAAEzH,MAAQyH,EAAE1E,OACjCsU,EAAEtU,MAAQ0E,EAAE1E,SAEP,MAARtyB,IACPyuB,EAAUrsB,EAAMqsB,QAAQkY,MAAK,SAAC3P,EAAG4P,GAC7B,OAAO5P,EAAE1H,UAAYsX,EAAEtX,QACjB0H,EAAE1H,QAAUsX,EAAErX,OAASqX,EAAEtX,QAAU0H,EAAEzH,OACrCyH,EAAE1H,QAAUsX,EAAEtX,YAGrB,2BACAltB,GADP,IAEIqsB,YAIR,KAAKtC,GAAOE,gBAAgBltB,KACxB,OAAO,2BACAiD,GADP,IAEI0vB,SAAUzX,EAAOjb,UAIzB,KAAKmtB,GAAYE,qBAAqBttB,KAClC,OAAO,2BACAiD,GADP,IAEIkxB,SAAUjZ,EAAOjb,UAIzB,KAAKutB,GAAkBE,2BAA2B1tB,KAC9C,OAAO,2BACAiD,GADP,IAEIsyB,eAAgBra,EAAOjb,UAI/B,KAAK2tB,GAAcE,uBAAuB9tB,KACtC,OAAO,2BACAiD,GADP,IAEImkC,WAAYlsB,EAAOjb,UAI3B,KAAKusB,GAAIE,aAAa1sB,KAOtB,KAAKwsB,GAAIG,aAAa3sB,KAQtB,KAAK4sB,GAAME,eAAe9sB,KAO1B,KAAK4sB,GAAMG,eAAe/sB,KACtB,OAAO,2BACAiD,GADP,IAEIgrB,OAAQ/S,EAAOjb,QACfqF,OAAO,IAIf,QACI,OAAOrC,IChxBbsjC,GAAe,CACjBvpB,QAAS,GACT/F,KAAM,GACNjO,GAAI,GACJyxB,QAAS,GACToC,QAAQ,EACRnC,WAAY,GACZC,YAAa,GACb3zB,SAAS,EACT63B,gBAAiB,GACjBC,gBAAgB,EAChBpB,UAAW,GACXd,MAAO,GACPqC,cAAe,EACfC,iBAAiB,EACjB1L,WAAY,IA0HDkU,GAvHU,WAAmC,IAAlCzkC,EAAiC,uDAAzBsjC,GAAcrrB,EAAW,uCACvD,OAAQA,EAAOlb,MACX,KAAKsT,GAAWC,oBAAoBvT,KAChC,OAAO,eACAiD,GAGX,KAAKqQ,GAAWE,oBAAoBxT,KAChC,IAAMgd,EAAU9B,EAAOjb,QACvB,OAAO,2BACAgD,GADP,IAEI+Z,YAIR,KAAK9I,GAAMC,eAAenU,KACtB,OAAO,eACAiD,GAGX,KAAKiR,GAAME,eAAepU,KACtB,IAAMgJ,EAAKkS,EAAOjb,QAClB,OAAO,2BACAgD,GADP,IAEI+F,OAIR,KAAK0K,GAAQC,iBAAiB3T,KAC1B,OAAO,eACAiD,GAGX,KAAKyQ,GAAQE,iBAAiB5T,KAC1B,OAAO,2BACAiD,GADP,IAEIgU,KAAMhU,EAAMgU,KAAK9F,OAAO+J,EAAOjb,WAIvC,KAAK6T,GAAWE,oBAAoBhU,KAChC,OAAO,2BACAiD,GADP,IAEIgU,KAAMiE,EAAOjb,UAIrB,KAAKqU,GAAcE,uBAAuBxU,KACtC,IAAMqX,EAAQ6D,EAAOjb,QACfy6B,EAAaz3B,EAAMw3B,QAAQnE,MAAK,SAACqG,GAAD,OAASA,EAAItlB,QAAUA,KAK7D,OAAO,2BACApU,GADP,IAEIy3B,eAKR,KAAKhmB,GAAWE,oBAAoB5U,KAChC,IAAIy6B,EAAUvf,EAAOjb,QAErB,OAAO,2BACAgD,GADP,IAEIw3B,YAIR,KAAK3lB,GAAWE,oBAAoBhV,KAChC,OAAO,2BACAiD,GADP,IAEI+D,QAASkU,EAAOjb,UAIxB,KAAKiV,GAAmBE,4BAA4BpV,KAChD,OAAO,2BACAiD,GADP,IAEI47B,gBAAiB3jB,EAAOjb,QACxB6+B,gBAAgB,IAGxB,KAAK5pB,GAAmBG,4BAA4BrV,KAChD,OAAO,2BACAiD,GADP,IAEI47B,gBAAiB,GACjBC,gBAAgB,IAIxB,KAAKxpB,GAAcE,uBAAuBxV,KACtC,OAAO,2BACAiD,GADP,IAEIgU,KAAMiE,EAAOjb,UAIrB,KAAK6V,GAAiBE,0BAA0BhW,KAC5C,OAAO,2BACAiD,GADP,IAEIg8B,cAAe/jB,EAAOjb,UAI9B,KAAKyV,GAAcE,uBAAuB5V,KACtC,OAAO,2BACAiD,GADP,IAEIi8B,gBAAiBhkB,EAAOjb,QACxBg/B,cAAe,IAIvB,QACI,OAAOh8B,ICjIb0kC,GAAiBC,eAEjBC,GAAUC,YAAgB,CAC5BziC,KAAMmhC,GACNhhC,MAAOohC,GACPzhC,KAAMwhC,GACN9vB,SAAUkwB,GACVlrB,OAAQmrB,GACRpjB,QAASqjB,GACT5pB,WAAYwpB,GACZ1gB,aAAc+gB,GACdhkC,KAAMikC,GACN7Y,MAAO+Y,GACPnwB,UAAWwwB,GACXK,OAAQC,aAAcjH,MAaXkH,GAVA,WACX,IAAMA,EAAQC,aAAe,CACzBL,WACAM,WAAY,CAACR,GAAgBS,aAAiBrH,OAGlD,OADA4G,GAAeU,IAAIxD,IACZoD,EAEGK,G,oBCrBCxmC,GApBDymC,aAAY,CACxB7lC,MAAO,CACL8lC,QAAS,UACTC,UAAW,UACXnjC,MAAO,UACPwB,UAAW,UACX4hC,iBAAiB,UACjBC,MAAM,uBAERC,UAAW,CACTrwB,WAAY,UAEdswB,MAAO,CACLjiC,aAAc,EACdP,WAAY,UACZ3D,MAAO,UACPomC,YAAa,a,UCCjBC,IAASjvB,OACL,kBAAC,IAAMkvB,WAAP,KACI,kBAAC,IAAD,CAAUf,MAAOA,IAEb,kBAACgB,GAAA,EAAD,CAAennC,MAAOA,IAClB,kBAAConC,GAAA,EAAD,MACA,kBAAC,GAAD,SAKZnT,SAASmC,eAAe,U","file":"static/js/main.d6e6cc8f.chunk.js","sourcesContent":["export const getCode = (q) => ({\r\n    type: \"GET_CODE\",\r\n    payload: {\r\n        q,\r\n    },\r\n});\r\n\r\nexport const updateCode = (name) => ({\r\n    type: \"UPDATE_CODE\",\r\n    payload: name,\r\n});\r\n\r\nexport const setAuthenticated = (val) => ({\r\n    type: \"SET_AUTH\",\r\n    payload: val,\r\n});\r\n\r\nexport const setError = (err) => ({\r\n    type: \"SET_ERROR\",\r\n    payload: err,\r\n});\r\n\r\nexport const setUrl = (url) => ({\r\n    type: \"SET_URL\",\r\n    payload: url,\r\n});\r\n\r\nexport const setCode = (val) => ({\r\n    type: \"SET_CODE\",\r\n    payload: val,\r\n});\r\n\r\nexport const directToCode = () => ({\r\n    type: \"DIRECT_TO_CODE\",\r\n    payload: null,\r\n});\r\n\r\nexport const getProjects = () => ({\r\n    type: \"GET_PROJECTS\",\r\n    payload: null,\r\n});\r\n\r\nexport const getProjectsSuccess = (value) => ({\r\n    type: \"GET_PROJECTS_SUCCESS\",\r\n    payload: value,\r\n});\r\n\r\nexport const changeName = (val) => ({\r\n    type: \"CHANGE_NAME\",\r\n    payload: val,\r\n});\r\n\r\nexport const changeNameSuccess = (val) => ({\r\n    type: \"CHANGE_NAME_SUCCESS\",\r\n    payload: val,\r\n});\r\n\r\nexport const setIsChanging = (val) => ({\r\n    type: \"SET_IS_CHANGING\",\r\n    payload: val,\r\n});\r\n\r\nexport const deleteProject = () => ({\r\n    type: \"DELETE_PROJECT\",\r\n    payload: null,\r\n});\r\n\r\nexport const deleteProjectSuccess = (val) => ({\r\n    type: \"DELETE_PROJECT\",\r\n    payload: val,\r\n});\r\n\r\nexport const setIsDeleting = (val) => ({\r\n    type: \"SET_IS_DELETING\",\r\n    payload: val,\r\n});\r\n","export const CODE = 'code-';\r\nexport const HTML = \"html\";\r\nexport const CSS = \"css\";\r\nexport const JS = \"js\";","import { CODE } from \"../../constant/localStorage\"\r\n\r\nexport const setLocal = (key, value) => {\r\n    localStorage.setItem(`${CODE}${key}`, JSON.stringify(value));\r\n}","import { useEffect, useState } from 'react'\r\nimport { setLocal } from '../common/LocalStorage/setLocal';\r\nimport { CODE } from '../constant/localStorage';\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const FULLKEY = CODE + key\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(FULLKEY)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n  \r\n  useEffect(() => {\r\n    localStorage.setItem(FULLKEY, JSON.stringify(value))\r\n   \r\n  }, [FULLKEY, value])\r\n\r\n  return [value, setValue]\r\n}\r\n","import { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"codemirror/addon/edit/closebrackets\";\r\nimport \"codemirror/addon/edit/closetag\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/mode/css/css\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/theme/material.css\";\r\nimport React, { useState } from \"react\";\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { updateCode } from \"../actions/code\";\r\nimport cs from \"classnames\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    codeBlock: {\r\n        overflowY: `visible !important`,\r\n        height: `300px !important`,\r\n    },\r\n    edit: {\r\n        height: `39px !important`,\r\n        // \"&.collapsed .CodeMirror-scroll\": {\r\n        //     position: `absolute !important`,\r\n        //     overflow: `hidden !important`,\r\n        // },\r\n    },\r\n}));\r\n\r\nconst Code = (props) => {\r\n    const {\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange,\r\n        color,\r\n        pro,\r\n        updateCodeCreator,\r\n        q,\r\n    } = props;\r\n    const [open, setOpen] = useState(true);\r\n\r\n    function handleChange(editor, data, value) {\r\n        onChange(value);\r\n    }\r\n\r\n    const status = useSelector((state) => state.view.status);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n            className={cs(`editor-container ${open ? \"\" : \"collapsed\"}`, {\r\n                [classes.edit]: open === false && status === true,\r\n            })}\r\n        >\r\n            <div className=\"editor-title\" style={{ color, fontWeight: 650 }}>\r\n                {displayName}\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"expand-collapse-btn\"\r\n                    onClick={() => {\r\n                        setOpen((prevOpen) => !prevOpen);\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        icon={open ? faCompressAlt : faExpandAlt}\r\n                    />\r\n                </button>\r\n            </div>\r\n            <ControlledEditor\r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className={cs(\"code-mirror-wrapper\", {\r\n                    [classes.codeBlock]: status === true,\r\n                })}\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    theme: \"material\",\r\n                    lineNumbers: true,\r\n                    autoCloseBrackets: true,\r\n                    autoCloseTags: true,\r\n                    autoFormat: true,\r\n                    autoCorrect: true,\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapActionsToProps = {\r\n    updateCodeCreator: updateCode,\r\n};\r\n\r\nexport default connect(null, mapActionsToProps)(Code);\r\n","import { CLOSE_MODAL, OPEN_MODAL, OPEN_MODAL_SUCCESS, SET_PROGRESS } from \"../constant/modal\";\r\n\r\nexport const openModal = () => ({\r\n    type: OPEN_MODAL,\r\n    payload: null,\r\n});\r\n\r\nexport const openModalSuccess = () => ({\r\n    type: OPEN_MODAL_SUCCESS,\r\n    payload: null,\r\n});\r\n\r\nexport const closeModal = () => ({\r\n    type: CLOSE_MODAL,\r\n    payload: null,\r\n});\r\n\r\nexport const setProgress = (val) => ({\r\n    type: SET_PROGRESS,\r\n    payload: val,\r\n});\r\n\r\nexport const clickModal = (name) => ({\r\n    type: 'CLICK_MODAL',\r\n    payload: name,\r\n});\r\n\r\nexport const setLoading = (val) => ({\r\n    type: \"SET_LOADING\",\r\n    payload: val,\r\n})\r\n","const OPEN_MODAL = \"OPEN_MODAL\";\r\nconst OPEN_MODAL_SUCCESS = \"OPEN_MODAL_SUCCESS\";\r\nconst CLOSE_MODAL = \"CLOSE_MODAL\";\r\nconst SET_PROGRESS = \"SET_PROGRESS\";\r\n\r\nexport { OPEN_MODAL, CLOSE_MODAL, OPEN_MODAL_SUCCESS, SET_PROGRESS };\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport {\r\n    Modal,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    LinearProgress,\r\n    Alert,\r\n    Tooltip,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    changeName,\r\n    deleteProject,\r\n    setCode,\r\n    setError,\r\n    setIsChanging,\r\n    setIsDeleting,\r\n    updateCode,\r\n} from \"../actions/code\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport { closeModal } from \"../actions/modal\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     modal: {\r\n//         top: `57%`,\r\n//         left: `50%`,\r\n//         transform: `translate(-50%, -90%)`,\r\n//         position: `absolute`,\r\n//         width: 400,\r\n//         backgroundColor: theme.palette.background.paper,\r\n//         border: `2px solid rgb(167, 202, 237)`,\r\n//         boxShadow: theme.shadows[5],\r\n//         // padding: theme.spacing(2, 4, 4),\r\n//         outline: `none`,\r\n//         padding: 0,\r\n//         borderRadius: `8px 8px`,\r\n//         \"@media(max-width: 442px)\": {\r\n//             width: `95% !important`,\r\n//         },\r\n//         \"@media(max-height: 560px)\": {\r\n//             // width: `95% !important`,\r\n//             top: `70% !important`,\r\n//         },\r\n//     },\r\n//     header: {\r\n//         backgroundColor: theme.color.textColor,\r\n//         color: theme.color.textColor,\r\n//         padding: theme.spacing(2),\r\n//         display: \"flex\",\r\n//         alignItems: \"center\",\r\n//         justifyContent: \"space-between\",\r\n//     },\r\n//     title: {\r\n//         color: theme.color.textColor,\r\n//         fontWeight: 700,\r\n\r\n//         width: `100%`,\r\n//     },\r\n//     content: {\r\n//         padding: theme.spacing(2),\r\n//     },\r\n//     textField: {\r\n//         width: `100%`,\r\n//     },\r\n//     textFieldOld: {\r\n//         display: `block`,\r\n//         minWidth: `100%`,\r\n//         // marginBottom: `50px`,\r\n//     },\r\n//     box: {\r\n//         margin: `0 15px 10px 0`,\r\n//     },\r\n//     typography1: {\r\n//         margin: `5px 0 0 0px`,\r\n//         fontSize: `15.5px`,\r\n//         color: theme.color.error,\r\n//     },\r\n//     progress: {\r\n//         color: \"#ff6278\",\r\n//     },\r\n//     typography2: {\r\n//         textTransform: `none`,\r\n//         width: `max-content`,\r\n//         color: `#1ba700`,\r\n//         fontWeight: `bold`,\r\n//         fontSize: `13px !important`,\r\n//     },\r\n//     typography3: {\r\n//         textTransform: `none`,\r\n//         width: `max-content`,\r\n//         color: `#29b117`,\r\n//         fontSize: `16px !important`,\r\n//         textDecoration: `none`,\r\n//         \"& > a:hover\": {\r\n//             color: `#5dd0e8`,\r\n//         },\r\n//     },\r\n//     box1: {\r\n//         marginLeft: `7px`,\r\n//         marginTop: `9x`,\r\n//     },\r\n//     box2: {\r\n//         marginTop: `9x`,\r\n//         marginLeft: `5px`,\r\n//     },\r\n//     icon: {\r\n//         marginTop: 5,\r\n//         cursor: `pointer`,\r\n//     },\r\n// }));\r\n\r\nconst NameProject = (props) => {\r\n    const {\r\n        modalIsOpen,\r\n        handleCloseModal,\r\n        isAuthenticated,\r\n        err,\r\n        progress,\r\n        updateCodeCreator,\r\n        errCode,\r\n        setCodeCreator,\r\n        nameCode,\r\n        isChanging,\r\n        changeNameCreator,\r\n        setIsChangingCreator,\r\n        isDeleting,\r\n        deleteProjectCreator,\r\n        setIsDeletingCreator,\r\n        setErrorCreator,\r\n        closeModalCreator,\r\n    } = props;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            top: !isChanging ? `57%` : \"62% !important\",\r\n            left: `50%`,\r\n            transform: `translate(-50%, -90%)`,\r\n            position: `absolute`,\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: `2px solid rgb(167, 202, 237)`,\r\n            boxShadow: theme.shadows[5],\r\n            // padding: theme.spacing(2, 4, 4),\r\n            outline: `none`,\r\n            padding: 0,\r\n            borderRadius: `8px 8px`,\r\n            \"@media(max-width: 442px)\": {\r\n                width: `95% !important`,\r\n            },\r\n            \"@media(max-height: 560px)\": {\r\n                // width: `95% !important`,\r\n                top: `70% !important`,\r\n            },\r\n            \"@media(max-height: 499px)\": {\r\n                // width: `95% !important`,\r\n                top: `80% !important`,\r\n            },\r\n            \"@media screen and (min-width: 2500px) and (min-height:1200px)\": {\r\n                // width: `95% !important`,\r\n                top: `57% !important`,\r\n            },\r\n        },\r\n        header: {\r\n            backgroundColor: theme.color.textColor,\r\n            color: theme.color.textColor,\r\n            padding: theme.spacing(2),\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        title: {\r\n            color: theme.color.textColor,\r\n            fontWeight: 700,\r\n\r\n            width: `100%`,\r\n        },\r\n        content: {\r\n            padding: theme.spacing(2),\r\n        },\r\n        textField: {\r\n            width: `100%`,\r\n        },\r\n        textFieldOld: {\r\n            display: `block`,\r\n            minWidth: `100%`,\r\n            // marginBottom: `50px`,\r\n        },\r\n        box: {\r\n            margin: `0 15px 10px 0`,\r\n        },\r\n        typography1: {\r\n            margin: `5px 0 0 0px`,\r\n            fontSize: `15.5px`,\r\n            color: theme.color.error,\r\n        },\r\n        progress: {\r\n            color: \"#ff6278\",\r\n        },\r\n        typography2: {\r\n            textTransform: `none`,\r\n            width: `max-content`,\r\n            color: `#1ba700`,\r\n            fontWeight: `bold`,\r\n            fontSize: `13px !important`,\r\n        },\r\n        typography3: {\r\n            textTransform: `none`,\r\n            width: `max-content`,\r\n            color: `#29b117`,\r\n            fontSize: `16px !important`,\r\n            textDecoration: `none`,\r\n            \"& > a:hover\": {\r\n                color: `#5dd0e8`,\r\n            },\r\n        },\r\n        box1: {\r\n            marginLeft: `7px`,\r\n            marginTop: `9x`,\r\n        },\r\n        box2: {\r\n            marginTop: `9x`,\r\n            marginLeft: `5px`,\r\n        },\r\n        icon: {\r\n            marginTop: 5,\r\n            cursor: `pointer`,\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    const renderCheck = () => {\r\n        let jsx = null;\r\n        jsx = (\r\n            <Fragment>\r\n                {errCode && (\r\n                    <Typography className={classes.typography1} component=\"div\">\r\n                        <span style={{ margin: `2px 0 0 6px` }}>\r\n                            {errCode ? errCode : \"\"}\r\n                        </span>\r\n                    </Typography>\r\n                )}\r\n                {nameCode && !errCode ? (\r\n                    <Box className={classes.box1}>\r\n                        <Typography\r\n                            component=\"div\"\r\n                            gutterBottom\r\n                            className={classes.typography2}\r\n                        >\r\n                            {!isDeleting\r\n                                ? \"Click SAVE to continue to update\"\r\n                                : \"Click DELETE if you really want to delete\"}\r\n                        </Typography>\r\n                    </Box>\r\n                ) : null}\r\n                {!isAuthenticated && (\r\n                    <Box className={classes.box2}>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            gutterBottom\r\n                            className={classes.typography3}\r\n                        >\r\n                            <Link\r\n                                style={{ textDecoration: `none` }}\r\n                                to=\"/login\"\r\n                            >\r\n                                LOGIN?{\" \"}\r\n                            </Link>{\" \"}\r\n                            <span\r\n                                style={{\r\n                                    color: `#000`,\r\n                                    fontSize: `13px`,\r\n                                    fontWeight: 401,\r\n                                }}\r\n                            >\r\n                                Don't worry, your code will still be here!\r\n                            </span>\r\n                        </Typography>\r\n                    </Box>\r\n                )}\r\n            </Fragment>\r\n        );\r\n        return jsx;\r\n    };\r\n\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (nameCode && isChanging) {\r\n            setValue(\"\");\r\n        } else if (nameCode) {\r\n            setValue(nameCode);\r\n        } else setValue(\"\");\r\n\r\n        // setValue(\"\");\r\n    }, [isChanging, nameCode]);\r\n\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value);\r\n        // setValue(value);\r\n    };\r\n\r\n    const handleUpdate = () => {\r\n        updateCodeCreator(value);\r\n    };\r\n\r\n    const handleChangeName = () => {\r\n        changeNameCreator(value);\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        deleteProjectCreator();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setErrorCreator(null);\r\n        setIsChangingCreator(false);\r\n        setIsDeletingCreator(false);\r\n        closeModalCreator();\r\n        if (nameCode && !isChanging) {\r\n            setValue(nameCode);\r\n        } else setValue(\"\");\r\n        handleCloseModal();\r\n    };\r\n\r\n    return (\r\n        <Modal open={modalIsOpen}>\r\n            <div className={classes.modal}>\r\n                <div\r\n                    style={{\r\n                        display: `flex`,\r\n\r\n                        padding: 0,\r\n                        margin: 0,\r\n                    }}\r\n                >\r\n                    {/* <div style={{ display: `flex`, justifyContent: `space-between`, background: `#1565C0`, height: `35px`, padding: 0, margin: 0 }}>NOTE</div> */}\r\n                    <Alert\r\n                        icon={false}\r\n                        severity=\"success\"\r\n                        sx={{\r\n                            width: `100%`,\r\n                            display: `block`,\r\n                        }}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                display: `flex`,\r\n                                justifyContent: `space-between`,\r\n                            }}\r\n                        >\r\n                            <p\r\n                                style={{\r\n                                    fontWeight: `700`,\r\n                                    fontSize: `17px`,\r\n                                    marginBottom: `3px`,\r\n                                }}\r\n                            >\r\n                                {!isDeleting ? \"Save your work\" : \"DELETE\"}\r\n                            </p>\r\n                            <CancelIcon\r\n                                className={classes.icon}\r\n                                onClick={() => handleClose()}\r\n                            />\r\n                        </div>\r\n                    </Alert>\r\n                </div>\r\n                <div className={classes.header} style={{ marginTop: `7px` }}>\r\n                    <span className={classes.title}>\r\n                        {isChanging && nameCode && (\r\n                            <Tooltip\r\n                                arrow\r\n                                title={\"Previous Project Name\"}\r\n                                placement={nameCode ? \"top\" : \"top\"}\r\n                            >\r\n                                <TextField\r\n                                    readOnly={true}\r\n                                    id=\"outlined-required\"\r\n                                    label={\"Current Project Name\"}\r\n                                    placeholder=\"Your Project Name\"\r\n                                    placeholder=\"Your Project Name\"\r\n                                    className={classes.textField}\r\n                                    value={nameCode}\r\n                                    sx={{ marginBottom: `15px` }}\r\n                                />\r\n                            </Tooltip>\r\n                        )}\r\n                        <Tooltip\r\n                            arrow\r\n                            title={\r\n                                nameCode && isAuthenticated && !isChanging\r\n                                    ? \"Name cannot be change in here\"\r\n                                    : !nameCode &&\r\n                                      isAuthenticated &&\r\n                                      !isChanging\r\n                                    ? \"Enter a name\"\r\n                                    : nameCode && isAuthenticated && isChanging\r\n                                    ? \"Give your new project name\"\r\n                                    : \"You need to log in to use this feature\"\r\n                            }\r\n                            placement={nameCode ? \"top\" : \"top\"}\r\n                        >\r\n                            <TextField\r\n                                disabled={isAuthenticated ? false : true}\r\n                                required\r\n                                readOnly={\r\n                                    nameCode && !isChanging ? true : false\r\n                                }\r\n                                id=\"outlined-required\"\r\n                                label={\r\n                                    !nameCode && isAuthenticated && !isChanging\r\n                                        ? \"Give a name for your project\"\r\n                                        : isChanging\r\n                                        ? \"Give a new name you want in here\"\r\n                                        : \"Your Project Name\"\r\n                                }\r\n                                placeholder=\"Your Project Name\"\r\n                                className={classes.textField}\r\n                                value={\r\n                                    nameCode && !isChanging\r\n                                        ? nameCode\r\n                                        : isChanging\r\n                                        ? value\r\n                                        : nameCode\r\n                                        ? nameCode\r\n                                        : value\r\n                                }\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Tooltip>\r\n\r\n                        {renderCheck()}\r\n                    </span>\r\n                </div>\r\n                <Box\r\n                    display=\"flex\"\r\n                    flexDirection=\"row-reverse\"\r\n                    mt={2}\r\n                    className={classes.box}\r\n                >\r\n                    <Box>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={!isAuthenticated || err ? true : false}\r\n                            onClick={\r\n                                !isChanging && !isDeleting\r\n                                    ? handleUpdate\r\n                                    : isChanging\r\n                                    ? handleChangeName\r\n                                    : handleDelete\r\n                            }\r\n                        >\r\n                            {!nameCode && !isChanging && !isDeleting\r\n                                ? \"SAVE\"\r\n                                : isDeleting\r\n                                ? \"DELETE\"\r\n                                : \"UPDATE\"}\r\n                        </Button>\r\n                    </Box>\r\n                    <Box mr={1}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            onClick={() => handleClose()}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n\r\n                {/* <div className={classes.content}>{component}</div> */}\r\n                {progress && (\r\n                    <Box sx={{ width: \"100%\" }}>\r\n                        <LinearProgress />\r\n                    </Box>\r\n                )}\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // codeData: state.code.codeData,\r\n    // modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    errCode: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    nameCode: state.auth.nameCode,\r\n    isChanging: state.code.isChanging,\r\n    isDeleting: state.code.isDeleting,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    updateCodeCreator: updateCode,\r\n    setCodeCreator: setCode,\r\n    changeNameCreator: changeName,\r\n    setIsChangingCreator: setIsChanging,\r\n    deleteProjectCreator: deleteProject,\r\n    setIsDeletingCreator: setIsDeleting,\r\n    setErrorCreator: setError,\r\n    // getCodeCreator: getCode,\r\n    // openModalCreator: openModal,\r\n    closeModalCreator: closeModal,\r\n    // loginCreator: login,\r\n    // setProgressCreator: setProgress,\r\n    // setErrorLoginCreator: setErrorLogin,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(NameProject);\r\n","const styles = (theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        top: `52.9%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n        width: \"100%\",\r\n        height: `100%`,\r\n        zIndex: 99,\r\n        padding: 40,\r\n        display: `flex`,\r\n        flexDirection: `column`,\r\n        alignItems: `center`,\r\n        justifyContent: `center`,\r\n        textAlign: `center`,\r\n        flex: `1 0 auto`,\r\n        [\"@media(max-width:500px)\"]: {\r\n            marginTop: `5% !important`,\r\n        },\r\n        [\"@media(max-width:387px)\"]: {\r\n            marginTop: `12% !important`,\r\n        },\r\n        [\"@media(max-width:353px)\"]: {\r\n            marginTop: `17% !important`,\r\n        },\r\n        [\"@media(max-width:196px)\"]: {\r\n            marginTop: `20% !important`,\r\n        },\r\n    },\r\n    background1: {\r\n        position: \"absolute\",\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n        width: \"100%\",\r\n        height: `100%`,\r\n        zIndex: 99,\r\n        padding: 40,\r\n        display: `flex`,\r\n        flexDirection: `column`,\r\n        alignItems: `center`,\r\n        justifyContent: `center`,\r\n        textAlign: `center`,\r\n        flex: `1 0 auto`,\r\n        [\"@media(max-width:500px)\"]: {\r\n            marginTop: `5% !important`,\r\n        },\r\n        [\"@media(max-width:387px)\"]: {\r\n            marginTop: `12% !important`,\r\n        },\r\n        [\"@media(max-width:353px)\"]: {\r\n            marginTop: `17% !important`,\r\n            display: `table`,\r\n        },\r\n        [\"@media(max-width:196px)\"]: {\r\n            marginTop: `20% !important`,\r\n        },\r\n    },\r\n    background2: {\r\n        position: \"absolute\",\r\n        top: `52.9%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n        width: \"45.7%\",\r\n        height: `100%`,\r\n        zIndex: 99,\r\n        padding: 40,\r\n        display: `flex`,\r\n        flexDirection: `column`,\r\n        alignItems: `center`,\r\n        justifyContent: `center`,\r\n        textAlign: `center`,\r\n        flex: `1 0 auto`,\r\n        [\"@media(max-width:980px)\"]: {\r\n            marginTop: `5% !important`,\r\n            width: \"70%\",\r\n        },\r\n        [\"@media(max-width:700px)\"]: {\r\n            marginTop: `5% !important`,\r\n            width: \"90%\",\r\n        },\r\n        [\"@media(max-width:500px)\"]: {\r\n            marginTop: `5% !important`,\r\n            width: \"100%\",\r\n        },\r\n        [\"@media(max-width:387px)\"]: {\r\n            marginTop: `12% !important`,\r\n            width: \"100%\",\r\n        },\r\n        [\"@media(max-width:353px)\"]: {\r\n            marginTop: `17% !important`,\r\n            width: \"100%\",\r\n        },\r\n        [\"@media(max-width:196px)\"]: {\r\n            marginTop: `20% !important`,\r\n            width: \"100%\",\r\n        },\r\n    },\r\n    alert: {\r\n        [\"@media(max-width:500px)\"]: {\r\n            width: `100% !important`,\r\n        },\r\n        [\"@media(max-width:387px)\"]: {\r\n            width: `100% !important`,\r\n        },\r\n        [\"@media(max-width:353px)\"]: {\r\n            width: `100% !important`,\r\n        },\r\n    },\r\n    btn: {\r\n        marginTop: 0,\r\n        fontSize: `16px`,\r\n    },\r\n    login1: {\r\n        width: `45%`,\r\n        [\"@media(max-width:850px)\"]: {\r\n            width: `100% !important`,\r\n        },\r\n    },\r\n    link: {\r\n        display: `block`,\r\n        width: `max-content`,\r\n        marginLeft: `auto`,\r\n    },\r\n    link1: {\r\n        // display: `block`,\r\n        // width: `max-content`,\r\n        // textAlign: `center`,\r\n    },\r\n});\r\n\r\nexport default styles;\r\n","import {\r\n    LOGIN,\r\n    LOGIN_FAILED,\r\n    LOGIN_SUCCESS,\r\n    SET_ERROR_LOGIN,\r\n} from \"../constant/login\";\r\nimport { createActions } from \"redux-actions\";\r\n\r\nexport const register = createActions({\r\n    registerRequest: (val) => val,\r\n    registerSuccess: (val) => val,\r\n    registerFailure: (val) => val,\r\n});\r\n\r\nexport const login = (acc) => ({\r\n    type: LOGIN,\r\n    payload: acc,\r\n});\r\n\r\nexport const loginSuccess = (name = null) => ({\r\n    type: LOGIN_SUCCESS,\r\n    payload: name,\r\n});\r\n\r\nexport const setPicture = createActions({\r\n    setPictureRequest: (val) => val,\r\n});\r\n\r\nexport const loginFailed = (err = null) => ({\r\n    type: LOGIN_FAILED,\r\n    payload: err,\r\n});\r\n\r\nexport const setErrorLogin = (err) => ({\r\n    type: SET_ERROR_LOGIN,\r\n    payload: err,\r\n});\r\n\r\nexport const setNameCode = (val) => ({\r\n    type: \"SET_NAME_CODE\",\r\n    payload: val,\r\n});\r\n\r\nexport const logout = () => ({\r\n    type: \"LOGOUT\",\r\n    payload: null,\r\n});\r\n\r\nexport const logoutSuccess = () => ({\r\n    type: \"LOGOUT_SUCCESS\",\r\n    payload: null,\r\n});\r\n\r\nexport const checkLogin = () => ({\r\n    type: \"CHECK_LOGIN\",\r\n    payload: null,\r\n});\r\n\r\nexport const ggLogin = createActions({\r\n    ggLoginRequest: (val) => val,\r\n    ggLoginSuccess: (val) => val,\r\n    ggLoginFailure: (val) => val,\r\n});\r\n\r\nexport const fbLogin = createActions({\r\n    fbLoginRequest: (val) => val,\r\n    fbLoginSuccess: (val) => val,\r\n    fbLoginFailure: (val) => val,\r\n});\r\n\r\nexport const setErrorStatus = createActions({\r\n    setErrorStatusRequest: (val) => val,\r\n});\r\nexport const checkLastPwd = createActions({\r\n    checkLastPwdRequest: (val) => val,\r\n    checkLastPwdSuccess: (val) => val,\r\n    checkLastPwdFailure: (val) => val,\r\n});\r\n\r\nexport const recoverPassword = createActions({\r\n    recoverPasswordRequest: (val) => val,\r\n    recoverPasswordSuccess: (val) => val,\r\n    recoverPasswordFailure: (val) => val,\r\n});\r\n\r\nexport const updateFID = createActions({\r\n    updateFIDRequest: (val) => val,\r\n});\r\nexport const updateGID = createActions({\r\n    updateGIDRequest: (val) => val,\r\n});\r\nexport const updateUID = createActions({\r\n    updateUIDRequest: (val) => val,\r\n});\r\n\r\nexport const setObjId = createActions({\r\n    setObjIdRequest: (val) => val,\r\n    setObjIdSuccess: (val) => val,\r\n    setObjIdFailure: (val) => val,\r\n});\r\n\r\nexport const setAdmin = createActions({\r\n    setAdminRequest: (val) => val,\r\n    setAdminSuccess: (val) => val,\r\n    setAdminFailure: (val) => val,\r\n});\r\n","const LOGIN = \"LOGIN\";\r\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nconst LOGIN_FAILED = \"LOGIN_FAILED\";\r\nconst SET_ERROR_LOGIN = \"SET_ERROR_LOGIN\"\r\n\r\nexport { LOGIN, LOGIN_SUCCESS, LOGIN_FAILED, SET_ERROR_LOGIN };\r\n","import { createActions } from \"redux-actions\";\r\n\r\nexport const setOpen = createActions({\r\n    setOpen: (val) => val,\r\n});\r\n\r\nexport const setListTutorial = createActions({\r\n    setListTutorial: (val) => val,\r\n});\r\n\r\nexport const setLocation = createActions({\r\n    setLocation: (val) => val,\r\n});\r\n\r\nexport const setSidebar = createActions({\r\n    setSidebar: (val) => val,\r\n});\r\n\r\nexport const setLocationNav = createActions({\r\n    setLocationNav: (val) => val,\r\n});\r\n","export default {\r\n    getStarted: `<img src=\"pic_trulli.jpg\" alt=\"Italian Trulli\">`,\r\n    structural: `<b>This text is bold</b>`,\r\n    exTag1: `<h1>My Code So Strong...</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n    exTag3: `<strong>This text is important!</strong>`,\r\n    exTag4: `<i>This text is italic</i>`,\r\n    exTag5: `<em>This text is emphasized</em>`,\r\n    exTag6: `<p>My favorite color is <del>blue</del> red.</p>`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","export const styles = (theme) => ({\r\n    dividerB: {\r\n        color: `#8167a9`,\r\n        background: `#8167a9`,\r\n        margin: `8px 0`,\r\n        height: `7px`,\r\n        borderRadius: `7px 7px`,\r\n    },\r\n    dividerS: {\r\n        color: `#8167a9`,\r\n        background: `#8167a9`,\r\n        margin: `8px 0 15px 0`,\r\n        height: `3px`,\r\n        borderRadius: `7px 7px`,\r\n    },\r\n});\r\n","export const GET = \"GET\";\r\nexport const POST = \"POST\";\r\nexport const PUT = \"PUT\";\r\nexport const DELETE = \"DELETE\";\r\n\r\nexport const CODES_ONLINE = \"CODES - ONLINE\";\r\n\r\n/** LOCAL */\r\n// export const host = \"http://localhost:5000\";\r\n/** HOST */\r\nexport const host = \"https://code-project-app.herokuapp.com\";\r\n\r\n/** LOCAL */\r\n// export const CODE = \"http://localhost:3000/code\";\r\n/** HOST */\r\nexport const CODE = \"https://focused-ritchie-73a1e5.netlify.app/code\";\r\n/** DOMAIN */\r\n// export const CODE = \"https://codesonline.netlify.app/code\";\r\n\r\n/** LOCAL */\r\n// export const SHARE_CODE = \"http://localhost:3000/cs/share\";\r\n/** HOST */\r\nexport const SHARE_CODE = \"https://focused-ritchie-73a1e5.netlify.app/cs/share\";\r\n/** DOMAIN */\r\n// export const SHARE_CODE = \"https://codesonline.netlify.app/cs/share\";\r\n\r\n/** LOCAL */\r\n// export const API = \"http://localhost:5000/codes\";\r\n// export const API_LOGIN = \"http://localhost:5000/auth\";\r\n// export const API_USER = \"http://localhost:5000/users\";\r\n// export const API_FORUM = \"http://localhost:5000/forum\";\r\n/** HOST */\r\nexport const API = \"https://code-project-app.herokuapp.com/codes\";\r\nexport const API_LOGIN = \"https://code-project-app.herokuapp.com/auth\";\r\nexport const API_USER = \"https://code-project-app.herokuapp.com/users\";\r\nexport const API_FORUM = \"https://code-project-app.herokuapp.com/forum\";\r\n\r\n/** LOCAL */\r\n// export const API_GG =\r\n//     \"611618134293-o12vgbqu47jkpjec3o9frup2qk5ivaiq.apps.googleusercontent.com\";\r\n/** HOST */\r\nexport const API_GG =\r\n    \"611618134293-pvnp50vd2gr5bug0n8cp8blapq8l13lf.apps.googleusercontent.com\";\r\n/** DOMAIN CODESONLINE */\r\n// export const API_GG =\r\n//     \"611618134293-ku6l99dlitthhqk3hdvd179155ina3nr.apps.googleusercontent.com\";\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@mui/styles\";\r\nimport { CopyBlock, dracula, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport { CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst GetStarted = (props) => {\r\n    const [language, changeLanguage] = useState(\"html\");\r\n    const [languageDemo, changeDemo] = useState(ex[\"html\"]);\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">CSS Get Started</p>\r\n            <Direct />\r\n            <Divider className={classes.dividerB} />\r\n\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    CSS stands for Cascading Style Sheets\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    CSS describes how HTML elements are to be displayed on\r\n                    screen, paper, or in other media\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    CSS saves a lot of work. It can control the layout of\r\n                    multiple web pages all at once\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    External stylesheets are stored in CSS files\r\n                </li>\r\n            </ul>\r\n            <div className=\"title mt-4\">Some before...</div>\r\n            <Divider className={classes.dividerS} />\r\n            <p className=\"guide breadcrumb mt-4\">\r\n                All web standards technologies (HTML, CSS, JavaScript, etc.) are\r\n                defined in giant documents called specifications (or \"specs\"),\r\n                which are published by standards organizations (such as the W3C,\r\n                WHATWG, ECMA, or Khronos) and define precisely how those\r\n                technologies are supposed to behave.\r\n            </p>\r\n\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                In the Introduction to HTML module we covered what HTML is, and\r\n                how it is used to mark up documents. These documents will be\r\n                readable in a web browser. Headings will look larger than\r\n                regular text, paragraphs break onto a new line and have space\r\n                between them. Links are colored and underlined to distinguish\r\n                them from the rest of the text. What you are seeing is the\r\n                browser's default styles — very basic styles that the browser\r\n                applies to HTML to make sure it will be basically readable even\r\n                if no explicit styling is specified by the author of the page.\r\n            </nav>\r\n            <div className=\"title mt-4\">CSS Demo</div>\r\n            <Divider className={classes.dividerS} />\r\n            <p className=\"guide breadcrumb mt-4\">\r\n                All web standards technologies (HTML, CSS, JavaScript, etc.) are\r\n                defined in giant documents called specifications (or \"specs\"),\r\n                which are published by standards organizations (such as the W3C,\r\n                WHATWG, ECMA, or Khronos) and define precisely how those\r\n                technologies are supposed to behave.\r\n            </p>\r\n            <img\r\n                src=\"https://scontent.fdad3-5.fna.fbcdn.net/v/t1.15752-9/263760579_1958185787685946_8444751957236707248_n.png?_nc_cat=106&ccb=1-5&_nc_sid=ae9488&_nc_ohc=9fkjY_73xoUAX9UtUW_&tn=AHJTDg93Zew1RfnP&_nc_ht=scontent.fdad3-5.fna&oh=d8a1835a357b4b3ccca767483de85769&oe=61D8C18F\"\r\n                alt=\"\"\r\n            />\r\n            <a\r\n                href={`${SHARE_CODE}/Z9p8MeBkMw02nbh0vDIPKoXlQatlSc`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title mt-4\">Why Use CSS?</div>\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"guide\">\r\n                CSS is used to define styles for your web pages, including the\r\n                design, layout and variations in display for different devices\r\n                and screen sizes.\r\n                <div className=\"h4 mt-2 \">\r\n                    <nav className=\"breadcrumb\">\r\n                        <div className=\"guide font-weight-bold\">\r\n                            CSS is no different — it is developed by a group\r\n                            within the W3C called the CSS Working Group. This\r\n                            group is made of representatives of browser vendors\r\n                            and other companies who have an interest in CSS.\r\n                            There are also other people, known as invited\r\n                            experts, who act as independent voices; they are not\r\n                            linked to a member organization.\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"h4 mt-2 \">\r\n                    <nav className=\"breadcrumb\">\r\n                        <div className=\"guide font-weight-bold\">\r\n                            New CSS features are developed, or specified, by the\r\n                            CSS Working Group. Sometimes because a particular\r\n                            browser is interested in having some capability,\r\n                            other times because web designers and developers are\r\n                            asking for a feature, and sometimes because the\r\n                            Working Group itself has identified a requirement.\r\n                            CSS is constantly developing, with new features\r\n                            becoming available. However, a key thing about CSS\r\n                            is that everyone works very hard to never change\r\n                            things in a way that would break old websites. A\r\n                            website built in 2000, using the limited CSS\r\n                            available then, should still be usable in a browser\r\n                            today!\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    Note: A browser is sometimes called a user agent, which\r\n                    basically means a computer program that represents a person\r\n                    inside a computer system. Browsers are the main type of user\r\n                    agent we think of when talking about CSS, however, it is not\r\n                    the only one. There are other user agents available — such\r\n                    as those which convert HTML and CSS documents into PDFs to\r\n                    be printed.\r\n                </nav>\r\n                <div className=\"guide font-weight-bold\">\r\n                    As a newcomer to CSS, it is likely that you will find the\r\n                    CSS specs overwhelming — they are intended for engineers to\r\n                    use to implement support for the features in user agents,\r\n                    not for web developers to read to understand CSS. Many\r\n                    experienced developers would much rather refer to MDN\r\n                    documentation or other tutorials. It is however worth\r\n                    knowing that they exist, understanding the relationship\r\n                    between the CSS you are using, browser support (see below),\r\n                    and the specs.\r\n                </div>\r\n                {/* <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag1\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div> */}\r\n                {/* <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag2\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div> */}\r\n                <div className=\"title mt-4\">CSS Solved a Big Problem</div>\r\n                <Divider className={classes.dividerS} />\r\n                <nav className=\"breadcrumb mt-3\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        HTML was NEVER intended to contain tags for formatting a\r\n                        web page!\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb mt-3\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        HTML was created to describe the content of a web page,\r\n                        like:\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb mt-3\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        <code>{`<h1>This is a heading</h1>`}</code>\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb mt-3\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        <code>{`<p>This is a paragraph.</p>`}</code>\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb mt-3\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        When tags like <code>{` <font>`}</code>, and color\r\n                        attributes were added to the HTML 3.2 specification, it\r\n                        started a nightmare for web developers. Development of\r\n                        large websites, where fonts and color information were\r\n                        added to every single page, became a long and expensive\r\n                        process.\r\n                    </div>\r\n                </nav>\r\n                <div className=\"title mt-4\">CSS Saves a Lot of Work!</div>\r\n                <Divider className={classes.dividerS} />\r\n                <div>\r\n                    <b>\r\n                        The style definitions are normally saved in external\r\n                        .css files.\r\n                    </b>\r\n                </div>\r\n                <div>\r\n                    <b>\r\n                        With an external stylesheet file, you can change the\r\n                        look of an entire website by changing just one file!\r\n                    </b>\r\n                </div>\r\n                <div className=\"title mt-4\">Browser support information</div>\r\n                <Divider className={classes.dividerS} />\r\n                <div className=\"guide\">\r\n                    Once CSS has been specified then it is only useful for us in\r\n                    developing web pages if one or more browsers have\r\n                    implemented it. This means that the code has been written to\r\n                    turn the instruction in our CSS file into something that can\r\n                    be output to the screen\r\n                    <div className=\"h4 mt-2 \">\r\n                        <nav className=\"breadcrumb\">\r\n                            <div className=\"guide font-weight-bold\">\r\n                                It is unusual for all browsers to implement a\r\n                                feature at the same time, and so there is\r\n                                usually a gap where you can use some part of CSS\r\n                                in some browsers and not in others. For this\r\n                                reason, being able to check implementation\r\n                                status is useful.\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                The browser support status is shown on every MDN property page\r\n                in a section named \"Browser compatibility\" (use this to check if\r\n                the property can be used on your website). For example, the\r\n                compatibility section for the CSS font-family property is\r\n                reproduced bel\r\n            </nav>\r\n\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(GetStarted);\r\n","export default {\r\n    getStarted: `<img src=\"pic_trulli.jpg\" alt=\"Italian Trulli\">`,\r\n    structural: `<b>This text is bold</b>`,\r\n    exTag1: `<h1>My Code So Strong...</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n    exTag3: `<strong>This text is important!</strong>`,\r\n    exTag4: `<i>This text is italic</i>`,\r\n    exTag5: `<em>This text is emphasized</em>`,\r\n    exTag6: `<p>My favorite color is <del>blue</del> red.</p>`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@mui/styles\";\r\nimport { CopyBlock, dracula, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport \"./Introduction.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { styles } from \"./styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport Direct from \"../../../components/Direct\";\r\n\r\nconst Introduction = (props) => {\r\n    const [language, changeLanguage] = useState(\"html\");\r\n    const [languageDemo, changeDemo] = useState(ex[\"html\"]);\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">Introduction</p>\r\n            <Direct />\r\n\r\n            <Divider className={classes.dividerB} />\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n\r\n            <p className=\"guide breadcrumb mt-4\">\r\n                CSS (Cascading Style Sheets) allows you to create great-looking\r\n                web pages, but how does it work under the hood? This article\r\n                explains what CSS is, with a simple syntax example, and also\r\n                covers some key terms about the language\r\n            </p>\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                In the Introduction to HTML module we covered what HTML is, and\r\n                how it is used to mark up documents. These documents will be\r\n                readable in a web browser. Headings will look larger than\r\n                regular text, paragraphs break onto a new line and have space\r\n                between them. Links are colored and underlined to distinguish\r\n                them from the rest of the text. What you are seeing is the\r\n                browser's default styles — very basic styles that the browser\r\n                applies to HTML to make sure it will be basically readable even\r\n                if no explicit styling is specified by the author of the page.\r\n            </nav>\r\n            <img\r\n                src=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/What_is_CSS/html-example.png\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"guide\">\r\n                However, the web would be a boring place if all websites looked\r\n                like that. Using CSS you can control exactly how HTML elements\r\n                look in the browser, presenting your markup using whatever\r\n                design you like.\r\n            </div>\r\n            <div className=\"title mt-4\">What is CSS for?</div>\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"guide\">\r\n                As we have mentioned before, CSS is a language for specifying\r\n                how documents are presented to users — how they are styled, laid\r\n                out, etc.\r\n                <div className=\"h4 mt-2 \">\r\n                    <nav className=\"breadcrumb\">\r\n                        <div className=\"guide font-weight-bold\">\r\n                            A document is usually a text file structured using a\r\n                            markup language — HTML is the most common markup\r\n                            language, but you may also come across other markup\r\n                            languages such as SVG or XML.\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"h4 mt-2 \">\r\n                    <nav className=\"breadcrumb\">\r\n                        <div className=\"guide font-weight-bold\">\r\n                            Presenting a document to a user means converting it\r\n                            into a form usable by your audience. Browsers, like\r\n                            Firefox, Chrome, or Edge , are designed to present\r\n                            documents visually, for example, on a computer\r\n                            screen, projector or printer.\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    Note: A browser is sometimes called a user agent, which\r\n                    basically means a computer program that represents a person\r\n                    inside a computer system. Browsers are the main type of user\r\n                    agent we think of when talking about CSS, however, it is not\r\n                    the only one. There are other user agents available — such\r\n                    as those which convert HTML and CSS documents into PDFs to\r\n                    be printed.\r\n                </nav>\r\n                <div className=\"guide font-weight-bold\">\r\n                    CSS can be used for very basic document text styling — for\r\n                    example changing the color and size of headings and links.\r\n                    It can be used to create layout — for example turning a\r\n                    single column of text into a layout with a main content area\r\n                    and a sidebar for related information. It can even be used\r\n                    for effects such as animation. Have a look at the links in\r\n                    this paragraph for specific examples.\r\n                </div>\r\n                {/* <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag1\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div> */}\r\n                {/* <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag2\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div> */}\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        Note: We recommend reading this tutorial, in the\r\n                        sequence listed in the menu.\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                Some example below will make you more understand about what{\" \"}\r\n                <code>CSS</code> can do:\r\n            </nav>\r\n\r\n            <img\r\n                src=\"https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics/finished-test-page-small.png\"\r\n                alt=\"\"\r\n                height=\"300\"\r\n            />\r\n            <img\r\n                src=\"https://uicookies.com/wp-content/uploads/2019/08/beautiful-css-forms-1000x750.jpg\"\r\n                alt=\"\"\r\n            />\r\n            <img\r\n                src=\"https://uicookies.com/wp-content/uploads/2020/09/CSS-Contact-Form-V03.jpg.webp\"\r\n                alt=\"\"\r\n            />\r\n            <img\r\n                src=\"https://uicookies.com/wp-content/uploads/2020/09/Beautiful-CSS-Signup-Form-V07.jpg.webp\"\r\n                alt=\"\"\r\n            />\r\n            <img\r\n                src=\"https://uicookies.com/wp-content/uploads/2020/09/CSS-Registration-Form-V02.jpg.webp\"\r\n                alt=\"\"\r\n            />\r\n            <img\r\n                src=\"https://uicookies.com/wp-content/uploads/2020/04/Colorlib-Reg-Form-v15.jpg.webp\"\r\n                alt=\"\"\r\n            />\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Introduction);\r\n","export default {\r\n    getStarted: `p {\r\ncolor: red;\r\ntext-align: center;\r\n}`,\r\n    structural: `<b>This text is bold</b>`,\r\n    exTag1: `<h1>My Code So Strong...</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n    exTag3: `<strong>This text is important!</strong>`,\r\n    exTag4: `<i>This text is italic</i>`,\r\n    exTag5: `<em>This text is emphasized</em>`,\r\n    exTag6: `<p>My favorite color is <del>blue</del> red.</p>`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@mui/styles\";\r\nimport { CopyBlock, dracula, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport { CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Syntax = (props) => {\r\n    const [language, changeLanguage] = useState(\"html\");\r\n    const [languageDemo, changeDemo] = useState(ex[\"html\"]);\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">CSS Syntax</p>\r\n            <Direct />\r\n            <Divider className={classes.dividerB} />\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    A CSS rule consists of a selector and a declaration block.\r\n                </b>\r\n            </div>{\" \"}\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    The selector points to the HTML element you want to style.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    The declaration block contains one or more declarations\r\n                    separated by semicolons.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    Each declaration includes a CSS property name and a value,\r\n                    separated by a colon.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    Multiple CSS declarations are separated with semicolons, and\r\n                    declaration blocks are surrounded by curly braces.\r\n                </li>\r\n            </ul>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"title mt-4\">Example Explained</div>\r\n            <Divider className={classes.dividerS} />\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            <div className=\"h4 mt-2 \">\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        p is a selector in CSS (it points to the HTML element\r\n                        you want to style: <code>{`<p>`}</code>).\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        color is a property, and red is the property value\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        text-align is a property, and center is the property\r\n                        value\r\n                    </div>\r\n                </nav>\r\n\r\n                {/* <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag1\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div> */}\r\n                {/* <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag2\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div> */}\r\n            </div>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Syntax);\r\n","export default {\r\n    getStarted: `p {\r\ncolor: red;\r\ntext-align: center;\r\n}`,\r\n    structural: `#para1 {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag1: `.center {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag2: `p.center {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag3: `<p class=\"center large\">This paragraph refers to two classes.</p>`,\r\n    exTag4: `* {\r\n        text-align: center;\r\n        color: blue;\r\n      }`,\r\n    exTag5: `h1 {\r\n        text-align: center;\r\n        color: red;\r\n      }\r\n      \r\n      h2 {\r\n        text-align: center;\r\n        color: red;\r\n      }\r\n      \r\n      p {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag6: `h1, h2, p {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@mui/styles\";\r\nimport { CopyBlock, dracula, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport { CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Selectors = (props) => {\r\n    const [language, changeLanguage] = useState(\"html\");\r\n    const [languageDemo, changeDemo] = useState(ex[\"html\"]);\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">CSS Selectors</p>\r\n            <Direct />\r\n            <Divider className={classes.dividerB} />\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}{\" \"}\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    A CSS selector selects the HTML element(s) you want to\r\n                    style.\r\n                </b>\r\n            </div>{\" \"}\r\n            <div className=\"title mt-4\">CSS Selectors</div>\r\n            <Divider className={classes.dividerS} />{\" \"}\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    CSS selectors are used to \"find\" (or select) the HTML\r\n                    elements you want to style.\r\n                </b>\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                We can divide CSS selectors into five categories:\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    The selector points to the HTML element you want to style.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    The declaration block contains one or more declarations\r\n                    separated by semicolons.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    Each declaration includes a CSS property name and a value,\r\n                    separated by a colon.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    Multiple CSS declarations are separated with semicolons, and\r\n                    declaration blocks are surrounded by curly braces.\r\n                </li>\r\n            </ul>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"title mt-4\">The CSS element Selector</div>\r\n            <Divider className={classes.dividerS} />\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"mt-3\">\r\n                <b>\r\n                    The element selector selects HTML elements based on the\r\n                    element name.\r\n                </b>\r\n            </div>\r\n            <div className=\"h4 mt-2 \">\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        p is a selector in CSS (it points to the HTML element\r\n                        you want to style: <code>{`<p>`}</code>).\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        color is a property, and red is the property value\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        text-align is a property, and center is the property\r\n                        value\r\n                    </div>\r\n                </nav>\r\n                {/* <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag1\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div> */}\r\n                {/* <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag2\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div> */}\r\n                <div className=\"title mt-4\">CSS Selectors</div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <div className=\"example mt-3\"></div>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n                <a\r\n                    href={`${SHARE_CODE}/0oxnMgCjL1OZg9o8wCEpoxY0cwFQe9`}\r\n                    target=\"_blank\"\r\n                >\r\n                    <button className=\"btn btn-code btn-large\">\r\n                        {CODES_ONLINE}\r\n                    </button>\r\n                </a>\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        The id selector uses the id attribute of an HTML element\r\n                        to select a specific element.\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        The id of an element is unique within a page, so the id\r\n                        selector is used to select one unique element!\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        To select an element with a specific id, write a hash\r\n                        (#) character, followed by the id of the element.\r\n                    </div>\r\n                </nav>\r\n                <div className=\"title mt-4\">The CSS class Selector</div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        The class selector selects HTML elements with a specific\r\n                        class attribute.\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        To select elements with a specific class, write a period\r\n                        (.) character, followed by the class name.\r\n                    </div>\r\n                </nav>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n                <a\r\n                    href={`${SHARE_CODE}/usKglW52AcgoFjxEGTxowowUQJp4OG`}\r\n                    target=\"_blank\"\r\n                >\r\n                    <button className=\"btn btn-code btn-large\">\r\n                        {CODES_ONLINE}\r\n                    </button>\r\n                </a>\r\n                <nav className=\"breadcrumb mt-3\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        You can also specify that only specific HTML elements\r\n                        should be affected by a class.\r\n                    </div>\r\n                </nav>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n                <nav className=\"breadcrumb mt-3\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        HTML elements can also refer to more than one class.\r\n                    </div>\r\n                </nav>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n                <div className=\"title mt-4\">The CSS Universal Selector</div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        The universal selector (*) selects all HTML elements on\r\n                        the page.\r\n                    </div>\r\n                </nav>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n                <div className=\"title mt-4\">The CSS Grouping Selector</div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        The grouping selector selects all the HTML elements with\r\n                        the same style definitions.\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        Look at the following CSS code (the h1, h2, and p\r\n                        elements have the same style definitions):\r\n                    </div>\r\n                </nav>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />{\" \"}\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        It will be better to group the selectors, to minimize\r\n                        the code.\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        To group selectors, separate each selector with a comma.\r\n                    </div>\r\n                </nav>{\" \"}\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />{\" \"}\r\n            </div>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Selectors);\r\n","export default {\r\n    getStarted: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <link rel=\"stylesheet\" href=\"mystyle.css\">\r\n    </head>\r\n    <body>\r\n    \r\n    <h1>This is a heading</h1>\r\n    <p>This is a paragraph.</p>\r\n    \r\n    </body>\r\n    </html>`,\r\n    structural: `body {\r\n        background-color: lightblue;\r\n      }\r\n      \r\n      h1 {\r\n        color: navy;\r\n        margin-left: 20px;\r\n      }`,\r\n    exTag1: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <style>\r\n    body {\r\n      background-color: linen;\r\n    }\r\n    \r\n    h1 {\r\n      color: maroon;\r\n      margin-left: 40px;\r\n    }\r\n    </style>\r\n    </head>\r\n    <body>\r\n    \r\n    <h1>This is a heading</h1>\r\n    <p>This is a paragraph.</p>\r\n    \r\n    </body>\r\n    </html>`,\r\n    exTag2: `<!DOCTYPE html>\r\n    <html>\r\n    <body>\r\n    \r\n    <h1 style=\"color:blue;text-align:center;\">This is a heading</h1>\r\n    <p style=\"color:red;\">This is a paragraph.</p>\r\n    \r\n    </body>\r\n    </html>`,\r\n    exTag3: `h1 {\r\n        color: navy;\r\n      }`,\r\n    exTag4: `h1 {\r\n        color: orange;   \r\n      }`,\r\n    exTag5: `<head>\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"mystyle.css\">\r\n    <style>\r\n    h1 {\r\n      color: orange;\r\n    }\r\n    </style>\r\n    </head>`,\r\n    exTag6: `<head>\r\n    <style>\r\n    h1 {\r\n      color: orange;\r\n    }\r\n    </style>\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"mystyle.css\">\r\n    </head>`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@mui/styles\";\r\nimport { CopyBlock, dracula, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport { CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst HowTo = (props) => {\r\n    const [language, changeLanguage] = useState(\"html\");\r\n    const [languageDemo, changeDemo] = useState(ex[\"html\"]);\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">How To Add CSS</p>\r\n            <Direct />\r\n            <Divider className={classes.dividerB} />\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}{\" \"}\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    When a browser reads a style sheet, it will format the HTML\r\n                    document according to the information in the style sheet.\r\n                </b>\r\n            </div>{\" \"}\r\n            <img\r\n                src=\"https://scontent.fdad3-4.fna.fbcdn.net/v/t1.15752-9/263370774_965493641058144_3059727109972689792_n.png?_nc_cat=101&ccb=1-5&_nc_sid=ae9488&_nc_ohc=RS2jpDjNAMUAX84Nn1o&tn=AHJTDg93Zew1RfnP&_nc_ht=scontent.fdad3-4.fna&oh=e664bc73ef0716acb40b85b89eac3892&oe=61D816D7\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"title mt-4\">Three Ways to Insert CSS</div>\r\n            <Divider className={classes.dividerS} />{\" \"}\r\n            <div className=\"example mt-5\">\r\n                <b>There are three ways of inserting a style sheet:</b>\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">External CSS</nav>\r\n            <nav className=\"breadcrumb mt-3\">Internal CSS</nav>\r\n            <nav className=\"breadcrumb mt-3\">Inline CSS</nav>\r\n            <div className=\"title mt-4\">External CSS</div>\r\n            <Divider className={classes.dividerS} />{\" \"}\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    With an external style sheet, you can change the look of an\r\n                    entire website by changing just one file!\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    Each HTML page must include a reference to the external\r\n                    style sheet file inside the <code>{`<link>`}</code> element,\r\n                    inside the head section.\r\n                </li>\r\n            </ul>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb\">\r\n                <div className=\"guide font-weight-bold\">\r\n                    An external style sheet can be written in any text editor,\r\n                    and must be saved with a .css extension.\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb\">\r\n                <div className=\"guide font-weight-bold\">\r\n                    The external .css file should not contain any HTML tags.\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb\">\r\n                <div className=\"guide font-weight-bold\">\r\n                    Here is how the \"mystyle.css\" file looks:\r\n                </div>\r\n            </nav>\r\n            <div className=\"title mt-4\">The CSS element Selector</div>\r\n            <Divider className={classes.dividerS} />\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"mt-3\">\r\n                <b>\r\n                    The element selector selects HTML elements based on the\r\n                    element name.\r\n                </b>\r\n            </div>\r\n            <div className=\"h4 mt-2 \">\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        p is a selector in CSS (it points to the HTML element\r\n                        you want to style: <code>{`<p>`}</code>).\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        color is a property, and red is the property value\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb mt-3\">\r\n                    <code>Note</code> Do not add a space between the property\r\n                    value and the unit: Incorrect (space): margin-left: 20 px;\r\n                    Correct (nospace): margin-left: 20px;\r\n                </nav>\r\n                <div className=\"title mt-4\">Internal CSS</div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <nav className=\"breadcrumb mt-3\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        An internal style sheet may be used if one single HTML\r\n                        page has a unique style.\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb mt-3\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        The internal style is defined inside the{\" \"}\r\n                        <code>{`<style>`}</code> element, inside the head\r\n                        section.\r\n                    </div>\r\n                </nav>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n                <a\r\n                    href={`${SHARE_CODE}/Fe5bhG2y3SsWli3BULROZqkyCYf7KE`}\r\n                    target=\"_blank\"\r\n                >\r\n                    <button className=\"btn btn-code btn-large\">\r\n                        {CODES_ONLINE}\r\n                    </button>\r\n                </a>\r\n                <div className=\"title mt-4\">Inline CSS</div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        An inline style may be used to apply a unique style for\r\n                        a single element.\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        To use inline styles, add the style attribute to the\r\n                        relevant element. The style attribute can contain any\r\n                        CSS property.\r\n                    </div>\r\n                </nav>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n                <a\r\n                    href={`${SHARE_CODE}/K4yMJTcdZ6dtM63xBqA4Z16UFzKBZM`}\r\n                    target=\"_blank\"\r\n                >\r\n                    <button className=\"btn btn-code btn-large\">\r\n                        {CODES_ONLINE}\r\n                    </button>\r\n                </a>\r\n                <nav className=\"breadcrumb mt-3\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        Tip: An inline style loses many of the advantages of a\r\n                        style sheet (by mixing content with presentation). Use\r\n                        this method sparingly.\r\n                    </div>\r\n                </nav>\r\n                <div className=\"title mt-4\">Multiple Style Sheets</div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        If some properties have been defined for the same\r\n                        selector (element) in different style sheets, the value\r\n                        from the last read style sheet will be used.\r\n                    </div>\r\n                </nav>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n                <div className=\"title mt-4\">Some example...</div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        If the internal style is defined after the link to the\r\n                        external style sheet, the <code>{`<h1`}</code> elements\r\n                        will be \"orange\":\r\n                    </div>\r\n                </nav>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />{\" \"}\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        However, if the internal style is defined before the\r\n                        link to the external style sheet, the{\" \"}\r\n                        <code>{`h1`}</code> elements will be \"navy\":\r\n                    </div>\r\n                </nav>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />{\" \"}\r\n            </div>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(HowTo);\r\n","export default {\r\n    getStarted: `<!DOCTYPE html>\r\n    <html>\r\n    <body>\r\n    \r\n    <h1 style=\"background-color:Tomato;\">Tomato</h1>\r\n    <h1 style=\"background-color:Orange;\">Orange</h1>\r\n    <h1 style=\"background-color:DodgerBlue;\">DodgerBlue</h1>\r\n    <h1 style=\"background-color:MediumSeaGreen;\">MediumSeaGreen</h1>\r\n    <h1 style=\"background-color:Gray;\">Gray</h1>\r\n    <h1 style=\"background-color:SlateBlue;\">SlateBlue</h1>\r\n    <h1 style=\"background-color:Violet;\">Violet</h1>\r\n    <h1 style=\"background-color:LightGray;\">LightGray</h1>\r\n    \r\n    </body>\r\n    </html>`,\r\n    structural: `<!DOCTYPE html>\r\n    <html>\r\n    <body>\r\n    \r\n    <h1 style=\"background-color:DodgerBlue;\">Hello World</h1>\r\n    \r\n    <p style=\"background-color:Tomato;\">\r\n    Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.\r\n    Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\r\n    </p>\r\n    \r\n    </body>\r\n    </html>`,\r\n    exTag1: `<!DOCTYPE html>\r\n    <html>\r\n    <body>\r\n    \r\n    <h3 style=\"color:Tomato;\">Hello World</h3>\r\n    \r\n    <p style=\"color:DodgerBlue;\">Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.</p>\r\n    \r\n    <p style=\"color:MediumSeaGreen;\">Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</p>\r\n    \r\n    </body>\r\n    </html>`,\r\n    exTag2: `p.center {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag3: `<p class=\"center large\">This paragraph refers to two classes.</p>`,\r\n    exTag4: `* {\r\n        text-align: center;\r\n        color: blue;\r\n      }`,\r\n    exTag5: `h1 {\r\n        text-align: center;\r\n        color: red;\r\n      }\r\n      \r\n      h2 {\r\n        text-align: center;\r\n        color: red;\r\n      }\r\n      \r\n      p {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag6: `h1, h2, p {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport { CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Colors = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">CSS Colors</p>\r\n            <Direct />\r\n            <Divider className={classes.dividerB} />\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}{\" \"}\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    Colors are specified using predefined color names, or RGB,\r\n                    HEX, HSL, RGBA, HSLA values.\r\n                </b>\r\n            </div>{\" \"}\r\n            <div className=\"title mt-4\">CSS Color Names</div>\r\n            <Divider className={classes.dividerS} />{\" \"}\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    In CSS, a color can be specified by using a predefined color\r\n                    name:\r\n                </b>\r\n            </div>{\" \"}\r\n            <img\r\n                src=\"https://scontent.fdad3-4.fna.fbcdn.net/v/t1.15752-9/263423784_443365350525560_3451145979744385671_n.png?_nc_cat=101&ccb=1-5&_nc_sid=ae9488&_nc_ohc=rLBk0JHfG64AX9nIjNG&_nc_ht=scontent.fdad3-4.fna&oh=98a55a3bd4106f3e973167c49b370571&oe=61D6907F\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/PtW9aWI0mR3EkxWaxeJTkTNegq2XTt`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title mt-4\">CSS Background Color</div>\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"mt-3\">\r\n                <b>You can set the background color for HTML elements:</b>\r\n            </div>\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/SQZFGkHxPhkEFmB1ytz9eh0636XF9V`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 mt-2 \">\r\n                {/* <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag1\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div> */}\r\n                {/* <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag2\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div> */}\r\n                <div className=\"title mt-4\">CSS Text Color</div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <div className=\"mt-3\">\r\n                    <b>You can set the color of text:</b>\r\n                </div>\r\n                <div className=\"example mt-3\"></div>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n                <a\r\n                    href={`${SHARE_CODE}/Djopb5qyr0e1RKUytnTi2F4RnK2A0t`}\r\n                    target=\"_blank\"\r\n                >\r\n                    <button className=\"btn btn-code btn-large\">\r\n                        {CODES_ONLINE}\r\n                    </button>\r\n                </a>\r\n                <div className=\"title mt-4\">The CSS class Selector</div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        The class selector selects HTML elements with a specific\r\n                        class attribute.\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        To select elements with a specific class, write a period\r\n                        (.) character, followed by the class name.\r\n                    </div>\r\n                </nav>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n                <a\r\n                    href={`${SHARE_CODE}/usKglW52AcgoFjxEGTxowowUQJp4OG`}\r\n                    target=\"_blank\"\r\n                >\r\n                    <button className=\"btn btn-code btn-large\">\r\n                        {CODES_ONLINE}\r\n                    </button>\r\n                </a>\r\n                <nav className=\"breadcrumb mt-3\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        You can also specify that only specific HTML elements\r\n                        should be affected by a class.\r\n                    </div>\r\n                </nav>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n                <nav className=\"breadcrumb mt-3\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        HTML elements can also refer to more than one class.\r\n                    </div>\r\n                </nav>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n                <div className=\"title mt-4\">The CSS Universal Selector</div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        CSS Color Values\r\n                    </div>\r\n                </nav>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n                <div className=\"title mt-4\">The CSS Grouping Selector</div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        The grouping selector selects all the HTML elements with\r\n                        the same style definitions.\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        Look at the following CSS code (the h1, h2, and p\r\n                        elements have the same style definitions):\r\n                    </div>\r\n                </nav>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />{\" \"}\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        It will be better to group the selectors, to minimize\r\n                        the code.\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        To group selectors, separate each selector with a comma.\r\n                    </div>\r\n                </nav>{\" \"}\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />{\" \"}\r\n            </div>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Colors);\r\n","export default {\r\n    getStarted: `body {\r\n        background-color: lightblue;\r\n      }`,\r\n    structural: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <style>\r\n    h1 {\r\n      background-color: green;\r\n    }\r\n    \r\n    div {\r\n      background-color: lightblue;\r\n    }\r\n    \r\n    p {\r\n      background-color: yellow;\r\n    }\r\n    </style>\r\n    </head>\r\n    <body>\r\n    \r\n    <h1>CSS background-color example!</h1>\r\n    <div>\r\n    This is a text inside a div element.\r\n    <p>This paragraph has its own background color.</p>\r\n    We are still in the div element.\r\n    </div>\r\n    \r\n    </body>\r\n    </html>`,\r\n    exTag1: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <style>\r\n    div {\r\n      background-color: green;\r\n    }\r\n    \r\n    div.first {\r\n      opacity: 0.1;\r\n    }\r\n    \r\n    div.second {\r\n      opacity: 0.3;\r\n    }\r\n    \r\n    div.third {\r\n      opacity: 0.6;\r\n    }\r\n    </style>\r\n    </head>\r\n    <body>\r\n    \r\n    <h1>Transparent Boxes</h1>\r\n    \r\n    <p>When using the opacity property to add transparency to the background of an element, all of its child elements become transparent as well. This can make the text inside a fully transparent element hard to read:</p>\r\n    \r\n    <div class=\"first\">\r\n      <h1>opacity 0.1</h1>\r\n    </div>\r\n    \r\n    <div class=\"second\">\r\n      <h1>opacity 0.3</h1>\r\n    </div>\r\n    \r\n    <div class=\"third\">\r\n      <h1>opacity 0.6</h1>\r\n    </div>\r\n    \r\n    <div>\r\n      <h1>opacity 1 (default)</h1>\r\n    </div>\r\n    \r\n    </body>\r\n    </html>`,\r\n    exTag2: `p.center {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag3: `<p class=\"center large\">This paragraph refers to two classes.</p>`,\r\n    exTag4: `* {\r\n        text-align: center;\r\n        color: blue;\r\n      }`,\r\n    exTag5: `h1 {\r\n        text-align: center;\r\n        color: red;\r\n      }\r\n      \r\n      h2 {\r\n        text-align: center;\r\n        color: red;\r\n      }\r\n      \r\n      p {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag6: `h1, h2, p {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@mui/styles\";\r\nimport { CopyBlock, dracula, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport { CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Backgrounds = (props) => {\r\n    const [language, changeLanguage] = useState(\"html\");\r\n    const [languageDemo, changeDemo] = useState(ex[\"html\"]);\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">CSS Backgrounds</p>\r\n            <Direct />\r\n            <Divider className={classes.dividerB} />\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}{\" \"}\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    The CSS background properties are used to add background\r\n                    effects for elements.\r\n                </b>\r\n            </div>{\" \"}\r\n            <img\r\n                src=\"https://scontent.fdad3-2.fna.fbcdn.net/v/t1.15752-9/264127899_913593272852984_8209791640838876350_n.png?_nc_cat=108&ccb=1-5&_nc_sid=ae9488&_nc_ohc=kQdN3J5zBEEAX8Xbrj5&_nc_ht=scontent.fdad3-2.fna&oh=faf0792892b1839883c8086277f8b456&oe=61D7E8C1\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"title mt-4\">CSS background-color</div>\r\n            <Divider className={classes.dividerS} />{\" \"}\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    The background-color property specifies the background color\r\n                    of an element.\r\n                </b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                With CSS, a color is most often specified by:\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    a valid color name - like \"red\"\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    a HEX value - like \"#ff0000\"\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    an RGB value - like \"rgb(255,0,0)\"\r\n                </li>\r\n            </ul>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Look at CSS Color Values for a complete list of possible color\r\n                values.\r\n            </nav>\r\n            <div className=\"title mt-4\">Other Elements</div>\r\n            <Divider className={classes.dividerS} />\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                You can set the background color for any HTML elements:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/e3LsZlEFOIPpaAPMS3PerEpAPObQTM`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"mt-3\">\r\n                <b>\r\n                    The element selector selects HTML elements based on the\r\n                    element name.\r\n                </b>\r\n            </div>\r\n            <div className=\"h4 mt-2 \">\r\n                <div className=\"title mt-4\">Opacity / Transparency</div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <div>\r\n                    <b>\r\n                        The opacity property specifies the opacity/transparency\r\n                        of an element. It can take a value from 0.0 - 1.0. The\r\n                        lower value, the more transparent:\r\n                    </b>\r\n                </div>\r\n                <div className=\"example mt-3\"></div>\r\n                <div className=\"guide\">An example</div>\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n                <a\r\n                    href={`${SHARE_CODE}/F0cJDc7Z4mtOzG5KUeW5lASQfOuzRK`}\r\n                    target=\"_blank\"\r\n                >\r\n                    <button className=\"btn btn-code btn-large\">\r\n                        {CODES_ONLINE}\r\n                    </button>\r\n                </a>\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        Note: When using the opacity property to add\r\n                        transparency to the background of an element, all of its\r\n                        child elements inherit the same transparency. This can\r\n                        make the text inside a fully transparent element hard to\r\n                        read.\r\n                    </div>\r\n                </nav>\r\n                <div className=\"title mt-4\">Transparency using RGBA</div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        If you do not want to apply opacity to child elements,\r\n                        like in our example above, use RGBA color values. The\r\n                        following example sets the opacity for the background\r\n                        color and not the text:\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        You learned from our CSS Colors Chapter, that you can\r\n                        use RGB as a color value. In addition to RGB, you can\r\n                        use an RGB color value with an alpha channel (RGBA) -\r\n                        which specifies the opacity for a color.\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        An RGBA color value is specified with: rgba(red, green,\r\n                        blue, alpha). The alpha parameter is a number between\r\n                        0.0 (fully transparent) and 1.0 (fully opaque).\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Backgrounds);\r\n","export default {\r\n    getStarted: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <style>\r\n    body {\r\n      background-image: url(\"https://i.pinimg.com/736x/44/fc/80/44fc80e46c9d1398184b3a8ad71ee834.jpg\");\r\n    }\r\n    </style>\r\n    </head>\r\n    <body>\r\n    \r\n    <h1>Hello World!</h1>\r\n    \r\n    <p>This page has an image as the background!</p>\r\n    \r\n    </body>\r\n    </html>`,\r\n    structural: `#para1 {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag1: `.center {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag2: `p.center {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag3: `<p class=\"center large\">This paragraph refers to two classes.</p>`,\r\n    exTag4: `* {\r\n        text-align: center;\r\n        color: blue;\r\n      }`,\r\n    exTag5: `h1 {\r\n        text-align: center;\r\n        color: red;\r\n      }\r\n      \r\n      h2 {\r\n        text-align: center;\r\n        color: red;\r\n      }\r\n      \r\n      p {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag6: `h1, h2, p {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@mui/styles\";\r\nimport { CopyBlock, dracula, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport { CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Images = (props) => {\r\n    const [language, changeLanguage] = useState(\"html\");\r\n    const [languageDemo, changeDemo] = useState(ex[\"html\"]);\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">CSS Images</p>\r\n            <Direct />\r\n            <Divider className={classes.dividerB} />\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}{\" \"}\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    The background-image property specifies an image to use as\r\n                    the background of an element.\r\n                </b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    By default, the image is repeated so it covers the entire\r\n                    element.\r\n                </b>\r\n            </div>{\" \"}\r\n            <img\r\n                src=\"https://scontent.fdad3-3.fna.fbcdn.net/v/t1.15752-9/263387024_859312608072974_2367106350084926813_n.png?_nc_cat=109&ccb=1-5&_nc_sid=ae9488&_nc_ohc=pGtVTnGNUNEAX91wzos&_nc_ht=scontent.fdad3-3.fna&oh=799d9e82e318f8f64676e9ef43b163ac&oe=61D7A043\"\r\n                alt=\"\"\r\n            />\r\n            <a\r\n                href={`${SHARE_CODE}/Lq2PltzHOsj9e1ODl3CN39Wy2OVkXL`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/Lq2PltzHOsj9e1ODl3CN39Wy2OVkXL`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title mt-4\">CSS Background Image</div>\r\n            <Divider className={classes.dividerS} />{\" \"}\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    The background image can also be set for specific elements,\r\n                    like the <code>{`<p>`}</code> element:\r\n                </b>\r\n            </div>{\" \"}\r\n            <div className=\"title mt-4\">CSS background-repeat</div>\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    By default, the background-image property repeats an image\r\n                    both horizontally and vertically.\r\n                </b>\r\n            </div>\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    Some images should be repeated only horizontally or\r\n                    vertically, or they will look strange, like this:\r\n                </b>\r\n            </div>\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"mt-3\">\r\n                <b>\r\n                    The element selector selects HTML elements based on the\r\n                    element name.\r\n                </b>\r\n            </div>\r\n            <div className=\"h4 mt-2 \">\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        If you do not want to apply opacity to child elements,\r\n                        like in our example above, use RGBA color values. The\r\n                        following example sets the opacity for the background\r\n                        color and not the text:\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        You learned from our CSS Colors Chapter, that you can\r\n                        use RGB as a color value. In addition to RGB, you can\r\n                        use an RGB color value with an alpha channel (RGBA) -\r\n                        which specifies the opacity for a color.\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        An RGBA color value is specified with: rgba(red, green,\r\n                        blue, alpha). The alpha parameter is a number between\r\n                        0.0 (fully transparent) and 1.0 (fully opaque).\r\n                    </div>\r\n                </nav>\r\n                {/* <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag1\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div> */}\r\n                {/* <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag2\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div> */}\r\n                <div className=\"title mt-4\">\r\n                    CSS background-repeat: no-repeat\r\n                </div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <div className=\"example mt-3\">\r\n                    Showing the background image only once is also specified by\r\n                    the background-repeat property:\r\n                </div>\r\n                <div className=\"title mt-4\">CSS background-position</div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        The background-position property is used to specify the\r\n                        position of the background image.\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Images);\r\n","export default {\r\n    getStarted: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <style>\r\n    body {\r\n      background-image: url(\"https://1.bp.blogspot.com/-1pectoci57g/V-UyidCFxjI/AAAAAAAAEoc/TEpMOkOoxX8_mZJHFJ4BsvkUYjuSHqcugCLcB/s400/4797926-conan-detective-conan-12631044-1024-768.jpg\");\r\n      background-repeat: no-repeat;\r\n      background-position: right top;\r\n      margin-right: 200px;\r\n      background-attachment: fixed;\r\n    }\r\n    </style>\r\n    </head>\r\n    <body>\r\n    \r\n    <h1>The background-attachment Property</h1>\r\n    \r\n    <p>The background-attachment property specifies whether the background image should scroll or be fixed (will not scroll with the rest of the page).</p>\r\n    \r\n    <p><strong>Tip:</strong> If you do not see any scrollbars, try to resize the browser window.</p>\r\n    \r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    <p>The background-image is fixed. Try to scroll down the page.</p>\r\n    </body>\r\n    </html>`,\r\n    structural: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <style>\r\n    body {\r\n      background-image: url(\"https://i.pinimg.com/originals/61/98/06/619806b527ce3101cace7975497c249e.jpg\");\r\n      background-repeat: no-repeat;\r\n      background-position: right top;\r\n      margin-right: 200px;\r\n      background-attachment: scroll;\r\n    }\r\n    </style>\r\n    </head>\r\n    <body>\r\n    \r\n    <h1>The background-attachment Property</h1>\r\n    \r\n    <p>The background-attachment property specifies whether the background image should scroll or be fixed (will not scroll with the rest of the page).</p>\r\n    \r\n    <p><strong>Tip:</strong> If you do not see any scrollbars, try to resize the browser window.</p>\r\n    \r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    <p>The background-image scrolls. Try to scroll down the page.</p>\r\n    </body>\r\n    </html>`,\r\n    exTag1: `.center {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag2: `p.center {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag3: `<p class=\"center large\">This paragraph refers to two classes.</p>`,\r\n    exTag4: `* {\r\n        text-align: center;\r\n        color: blue;\r\n      }`,\r\n    exTag5: `h1 {\r\n        text-align: center;\r\n        color: red;\r\n      }\r\n      \r\n      h2 {\r\n        text-align: center;\r\n        color: red;\r\n      }\r\n      \r\n      p {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag6: `h1, h2, p {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@mui/styles\";\r\nimport { CopyBlock, dracula, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport { CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Attachment = (props) => {\r\n    const [language, changeLanguage] = useState(\"html\");\r\n    const [languageDemo, changeDemo] = useState(ex[\"html\"]);\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">CSS Background Attachment</p>\r\n            <Direct />\r\n            <Divider className={classes.dividerB} />\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}{\" \"}\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    The background-attachment property specifies whether the\r\n                    background image should scroll or be fixed (will not scroll\r\n                    with the rest of the page):\r\n                </b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    By default, the image is repeated so it covers the entire\r\n                    element.\r\n                </b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/TMIuK3Z3aw6BuckdI6lxw0et2BgUC4`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/zQKVY4QmQ47dzsNCBYQLIBcgkfiY8Q`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Attachment);\r\n","export default {\r\n    getStarted: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <style>\r\n    ul.a {\r\n      list-style-type: circle;\r\n    }\r\n    \r\n    ul.b {\r\n      list-style-type: square;\r\n    }\r\n    \r\n    ol.c {\r\n      list-style-type: upper-roman;\r\n    }\r\n    \r\n    ol.d {\r\n      list-style-type: lower-alpha;\r\n    }\r\n    </style>\r\n    </head>\r\n    <body>\r\n    \r\n    <h2>The list-style-type Property</h2>\r\n    \r\n    <p>Example of unordered lists:</p>\r\n    <ul class=\"a\">\r\n      <li>Coffee</li>\r\n      <li>Tea</li>\r\n      <li>Coca Cola</li>\r\n    </ul>\r\n    \r\n    <ul class=\"b\">\r\n      <li>Coffee</li>\r\n      <li>Tea</li>\r\n      <li>Coca Cola</li>\r\n    </ul>\r\n    \r\n    <p>Example of ordered lists:</p>\r\n    <ol class=\"c\">\r\n      <li>Coffee</li>\r\n      <li>Tea</li>\r\n      <li>Coca Cola</li>\r\n    </ol>\r\n    \r\n    <ol class=\"d\">\r\n      <li>Coffee</li>\r\n      <li>Tea</li>\r\n      <li>Coca Cola</li>\r\n    </ol>\r\n    \r\n    </body>\r\n    </html>`,\r\n    structural: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <style>\r\n    ul {\r\n      list-style-image: url('sqpurple.gif');\r\n    }\r\n    </style>\r\n    </head>\r\n    <body>\r\n    \r\n    <h2>The list-style-image Property</h2>\r\n    \r\n    <p>The list-style-image property specifies an image as the list item marker:</p>\r\n    \r\n    <ul>\r\n      <li>Coffee</li>\r\n      <li>Tea</li>\r\n      <li>Coca Cola</li>\r\n    </ul>\r\n    \r\n    </body>\r\n    </html>`,\r\n    exTag1: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <style>\r\n    ul.demo {\r\n      list-style-type: none;\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n    </style>\r\n    </head>\r\n    <body>\r\n    \r\n    <p>Default list:</p>\r\n    <ul>\r\n      <li>Coffee</li>\r\n      <li>Tea</li>\r\n      <li>Coca Cola</li>\r\n    </ul>\r\n    \r\n    <p>Remove bullets, margin and padding from list:</p>\r\n    <ul class=\"demo\">\r\n      <li>Coffee</li>\r\n      <li>Tea</li>\r\n      <li>Coca Cola</li>\r\n    </ul>\r\n    \r\n    </body>\r\n    </html>`,\r\n    exTag2: `p.center {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag3: `<p class=\"center large\">This paragraph refers to two classes.</p>`,\r\n    exTag4: `* {\r\n        text-align: center;\r\n        color: blue;\r\n      }`,\r\n    exTag5: `h1 {\r\n        text-align: center;\r\n        color: red;\r\n      }\r\n      \r\n      h2 {\r\n        text-align: center;\r\n        color: red;\r\n      }\r\n      \r\n      p {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag6: `h1, h2, p {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles, withStyles } from \"@mui/styles\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport { CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Lists = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">CSS Lists</p>\r\n            <Direct />\r\n            <Divider className={classes.dividerB} />\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}{\" \"}\r\n            <img\r\n                src=\"https://scontent.fdad3-5.fna.fbcdn.net/v/t1.15752-9/262867661_708131226829418_6352223156156052940_n.png?_nc_cat=102&ccb=1-5&_nc_sid=ae9488&_nc_ohc=cULnfNYvhFQAX-fR_Af&_nc_ht=scontent.fdad3-5.fna&oh=c0beb4a328ae3bd0c1439df7bc60caf5&oe=61DA3A66\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"title mt-4\">HTML Lists and CSS List Properties</div>\r\n            <Divider className={classes.dividerS} />{\" \"}\r\n            <div className=\"mt-4\">\r\n                <b>In HTML, there are two main types of lists:</b>\r\n            </div>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    unordered lists <code>{`(<ul>)`}</code> - the list items are\r\n                    marked with bullets\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    ordered lists <code>{`(<ol>)`}</code> - the list items are\r\n                    marked with numbers or letters\r\n                </li>\r\n            </ul>\r\n            <div className=\"mt-4\">\r\n                <b>The CSS list properties allow you to:</b>\r\n            </div>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    Set different list item markers for ordered lists\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    Set different list item markers for unordered lists\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    Set an image as the list item marker\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    Add background colors to lists and list items\r\n                </li>\r\n            </ul>\r\n            <div className=\"title mt-4\">Different List Item Markers</div>\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    The list-style-type property specifies the type of list item\r\n                    marker.\r\n                </b>\r\n            </div>\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    The following example shows some of the available list item\r\n                    markers:\r\n                </b>\r\n            </div>\r\n            <img\r\n                src=\"https://scontent.fdad3-4.fna.fbcdn.net/v/t1.15752-9/262156298_950190775609289_5578887055005730167_n.png?_nc_cat=104&ccb=1-5&_nc_sid=ae9488&_nc_ohc=B265qXnhZgwAX8mha_j&_nc_ht=scontent.fdad3-4.fna&oh=f27eb9eae23bf966f4258794778150d6&oe=61D8954D\"\r\n                alt=\"\"\r\n            />{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/PwQSueNzNWCZSRduSSNjFihw6J01sU`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            <div className=\"mt-3\">\r\n                <b>\r\n                    The element selector selects HTML elements based on the\r\n                    element name.\r\n                </b>\r\n            </div>\r\n            <div className=\"h4 mt-2 \">\r\n                <div className=\"title mt-4\">\r\n                    An Image as The List Item Marker\r\n                </div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <div className=\"example mt-3\">\r\n                    The list-style-image property specifies an image as the list\r\n                    item marker:\r\n                </div>\r\n                <div className=\"example mt-3\">\r\n                    <div className=\"guide\">An example</div>\r\n\r\n                    <CopyBlock\r\n                        language={\"css\"}\r\n                        text={ex[\"structural\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>{\" \"}\r\n                <a\r\n                    href={`${SHARE_CODE}/yx0OcVlw2DFbPo04ATgHnR7MbOzaQl`}\r\n                    target=\"_blank\"\r\n                >\r\n                    <button className=\"btn btn-code btn-large\">\r\n                        {CODES_ONLINE}\r\n                    </button>\r\n                </a>\r\n                <div className=\"title mt-4\">Position The List Item Markers</div>\r\n                <Divider className={classes.dividerS} />{\" \"}\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        The list-style-position property specifies the position\r\n                        of the list-item markers (bullet points).{\" \"}\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        \"list-style-position: outside;\" means that the bullet\r\n                        points will be outside the list item. The start of each\r\n                        line of a list item will be aligned vertically. This is\r\n                        default:\r\n                    </div>\r\n                </nav>\r\n                <nav className=\"breadcrumb mt-4\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        \"list-style-position: inside;\" means that the bullet\r\n                        points will be inside the list item. As it is part of\r\n                        the list item, it will be part of the text and push the\r\n                        text at the start:\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n            <div className=\"title mt-4\">Remove Default Settings</div>\r\n            <Divider className={classes.dividerS} />{\" \"}\r\n            <div className=\"example mt-3\">\r\n                The list-style-type:none property can also be used to remove the\r\n                markers/bullets. Note that the list also has default margin and\r\n                padding. To remove this, add margin:0 and padding:0 to{\" \"}\r\n                <code>{`<ul> or <ol>`}</code>:\r\n            </div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"title mt-4\">List - Shorthand property</div>\r\n            <Divider className={classes.dividerS} />{\" \"}\r\n            <div className=\"example mt-3\">\r\n                The list-style property is a shorthand property. It is used to\r\n                set all the list properties in one declaration:\r\n                <code>{`<ul> or <ol>`}</code>:\r\n            </div>\r\n            <div className=\"mt-3\">\r\n                <b>\r\n                    list-style-type (if a list-style-image is specified, the\r\n                    value of this property will be displayed if the image for\r\n                    some reason cannot be displayed)\r\n                </b>\r\n            </div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                <div className=\"guide font-weight-bold\">\r\n                    list-style-position (specifies whether the list-item markers\r\n                    should appear inside or outside the content flow)\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                <div className=\"guide font-weight-bold\">\r\n                    list-style-image (specifies an image as the list item\r\n                    marker)\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                <div className=\"guide font-weight-bold\">\r\n                    If one of the property values above are missing, the default\r\n                    value for the missing property will be inserted, if any.\r\n                </div>\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Lists);\r\n","export default {\r\n    getStarted: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <style>\r\n    table {\r\n      border-collapse: collapse;\r\n      width: 100%;\r\n    }\r\n    \r\n    th, td {\r\n      text-align: left;\r\n      padding: 8px;\r\n    }\r\n    \r\n    tr:nth-child(even) {background-color: #f2f2f2;}\r\n    </style>\r\n    </head>\r\n    <body>\r\n    \r\n    <h2>Responsive Table</h2>\r\n    <p>A responsive table will display a horizontal scroll bar if the screen is too \r\n    small to display the full content. Resize the browser window to see the effect:</p>\r\n    <p>To create a responsive table, add a container element (like div) with <strong>overflow-x:auto</strong> around the table element:</p>\r\n    \r\n    <div style=\"overflow-x: auto;\">\r\n      <table>\r\n        <tr>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Points</th>\r\n          <th>Points</th>\r\n          <th>Points</th>\r\n          <th>Points</th>\r\n          <th>Points</th>\r\n          <th>Points</th>\r\n          <th>Points</th>\r\n          <th>Points</th>\r\n          <th>Points</th>\r\n          <th>Points</th>\r\n        </tr>\r\n        <tr>\r\n          <td>Jill</td>\r\n          <td>Smith</td>\r\n          <td>50</td>\r\n          <td>50</td>\r\n          <td>50</td>\r\n          <td>50</td>\r\n          <td>50</td>\r\n          <td>50</td>\r\n          <td>50</td>\r\n          <td>50</td>\r\n          <td>50</td>\r\n          <td>50</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Eve</td>\r\n          <td>Jackson</td>\r\n          <td>94</td>\r\n          <td>94</td>\r\n          <td>94</td>\r\n          <td>94</td>\r\n          <td>94</td>\r\n          <td>94</td>\r\n          <td>94</td>\r\n          <td>94</td>\r\n          <td>94</td>\r\n          <td>94</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Adam</td>\r\n          <td>Johnson</td>\r\n          <td>67</td>\r\n          <td>67</td>\r\n          <td>67</td>\r\n          <td>67</td>\r\n          <td>67</td>\r\n          <td>67</td>\r\n          <td>67</td>\r\n          <td>67</td>\r\n          <td>67</td>\r\n          <td>67</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    </body>\r\n    </html>`,\r\n    structural: `#para1 {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag1: `.center {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag2: `p.center {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag3: `<p class=\"center large\">This paragraph refers to two classes.</p>`,\r\n    exTag4: `* {\r\n        text-align: center;\r\n        color: blue;\r\n      }`,\r\n    exTag5: `h1 {\r\n        text-align: center;\r\n        color: red;\r\n      }\r\n      \r\n      h2 {\r\n        text-align: center;\r\n        color: red;\r\n      }\r\n      \r\n      p {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag6: `h1, h2, p {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@mui/styles\";\r\nimport { CopyBlock, dracula, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport { CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Responsive = (props) => {\r\n    const [language, changeLanguage] = useState(\"html\");\r\n    const [languageDemo, changeDemo] = useState(ex[\"html\"]);\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">CSS Responsive Table</p>\r\n            <Direct />\r\n            <Divider className={classes.dividerB} />\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}{\" \"}\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    Add a container element{\" \"}\r\n                    <code>{`(like <div>) with overflow-x:auto around the <table>`}</code>{\" \"}\r\n                    element to make it responsive:\r\n                </b>\r\n            </div>{\" \"}\r\n            <img\r\n                src=\"https://scontent.fdad3-3.fna.fbcdn.net/v/t1.15752-9/262506119_925530334757407_1697561849346879495_n.png?_nc_cat=100&ccb=1-5&_nc_sid=ae9488&_nc_ohc=ahAx8hNqVqAAX_44LM4&_nc_ht=scontent.fdad3-3.fna&oh=8d7bce8f0074404ffb1b34444491e926&oe=61D9086A\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/tcOGjkzVjMnas8EaDsh40bVIGJ2Jme`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Responsive);\r\n","export default {\r\n    getStarted: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <style>\r\n    div p {\r\n      background-color: yellow;\r\n    }\r\n    </style>\r\n    </head>\r\n    <body>\r\n    \r\n    <h2>Descendant Selector</h2>\r\n    \r\n    <p>The descendant selector matches all elements that are descendants of a specified element.</p>\r\n    \r\n    <div>\r\n      <p>Paragraph 1 in the div.</p>\r\n      <p>Paragraph 2 in the div.</p>\r\n      <section><p>Paragraph 3 in the div.</p></section>\r\n    </div>\r\n    \r\n    <p>Paragraph 4. Not in a div.</p>\r\n    <p>Paragraph 5. Not in a div.</p>\r\n    \r\n    </body>\r\n    </html>`,\r\n    structural: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <style>\r\n    div > p {\r\n      background-color: yellow;\r\n    }\r\n    </style>\r\n    </head>\r\n    <body>\r\n    \r\n    <h2>Child Selector</h2>\r\n    \r\n    <p>The child selector (>) selects all elements that are the children of a specified element.</p>\r\n    \r\n    <div>\r\n      <p>Paragraph 1 in the div.</p>\r\n      <p>Paragraph 2 in the div.</p>\r\n      <section>\r\n        <!-- not Child but Descendant -->\r\n        <p>Paragraph 3 in the div (inside a section element).</p>\r\n      </section>\r\n      <p>Paragraph 4 in the div.</p>\r\n    </div>\r\n    \r\n    <p>Paragraph 5. Not in a div.</p>\r\n    <p>Paragraph 6. Not in a div.</p>\r\n    \r\n    </body>\r\n    </html>`,\r\n    exTag1: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <style>\r\n    div + p {\r\n      background-color: yellow;\r\n    }\r\n    </style>\r\n    </head>\r\n    <body>\r\n    \r\n    <h2>Adjacent Sibling Selector</h2>\r\n    \r\n    <p>The + selector is used to select an element that is directly after another specific element.</p>\r\n    <p>The following example selects the first p element that are placed immediately after div elements:</p>\r\n    \r\n    <div>\r\n      <p>Paragraph 1 in the div.</p>\r\n      <p>Paragraph 2 in the div.</p>\r\n    </div>\r\n    \r\n    <p>Paragraph 3. After a div.</p>\r\n    <p>Paragraph 4. After a div.</p>\r\n    \r\n    <div>\r\n      <p>Paragraph 5 in the div.</p>\r\n      <p>Paragraph 6 in the div.</p>\r\n    </div>\r\n    \r\n    <p>Paragraph 7. After a div.</p>\r\n    <p>Paragraph 8. After a div.</p>\r\n    \r\n    </body>\r\n    </html>`,\r\n    exTag2: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <style>\r\n    div ~ p {\r\n      background-color: yellow;\r\n    }\r\n    </style>\r\n    </head>\r\n    <body>\r\n    \r\n    <h2>General Sibling Selector</h2>\r\n    \r\n    <p>The general sibling selector (~) selects all elements that are next siblings of a specified element.</p>\r\n    \r\n    <p>Paragraph 1.</p>\r\n    \r\n    <div>\r\n      <p>Paragraph 2.</p>\r\n    </div>\r\n    \r\n    <p>Paragraph 3.</p>\r\n    <code>Some code.</code>\r\n    <p>Paragraph 4.</p>\r\n    \r\n    </body>\r\n    </html>`,\r\n    exTag3: `<p class=\"center large\">This paragraph refers to two classes.</p>`,\r\n    exTag4: `* {\r\n        text-align: center;\r\n        color: blue;\r\n      }`,\r\n    exTag5: `h1 {\r\n        text-align: center;\r\n        color: red;\r\n      }\r\n      \r\n      h2 {\r\n        text-align: center;\r\n        color: red;\r\n      }\r\n      \r\n      p {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag6: `h1, h2, p {\r\n        text-align: center;\r\n        color: red;\r\n      }`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@mui/styles\";\r\nimport { CopyBlock, dracula, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport { CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Combinators = (props) => {\r\n    const [language, changeLanguage] = useState(\"html\");\r\n    const [languageDemo, changeDemo] = useState(ex[\"html\"]);\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">CSS Combinators</p>\r\n            <Direct />\r\n            <Divider className={classes.dividerB} />\r\n            {/* <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}{\" \"}\r\n            <div className=\"example mt-5\">\r\n                <b>\r\n                    A combinator is something that explains the relationship\r\n                    between the selectors.\r\n                </b>\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                A CSS selector can contain more than one simple selector.\r\n                Between the simple selectors, we can include a combinator.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                There are four different combinators in CSS:\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    descendant selector (space)\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">child selector {`(>)`}</li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    adjacent sibling selector (+)\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    general sibling selector (~)\r\n                </li>\r\n            </ul>\r\n            <div className=\"title mt-4\">Descendant Selector</div>\r\n            <Divider className={classes.dividerS} />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The descendant selector matches all elements that are\r\n                descendants of a specified element.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The following example selects all{\" \"}\r\n                <code>{`<p> elements inside <div>`}</code> elements:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/LQsHoRsi60cNP3yUb8Nwio0sBg6g8X`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title mt-4\">Child Selector {`>`}</div>\r\n            <Divider className={classes.dividerS} />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The child selector selects all elements that are the children of\r\n                a specified element.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The following example selects all{\" \"}\r\n                <code>{`<p> elements that are children of a <div>`}</code>{\" \"}\r\n                element:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/gUwXqVNdEQD3lY8Vt6lZ1Z1O2ixzRg`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title mt-4\">Adjacent Sibling Selector (+)</div>\r\n            <Divider className={classes.dividerS} />{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The adjacent sibling selector is used to select an element that\r\n                is directly after another specific element.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Sibling elements must have the same parent element, and\r\n                \"adjacent\" means \"immediately following\".\r\n            </nav>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The following example selects the first <code>{`<p>`}</code>{\" \"}\r\n                element that are placed immediately after <code>{`<div>`}</code>{\" \"}\r\n                elements:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/bhUQS8ZYqJp0kyeqmOIr0i11jPkTW7`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title mt-4\">General Sibling Selector (~)</div>\r\n            <Divider className={classes.dividerS} />{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The general sibling selector selects all elements that are next\r\n                siblings of a specified element.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The following example selects all{\" \"}\r\n                <code>{`<p> elements that are next siblings of <div>`}</code>{\" \"}\r\n                elements:\r\n            </nav>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"css\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Combinators);\r\n","import GetStarted from \"../../contentLibrary/css/GetStarted/GetStarted\";\r\nimport Introduction from \"../../contentLibrary/css/Introduction/Introduction\";\r\nimport React from \"react\";\r\nimport Syntax from \"../../contentLibrary/css/Syntax/Syntax\";\r\nimport Selectors from \"../../contentLibrary/css/Selectors/Selectors\";\r\nimport HowTo from \"../../contentLibrary/css/HowTo/HowTo\";\r\nimport Colors from \"../../contentLibrary/css/Colors/Colors\";\r\nimport Backgrounds from \"../../contentLibrary/css/Backgrounds/Backgrounds\";\r\nimport Images from \"../../contentLibrary/css/Images/Images\";\r\nimport Attachment from \"../../contentLibrary/css/Attachment/Attachment\";\r\nimport Lists from \"../../contentLibrary/css/Lists/Lists\";\r\nimport Responsive from \"../../contentLibrary/css/Responsive/Responsive\";\r\nimport Combinators from \"../../contentLibrary/css/Combinators/Combinators\";\r\n\r\nexport const CSS_TUTORIALS = [\r\n    {\r\n        path: \"/tutorials/css/introduction\",\r\n        name: \"Introduction\",\r\n        exact: true,\r\n        component: (props) => <Introduction {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/css/get-started\",\r\n        name: \"Get Started\",\r\n        exact: true,\r\n        component: (props) => <GetStarted {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/css/css-syntax\",\r\n        name: \"CSS Syntax\",\r\n        exact: true,\r\n        component: (props) => <Syntax {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/css/css-selectors\",\r\n        name: \"CSS Selectors\",\r\n        exact: true,\r\n        component: (props) => <Selectors {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/css/css-how-to\",\r\n        name: \"CSS How To\",\r\n        exact: true,\r\n        component: (props) => <HowTo {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/css/css-colors\",\r\n        name: \"CSS Colors\",\r\n        exact: true,\r\n        component: (props) => <Colors {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/css/css-backgrounds\",\r\n        name: \"CSS Backgrounds\",\r\n        exact: true,\r\n        component: (props) => <Backgrounds {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/css/css-images\",\r\n        name: \"CSS Images\",\r\n        exact: true,\r\n        component: (props) => <Images {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/css/css-attachment\",\r\n        name: \"CSS Attachment\",\r\n        exact: true,\r\n        component: (props) => <Attachment {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/css/css-lists\",\r\n        name: \"CSS Lists\",\r\n        exact: true,\r\n        component: (props) => <Lists {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/css/css-responsive\",\r\n        name: \"CSS responsive\",\r\n        exact: true,\r\n        component: (props) => <Responsive {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/css/css-combinators\",\r\n        name: \"CSS Combinators\",\r\n        exact: true,\r\n        component: (props) => <Combinators {...props} />,\r\n    },\r\n];\r\n","export const styles = (theme) => ({\r\n    dividerB: {\r\n        color: `#8167a9`,\r\n        background: `#8167a9`,\r\n        margin: `8px 0`,\r\n        height: `7px`,\r\n        borderRadius: `7px 7px`,\r\n    },\r\n    dividerS: {\r\n        color: `#8167a9`,\r\n        background: `#8167a9`,\r\n        margin: `8px 0 15px 0`,\r\n        height: `3px`,\r\n        borderRadius: `7px 7px`,\r\n    },\r\n});\r\n","import { Divider } from \"@mui/material\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport React, { Fragment } from \"react\";\r\nimport { styles } from \"../contentLibrary/html/Introduction/styles\";\r\n\r\nconst LineDivider = ({ size, classes }) => {\r\n    return (\r\n        <Fragment>\r\n            {size === \"big\" ? (\r\n                <Divider className={classes.dividerB} />\r\n            ) : size === \"small\" ? (\r\n                <Divider className={classes.dividerS} />\r\n            ) : (\r\n                <Divider className={classes.dividerS} />\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(LineDivider);\r\n","export const styles = (theme) => ({\r\n    dividerB: {\r\n        color: `#8167a9`,\r\n        background: `#8167a9`,\r\n        margin: `8px 0`,\r\n        height: `7px`,\r\n        borderRadius: `7px 7px`,\r\n    },\r\n    dividerS: {\r\n        color: `#8167a9`,\r\n        background: `#8167a9`,\r\n        margin: `8px 0 15px 0`,\r\n        height: `3px`,\r\n        borderRadius: `7px 7px`,\r\n    },\r\n});\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst GetStarted = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">Get Started</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    JavaScript is the world's most popular programming language.\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    JavaScript is the programming language of the Web.\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">JavaScript is easy to learn.</div>\r\n            </nav>\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    This tutorial will teach you JavaScript from basic to\r\n                    advanced.\r\n                </div>\r\n            </nav>\r\n\r\n            <div className=\"h4 title mt-5\">Examples in Each Chapter</div>\r\n            <LineDivider size=\"small\" />\r\n\r\n            <nav className=\"breadcrumb mt-3\">\r\n                One of many JavaScript HTML methods is getElementById().\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The example below \"finds\" an HTML element (with id=\"demo\"), and\r\n                changes the element content (innerHTML) to \"Hello JavaScript\":\r\n            </nav>\r\n            <a\r\n                href={`${SHARE_CODE}/PosyxyJfqpmzt96dik5VD07HdSGEd9`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Use the Menu</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                We recommend reading this tutorial, in the sequence listed in\r\n                the menu.\r\n            </nav>\r\n\r\n            <nav className=\"breadcrumb mt-3\">\r\n                If you have a large screen, the menu will always be present on\r\n                the left.\r\n            </nav>\r\n\r\n            <nav className=\"breadcrumb mt-3\">\r\n                If you have a small screen, open the menu by clicking the top\r\n                menu sign ☰.\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">Why Study JavaScript?</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                JavaScript is one of the 3 languages all web developers must\r\n                learn:\r\n            </nav>\r\n\r\n            <nav className=\"breadcrumb mt-3\">\r\n                1. HTML to define the content of web pages\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                2. CSS to specify the layout of web pages\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                3. JavaScript to program the behavior of web pages\r\n            </nav>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(GetStarted);\r\n","export default {\r\n    introduction: `document.getElementById(\"demo\").innerHTML = \"Hello JavaScript\";`,\r\n    getStarted: `document.getElementById('demo').innerHTML = 'Hello JavaScript';`,\r\n    exTag1: `<h1>My Code So Strong...</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"./styles\";\r\nimport \"./Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Introduction = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">JavaScript Introduction</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    This page contains some examples of what JavaScript can do.\r\n                </div>\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">\r\n                JavaScript Can Change HTML Content\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                One of many JavaScript HTML methods is getElementById().\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The example below \"finds\" an HTML element (with id=\"demo\"), and\r\n                changes the element content (innerHTML) to \"Hello JavaScript\":\r\n            </nav>\r\n            <a\r\n                href={`${SHARE_CODE}/PosyxyJfqpmzt96dik5VD07HdSGEd9`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    Tip: The word cascading means that a style applied to a\r\n                    parent element will also apply to all children elements\r\n                    within the parent. So, if you set the color of the body text\r\n                    to \"blue\", all headings, paragraphs, and other text elements\r\n                    within the body will also get the same color (unless you\r\n                    specify something else)!\r\n                </b>\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>JavaScript accepts both double and single quotes:</b>\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"h4 title mt-5\">Overview</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                JavaScript is a multi-paradigm, dynamic language with types and\r\n                operators, standard built-in objects, and methods.\r\n            </nav>\r\n\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Its syntax is based on the Java and C languages — many\r\n                structures from those languages apply to JavaScript as well.\r\n                JavaScript supports object-oriented programming with object\r\n                prototypes, instead of classes (see more about prototypical\r\n                inheritance and ES2015 classes). JavaScript also supports\r\n                functional programming — because they are objects, functions may\r\n                be stored in variables and passed around like any other object.\r\n            </nav>\r\n\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Let's start off by looking at the building blocks of any\r\n                language: the types. JavaScript programs manipulate values, and\r\n                those values all belong to a type. JavaScript's types are:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                oh, and undefined and null, which are ... slightly odd. And\r\n                Array, which is a special kind of object. And Date and RegExp,\r\n                which are objects that you get for free. And to be technically\r\n                accurate, functions are just a special type of object. So the\r\n                type diagram looks more like this:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                And there are some built-in Error types as well. Things are a\r\n                lot easier if we stick with the first diagram, however, so we'll\r\n                discuss the types listed there for now.\r\n            </nav>\r\n\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Introduction);\r\n","export default {\r\n    getStarted: `<p id=\"demo\"></p>\r\n    <script>\r\n    document.getElementById(\"demo\").innerHTML = \"My First JavaScript\";\r\n    </script>`,\r\n    structural: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <script>\r\n    function myFunction() {\r\n      document.getElementById(\"demo\").innerHTML = \"Paragraph changed.\";\r\n    }\r\n    </script>\r\n    </head>\r\n    <body>\r\n    <h2>Demo JavaScript in Head</h2>\r\n    \r\n    <p id=\"demo\">A Paragraph</p>\r\n    <button type=\"button\" onclick=\"myFunction()\">Try it</button>\r\n    </body>\r\n    </html`,\r\n    exTag1: `function myFunction() {\r\n        document.getElementById(\"demo\").innerHTML = \"Paragraph changed.\";\r\n      }`,\r\n    exTag2: `<script src=\"myScript.js\"></script>`,\r\n    exTag3: `<script src=\"myScript1.js\"></script>\r\n    <script src=\"myScript2.js\"></script>`,\r\n    exTag4: `p {\r\nborder: 2px solid powderblue;\r\npadding: 30px;\r\n}`,\r\n    exTag5: `p {\r\nborder: 2px solid powderblue;\r\nmargin: 50px;\r\n}`,\r\n    exTag6: `<link rel=\"stylesheet\" href=\"https://www.w3schools.com/html/styles.css\">`,\r\n    exTag7: `<link rel=\"stylesheet\" href=\"/html/styles.css\">`,\r\n    exTag8: `<link rel=\"stylesheet\" href=\"styles.css\">`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\nimport Divider from \"@mui/material/Divider\";\r\n\r\nconst Scripts = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">Scripts</p>\r\n            <Direct />\r\n            <Divider className={classes.dividerB} />\r\n            <nav className=\"breadcrumb my-bread mt-4\">\r\n                <div className=\"guide\">\r\n                    The <code>{`<script>`}</code> Tag\r\n                </div>\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">\r\n                {\" \"}\r\n                The <code>{`<script>`}</code> Tag\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <div className=\"guide\">\r\n                In HTML, JavaScript code is inserted between{\" \"}\r\n                <code>{`<script> and </script>`}</code> tags.\r\n            </div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/fV9WPWAk8PkCnUasaJ2KwLeZxvrjPl`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                Old JavaScript examples may use a type attribute:{\" \"}\r\n                <code>{`<script type=\"text/javascript\">`}</code>The type\r\n                attribute is not required. JavaScript is the default scripting\r\n                language in HTML.\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">JavaScript Functions and Events</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                A JavaScript function is a block of JavaScript code, that can be\r\n                executed when \"called\" for.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                For example, a function can be called when an event occurs, like\r\n                when the user clicks a button.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                You will learn much more about functions and events in later\r\n                chapters.\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">\r\n                <code>{`JavaScript in <head> or <body>`}</code>\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                You can place any number of scripts in an HTML document.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Scripts can be placed in the{\" \"}\r\n                <code>{`<body>, or in the <head>`}</code> section of an HTML\r\n                page, or in both.\r\n            </nav>{\" \"}\r\n            <div className=\"h4 title mt-5\">\r\n                JavaScript in <code>{`<head>`}</code>\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                In this example, a JavaScript function is placed in the{\" \"}\r\n                <code>{`<head>`}</code> section of an HTML page.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The function is invoked (called) when a button is clicked:\r\n            </nav>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/GODrpVIbDpohSxrzKAg0YNfutqeVTp`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">\r\n                JavaScript in <code>{`<body>`}</code>\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                In this example, a JavaScript function is placed in the{\" \"}\r\n                <code>{`<body>`}</code> section of an HTML page.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The function is invoked (called) when a button is clicked:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/GODrpVIbDpohSxrzKAg0YNfutqeVTp`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">External JavaScript</div>\r\n            <LineDivider size=\"small\" />\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                External scripts are practical when the same code is used in\r\n                many different web pages.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                JavaScript files have the file extension .js.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                To use an external script, put the name of the script file in\r\n                the src (source) attribute of a <code>{`<script>`}</code> tag:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                You can place an external script reference in{\" \"}\r\n                <code>{`<head> or <body>`}</code> as you like.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The script will behave as if it was located exactly where the{\" \"}\r\n                <code>{`<script>`}</code> tag is located.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                External scripts cannot contain <code>{`<script>`}</code> tags.\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">External JavaScript Advantages</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">It separates HTML and code</nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                It makes HTML and JavaScript easier to read and maintain\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Cached JavaScript files can speed up page loads\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                To add several script files to one page - use several script\r\n                tags:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"h4 title mt-5\">External References</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                An external script can be referenced in 3 different ways:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                With a full URL (a full web address)\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">With a file path (like /js/)</nav>\r\n            <nav className=\"breadcrumb mt-3\">Without any path</nav>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Scripts);\r\n","export default {\r\n    getStarted: `<p id=\"demo\"></p>\r\n    <script>\r\n    document.getElementById(\"demo\").innerHTML = \"My First JavaScript\";\r\n    </script>`,\r\n    structural: `<!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n    <script>\r\n    function myFunction() {\r\n      document.getElementById(\"demo\").innerHTML = \"Paragraph changed.\";\r\n    }\r\n    </script>\r\n    </head>\r\n    <body>\r\n    <h2>Demo JavaScript in Head</h2>\r\n    \r\n    <p id=\"demo\">A Paragraph</p>\r\n    <button type=\"button\" onclick=\"myFunction()\">Try it</button>\r\n    </body>\r\n    </html`,\r\n    exTag1: `function myFunction() {\r\n        document.getElementById(\"demo\").innerHTML = \"Paragraph changed.\";\r\n      }`,\r\n    exTag2: `<script src=\"myScript.js\"></script>`,\r\n    exTag3: `<script src=\"myScript1.js\"></script>\r\n    <script src=\"myScript2.js\"></script>`,\r\n    exTag4: `p {\r\nborder: 2px solid powderblue;\r\npadding: 30px;\r\n}`,\r\n    exTag5: `p {\r\nborder: 2px solid powderblue;\r\nmargin: 50px;\r\n}`,\r\n    exTag6: `<link rel=\"stylesheet\" href=\"https://www.w3schools.com/html/styles.css\">`,\r\n    exTag7: `<link rel=\"stylesheet\" href=\"/html/styles.css\">`,\r\n    exTag8: `<link rel=\"stylesheet\" href=\"styles.css\">`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\nimport Divider from \"@mui/material/Divider\";\r\n\r\nconst Scripts = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">JS Output</p>\r\n            <Direct />\r\n            <Divider className={classes.dividerB} />\r\n            <div className=\"h4 title mt-5\">\r\n                {\" \"}\r\n                The <code>{`<script>`}</code> Tag\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <div className=\"guide\">\r\n                In HTML, JavaScript code is inserted between{\" \"}\r\n                <code>{`<script> and </script>`}</code> tags.\r\n            </div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/fV9WPWAk8PkCnUasaJ2KwLeZxvrjPl`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                Old JavaScript examples may use a type attribute:{\" \"}\r\n                <code>{`<script type=\"text/javascript\">`}</code>The type\r\n                attribute is not required. JavaScript is the default scripting\r\n                language in HTML.\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">JavaScript Functions and Events</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                A JavaScript function is a block of JavaScript code, that can be\r\n                executed when \"called\" for.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                For example, a function can be called when an event occurs, like\r\n                when the user clicks a button.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                You will learn much more about functions and events in later\r\n                chapters.\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">\r\n                <code>{`JavaScript in <head> or <body>`}</code>\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                You can place any number of scripts in an HTML document.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Scripts can be placed in the{\" \"}\r\n                <code>{`<body>, or in the <head>`}</code> section of an HTML\r\n                page, or in both.\r\n            </nav>{\" \"}\r\n            <div className=\"h4 title mt-5\">\r\n                JavaScript in <code>{`<head>`}</code>\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                In this example, a JavaScript function is placed in the{\" \"}\r\n                <code>{`<head>`}</code> section of an HTML page.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The function is invoked (called) when a button is clicked:\r\n            </nav>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/GODrpVIbDpohSxrzKAg0YNfutqeVTp`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">\r\n                JavaScript in <code>{`<body>`}</code>\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                In this example, a JavaScript function is placed in the{\" \"}\r\n                <code>{`<body>`}</code> section of an HTML page.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The function is invoked (called) when a button is clicked:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/GODrpVIbDpohSxrzKAg0YNfutqeVTp`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">External JavaScript</div>\r\n            <LineDivider size=\"small\" />\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                External scripts are practical when the same code is used in\r\n                many different web pages.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                JavaScript files have the file extension .js.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                To use an external script, put the name of the script file in\r\n                the src (source) attribute of a <code>{`<script>`}</code> tag:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                You can place an external script reference in{\" \"}\r\n                <code>{`<head> or <body>`}</code> as you like.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The script will behave as if it was located exactly where the{\" \"}\r\n                <code>{`<script>`}</code> tag is located.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                External scripts cannot contain <code>{`<script>`}</code> tags.\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">External JavaScript Advantages</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">It separates HTML and code</nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                It makes HTML and JavaScript easier to read and maintain\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Cached JavaScript files can speed up page loads\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                To add several script files to one page - use several script\r\n                tags:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"h4 title mt-5\">External References</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                An external script can be referenced in 3 different ways:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                With a full URL (a full web address)\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">With a file path (like /js/)</nav>\r\n            <nav className=\"breadcrumb mt-3\">Without any path</nav>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Scripts);\r\n","export default {\r\n    getStarted: `console.log(\"Hello\", \"WORLD\")\r\nconsole.log(\"World\")`,\r\n    structural: `alert('Hello')\r\nalert('World')`,\r\n    exTag1: `alert(3 +\r\n1\r\n+ 2);`,\r\n    exTag2: `alert(\"Hello\");\r\n\r\n    [1, 2].forEach(alert);`,\r\n    exTag3: `alert(\"Hello\")[1, 2].forEach(alert);\r\n    `,\r\n    exTag4: `// This comment occupies a line of its own\r\n    alert('Hello');\r\n    \r\n    alert('World'); // This comment follows the statement`,\r\n    exTag5: `/* An example with two messages.\r\n    This is a multiline comment.\r\n    */\r\n    alert('Hello');\r\n    alert('World');`,\r\n    exTag6: `/* Commenting out the code\r\n    alert('Hello');\r\n    */\r\n    alert('World');`,\r\n    exTag7: `/*\r\n    /* nested comment ?!? */\r\n  */\r\n  alert( 'World' );`,\r\n    exTag8: `<link rel=\"stylesheet\" href=\"styles.css\">`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Structure = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">Code structure</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    Statements are syntax constructs and commands that perform\r\n                    actions.\r\n                </div>\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    We’ve already seen a statement, alert('Hello, world!'),\r\n                    which shows the message “Hello, world!”.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    We can have as many statements in our code as we want.\r\n                    Statements can be separated with a semicolon.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    For example, here we split “Hello World” into two alerts:\r\n                </li>\r\n            </ul>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/nCv54ioD2KZkIsRwtNiBn6SfNcZ27p`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Semicolons</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                A semicolon may be omitted in most cases when a line break\r\n                exists.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">This would also work:</nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    Here, JavaScript interprets the line break as an “implicit”\r\n                    semicolon. This is called an automatic semicolon insertion.\r\n                    In most cases, a newline implies a semicolon. But “in most\r\n                    cases” does not mean “always”! There are cases when a\r\n                    newline does not mean a semicolon. For example:\r\n                </b>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    The code outputs 6 because JavaScript does not insert\r\n                    semicolons here. It is intuitively obvious that if the line\r\n                    ends with a plus \"+\", then it is an “incomplete expression”,\r\n                    so a semicolon there would be incorrect. And in this case,\r\n                    that works as intended.\r\n                </b>\r\n            </nav>\r\n            <div className=\"guide\"></div>\r\n            But there are situations where JavaScript “fails” to assume a\r\n            semicolon where it is really needed. Errors which occur in such\r\n            cases are quite hard to find and fix.\r\n            <div className=\"h4 title mt-5\">An example of an error</div>\r\n            <LineDivider size=\"small\" />\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                No need to think about the meaning of the brackets [] and\r\n                forEach yet. We’ll study them later. For now, just remember the\r\n                result of running the code: it shows Hello, then 1, then 2.\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    Now let’s remove the semicolon after the alert:\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    The difference compared to the code above is only one\r\n                    character: the semicolon at the end of the first line is\r\n                    gone.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    If we run this code, only the first Hello shows (and there’s\r\n                    an error, you may need to open the console to see it). There\r\n                    are no numbers any more.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    That’s because JavaScript does not assume a semicolon before\r\n                    square brackets [...]. So, the code in the last example is\r\n                    treated as a single statement.\r\n                </li>\r\n            </ul>\r\n            <div className=\"guide mt-2\">Here’s how the engine sees it:</div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            {/* <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The most common way to add CSS, is to keep the styles in\r\n                external CSS files. However, in this tutorial we will use inline\r\n                and internal styles, because this is easier to demonstrate, and\r\n                easier for you to try it yourself. The most common way to add\r\n                CSS, is to keep the styles in external CSS files. However, in\r\n                this tutorial we will use inline and internal styles, because\r\n                this is easier to demonstrate, and easier for you to try it\r\n                yourself.\r\n            </nav> */}\r\n            <div className=\"h4 title mt-5\">Comments</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                As time goes on, programs become more and more complex. It\r\n                becomes necessary to add comments which describe what the code\r\n                does and why.\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    Comments can be put into any place of a script. They don’t\r\n                    affect its execution because the engine simply ignores them.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    One-line comments start with two forward slash characters\r\n                    //.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    The rest of the line is a comment. It may occupy a full line\r\n                    of its own or follow a statement.\r\n                </li>\r\n            </ul>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            {/* <div className=\"h4 title mt-5\">External CSS</div>\r\n            <LineDivider size=\"small\" /> */}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Multiline comments start with a forward slash and an asterisk /*\r\n                and end with an asterisk and a forward slash */.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">Like this:</nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The content of comments is ignored, so if we put code inside /*\r\n                … */, it won’t execute.\r\n            </nav>\r\n            <div>\r\n                <b>\r\n                    Sometimes it can be handy to temporarily disable a part of\r\n                    code:\r\n                </b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">Use hotkeys!</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                In most editors, a line of code can be commented out by pressing\r\n                the Ctrl+/ hotkey for a single-line comment and something like\r\n                Ctrl+Shift+/ – for multiline comments (select a piece of code\r\n                and press the hotkey). For Mac, try Cmd instead of Ctrl and\r\n                Option instead of Shift.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Nested comments are not supported!\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                There may not be /*...*/ inside another /*...*/.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Such code will die with an error:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            {/* <a\r\n                href={`${SHARE_CODE}/nCv54ioD2KZkIsRwtNiBn6SfNcZ27p`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a> */}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Please, don’t hesitate to comment your code.\r\n            </nav>\r\n            <div>\r\n                <b>\r\n                    Comments increase the overall code footprint, but that’s not\r\n                    a problem at all. There are many tools which minify code\r\n                    before publishing to a production server. They remove\r\n                    comments, so they don’t appear in the working scripts.\r\n                    Therefore, comments do not have negative effects on\r\n                    production at all.\r\n                </b>\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Later in the tutorial there will be a chapter Code quality that\r\n                also explains how to write better comments.\r\n            </nav>\r\n            {/* <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">CSS Border</div>\r\n            <LineDivider size=\"small\" /> */}\r\n            {/* <nav className=\"breadcrumb mt-3\">\r\n                Tip: You can define a border for nearly all js elements.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The external style sheet can be written in any text editor. The\r\n                file must not contain any js code, and must be saved with a .css\r\n                extension.\r\n            </nav>\r\n            <div>\r\n                <b>Here is what the \"styles.css\" file looks like:</b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">CSS Padding</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS padding property defines a padding (space) between the\r\n                text and the border.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">CSS Margin</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS margin property defines a margin (space) outside the\r\n                border.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">Link to External CSS</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                External style sheets can be referenced with a full URL or with\r\n                a path relative to the current web page.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag8\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Structure);\r\n","export default {\r\n    getStarted: `let x = 1;\r\n\r\n    x = -x;\r\n    console.log( x ); // -1, unary negation was applied`,\r\n    structural: `alert('Hello')\r\nalert('World')`,\r\n    exTag1: `alert(3 +\r\n1\r\n+ 2);`,\r\n    exTag2: `let x = 1, y = 3;\r\n    alert( y - x ); // 2, binary minus subtracts values`,\r\n    exTag3: `alert( 5 % 2 ); // 1, a remainder of 5 divided by 2\r\n    alert( 8 % 3 ); // 2, a remainder of 8 divided by 3`,\r\n    exTag4: `alert( 2 ** 2 ); // 2² = 4\r\n    alert( 2 ** 3 ); // 2³ = 8\r\n    alert( 2 ** 4 ); // 2⁴ = 16`,\r\n    exTag5: `alert( 4 ** (1/2) ); // 2 (power of 1/2 is the same as a square root)\r\n    alert( 8 ** (1/3) ); // 2 (power of 1/3 is the same as a cubic root)`,\r\n    exTag6: `let s = \"my\" + \"string\";\r\n    alert(s); // mystring`,\r\n    exTag7: `alert( '1' + 2 ); // \"12\"\r\n    alert( 2 + '1' ); // \"21\"`,\r\n    exTag8: `alert(2 + 2 + '1' ); // \"41\" and not \"221\"`,\r\n    exTag9: `alert('1' + 2 + 2); // \"122\" and not \"14\"`,\r\n    exTag10: `// No effect on numbers\r\n    let x = 1;\r\n    alert( +x ); // 1\r\n    \r\n    let y = -2;\r\n    alert( +y ); // -2\r\n    \r\n    // Converts non-numbers\r\n    alert( +true ); // 1\r\n    alert( +\"\" );   // 0`,\r\n    exTag11: `// No effect on numbers\r\n    let x = 1;\r\n    alert( +x ); // 1\r\n    \r\n    let y = -2;\r\n    alert( +y ); // -2\r\n    \r\n    // Converts non-numbers\r\n    alert( +true ); // 1\r\n    alert( +\"\" );   // 0`,\r\n    exTag12: `let apples = \"2\";\r\n    let oranges = \"3\";\r\n    \r\n    alert( apples + oranges ); `,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst BasicOperator = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">Basic Operator</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">Basic operators, maths</div>\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    We know many operators from school. They are things like\r\n                    addition +, multiplication *, subtraction -, and so on.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    In this chapter, we’ll start with simple operators, then\r\n                    concentrate on JavaScript-specific aspects, not covered by\r\n                    school arithmetic.\r\n                </li>\r\n                {/* <li className=\"list-group-item mt-2\">\r\n                    For example, here we split “Hello World” into two alerts:\r\n                </li> */}\r\n            </ul>{\" \"}\r\n            {/* <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            {/* <a\r\n                href={`${SHARE_CODE}/nCv54ioD2KZkIsRwtNiBn6SfNcZ27p`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a> */}\r\n            <div className=\"h4 title mt-5\">\r\n                Terms: “unary”, “binary”, “operand”\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Before we move on, let’s grasp some common terminology.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                An operand – is what operators are applied to. For instance, in\r\n                the multiplication of 5 * 2 there are two operands: the left\r\n                operand is 5 and the right operand is 2. Sometimes, people call\r\n                these “arguments” instead of “operands”. :\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                An operator is unary if it has a single operand. For example,\r\n                the unary negation - reverses the sign of a number:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    An operator is binary if it has two operands. The same minus\r\n                    exists in binary form as well:\r\n                </b>\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    Formally, in the examples above we have two different\r\n                    operators that share the same symbol: the negation operator,\r\n                    a unary operator that reverses the sign, and the subtraction\r\n                    operator, a binary operator that subtracts one number from\r\n                    another.\r\n                </b>\r\n            </nav>\r\n            <div className=\"guide\">\r\n                {\" \"}\r\n                Formally, in the examples above we have two different operators\r\n                that share the same symbol: the negation operator, a unary\r\n                operator that reverses the sign, and the subtraction operator, a\r\n                binary operator that subtracts one number from another.\r\n            </div>\r\n            <div className=\"h4 title mt-5\">Maths</div>\r\n            <LineDivider size=\"small\" />\r\n            <div className=\"guide\">\r\n                The following math operations are supported:\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Addition +, Subtraction -, Multiplication *, Division /,\r\n                Remainder %, Exponentiation **.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The first four are straightforward, while % and ** need a few\r\n                words about them.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">Remainder %</nav>\r\n            <div className=\"guide\">\r\n                The remainder operator %, despite its appearance, is not related\r\n                to percents.\r\n            </div>\r\n            <div className=\"guide\">\r\n                The result of a % b is the remainder of the integer division of\r\n                a by b.\r\n            </div>\r\n            <div className=\"guide\">For instance:</div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">Exponentiation **</nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The exponentiation operator a ** b raises a to the power of b.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                In school maths, we write that as ab.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">For instance:</nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            {/* <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    Now let’s remove the semicolon after the alert:\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    The difference compared to the code above is only one\r\n                    character: the semicolon at the end of the first line is\r\n                    gone.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    If we run this code, only the first Hello shows (and there’s\r\n                    an error, you may need to open the console to see it). There\r\n                    are no numbers any more.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    That’s because JavaScript does not assume a semicolon before\r\n                    square brackets [...]. So, the code in the last example is\r\n                    treated as a single statement.\r\n                </li>\r\n            </ul> */}\r\n            <div className=\"guide mt-2\">\r\n                Just like in maths, the exponentiation operator is defined for\r\n                non-integer numbers as well.\r\n            </div>\r\n            <div className=\"guide mt-2\">\r\n                For example, a square root is an exponentiation by ½:\r\n            </div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            {/* <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The most common way to add CSS, is to keep the styles in\r\n                external CSS files. However, in this tutorial we will use inline\r\n                and internal styles, because this is easier to demonstrate, and\r\n                easier for you to try it yourself. The most common way to add\r\n                CSS, is to keep the styles in external CSS files. However, in\r\n                this tutorial we will use inline and internal styles, because\r\n                this is easier to demonstrate, and easier for you to try it\r\n                yourself.\r\n            </nav> */}\r\n            <div className=\"h4 title mt-5\">\r\n                String concatenation with binary +\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Let’s meet features of JavaScript operators that are beyond\r\n                school arithmetics.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Usually, the plus operator + sums numbers.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                But, if the binary + is applied to strings, it merges\r\n                (concatenates) them:\r\n            </nav>\r\n            {/* <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    Comments can be put into any place of a script. They don’t\r\n                    affect its execution because the engine simply ignores them.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    One-line comments start with two forward slash characters\r\n                    //.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    The rest of the line is a comment. It may occupy a full line\r\n                    of its own or follow a statement.\r\n                </li>\r\n            </ul> */}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            {/* <div className=\"h4 title mt-5\">External CSS</div>\r\n            <LineDivider size=\"small\" /> */}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Note that if any of the operands is a string, then the other one\r\n                is converted to a string too.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">For example:</nav>\r\n            <nav className=\"breadcrumb mt-3\">Like this:</nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                See, it doesn’t matter whether the first operand is a string or\r\n                the second one.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Here’s a more complex example:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag8\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Here, operators work one after another. The first + sums two\r\n                numbers, so it returns 4, then the next + adds the string 1 to\r\n                it, so it’s like 4 + '1' = '41'.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag9\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div>\r\n                <b>\r\n                    Here, the first operand is a string, the compiler treats the\r\n                    other two operands as strings too. The 2 gets concatenated\r\n                    to '1', so it’s like '1' + 2 = \"12\" and \"12\" + 2 = \"122\".\r\n                </b>\r\n            </div>{\" \"}\r\n            <div>\r\n                <b>\r\n                    The binary + is the only operator that supports strings in\r\n                    such a way. Other arithmetic operators work only with\r\n                    numbers and always convert their operands to numbers.\r\n                </b>\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">Numeric conversion, unary +</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The plus + exists in two forms: the binary form that we used\r\n                above and the unary form.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The unary plus or, in other words, the plus operator + applied\r\n                to a single value, doesn’t do anything to numbers. But if the\r\n                operand is not a number, the unary plus converts it into a\r\n                number.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag10\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                It actually does the same thing as Number(...), but is shorter.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The need to convert strings to numbers arises very often. For\r\n                example, if we are getting values from HTML form fields, they\r\n                are usually strings. What if we want to sum them? The binary\r\n                plus would add them as strings:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag11\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            {/* <a\r\n                href={`${SHARE_CODE}/nCv54ioD2KZkIsRwtNiBn6SfNcZ27p`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a> */}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                It actually does the same thing as Number(...), but is shorter.\r\n            </nav>\r\n            <div>\r\n                <b>\r\n                    The need to convert strings to numbers arises very often.\r\n                    For example, if we are getting values from HTML form fields,\r\n                    they are usually strings. What if we want to sum them?\r\n                </b>\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The binary plus would add them as strings:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag12\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            {/* <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">CSS Border</div>\r\n            <LineDivider size=\"small\" /> */}\r\n            {/* <nav className=\"breadcrumb mt-3\">\r\n                Tip: You can define a border for nearly all js elements.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The external style sheet can be written in any text editor. The\r\n                file must not contain any js code, and must be saved with a .css\r\n                extension.\r\n            </nav>\r\n            <div>\r\n                <b>Here is what the \"styles.css\" file looks like:</b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">CSS Padding</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS padding property defines a padding (space) between the\r\n                text and the border.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">CSS Margin</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS margin property defines a margin (space) outside the\r\n                border.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">Link to External CSS</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                External style sheets can be referenced with a full URL or with\r\n                a path relative to the current web page.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag8\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(BasicOperator);\r\n","export default {\r\n    getStarted: `switch(x) {\r\n        case 'value1':  // if (x === 'value1')\r\n          ...\r\n          [break]\r\n      \r\n        case 'value2':  // if (x === 'value2')\r\n          ...\r\n          [break]\r\n      \r\n        default:\r\n          ...\r\n          [break]\r\n      }`,\r\n    exTag1: `let a = 2 + 2;\r\n\r\n    switch (a) {\r\n      case 3:\r\n        alert( 'Too small' );\r\n        break;\r\n      case 4:\r\n        alert( 'Exactly!' );\r\n        break;\r\n      case 5:\r\n        alert( 'Too big' );\r\n        break;\r\n      default:\r\n        alert( \"I don't know such values\" );\r\n    }`,\r\n    exTag2: `let a = 2 + 2;\r\n\r\n    switch (a) {\r\n      case 3:\r\n        alert( 'Too small' );\r\n      case 4:\r\n        alert( 'Exactly!' );\r\n      case 5:\r\n        alert( 'Too big' );\r\n      default:\r\n        alert( \"I don't know such values\" );\r\n    }`,\r\n    exTag3: `let a = \"1\";\r\n    let b = 0;\r\n    \r\n    switch (+a) {\r\n      case b + 1:\r\n        alert(\"this runs, because +a is 1, exactly equals b+1\");\r\n        break;\r\n    \r\n      default:\r\n        alert(\"this doesn't run\");\r\n    }`,\r\n    exTag4: `let a = 3;\r\n\r\n    switch (a) {\r\n      case 4:\r\n        alert('Right!');\r\n        break;\r\n    \r\n      case 3: // (*) grouped two cases\r\n      case 5:\r\n        alert('Wrong!');\r\n        alert(\"Why don't you take a math class?\");\r\n        break;\r\n    \r\n      default:\r\n        alert('The result is strange. Really.');\r\n    }`,\r\n    exTag5: `let arg = prompt(\"Enter a value?\");\r\n    switch (arg) {\r\n      case '0':\r\n      case '1':\r\n        alert( 'One or zero' );\r\n        break;\r\n    \r\n      case '2':\r\n        alert( 'Two' );\r\n        break;\r\n    \r\n      case 3:\r\n        alert( 'Never executes!' );\r\n        break;\r\n      default:\r\n        alert( 'An unknown value' );\r\n    }`,\r\n    exTag6: `let s = \"my\" + \"string\";\r\n    alert(s); // mystring`,\r\n    exTag7: `alert( '1' + 2 ); // \"12\"\r\n    alert( 2 + '1' ); // \"21\"`,\r\n    exTag8: `alert(2 + 2 + '1' ); // \"41\" and not \"221\"`,\r\n    exTag9: `alert('1' + 2 + 2); // \"122\" and not \"14\"`,\r\n    exTag10: `// No effect on numbers\r\n    let x = 1;\r\n    alert( +x ); // 1\r\n    \r\n    let y = -2;\r\n    alert( +y ); // -2\r\n    \r\n    // Converts non-numbers\r\n    alert( +true ); // 1\r\n    alert( +\"\" );   // 0`,\r\n    exTag11: `// No effect on numbers\r\n    let x = 1;\r\n    alert( +x ); // 1\r\n    \r\n    let y = -2;\r\n    alert( +y ); // -2\r\n    \r\n    // Converts non-numbers\r\n    alert( +true ); // 1\r\n    alert( +\"\" );   // 0`,\r\n    exTag12: `let apples = \"2\";\r\n    let oranges = \"3\";\r\n    \r\n    alert( apples + oranges ); `,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Switch = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">The \"switch\" statement</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    A switch statement can replace multiple if checks.\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    It gives a more descriptive way to compare a value with\r\n                    multiple variants.\r\n                </div>\r\n            </nav>\r\n            {/* <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            {/* <a\r\n                href={`${SHARE_CODE}/nCv54ioD2KZkIsRwtNiBn6SfNcZ27p`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a> */}\r\n            <div className=\"h4 title mt-5\">The syntax</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The switch has one or more case blocks and an optional default.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">It looks like this:</nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                An operator is unary if it has a single operand. For example,\r\n                the unary negation - reverses the sign of a number:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    The value of x is checked for a strict equality to the value\r\n                    from the first case (that is, value1) then to the second\r\n                    (value2) and so on.\r\n                </b>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    If the equality is found, switch starts to execute the code\r\n                    starting from the corresponding case, until the nearest\r\n                    break (or until the end of switch).\r\n                </b>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    If no case is matched then the default code is executed (if\r\n                    it exists).\r\n                </b>\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    Here the switch starts to compare a from the first case\r\n                    variant that is 3. The match fails.\r\n                </b>\r\n            </nav>\r\n            <div className=\"guide\">\r\n                {\" \"}\r\n                Then 4. That’s a match, so the execution starts from case 4\r\n                until the nearest break.\r\n            </div>\r\n            <div className=\"guide\">\r\n                If there is no break then the execution continues with the next\r\n                case without any checks.\r\n            </div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"h4 title mt-5\">\r\n                Any expression can be a switch/case argument\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <div className=\"guide\">\r\n                Both switch and case allow arbitrary expressions.\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Here +a gives 1, that’s compared with b + 1 in case, and the\r\n                corresponding code is executed.\r\n            </nav>{\" \"}\r\n            <div className=\"h4 title mt-5\">Grouping of “case”</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Several variants of case which share the same code can be\r\n                grouped.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                For example, if we want the same code to run for case 3 and case\r\n                5:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Now both 3 and 5 show the same message.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The ability to “group” cases is a side-effect of how switch/case\r\n                works without break. Here the execution of case 3 starts from\r\n                the line (*) and goes through case 5, because there’s no break.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">Type matters</nav>\r\n            <nav className=\"breadcrumb mt-3\">For instance:</nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            {/* <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    Now let’s remove the semicolon after the alert:\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    The difference compared to the code above is only one\r\n                    character: the semicolon at the end of the first line is\r\n                    gone.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    If we run this code, only the first Hello shows (and there’s\r\n                    an error, you may need to open the console to see it). There\r\n                    are no numbers any more.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    That’s because JavaScript does not assume a semicolon before\r\n                    square brackets [...]. So, the code in the last example is\r\n                    treated as a single statement.\r\n                </li>\r\n            </ul> */}\r\n            <div className=\"guide mt-2\">For 0, 1, the first alert runs.</div>\r\n            <div className=\"guide mt-2\">For 2 the second alert runs.</div>\r\n            {/* <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The most common way to add CSS, is to keep the styles in\r\n                external CSS files. However, in this tutorial we will use inline\r\n                and internal styles, because this is easier to demonstrate, and\r\n                easier for you to try it yourself. The most common way to add\r\n                CSS, is to keep the styles in external CSS files. However, in\r\n                this tutorial we will use inline and internal styles, because\r\n                this is easier to demonstrate, and easier for you to try it\r\n                yourself.\r\n            </nav> */}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                But for 3, the result of the prompt is a string \"3\", which is\r\n                not strictly equal === to the number 3. So we’ve got a dead code\r\n                in case 3! The default variant will execute.\r\n            </nav>\r\n            {/* <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    Comments can be put into any place of a script. They don’t\r\n                    affect its execution because the engine simply ignores them.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    One-line comments start with two forward slash characters\r\n                    //.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    The rest of the line is a comment. It may occupy a full line\r\n                    of its own or follow a statement.\r\n                </li>\r\n            </ul> */}\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Switch);\r\n","export default {\r\n    getStarted: `function showMessage() {\r\n        alert( 'Hello everyone!' );\r\n      }`,\r\n    structural: `alert('Hello')\r\nalert('World')`,\r\n    exTag1: `function name(parameter1, parameter2, ... parameterN) {\r\n        ...body...\r\n      }`,\r\n    exTag2: `function showMessage() {\r\n        alert( 'Hello everyone!' );\r\n      }\r\n      \r\n      showMessage();\r\n      showMessage();`,\r\n    exTag3: `function showMessage() {\r\n        let message = \"Hello, I'm JavaScript!\"; // local variable\r\n      \r\n        alert( message );\r\n      }\r\n      \r\n      showMessage(); // Hello, I'm JavaScript!\r\n      \r\n      alert( message ); // <-- Error! The variable is local to the function`,\r\n    exTag4: `let userName = 'John';\r\n\r\n    function showMessage() {\r\n      let message = 'Hello, ' + userName;\r\n      alert(message);\r\n    }\r\n    \r\n    showMessage(); // Hello, John`,\r\n    exTag5: `let userName = 'John';\r\n\r\n    function showMessage() {\r\n      userName = \"Bob\"; // (1) changed the outer variable\r\n    \r\n      let message = 'Hello, ' + userName;\r\n      alert(message);\r\n    }\r\n    \r\n    alert( userName ); // John before the function call\r\n    \r\n    showMessage();\r\n    \r\n    alert( userName ); // Bob, the value was modified by the function`,\r\n    exTag6: `et userName = 'John';\r\n\r\n    function showMessage() {\r\n      let userName = \"Bob\"; // declare a local variable\r\n    \r\n      let message = 'Hello, ' + userName; // Bob\r\n      alert(message);\r\n    }\r\n    \r\n    // the function will create and use its own userName\r\n    showMessage();\r\n    \r\n    alert( userName ); // John, unchanged, the function did not access the outer variable`,\r\n    exTag7: `function showMessage(from, text) { // parameters: from, text\r\n        alert(from + ': ' + text);\r\n      }\r\n      \r\n      showMessage('Ann', 'Hello!'); // Ann: Hello! (*)\r\n      showMessage('Ann', \"What's up?\"); // Ann: What's up? (**)`,\r\n    exTag8: `function showMessage(from, text) {\r\n\r\n        from = '*' + from + '*'; // make \"from\" look nicer\r\n      \r\n        alert( from + ': ' + text );\r\n      }\r\n      \r\n      let from = \"Ann\";\r\n      \r\n      showMessage(from, \"Hello\"); // *Ann*: Hello\r\n      \r\n      // the value of \"from\" is the same, the function modified a local copy\r\n      alert( from ); // Ann`,\r\n    exTag9: `alert('1' + 2 + 2); // \"122\" and not \"14\"`,\r\n    exTag10: `// No effect on numbers\r\n    let x = 1;\r\n    alert( +x ); // 1\r\n    \r\n    let y = -2;\r\n    alert( +y ); // -2\r\n    \r\n    // Converts non-numbers\r\n    alert( +true ); // 1\r\n    alert( +\"\" );   // 0`,\r\n    exTag11: `// No effect on numbers\r\n    let x = 1;\r\n    alert( +x ); // 1\r\n    \r\n    let y = -2;\r\n    alert( +y ); // -2\r\n    \r\n    // Converts non-numbers\r\n    alert( +true ); // 1\r\n    alert( +\"\" );   // 0`,\r\n    exTag12: `let apples = \"2\";\r\n    let oranges = \"3\";\r\n    \r\n    alert( apples + oranges ); `,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Function = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">Functions</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    Quite often we need to perform a similar action in many\r\n                    places of the script.\r\n                </div>\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    For example, we need to show a nice-looking message when a\r\n                    visitor logs in, logs out and maybe somewhere else.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    Functions are the main “building blocks” of the program.\r\n                    They allow the code to be called many times without\r\n                    repetition.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    We’ve already seen examples of built-in functions, like\r\n                    alert(message), prompt(message, default) and\r\n                    confirm(question). But we can create functions of our own as\r\n                    well.\r\n                </li>\r\n                {/* <li className=\"list-group-item mt-2\">\r\n                    For example, here we split “Hello World” into two alerts:\r\n                </li> */}\r\n            </ul>{\" \"}\r\n            {/* <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            {/* <a\r\n                href={`${SHARE_CODE}/nCv54ioD2KZkIsRwtNiBn6SfNcZ27p`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a> */}\r\n            <div className=\"h4 title mt-5\">Function Declaration</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                To create a function we can use a function declaration.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">It looks like this:</nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    The function keyword goes first, then goes the name of the\r\n                    function, then a list of parameters between the parentheses\r\n                    (comma-separated, empty in the example above, we’ll see\r\n                    examples later) and finally the code of the function, also\r\n                    named “the function body”, between curly braces.\r\n                </b>\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    Our new function can be called by its name: showMessage().\r\n                </b>\r\n            </nav>\r\n            <div className=\"guide\"> For instance:</div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\".guide mt-3\">\r\n                The call showMessage() executes the code of the function. Here\r\n                we will see the message two times.\r\n            </nav>\r\n            <nav className=\".guide mt-3\">\r\n                This example clearly demonstrates one of the main purposes of\r\n                functions: to avoid code duplication.\r\n            </nav>\r\n            <nav className=\".guide mt-3\">\r\n                If we ever need to change the message or the way it is shown,\r\n                it’s enough to modify the code in one place: the function which\r\n                outputs it.\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">Local variables</div>\r\n            <LineDivider size=\"small\" />\r\n            <div className=\"guide\">\r\n                A variable declared inside a function is only visible inside\r\n                that function.\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">For example:</nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">Outer variables</nav>\r\n            <div className=\"guide\">\r\n                A function can access an outer variable as well, for example:\r\n            </div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"guide\">\r\n                The function has full access to the outer variable. It can\r\n                modify it as well.\r\n            </div>\r\n            <div className=\"guide\">For instance:</div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The outer variable is only used if there’s no local one.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                If a same-named variable is declared inside the function then it\r\n                shadows the outer one. For instance, in the code below the\r\n                function uses the local userName. The outer one is ignored:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">For instance:</nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            {/* <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    Now let’s remove the semicolon after the alert:\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    The difference compared to the code above is only one\r\n                    character: the semicolon at the end of the first line is\r\n                    gone.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    If we run this code, only the first Hello shows (and there’s\r\n                    an error, you may need to open the console to see it). There\r\n                    are no numbers any more.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    That’s because JavaScript does not assume a semicolon before\r\n                    square brackets [...]. So, the code in the last example is\r\n                    treated as a single statement.\r\n                </li>\r\n            </ul> */}\r\n            <div className=\"guide mt-2\">Global variables</div>\r\n            <div className=\"guide mt-2\">\r\n                Variables declared outside of any function, such as the outer\r\n                userName in the code above, are called global.\r\n            </div>\r\n            <div className=\"guide mt-2\">\r\n                Global variables are visible from any function (unless shadowed\r\n                by locals).\r\n            </div>\r\n            <div className=\"guide mt-2\">\r\n                It’s a good practice to minimize the use of global variables.\r\n                Modern code has few or no globals. Most variables reside in\r\n                their functions. Sometimes though, they can be useful to store\r\n                project-level data.\r\n            </div>\r\n            <div className=\"h4 title mt-5\">Parameters </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                We can pass arbitrary data to functions using parameters.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                In the example below, the function has two parameters: from and\r\n                text.\r\n            </nav>\r\n            {/* <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    Comments can be put into any place of a script. They don’t\r\n                    affect its execution because the engine simply ignores them.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    One-line comments start with two forward slash characters\r\n                    //.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    The rest of the line is a comment. It may occupy a full line\r\n                    of its own or follow a statement.\r\n                </li>\r\n            </ul> */}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            {/* <div className=\"h4 title mt-5\">External CSS</div>\r\n            <LineDivider size=\"small\" /> */}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                When the function is called in lines (*) and (**), the given\r\n                values are copied to local variables from and text. Then the\r\n                function uses them.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Here’s one more example: we have a variable from and pass it to\r\n                the function. Please note: the function changes from, but the\r\n                change is not seen outside, because a function always gets a\r\n                copy of the value:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">Like this:</nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag8\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                When a value is passed as a function parameter, it’s also called\r\n                an argument.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                In other words, to put these terms straight: A parameter is the\r\n                variable listed inside the parentheses in the function\r\n                declaration (it’s a declaration time term) An argument is the\r\n                value that is passed to the function when it is called (it’s a\r\n                call time term).\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                We declare functions listing their parameters, then call them\r\n                passing arguments.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                In the example above, one might say: \"the function showMessage\r\n                is declared with two parameters, then called with two arguments:\r\n                from and \"Hello\"\".\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">Default values</nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                If a function is called, but an argument is not provided, then\r\n                the corresponding value becomes undefined.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                For instance, the aforementioned function showMessage(from,\r\n                text) can be called with a single argument:\r\n            </nav>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Function);\r\n","export default {\r\n    getStarted: `let message;\r\n\r\n    message = 'Hello'; // store the string 'Hello' in the variable named message`,\r\n    structural: `alert('Hello')\r\nalert('World')`,\r\n    exTag1: `let message;\r\n    message = 'Hello!';\r\n    \r\n    alert(message); // shows the variable content`,\r\n    exTag2: `let message = 'Hello!'; // define the variable and assign the value\r\n\r\n    alert(message); // Hello!`,\r\n    exTag3: `let user = 'John', age = 25, message = 'Hello'`,\r\n    exTag4: `var message = 'Hello'; `,\r\n    exTag5: `let message;\r\n\r\n    message = 'Hello!';\r\n    \r\n    message = 'World!'; // value changed\r\n    \r\n    alert(message);`,\r\n    exTag6: `let hello = 'Hello world!';\r\n\r\n    let message;\r\n    \r\n    // copy 'Hello world' from hello into message\r\n    message = hello;\r\n    \r\n    // now two variables hold the same data\r\n    alert(hello); // Hello world!\r\n    alert(message); // Hello world!`,\r\n    exTag7: `let message = \"This\";\r\n\r\n    // repeated 'let' leads to an error\r\n    let message = \"That\"; // SyntaxError: 'message' has already been declared`,\r\n    exTag8: `let userName;\r\n    let test123;`,\r\n    exTag9: `alert('1' + 2 + 2); // \"122\" and not \"14\"`,\r\n    exTag10: `// No effect on numbers\r\n    let x = 1;\r\n    alert( +x ); // 1\r\n    \r\n    let y = -2;\r\n    alert( +y ); // -2\r\n    \r\n    // Converts non-numbers\r\n    alert( +true ); // 1\r\n    alert( +\"\" );   // 0`,\r\n    exTag11: `// No effect on numbers\r\n    let x = 1;\r\n    alert( +x ); // 1\r\n    \r\n    let y = -2;\r\n    alert( +y ); // -2\r\n    \r\n    // Converts non-numbers\r\n    alert( +true ); // 1\r\n    alert( +\"\" );   // 0`,\r\n    exTag12: `let apples = \"2\";\r\n    let oranges = \"3\";\r\n    \r\n    alert( apples + oranges ); `,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Variables = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">Variables</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    Most of the time, a JavaScript application needs to work\r\n                    with information. Here are two examples:\r\n                </div>\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    An online shop – the information might include goods being\r\n                    sold and a shopping cart.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    A chat application – the information might include users,\r\n                    messages, and much more.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    Variables are used to store this information.\r\n                </li>\r\n                {/* <li className=\"list-group-item mt-2\">\r\n                    For example, here we split “Hello World” into two alerts:\r\n                </li> */}\r\n            </ul>{\" \"}\r\n            {/* <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            {/* <a\r\n                href={`${SHARE_CODE}/nCv54ioD2KZkIsRwtNiBn6SfNcZ27p`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a> */}\r\n            <div className=\"h4 title mt-5\">A variable</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                A variable is a “named storage” for data. We can use variables\r\n                to store goodies, visitors, and other data.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                To create a variable in JavaScript, use the let keyword.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The statement below creates (in other words: declares) a\r\n                variable with the name “message”:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                It looks like this: <code>let message;</code>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Now, we can put some data into it by using the assignment\r\n                operator =:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    The string is now saved into the memory area associated with\r\n                    the variable. We can access it using the variable name:\r\n                </b>\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    To be concise, we can combine the variable declaration and\r\n                    assignment into a single line:\r\n                </b>\r\n            </nav>\r\n            <div className=\"guide\"> For instance:</div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\".guide mt-3\">\r\n                We can also declare multiple variables in one line:\r\n            </nav>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\".guide mt-3\">\r\n                That might seem shorter, but we don’t recommend it. For the sake\r\n                of better readability, please use a single line per variable.\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">var instead of let</div>\r\n            <LineDivider size=\"small\" />\r\n            <div className=\"guide\">\r\n                In older scripts, you may also find another keyword: var instead\r\n                of let:\r\n            </div>\r\n            <div className=\"guide\">var message = 'Hello';</div>\r\n            <nav className=\"breadcrumb mt-3\">For example:</nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The var keyword is almost the same as let. It also declares a\r\n                variable, but in a slightly different, “old-school” way.\r\n            </nav>\r\n            <div className=\"guide\">\r\n                There are subtle differences between let and var, but they do\r\n                not matter for us yet. We’ll cover them in detail in the chapter\r\n                The old \"var\".\r\n            </div>\r\n            <div className=\"h4 title mt-5\">A real-life analogy </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                We can easily grasp the concept of a “variable” if we imagine it\r\n                as a “box” for data, with a uniquely-named sticker on it.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                For instance, the variable message can be imagined as a box\r\n                labeled \"message\" with the value \"Hello!\" in it:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                We can put any value in the box.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                We can also change it as many times as we want:\r\n            </nav>\r\n            {/* <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    Comments can be put into any place of a script. They don’t\r\n                    affect its execution because the engine simply ignores them.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    One-line comments start with two forward slash characters\r\n                    //.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    The rest of the line is a comment. It may occupy a full line\r\n                    of its own or follow a statement.\r\n                </li>\r\n            </ul> */}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            {/* <div className=\"h4 title mt-5\">External CSS</div>\r\n            <LineDivider size=\"small\" /> */}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                When the value is changed, the old data is removed from the\r\n                variable:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                We can also declare two variables and copy data from one into\r\n                the other.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">Like this:</nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Declaring twice triggers an error\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                A variable should be declared only once.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                A repeated declaration of the same variable is an error:\r\n            </nav>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                So, we should declare a variable once and then refer to it\r\n                without let.\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">Functional languages</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                It’s interesting to note that there exist functional programming\r\n                languages, like Scala or Erlang that forbid changing variable\r\n                values.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                In such languages, once the value is stored “in the box”, it’s\r\n                there forever. If we need to store something else, the language\r\n                forces us to create a new box (declare a new variable). We can’t\r\n                reuse the old one.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Though it may seem a little odd at first sight, these languages\r\n                are quite capable of serious development. More than that, there\r\n                are areas like parallel computations where this limitation\r\n                confers certain benefits. Studying such a language (even if\r\n                you’re not planning to use it soon) is recommended to broaden\r\n                the mind.\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">Variable naming</div>\r\n            <LineDivider size=\"small\" />\r\n            <div className=\"guide\">\r\n                There are two limitations on variable names in JavaScript:\r\n            </div>\r\n            <div className=\"guide\">\r\n                The name must contain only letters, digits, or the symbols $ and\r\n                _.\r\n            </div>\r\n            <div className=\"guide\">\r\n                The first character must not be a digit.\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag8\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"guide\">\r\n                When the name contains multiple words, camelCase is commonly\r\n                used. That is: words go one after another, each word except\r\n                first starting with a capital letter: myVeryLongName.\r\n            </div>{\" \"}\r\n            <div className=\"guide\">\r\n                What’s interesting – the dollar sign '$' and the underscore '_'\r\n                can also be used in names. They are regular symbols, just like\r\n                letters, without any special meaning.\r\n            </div>{\" \"}\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Variables);\r\n","export default {\r\n    getStarted: `console.log( window.innerWidth ); // full window width\r\n    console.log( document.documentElement.clientWidth ); // window width minus the scrollbar`,\r\n    structural: `alert('Hello')\r\nalert('World')`,\r\n    exTag1: `let scrollHeight = Math.max(\r\n        document.body.scrollHeight, document.documentElement.scrollHeight,\r\n        document.body.offsetHeight, document.documentElement.offsetHeight,\r\n        document.body.clientHeight, document.documentElement.clientHeight\r\n      );\r\n      \r\n      alert('Full document height, with scrolled out part: ' + scrollHeight);`,\r\n    exTag2: `console.log('Current scroll from the top: ' + window.pageYOffset);\r\n    console.log('Current scroll from the left: ' + window.pageXOffset);`,\r\n    exTag3: `function showMessage() {\r\n        let message = \"Hello, I'm JavaScript!\"; // local variable\r\n      \r\n        alert( message );\r\n      }\r\n      \r\n      showMessage(); // Hello, I'm JavaScript!\r\n      \r\n      alert( message ); // <-- Error! The variable is local to the function`,\r\n    exTag4: `let userName = 'John';\r\n\r\n    function showMessage() {\r\n      let message = 'Hello, ' + userName;\r\n      alert(message);\r\n    }\r\n    \r\n    showMessage(); // Hello, John`,\r\n    exTag5: `let userName = 'John';\r\n\r\n    function showMessage() {\r\n      userName = \"Bob\"; // (1) changed the outer variable\r\n    \r\n      let message = 'Hello, ' + userName;\r\n      alert(message);\r\n    }\r\n    \r\n    alert( userName ); // John before the function call\r\n    \r\n    showMessage();\r\n    \r\n    alert( userName ); // Bob, the value was modified by the function`,\r\n    exTag6: `et userName = 'John';\r\n\r\n    function showMessage() {\r\n      let userName = \"Bob\"; // declare a local variable\r\n    \r\n      let message = 'Hello, ' + userName; // Bob\r\n      alert(message);\r\n    }\r\n    \r\n    // the function will create and use its own userName\r\n    showMessage();\r\n    \r\n    alert( userName ); // John, unchanged, the function did not access the outer variable`,\r\n    exTag7: `function showMessage(from, text) { // parameters: from, text\r\n        alert(from + ': ' + text);\r\n      }\r\n      \r\n      showMessage('Ann', 'Hello!'); // Ann: Hello! (*)\r\n      showMessage('Ann', \"What's up?\"); // Ann: What's up? (**)`,\r\n    exTag8: `function showMessage(from, text) {\r\n\r\n        from = '*' + from + '*'; // make \"from\" look nicer\r\n      \r\n        alert( from + ': ' + text );\r\n      }\r\n      \r\n      let from = \"Ann\";\r\n      \r\n      showMessage(from, \"Hello\"); // *Ann*: Hello\r\n      \r\n      // the value of \"from\" is the same, the function modified a local copy\r\n      alert( from ); // Ann`,\r\n    exTag9: `alert('1' + 2 + 2); // \"122\" and not \"14\"`,\r\n    exTag10: `// No effect on numbers\r\n    let x = 1;\r\n    alert( +x ); // 1\r\n    \r\n    let y = -2;\r\n    alert( +y ); // -2\r\n    \r\n    // Converts non-numbers\r\n    alert( +true ); // 1\r\n    alert( +\"\" );   // 0`,\r\n    exTag11: `// No effect on numbers\r\n    let x = 1;\r\n    alert( +x ); // 1\r\n    \r\n    let y = -2;\r\n    alert( +y ); // -2\r\n    \r\n    // Converts non-numbers\r\n    alert( +true ); // 1\r\n    alert( +\"\" );   // 0`,\r\n    exTag12: `let apples = \"2\";\r\n    let oranges = \"3\";\r\n    \r\n    alert( apples + oranges ); `,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Size = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">Size and Scrolling</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">Window sizes and scrolling</div>\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    How do we find the width and height of the browser window?\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    How do we get the full width and height of the document,\r\n                    including the scrolled out part? How do we scroll the page\r\n                    using JavaScript?\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    For this type of information, we can use the root document\r\n                    element document.documentElement, that corresponds to the{\" \"}\r\n                    {`<html>`} tag. But there are additional methods and\r\n                    peculiarities to consider.\r\n                </li>\r\n                {/* <li className=\"list-group-item mt-2\">\r\n                    For example, here we split “Hello World” into two alerts:\r\n                </li> */}\r\n            </ul>{\" \"}\r\n            {/* <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div> */}\r\n            {/* <a\r\n                href={`${SHARE_CODE}/nCv54ioD2KZkIsRwtNiBn6SfNcZ27p`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a> */}\r\n            <div className=\"h4 title mt-5\">Width/height of the window</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                To get window width and height, we can use the\r\n                clientWidth/clientHeight of document.documentElement:\r\n            </nav>\r\n            <img\r\n                className=\"mt-4\"\r\n                src=\"https://scontent.fdad3-4.fna.fbcdn.net/v/t1.15752-9/269570528_3219617801659277_1645698121917421024_n.png?_nc_cat=111&ccb=1-5&_nc_sid=ae9488&_nc_ohc=YQCS2jrmeMEAX8tJhYy&_nc_ht=scontent.fdad3-4.fna&oh=03_AVKT7QyLTp4eXAo4B3DZ_pg8S624PVP4dDawoaOu5l7zpw&oe=61EE6500\"\r\n                alt=\"\"\r\n            />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                For instance, this button shows the height of your window:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    Browsers also support properties like\r\n                    window.innerWidth/innerHeight. They look like what we want,\r\n                    so why not to use them instead?\r\n                </b>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    If there exists a scrollbar, and it occupies some space,\r\n                    clientWidth/clientHeight provide the width/height without it\r\n                    (subtract it). In other words, they return the width/height\r\n                    of the visible part of the document, available for the\r\n                    content.\r\n                </b>\r\n            </nav>\r\n            <div className=\"guide\">\r\n                window.innerWidth/innerHeight includes the scrollbar.\r\n            </div>\r\n            <div className=\"guide\">\r\n                If there’s a scrollbar, and it occupies some space, then these\r\n                two lines show different values:\r\n            </div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\".guide mt-3\">\r\n                In most cases, we need the available window width in order to\r\n                draw or position something within scrollbars (if there are any),\r\n                so we should use documentElement.clientHeight/clientWidth.\r\n            </nav>\r\n            <nav className=\".guide mt-3\">\r\n                Please note: top-level geometry properties may work a little bit\r\n                differently when there’s no {`<!DOCTYPE HTML>`} in HTML. Odd\r\n                things are possible. In modern HTML we should always write\r\n                DOCTYPE.\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">Width/height of the document</div>\r\n            <LineDivider size=\"small\" />\r\n            <div className=\"guide\">\r\n                Theoretically, as the root document element is\r\n                document.documentElement, and it encloses all the content, we\r\n                could measure the document’s full size as\r\n                document.documentElement.scrollWidth/scrollHeight.\r\n            </div>\r\n            <div className=\"guide\">\r\n                But on that element, for the whole page, these properties do not\r\n                work as intended. In Chrome/Safari/Opera, if there’s no scroll,\r\n                then documentElement.scrollHeight may be even less than\r\n                documentElement.clientHeight! Weird, right?\r\n            </div>\r\n            <div className=\"guide\">\r\n                To reliably obtain the full document height, we should take the\r\n                maximum of these properties:\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">For example:</nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">Get the current scrolls</nav>\r\n            <div className=\"guide\">\r\n                DOM elements have their current scroll state in their\r\n                scrollLeft/scrollTop properties.\r\n            </div>\r\n            <div className=\"guide\">\r\n                For document scroll,\r\n                document.documentElement.scrollLeft/scrollTop works in most\r\n                browsers, except older WebKit-based ones, like Safari (bug\r\n                5991), where we should use document.body instead of\r\n                document.documentElement.\r\n            </div>\r\n            <div className=\"guide\">\r\n                Luckily, we don’t have to remember these peculiarities at all,\r\n                because the scroll is available in the special properties,\r\n                window.pageXOffset/pageYOffset:\r\n            </div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"js\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"guide\">These properties are read-only.</div>\r\n            <div className=\"h4 title mt-5\">\r\n                Scrolling: scrollTo, scrollBy, scrollIntoView{\" \"}\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                To scroll the page with JavaScript, its DOM must be fully built.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                For instance, if we try to scroll the page with a script in{\" \"}\r\n                {`<head>`}, it won’t work.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Regular elements can be scrolled by changing\r\n                scrollTop/scrollLeft.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                We can do the same for the page using\r\n                document.documentElement.scrollTop/scrollLeft (except Safari,\r\n                where document.body.scrollTop/Left should be used instead).\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Alternatively, there’s a simpler, universal solution: special\r\n                methods window.scrollBy(x,y) and window.scrollTo(pageX,pageY).\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">\r\n                <div className=\"h4 title mt-5\">scrollIntoView</div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                For completeness, let’s cover one more method:\r\n                elem.scrollIntoView(top).\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The call to elem.scrollIntoView(top) scrolls the page to make\r\n                elem visible. It has one argument:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                If top=true (that’s the default), then the page will be scrolled\r\n                to make elem appear on the top of the window. The upper edge of\r\n                the element will be aligned with the window top.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                If top=false, then the page scrolls to make elem appear at the\r\n                bottom. The bottom edge of the element will be aligned with the\r\n                window bottom.\r\n            </nav>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Size);\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst MouseEvent = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">Mouse events</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">Mouse events</div>\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    Please note: such events may come not only from “mouse\r\n                    devices”, but are also from other devices, such as phones\r\n                    and tablets, where they are emulated for compatibility.\r\n                </li>\r\n            </ul>{\" \"}\r\n            <div className=\"h4 title mt-5\">Mouse event types</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                We’ve already seen some of these events:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">mousedown/mouseup</nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>Mouse button is clicked/released over an element.</b>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>mouseover/mouseout</b>\r\n            </nav>\r\n            <div className=\"guide\">\r\n                Mouse pointer comes over/out from an element.\r\n            </div>\r\n            <div className=\"guide\">mousemove</div>\r\n            <nav className=\".guide mt-3\">\r\n                Every mouse move over an element triggers that event.\r\n            </nav>\r\n            <nav className=\".guide mt-3\">click</nav>\r\n            <nav className=\".guide mt-3\">\r\n                Triggers after mousedown and then mouseup over the same element\r\n                if the left mouse button was used.\r\n            </nav>\r\n            <nav className=\".guide mt-3\">dblclick</nav>\r\n            <nav className=\".guide mt-3\">\r\n                Triggers after two clicks on the same element within a short\r\n                timeframe. Rarely used nowadays.\r\n            </nav>\r\n            <nav className=\".guide mt-3\">contextmenu</nav>\r\n            <nav className=\".guide mt-3\">\r\n                Triggers when the right mouse button is pressed. There are other\r\n                ways to open a context menu, e.g. using a special keyboard key,\r\n                it triggers in that case also, so it’s not exactly the mouse\r\n                event.\r\n            </nav>\r\n            <nav className=\".guide mt-3\">\r\n                …There are several other events too, we’ll cover them later.\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">Events order</div>\r\n            <LineDivider size=\"small\" />\r\n            <div className=\"guide\">\r\n                As you can see from the list above, a user action may trigger\r\n                multiple events.\r\n            </div>\r\n            <div className=\"guide\">\r\n                For instance, a left-button click first triggers mousedown, when\r\n                the button is pressed, then mouseup and click when it’s\r\n                released.\r\n            </div>\r\n            <div className=\"guide\">\r\n                In cases when a single action initiates multiple events, their\r\n                order is fixed. That is, the handlers are called in the order\r\n                mousedown → mouseup → click.\r\n            </div>\r\n            <div className=\"guide\">\r\n                Click the button below and you’ll see the events. Try\r\n                double-click too.\r\n            </div>\r\n            <div className=\"guide\">\r\n                On the teststand below all mouse events are logged, and if there\r\n                is more than a 1 second delay between them they are separated by\r\n                a horizontal ruler.\r\n            </div>\r\n            <div className=\"guide\">\r\n                Also we can see the button property that allows to detect the\r\n                mouse button, it’s explained below.\r\n            </div>\r\n            <div className=\"h4 title mt-5\">Mouse button</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Click-related events always have the button property, which\r\n                allows to get the exact mouse button.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                We usually don’t use it for click and contextmenu events,\r\n                because the former happens only on left-click, and the latter –\r\n                only on right-click.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                From the other hand, mousedown and mouseup handlers may need\r\n                event.button, because these events trigger on any button, so\r\n                button allows to distinguish between “right-mousedown” and\r\n                “left-mousedown”.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The possible values of event.button are:\r\n            </nav>\r\n            <img\r\n                className=\"mt-4\"\r\n                src=\"https://scontent.fdad3-4.fna.fbcdn.net/v/t1.15752-9/265780111_1262933090861457_7740019603984330268_n.png?_nc_cat=105&ccb=1-5&_nc_sid=ae9488&_nc_ohc=P7mIpZPd7XYAX_c--V8&_nc_ht=scontent.fdad3-4.fna&oh=03_AVI8jSS0vKIjySJvh-vP7t72HYWITgFYoVnyP3YCstOx2w&oe=61ED2337\"\r\n                alt=\"\"\r\n            />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Most mouse devices only have the left and right buttons, so\r\n                possible values are 0 or 2. Touch devices also generate similar\r\n                events when one taps on them.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Also there’s event.buttons property that has all currently\r\n                pressed buttons as an integer, one bit per button. In practice\r\n                this property is very rarely used, you can find details at MDN\r\n                if you ever need it.\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">\r\n                <div className=\"h4 title mt-5\">\r\n                    Coordinates: clientX/Y, pageX/Y\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                In short, document-relative coordinates pageX/Y are counted from\r\n                the left-upper corner of the document, and do not change when\r\n                the page is scrolled, while clientX/Y are counted from the\r\n                current window left-upper corner. When the page is scrolled,\r\n                they change.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                For instance, if we have a window of the size 500x500, and the\r\n                mouse is in the left-upper corner, then clientX and clientY are\r\n                0, no matter how the page is scrolled.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                And if the mouse is in the center, then clientX and clientY are\r\n                250, no matter what place in the document it is. They are\r\n                similar to position:fixed in that aspect.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Move the mouse over the input field to see clientX/clientY (the\r\n                example is in the iframe, so coordinates are relative to that\r\n                iframe):\r\n            </nav>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(MouseEvent);\r\n","import GetStarted from \"../../contentLibrary/js/GetStarted/GetStarted\";\r\nimport Introduction from \"../../contentLibrary/js/Introduction/Introduction\";\r\nimport React from \"react\";\r\nimport Scripts from \"../../contentLibrary/js/Scripts/Scripts\";\r\nimport Output from \"../../contentLibrary/js/Output/Output\";\r\nimport Structure from \"../../contentLibrary/js/Structure/Structure\";\r\nimport BasicOperator from \"../../contentLibrary/js/BasicOperator/BasicOperator\";\r\nimport Switch from \"../../contentLibrary/js/Switch/Switch\";\r\nimport Function from \"../../contentLibrary/js/Function/Function\";\r\nimport Variables from \"../../contentLibrary/js/Variables/Variables\";\r\nimport Size from \"../../contentLibrary/js/Size/Size\";\r\nimport MouseEvent from \"../../contentLibrary/js/MouseEvent.js/MouseEvent\";\r\n\r\nexport const JS_TUTORIALS = [\r\n    {\r\n        path: \"/tutorials/js/introduction\",\r\n        name: \"Introduction\",\r\n        exact: true,\r\n        component: (props) => <Introduction {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/js/get-started\",\r\n        name: \"Get Started\",\r\n        exact: true,\r\n        component: (props) => <GetStarted {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/js/scripts\",\r\n        name: \"Scripts\",\r\n        exact: true,\r\n        component: (props) => <Scripts {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/js/output\",\r\n        name: \"Output\",\r\n        exact: true,\r\n        component: (props) => <Output {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/js/structure\",\r\n        name: \"Structure\",\r\n        exact: true,\r\n        component: (props) => <Structure {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/js/basic-operator\",\r\n        name: \"Basic Operator\",\r\n        exact: true,\r\n        component: (props) => <BasicOperator {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/js/switch-statement\",\r\n        name: \"Switch Statement\",\r\n        exact: true,\r\n        component: (props) => <Switch {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/js/function\",\r\n        name: \"Function\",\r\n        exact: true,\r\n        component: (props) => <Function {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/js/variables\",\r\n        name: \"Variables\",\r\n        exact: true,\r\n        component: (props) => <Variables {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/js/size-scrolling\",\r\n        name: \"Size - Scrolling\",\r\n        exact: true,\r\n        component: (props) => <Size {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/js/mouse-event\",\r\n        name: \"Mouse event\",\r\n        exact: true,\r\n        component: (props) => <MouseEvent {...props} />,\r\n    },\r\n];\r\n","import { Button } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { HTML_TUTORIALS } from \"../common/constants/HTMLconstants\";\r\nimport { CSS_TUTORIALS } from \"../common/constants/CSSconstants\";\r\nimport { JS_TUTORIALS } from \"../common/constants/JSconstants\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nconst Direct = () => {\r\n    // const location = useSelector((state) => state.tutorial.location);\r\n    const dispatch = useDispatch();\r\n\r\n    const prevPage = () => {\r\n        const l = window.location.href.toString();\r\n        const tutorialsRoute = HTML_TUTORIALS.concat(\r\n            CSS_TUTORIALS,\r\n            JS_TUTORIALS\r\n        );\r\n        const list = tutorialsRoute\r\n            .map((x) => x.path)\r\n            .filter(\r\n                (lesson) =>\r\n                    l.indexOf(lesson.slice(0, lesson.lastIndexOf(\"/\"))) > 0\r\n            );\r\n        const i = list.findIndex((x) => l.indexOf(x) > 0);\r\n        const url = i - 1 < 0 ? null : list[i - 1];\r\n        return url;\r\n    };\r\n    const prevUrl = prevPage();\r\n\r\n    const handlePrevPage = (e) => {\r\n        e.persist();\r\n        dispatch(push(prevUrl));\r\n    };\r\n\r\n    const nextPage = () => {\r\n        const l = window.location.href.toString();\r\n        const tutorialsRoute = HTML_TUTORIALS.concat(\r\n            CSS_TUTORIALS,\r\n            JS_TUTORIALS\r\n        );\r\n        const list = tutorialsRoute\r\n            .map((x) => x.path)\r\n            .filter(\r\n                (lesson) =>\r\n                    l.indexOf(lesson.slice(0, lesson.lastIndexOf(\"/\"))) > 0\r\n            );\r\n        const i = list.findIndex((x) => l.indexOf(x) > 0);\r\n        const url = i + 1 === list.length ? null : list[i + 1];\r\n        return url;\r\n    };\r\n    const nextUrl = nextPage();\r\n\r\n    const handleNextPage = (e) => {\r\n        e.persist();\r\n        dispatch(push(nextUrl));\r\n    };\r\n    return (\r\n        <div className=\"d-flex justify-content-around btn-gr\">\r\n            <Button\r\n                variant=\"contained\"\r\n                disabled={prevUrl ? false : true}\r\n                sx={{\r\n                    fontSize: `18px`,\r\n                    background: `inherit`,\r\n                    border: prevUrl\r\n                        ? `2px solid #8167a9 !important`\r\n                        : `2px solid #777`,\r\n                    // outline: `1px solid black !important`,\r\n                    color: `#8167a9`,\r\n                    fontWeight: `bold`,\r\n                    zIndex: `992 !important`,\r\n                    \"&:hover\": { background: `#8167a9`, color: `#fff` },\r\n                    margin: `5px 0px 13px 0px`,\r\n                }}\r\n                size=\"medium\"\r\n                onClick={(e) => handlePrevPage(e)}\r\n                className=\"button-direct\"\r\n            >\r\n                <ArrowBackIosNewIcon\r\n                    sx={{ fontSize: `21px`, margin: `0 5px 0 0` }}\r\n                    className=\"prev-icon\"\r\n                />\r\n                Prev\r\n            </Button>\r\n            <Button\r\n                variant=\"contained\"\r\n                disabled={nextUrl ? false : true}\r\n                sx={{\r\n                    fontSize: `18px`,\r\n                    background: `inherit`,\r\n                    border: nextUrl\r\n                        ? `2px solid #8167a9 !important`\r\n                        : `2px solid #777`,\r\n                    // outline: `1px solid black !important`,\r\n                    color: `#8167a9`,\r\n                    fontWeight: `bold`,\r\n                    zIndex: `992 !important`,\r\n                    \"&:hover\": { background: `#8167a9`, color: `#fff` },\r\n                    margin: `5px 0px 13px 0px`,\r\n                }}\r\n                size=\"medium\"\r\n                onClick={(e) => handleNextPage(e)}\r\n                className=\"button-direct\"\r\n            >\r\n                Next\r\n                <ArrowForwardIosIcon\r\n                    sx={{ fontSize: `21px`, margin: `0 0 0 5px` }}\r\n                    className=\"next-icon\"\r\n                />\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Direct;\r\n","export default {\r\n    getStarted: `<html>\r\n  <!-- Get Started in HTML -->\r\n  <head>\r\n    <title>Get Started!</title>\r\n  </head>\r\n  <body>\r\n    <h1>My First Heading</h1>\r\n\r\n    <p>My first paragraph.</p>\r\n  </body>\r\n</html>`,\r\n    structural: `<html>\r\n    <head>\r\n    </head>\r\n    <body>\r\n    </body>\r\n</html>`,\r\n    exTag1: `<h1>My Code So Strong...</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE } from \"../../../constant/axios\";\r\n\r\nconst GetStarted = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">Get Started</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    A simple text editor is all you need to learn HTML.\r\n                </div>\r\n            </nav>\r\n            <div className=\"h4\">Learn HTML Using Notepad or TextEdit</div>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item \">\r\n                    Web pages can be created and modified by using professional\r\n                    HTML editors.\r\n                </li>\r\n                <li className=\"list-group-item \">\r\n                    However, for learning HTML we recommend a simple text editor\r\n                    like Notepad (PC) or TextEdit (Mac).\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    We believe in that using a simple text editor is a good way\r\n                    to learn HTML.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    Follow the steps below to create your first web page with\r\n                    Notepad or TextEdit.\r\n                </li>\r\n            </ul>\r\n            <div className=\"h4 mt-3\">Step 1: Open Notepad (PC)</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb  mt-3 \">\r\n                <div className=\"b-guide\">Windows 8 or later:</div>\r\n                <div className=\" b-guide\">\r\n                    Open the Start Screen (the window symbol at the bottom left\r\n                    on your screen). Type Notepad.\r\n                </div>\r\n                <div className=\" b-guide\">Windows 7 or earlier:</div>\r\n                <div className=\"b-guide\">\r\n                    Open Start &gt; Programs &gt; Accessories &gt; Notepad\r\n                </div>\r\n            </nav>\r\n\r\n            <div className=\"h4 mt-3\"> Step 1: Open TextEdit (Mac)</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb\">\r\n                <div className=\"mt-3 b-guide\">\r\n                    {\" \"}\r\n                    Open Finder &gt; Applications &gt; TextEdit\r\n                </div>{\" \"}\r\n                <div className=\"guide\">\r\n                    Also change some preferences to get the application to save\r\n                    files correctly. In Preferences &gt; Format &gt; choose\r\n                    \"Plain Text\"\r\n                </div>\r\n                <div className=\"guide\">\r\n                    Then under \"Open and Save\", check the box that says \"Display\r\n                    HTML files as HTML code instead of formatted text\".\r\n                </div>\r\n            </nav>\r\n\r\n            <div className=\"h4 mt-3\">Step 2: Write Some HTML</div>\r\n            <LineDivider size=\"small\" />\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <img src=\"https://www.w3schools.com/html/img_notepad.png\" alt=\"\" />\r\n            <div className=\"h4 mt-3\">Step 3: Save the HTML Page</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <div className=\"b-guide\">\r\n                    Save the file on your computer. Select File {\">\"} Save as in\r\n                    the Notepad menu.\r\n                </div>\r\n                <div className=\"b-guide\">\r\n                    Name the file \"index.htm\" and set the encoding to UTF-8\r\n                    (which is the preferred encoding for HTML files).\r\n                </div>\r\n            </nav>\r\n            <img src=\"https://www.w3schools.com/html/img_saveas.png\" alt=\"\" />\r\n            <nav className=\"breadcrumb mt-3 font-weight-bold h5\">\r\n                Tip: You can use either .htm or .html as file extension. There\r\n                is no difference, it is up to you.\r\n            </nav>\r\n            <div className=\"h4 mt-3\">\r\n                Step 4: View the HTML Page in Your Browser\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <div className=\"guide\">\r\n                Open the saved HTML file in your favorite browser (double click\r\n                on the file, or right-click - and choose \"Open with\").\r\n            </div>\r\n            <div className=\"guide h5\">The result will look much like this:</div>\r\n            <img src=\"https://www.w3schools.com/html/img_chrome.png\" alt=\"\" />\r\n            <div className=\"title\">\r\n                Code Yourself Online Editor - \"Code Yourself\"\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <div className=\"guide\">\r\n                    With our free online editor, you can edit the HTML code and\r\n                    view the result in your browser.\r\n                </div>\r\n                <div className=\"guide\">\r\n                    It is the perfect tool when you want to learn and test code\r\n                    fast. It also has color coding and the ability to save code\r\n                </div>\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a href={CODE} target=\"_blank\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    Code Yourself\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <div className=\"guide\">\r\n                    Click on the <code>\"Code Yourself\"</code> above button to\r\n                    see how it works.\r\n                </div>\r\n            </nav>\r\n            <img\r\n                src=\"https://scontent.fdad3-3.fna.fbcdn.net/v/t1.15752-9/261537404_304204264886606_6315770954394700458_n.png?_nc_cat=109&ccb=1-5&_nc_sid=ae9488&_nc_ohc=lQNpNiq-Y9gAX_OTUPq&_nc_ht=scontent.fdad3-3.fna&oh=03bb06970bc0c30f7d0be298eb411250&oe=61C6CAB2\"\r\n                alt=\"\"\r\n            />\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(GetStarted);\r\n","export default {\r\n    introduction: `<html>\r\n  <!-- Hello World in HTML -->\r\n  <head>\r\n    <title>Hello World!</title>\r\n  </head>\r\n  <body>\r\n    Hello World!\r\n  </body>\r\n</html>`,\r\n    structural: `<html>\r\n    <head>\r\n    </head>\r\n    <body>\r\n    </body>\r\n</html>`,\r\n    exTag1: `<h1>My Code So Strong...</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@mui/styles\";\r\nimport { CopyBlock, dracula, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport \"./Introduction.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { styles } from \"./styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport Direct from \"../../../components/Direct\";\r\n\r\nconst Introduction = (props) => {\r\n    const [language, changeLanguage] = useState(\"html\");\r\n    const [languageDemo, changeDemo] = useState(ex[\"html\"]);\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">Introduction</p>\r\n            <Direct />\r\n\r\n            <Divider className={classes.dividerB} />\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n\r\n            <p className=\"guide\">\r\n                The HyperText Markup Language, or HTML is the standard markup\r\n                language for documents designed to be displayed in a web\r\n                browser. It can be assisted by technologies such as Cascading\r\n                Style Sheets (CSS) and scripting languages such as JavaScript.\r\n                Web browsers receive HTML documents from a web server or from\r\n                local storage and render the documents into multimedia web\r\n                pages. HTML describes the structure of a web page semantically\r\n                and originally included cues for the appearance of the document.\r\n                HTML elements are the building blocks of HTML pages. With HTML\r\n                constructs, images and other objects such as interactive forms\r\n                may be embedded into the rendered page.\r\n            </p>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <p className=\"guide\">\r\n                HTML provides a means to create structured documents by denoting\r\n                structural semantics for text such as headings, paragraphs,\r\n                lists, links, quotes and other items. HTML elements are\r\n                delineated by tags, written using angle brackets. Tags such as{\" \"}\r\n                <code className=\"code\"> {\" <img /> and <input /> \"}</code>\r\n                directly introduce content into the page.\r\n            </p>\r\n            <div className=\"title\">What is an HTML Element?</div>\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"guide\">\r\n                An HTML element is defined by a start tag, some content, and an\r\n                end tag. The HTML element is everything from the start tag to\r\n                the end tag:\r\n                <div className=\"h4 mt-2 \">\r\n                    <nav className=\"breadcrumb\">\r\n                        <div className=\"guide font-weight-bold\">\r\n                            <code className=\"h4\">{`<tagname>Contents in here...</tagname>`}</code>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"guide font-weight-bold\">\r\n                    An example for you:{\" \"}\r\n                </div>\r\n                <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag1\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>\r\n                <p className=\"font-weight-bold h5 text-left\">or</p>\r\n                <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag2\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        Note: Some HTML elements have no content (like the{\" \"}\r\n                        {\"<br>\"} element). These elements are called empty\r\n                        elements. Empty elements do not have an end tag!\r\n                    </div>\r\n                </nav>\r\n                <div className=\"title\">With browser</div>\r\n                <Divider className={classes.dividerS} />\r\n                <div className=\"guide\">\r\n                    The purpose of a web browser (Chrome, Edge, Firefox, Safari)\r\n                    is to read HTML documents and display them correctly\r\n                </div>\r\n                <div className=\"guide\">\r\n                    A browser does not display the HTML tags, but uses them to\r\n                    determine how to display the document:\r\n                </div>\r\n                <img\r\n                    src=\"https://www.w3schools.com/html/img_chrome.png\"\r\n                    className=\"mt-4\"\r\n                    width={700}\r\n                    height=\"450\"\r\n                    alt=\"\"\r\n                />\r\n                <p className=\"h4 font-weight-bold text-left mt-2\">\r\n                    HTML Page Structure\r\n                </p>\r\n                <div className=\"guide mb-3 mt-3\">\r\n                    Below is a visualization of an HTML page structure:\r\n                </div>\r\n                <img\r\n                    src=\"https://i.ytimg.com/vi/90kC1YLNF3U/maxresdefault.jpg\"\r\n                    alt=\"\"\r\n                    width=\"700\"\r\n                    height=\"400\"\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <div className=\"guide font-weight-bold\">\r\n                    Note: The content inside the {\"<body>\"} section (the white\r\n                    area above) will be displayed in a browser. The content\r\n                    inside the {\"<title>\"} element will be shown in the\r\n                    browser's title bar or in the page's tab.\r\n                </div>\r\n            </nav>\r\n            <div className=\"title\">Conclusion</div>\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"guide\">\r\n                If you have followed all the instructions in this article, you\r\n                should end up with a page that looks like the one below (you can\r\n                also{\" \"}\r\n                <a\r\n                    href=\"https://mdn.github.io/beginner-html-site/\"\r\n                    target=\"_blank\"\r\n                >\r\n                    {\" \"}\r\n                    <span className=\"text-decoration text-primary\">\r\n                        view it in here\r\n                    </span>\r\n                </a>\r\n                ):\r\n            </div>\r\n            <img\r\n                src=\"https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics/finished-test-page-small.png\"\r\n                alt=\"\"\r\n                height=\"300\"\r\n            />\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Introduction);\r\n","export default {\r\n    introduction: `<html>\r\n  <!-- Hello World in HTML -->\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <title>Hello World!</title>\r\n  </head>\r\n  <body>\r\n    Hello World!\r\n  </body>\r\n</html>`,\r\n    structural: ` <head>\r\n    meta charset=\"utf-8\">\r\n    <title>My test page</title>\r\n</head>\r\n`,\r\n    exTag1: `<meta charset=utf-8>`,\r\n    exTag2: `<p>Japanese example: ご飯が熱い。</p>`,\r\n    exTag7: `<link rel=\"stylesheet\" href=\"my-css-file.css\">`,\r\n    exTag5: `<link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\">`,\r\n    exTag8: `<script src=\"my-js-file.js\" defer></script>`,\r\n    exTag6: `<script src=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\" integrity=\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js\" integrity=\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"></script>`,\r\n    exTag3: `<meta name=author content=Chris Mills>\r\n<meta name=description content=The  Web Docs Learning Area aims to provide\r\ncomplete beginners to the Web with all they need to know to get\r\nstarted with developing web sites and applications.>`,\r\n    exTag4: `<meta property=\"og:image\" content=\"https://developer.mozilla.org/static/img/opengraph-logo.png\">\r\n<meta property=\"og:description\" content=\"The Mozilla Developer Network (MDN) provides\r\ninformation about Open Web technologies including HTML, CSS, and APIs for both Web sites\r\nand HTML5 Apps. It also documents Mozilla products, like Firefox OS.\">\r\n<meta property=\"og:title\" content=\"Mozilla Developer Network\">`,\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport { CODE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Basic = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Basic</p>\r\n            <Direct />\r\n            <Divider className={classes.dividerB} />\r\n            <div className=\"title\">What’s in the head?</div>\r\n            <p className=\"guide\">Metadata in HTML</p>\r\n            <p className=\"guide\">\r\n                The head of an HTML document is the part that is not displayed\r\n                in the web browser when the page is loaded. It contains\r\n                information such as the page <code>{`<title>`}</code>, links to\r\n                CSS (if you choose to style your HTML content with CSS), links\r\n                to custom favicons, and other metadata (data about the HTML,\r\n                such as the author, and important keywords that describe the\r\n                document.) In this article we'll cover all of the above and\r\n                more, in order to give you a good basis for working with markup.\r\n            </p>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"introduction\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <p className=\"guide\">\r\n                The HTML head is the contents of the{\" \"}\r\n                <code>\r\n                    {\"<head> element — unlike the contents of the <body>\"}\r\n                </code>{\" \"}\r\n                element (which are displayed on the page when loaded in a\r\n                browser), the head's content is not displayed on the page.\r\n                Instead, the head's job is to contain metadata about the\r\n                document. In the above example, the head is quite small:\r\n            </p>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <p className=\"guide\">\r\n                In larger pages however, the head can get quite full. Try going\r\n                to some of your favorite websites and use the developer tools to\r\n                check out their head contents. Our aim here is not to show you\r\n                how to use everything that can possibly be put in the head, but\r\n                rather to teach you how to use the major elements that you'll\r\n                want to include in the head, and give you some familiarity.\r\n                Let's get started.\r\n            </p>\r\n            <div className=\"title\">Adding a title</div>\r\n            <Divider className={classes.dividerS} />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                We've already seen the <code>{\"<title>\"}</code> element in\r\n                action — this can be used to add a title to the document. This\r\n                however can get confused with the <code>{\"<h1>\"}</code> element,\r\n                which is used to add a top level heading to your body content —\r\n                this is also sometimes referred to as the page title. But they\r\n                are different things! The <code>{\" <h1> \"}</code> element\r\n                appears on the page when loaded in the browser — generally this\r\n                should be used once per page, to mark up the title of your page\r\n                content (the story title, or news headline, or whatever is\r\n                appropriate to your usage.) The <code>{\"<title>\"}</code> element\r\n                is metadata that represents the title of the overall HTML\r\n                document (not the document's content.)\r\n            </nav>\r\n            <div className=\"guide\">\r\n                Active learning: Inspecting a simple example\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                To start off this active learning, we'd like you to go to our\r\n                code-online page. To do this, Copy and paste the code out of the\r\n                page and into a new in your project, then you can register and\r\n                login to save it in a sensible place.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Press the \"Code - Online\" button on the below, which causes\r\n                direct to our CODE - ONLINE and appear (possibly in a new\r\n                browser tab). You can type and code anything on it and it\r\n                automatically refresh\r\n            </nav>\r\n            <a\r\n                href={`${SHARE_CODE}/1nqOUROuiQeblC0NWHBsdLRLrEqD02`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    Code Yourself\r\n                </button>\r\n            </a>\r\n            <img\r\n                className=\"mt-4\"\r\n                src=\"https://scontent.fdad3-4.fna.fbcdn.net/v/t1.15752-9/263454209_1345619352563167_680954481838721000_n.png?_nc_cat=101&ccb=1-5&_nc_sid=ae9488&_nc_ohc=MwbP724yHmkAX_SNSlw&tn=AHJTDg93Zew1RfnP&_nc_ht=scontent.fdad3-4.fna&oh=50c7d84fae720070cfd4671ff7c2b573&oe=61D21931\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"title\">\r\n                Metadata: the <code>{\"<meta>\"}</code> element\r\n            </div>\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"guide\">\r\n                Metadata is data that describes data, and HTML has an \"official\"\r\n                way of adding metadata to a document — the{\" \"}\r\n                <code>{\"<meta>\"}</code> element. Of course, the other stuff we\r\n                are talking about in this article could also be thought of as\r\n                metadata too. There are a lot of different types of{\" \"}\r\n                <code>{\"<meta>\"}</code> elements that can be included in your\r\n                page's <code>{\"<head>\"}</code>, but we won't try to explain them\r\n                all at this stage, as it would just get too confusing. Instead,\r\n                we'll explain a few things that you might commonly see, just to\r\n                give you an idea.\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <div className=\"guide\">\r\n                    Specifying your document's character encoding\r\n                </div>\r\n                <div className=\"guide\">\r\n                    In the example we saw above, this line was included:\r\n                </div>\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                This element specifies the document's character encoding — the\r\n                character set that the document is permitted to use. utf-8 is a\r\n                universal character set that includes pretty much any character\r\n                from any human language. This means that your web page will be\r\n                able to handle displaying any language; it's therefore a good\r\n                idea to set this on every web page you create! For example, your\r\n                page could handle English and Japanese just fine:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>Note</b>Some browsers (like Chrome) automatically fix\r\n                incorrect encodings, so depending on what browser you use, you\r\n                may not see this problem. You should still set an encoding of\r\n                utf-8 on your page anyway to avoid any potential problems in\r\n                other browsers.\r\n            </nav>\r\n            <div className=\"title\">\r\n                Active learning: Experiment with character encoding\r\n            </div>\r\n            <Divider className={classes.dividerS} />\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            Adding an author and description\r\n            <div className=\"guide\">\r\n                Many {\"<meta>\"} elements include name and content attributes:\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                name specifies the type of meta element it is; what type of\r\n                information it contains.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                content specifies the actual meta content.\r\n            </nav>\r\n            <div className=\"guide\">\r\n                Two such meta elements that are useful to include on your page\r\n                define the author of the page, and provide a concise description\r\n                of the page. Let's look at an example:\r\n                <div className=\"h4 mt-2 \">\r\n                    <nav className=\"breadcrumb\">\r\n                        <div className=\"guide font-weight-bold\">\r\n                            <div className=\"example\">\r\n                                <CopyBlock\r\n                                    language={\"html\"}\r\n                                    text={ex[\"exTag3\"]}\r\n                                    showLineNumbers={true}\r\n                                    theme={googlecode}\r\n                                    wrapLines={true}\r\n                                    codeBlock\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                Specifying an author is beneficial in many ways: it is useful to\r\n                be able to understand who wrote the page, if you have any\r\n                questions about the content and you would like to contact them.\r\n                Some content management systems have facilities to automatically\r\n                extract page author information and make it available for such\r\n                purposes.\r\n                <div className=\"\">\r\n                    Specifying a description that includes keywords relating to\r\n                    the content of your page is useful as it has the potential\r\n                    to make your page appear higher in relevant searches\r\n                    performed in search engines (such activities are termed\r\n                    Search Engine Optimization, or SEO.)\r\n                </div>\r\n                <div className=\"title mt-3\">Other types of metadata</div>\r\n                <Divider className={classes.dividerS} />\r\n                <div className=\"guide\">\r\n                    As you travel around the web, you'll find other types of\r\n                    metadata, too. A lot of the features you'll see on websites\r\n                    are proprietary creations, designed to provide certain sites\r\n                    (such as social networking sites) with specific pieces of\r\n                    information they can use.\r\n                </div>\r\n                <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag4\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>\r\n                <div className=\"title mt-3\">\r\n                    Adding custom icons to your site\r\n                </div>\r\n                <Divider className={classes.dividerS} />\r\n                To further enrich your site design, you can add references to\r\n                custom icons in your metadata, and these will be displayed in\r\n                certain contexts. The most commonly used of these is the favicon\r\n                (short for \"favorites icon\", referring to its use in the\r\n                \"favorites\" or \"bookmarks\" lists in browsers).\r\n                <div>\r\n                    The humble favicon has been around for many years. It is the\r\n                    first icon of this type: a 16-pixel square icon used in\r\n                    multiple places. You may see (depending on the browser)\r\n                    favicons displayed in the browser tab containing each open\r\n                    page, and next to bookmarked pages in the bookmarks panel.\r\n                </div>\r\n                <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag6\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>\r\n                <nav className=\"breadcrumb mt-3\">\r\n                    Don't worry too much about implementing all these types of\r\n                    icon right now — this is a fairly advanced feature, and you\r\n                    won't be expected to have knowledge of this to progress\r\n                    through the course. The main purpose here is to let you know\r\n                    what such things are, in case you come across them while\r\n                    browsing other websites' source code.\r\n                </nav>\r\n                <div className=\"title mt-3\">\r\n                    Applying CSS and JavaScript to HTML\r\n                </div>\r\n                <Divider className={classes.dividerS} />\r\n                <div className=\"guide\">\r\n                    The <code>{\"<link>\"}</code> element should always go inside\r\n                    the head of your document. This takes two attributes,\r\n                    rel=\"stylesheet\", which indicates that it is the document's\r\n                    stylesheet, and href, which contains the path to the\r\n                    stylesheet file:\r\n                </div>\r\n                <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag7\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>\r\n                <nav className=\"breadcrumb\">\r\n                    <div className=\"guide font-weight-bold\">\r\n                        The <code>{\"<script>\"}</code> element should also go\r\n                        into the head, and should include a src attribute\r\n                        containing the path to the JavaScript you want to load,\r\n                        and defer, which basically instructs the browser to load\r\n                        the JavaScript after the page has finished parsing the\r\n                        HTML. This is useful as it makes sure that the HTML is\r\n                        all loaded before the JavaScript runs, so that you don't\r\n                        get errors resulting from JavaScript trying to access an\r\n                        HTML element that doesn't exist on the page yet. There\r\n                        are actually a number of ways to handle loading\r\n                        JavaScript on your page, but this is the most foolproof\r\n                        one to use for modern browsers\r\n                    </div>\r\n                </nav>\r\n                <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag8\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>\r\n            </div>\r\n            <Divider className={classes.dividerS} />\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Basic);\r\n","export default {\r\n    getStarted: `<tagname>Content goes here...</tagname>`,\r\n    structural: `<html>\r\n    <head>\r\n    </head>\r\n    <body>\r\n    </body>\r\n</html>`,\r\n    exTag1: `<h1>My Code So Strong...</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n    exTag4: `<html>\r\n    <body>\r\n    \r\n        <p>This is a paragraph\r\n        <p>This is a paragraph\r\n    </body>\r\n</html>`,\r\n    exTag3: `<!DOCTYPE html>\r\n<html>\r\n<body>\r\n\r\n<h1>My First Heading</h1>\r\n<p>My first paragraph.</p>\r\n\r\n</body>\r\n</html>`,\r\n\r\n    exTag7: `<p>This is a <br> paragraph with a line break.</p>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst HTMLElements = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Elements</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    An HTML element is defined by a start tag, some content, and\r\n                    an end tag.\r\n                </div>\r\n            </nav>\r\n            <div className=\"h4 mt-3 title\">HTML Elements</div>\r\n            <LineDivider size=\"small\" />\r\n            <p>\r\n                The HTML element is everything from the start tag to the end\r\n                tag:\r\n            </p>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            Examples of some HTML elements:\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag1\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>{\" \"}\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <div className=\"example\">\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag2\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Note: Some HTML elements have no content (like the {\"<br>\"}{\" \"}\r\n                element). These elements are called empty elements. Empty\r\n                elements do not have an end tag!\r\n            </nav>\r\n            <div className=\"h4 mt-3 title\"> Nested HTML Elements</div>\r\n            <LineDivider size=\"small\" />\r\n            HTML elements can be nested (this means that elements can contain\r\n            other elements).\r\n            <p>\r\n                All HTML documents consist of nested HTML elements. The\r\n                following example contains four HTML elements{\" \"}\r\n                <code>{\"(<html>, <body>, <h1> and <p>)\"}</code>:\r\n            </p>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/5gcwHODTx3OMmJG1bGFvZw0r1GpRlc`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    Code Yourself\r\n                </button>\r\n            </a>\r\n            <div className=\"title mt-3\">Example Explained</div>\r\n            <LineDivider size=\"small\" />\r\n            The <code>{`<html>`}</code> element is the root element and it\r\n            defines the whole HTML document.\r\n            <div>\r\n                {\" \"}\r\n                It has a start tag{\" \"}\r\n                <code>{`<html> and an end tag </html>`}</code>.\r\n            </div>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The <code>{` <body>`}</code> element defines the document's\r\n                body.\r\n                <div>\r\n                    It has a start tag{\" \"}\r\n                    <code>{`<body> and an end tag </body>`}</code>.\r\n                </div>\r\n                <div>\r\n                    Then, inside the{\" \"}\r\n                    <code>{`<body> element there are two other elements: <h1> and <p>`}</code>\r\n                    :\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The <code>{`<h1>`}</code> element defines a heading.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                It has a start tag <code>{`<h1> and an end tag </h1>`}</code>:\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The <code>{`<p>`}</code> element defines a paragraph.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                It has a start tag <code>{`<p> and an end tag </p>`}</code>:\r\n            </nav>\r\n            <img\r\n                src=\"https://scontent.fdad3-4.fna.fbcdn.net/v/t1.15752-9/263700163_601183577632808_3819042381537253585_n.png?_nc_cat=105&ccb=1-5&_nc_sid=ae9488&_nc_ohc=XM0tY5newwUAX8gnLaR&_nc_ht=scontent.fdad3-4.fna&oh=1a946b7163d4c5af81298ab43c7961ab&oe=61D39141\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"title mt-3\">Never Skip the End Tag</div>\r\n            <LineDivider size=\"small\" />\r\n            Some HTML elements will display correctly, even if you forget the\r\n            end tag:\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"title mt-3\">Empty HTML Elements</div>\r\n            <LineDivider size=\"small\" />\r\n            HTML elements with no content are called empty elements. The{\" \"}\r\n            {\"<br>\"} tag defines a line break, and is an empty element without a\r\n            closing tag:\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"title mt-3\">HTML is Not Case Sensitive</div>\r\n            <LineDivider size=\"small\" />\r\n            HTML tags are not case sensitive: {\"<P>\"} means the same as {\"<p>\"}.\r\n            closing tag:\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <img\r\n                src=\"https://scontent.fdad3-3.fna.fbcdn.net/v/t1.15752-9/261537404_304204264886606_6315770954394700458_n.png?_nc_cat=109&ccb=1-5&_nc_sid=ae9488&_nc_ohc=lQNpNiq-Y9gAX_OTUPq&_nc_ht=scontent.fdad3-3.fna&oh=03bb06970bc0c30f7d0be298eb411250&oe=61C6CAB2\"\r\n                alt=\"\"\r\n            />\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(HTMLElements);\r\n","export default {\r\n    getStarted: `<!DOCTYPE html>\r\n<html>\r\n    <body>\r\n\r\n        <a href=\"https://youtube.com\">Youtube.com</a>\r\n\r\n    </body>\r\n</html>`,\r\n    structural: `<html>\r\n    <head>\r\n    </head>\r\n    <body>\r\n    </body>\r\n</html>`,\r\n    exTag1: `<h1>My Code So Strong...</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n    exTag3: `<h2>The src Attribute</h2>\r\n<p>HTML images are defined with the img tag</p>\r\n<img src=\"my-image.png...\">`,\r\n    exTag4: `<img src=\"img_girl.jpg\" width=\"500\" height=\"600\">`,\r\n    exTag5: `<img src=\"img_girl.jpg\" alt=\"Girl In Conan Anime\">`,\r\n    exTag6: `<p style=\"color:red;\">This is a red paragraph.</p>`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p title=\"I'm a tooltip\">This is a paragraph.</p>`,\r\n    exTag10: `<a href=\"https://youtube.com/\">Visit youtube</a>`,\r\n    exTag11: `<a href=https://youtube.com/>Visit youtube</a>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","export default {\r\n    getStarted: `<h1>Heading 1</h1>\r\n<h2>Heading 2</h2>\r\n<h3>Heading 3</h3>\r\n<h4>Heading 4</h4>\r\n<h5>Heading 5</h5>\r\n<h6>Heading 6</h6>`,\r\n    exTag1: `<h1 style=\"font-size:60px;\">Heading 1</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n    exTag3: `<h2>The src Attribute</h2>\r\n<p>HTML images are defined with the img tag</p>\r\n<img src=\"my-image.png...\">`,\r\n    exTag4: `<img src=\"img_girl.jpg\" width=\"500\" height=\"600\">`,\r\n    exTag5: `<img src=\"img_girl.jpg\" alt=\"Girl In Conan Anime\">`,\r\n    exTag6: `<p style=\"color:red;\">This is a red paragraph.</p>`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p title=\"I'm a tooltip\">This is a paragraph.</p>`,\r\n    exTag10: `<a href=\"https://youtube.com/\">Visit youtube</a>`,\r\n    exTag11: `<a href=https://youtube.com/>Visit youtube</a>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Attributes = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Attributes</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    HTML attributes provide additional information about HTML\r\n                    elements.\r\n                </div>\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">HTML Attributes</div>\r\n            <LineDivider size=\"small\" />\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item \">\r\n                    All HTML elements can have attributes\r\n                </li>\r\n                <li className=\"list-group-item \">\r\n                    Attributes provide additional information about elements\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    Attributes are always specified in the start tag\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    Attributes usually come in name/value pairs like:\r\n                    name=\"value\"\r\n                </li>\r\n            </ul>\r\n            <div className=\"title h5 mt-5\">The href Attribute</div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The {\"<a>\"} tag defines a hyperlink. The href attribute\r\n                specifies the URL of the page the link goes to:\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/VPdNvkNrfnZsvoc7iPdl8QhUg9343E`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">The src Attribute</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The <code>{`<img>`}</code> tag is used to embed an image in an\r\n                HTML page. The src attribute specifies the path to the image to\r\n                be displayed:\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/BuiTtqwWhYT9C1v1S7JE0aO2bs04T6`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                You can also copy an image address online like above:\r\n            </nav>\r\n            <img\r\n                src=\"https://scontent.fdad3-3.fna.fbcdn.net/v/t1.15752-9/263310097_1257859551360113_4490305699331198709_n.png?_nc_cat=111&ccb=1-5&_nc_sid=ae9488&_nc_ohc=PDwy9C0tDy8AX-a_OkD&_nc_ht=scontent.fdad3-3.fna&oh=059320e6e5cb657caad8b7b566f08ed8&oe=61D4FDFF\"\r\n                alt=\"\"\r\n            />\r\n            <nav className=\"breadcrumb mt-3\">And paste it into the href...</nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                {\" \"}\r\n                It should display like above on the browser screen:\r\n            </nav>\r\n            <img\r\n                className=\"mt-5\"\r\n                src=\"https://scontent.fdad3-2.fna.fbcdn.net/v/t1.15752-9/263628681_707424356887617_3179033584814532379_n.png?_nc_cat=107&ccb=1-5&_nc_sid=ae9488&_nc_ohc=OOYaiiaXzMEAX-hWdAR&_nc_ht=scontent.fdad3-2.fna&oh=6b8e7186079eca0b0b259cf64cc59391&oe=61D3379D\"\r\n                alt=\"\"\r\n                width=\"500px\"\r\n                height=\"450px\"\r\n            />\r\n            <div className=\"mt-5\">\r\n                There are two ways to specify the URL in the src attribute:\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Absolute URL - Links to an external image that is hosted on\r\n                another website. Example:\r\n                <code>\r\n                    {\" \"}\r\n                    src=\"https://www.conan-img.com/images/img_girl.jpg\".\r\n                </code>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Notes: External images might be under copyright. If you do not\r\n                get permission to use it, you may be in violation of copyright\r\n                laws. In addition, you cannot control external images; it can\r\n                suddenly be removed or changed.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Relative URL - Links to an image that is hosted within the\r\n                website. Here, the URL does not include the domain name. If the\r\n                URL begins without a slash, it will be relative to the current\r\n                page. Example: <code>src=\"img_girl.jpg\"</code>. If the URL\r\n                begins with a slash, it will be relative to the domain. Example:\r\n                src=\"/images/img_girl.jpg\".\r\n            </nav>\r\n            <div className=\"title h5 mt-5\">The width and height Attributes</div>\r\n            <LineDivider size=\"small\" />\r\n            <div>\r\n                <b>\r\n                    The <code>{\"<img>\"}</code> tag should also contain the width\r\n                    and height attributes, which specifies the width and height\r\n                    of the image (in pixels):\r\n                </b>\r\n            </div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/KyhKtKUcGznIt9xEquxRLisuDHnTxr`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">The alt Attribute</div>\r\n            <LineDivider size=\"small\" />\r\n            <div>\r\n                <b>\r\n                    The required alt attribute for the <code>{`<img>`}</code>{\" \"}\r\n                    tag specifies an alternate text for an image, if the image\r\n                    for some reason cannot be displayed. This can be due to slow\r\n                    connection, or an error in the src attribute, or if the user\r\n                    uses a screen reader.\r\n                </b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/BAed7waozdYprIms6gWeWT4SpjNSgH`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    The width and height Attributes\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                The <code>style</code> attribute is used to add styles to an\r\n                element, such as color, font, size, and more.\r\n            </nav>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/SVvl6WIVJvsu0YkhLgEE8Z6T3mbDhV`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">The lang Attribute</div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                You should always include the lang attribute inside the{\" \"}\r\n                <code>{`<html>`}</code> tag, to declare the language of the Web\r\n                page. This is meant to assist search engines and browsers.\r\n            </nav>\r\n            <b>The following example specifies English as the language:</b>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-5\">\r\n                Country codes can also be added to the language code in the lang\r\n                attribute. So, the first two characters define the language of\r\n                the HTML page, and the last two characters define the country.\r\n            </nav>\r\n            <b>\r\n                The following example specifies English as the language and\r\n                United States as the country:\r\n            </b>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag8\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">The title Attribute</div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                The title attribute defines some extra information about an\r\n                element.\r\n            </nav>\r\n            <div>\r\n                <b>\r\n                    The value of the title attribute will be displayed as a\r\n                    tooltip when you mouse over the element:\r\n                </b>\r\n            </div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag9\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/k3ogOruOI7ANlcRRVd9cSzENR4wSog`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                <div>\r\n                    <b>NOTE</b>\r\n                </div>\r\n                The HTML standard does not require lowercase attribute names.\r\n                The title attribute (and all other attributes) can be written\r\n                with uppercase or lowercase like title or TITLE. However,\r\n                recommends lowercase attributes in HTML, and demands lowercase\r\n                attributes for stricter document types like XHTML.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                {\" \"}\r\n                <div>\r\n                    The HTML standard does not require quotes around attribute\r\n                    values.\r\n                </div>\r\n                <b>\r\n                    However, recommends quotes in HTML, and demands quotes for\r\n                    stricter document types like XHTML. Good:\r\n                </b>\r\n            </nav>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An good example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag10\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                <div className=\"example mt-3\">\r\n                    <div className=\"guide\">Bad example</div>\r\n\r\n                    <CopyBlock\r\n                        language={\"html\"}\r\n                        text={ex[\"exTag11\"]}\r\n                        showLineNumbers={true}\r\n                        theme={googlecode}\r\n                        wrapLines={true}\r\n                        codeBlock\r\n                    />\r\n                </div>\r\n            </nav>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">Single or Double Quotes?</div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                Double quotes around attribute values are the most common in\r\n                HTML, but single quotes can also be used.\r\n            </nav>\r\n            <div>\r\n                <b>\r\n                    In some situations, when the attribute value itself contains\r\n                    double quotes, it is necessary to use single quotes:\r\n                </b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">Bad example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag12\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Attributes);\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Heading = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">Heading</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    HTML headings are defined with the{\" \"}\r\n                    <code>{`<h1> to <h6> `}</code>tags.\r\n                </div>\r\n            </nav>\r\n            <b>\r\n                <coded>{`<h1> defines the most important heading. <h6>`}</coded>{\" \"}\r\n                defines the least important heading.\r\n            </b>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/kLTjUsvo2KiJ4geUlReY1Dlxh0RtgI`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Headings Are Important</div>\r\n            <LineDivider size=\"small\" />\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item \">\r\n                    Search engines use the headings to index the structure and\r\n                    content of your web pages.\r\n                </li>\r\n                <li className=\"list-group-item \">\r\n                    Users often skim a page by its headings. It is important to\r\n                    use headings to show the document structure.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<h1>`}</code> headings should be used for main\r\n                    headings, followed by{\" \"}\r\n                    <code>{`<h2> headings, then the less important <h3>`}</code>\r\n                    , and so on.\r\n                </li>\r\n            </ul>\r\n            <div className=\"title h5 mt-5\">Bigger Headings</div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Each HTML heading has a default size. However, you can specify\r\n                the size for any heading with the style attribute, using the CSS\r\n                font-size property:\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/lXVKl4IDk3eLkbUX0W98WijFJNRLfi`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Heading);\r\n","export default {\r\n    getStarted: `<p>This is paragraph element</p>`,\r\n    exTag1: `<p>This is a paragraph.</p>\r\n<p>This is another paragraph.</p>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n    exTag3: `<p>\r\nThis paragraph\r\ncontains a lot of lines\r\nin the source code,\r\nbut the browser \r\nignores it.\r\n</p>\r\n\r\n<p>\r\nThis paragraph\r\ncontains      a lot of spaces\r\nin the source     code,\r\nbut the    browser \r\nignores it.\r\n</p>\r\n\r\n<p>\r\nThe number of lines in a paragraph depends on the size of the browser window. If you resize the browser window, the number of lines in this paragraph will change.\r\n</p>`,\r\n    exTag4: `<h1>This is heading 1</h1>\r\n<p>This is some text.</p>\r\n<hr>\r\n<h2>This is heading 2</h2>\r\n<p>This is some other text.</p>\r\n<hr>`,\r\n    exTag5: `<p>This is<br>a paragraph<br>with line breaks.</p>`,\r\n    exTag6: `<p>\r\nMy Bonnie lies over the ocean.\r\n\r\nMy Bonnie lies over the sea.\r\n\r\nMy Bonnie lies over the ocean.\r\n\r\nOh, bring back my Bonnie to me.\r\n</p>`,\r\n    exTag7: `<pre>\r\nMy Bonnie lies over the ocean.\r\n\r\nMy Bonnie lies over the sea.\r\n\r\nMy Bonnie lies over the ocean.\r\n\r\nOh, bring back my Bonnie to me.\r\n</pre>`,\r\n    exTag8: `<pre>\r\nMy       Bonni      e lies   over t he ocean.\r\n\r\nMy   Bonni  e lies     over the    sea.\r\n\r\nMy B    onnie   lies    over the ocean.\r\n\r\nOh, bring back my Bonnie to me.\r\n</pre>`,\r\n    exTag9: `<pre>\r\nMy       Bonni      e lies   over t he ocean.\r\n\r\n\r\n\r\nMy   Bonni  e lies     over the    sea.\r\n\r\n\r\n\r\nMy B    onnie   lies    over the ocean.\r\n\r\nOh, bring back my Bonnie to me.\r\n</pre>`,\r\n    exTag10: `<pre>\r\nMy       Bonni      e lies   over t he ocean.\r\n\r\nMy   \r\nBonni  e lies     over the    sea.\r\n\r\nMy B    \r\nonnie   lies    over the ocean.\r\n\r\nOh, bring back my Bonnie to me.\r\n</pre>`,\r\n    exTag11: `<a href=https://youtube.com/>Visit youtube</a>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Paragraphs = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Paragraphs</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    A paragraph always starts on a new line, and is usually a\r\n                    block of text like <code>{`div`}</code> element\r\n                </div>\r\n            </nav>\r\n            <b>\r\n                <coded>{`<p> defines the most important paragraph. <p>`}</coded>\r\n            </b>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/yidVBThPrdGOrReEUCEf49lRONN2bH`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">HTML Paragraphs</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-5\">\r\n                <ul className=\"list-group mt-3\">\r\n                    <li className=\"list-group-item \">\r\n                        The HTML <code>{`<p>`}</code> element defines a\r\n                        paragraph.\r\n                    </li>\r\n                    <li className=\"list-group-item \">\r\n                        A paragraph always starts on a new line, and browsers\r\n                        automatically add some white space (a margin) before and\r\n                        after a paragraph.\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/wmLSd6KUzBOn6kf8cZo4ORWWBEgaDB`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">HTML Display</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                You cannot be sure how HTML will be displayed.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Large or small screens, and resized windows will create\r\n                different results.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                With HTML, you cannot change the display by adding extra spaces\r\n                or extra lines in your HTML code.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The browser will automatically remove any extra spaces and lines\r\n                when the page is displayed:\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/LJIHabYGvheJrwtRryZzL9VzlG3JGr`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Almost case use <code>{`<p></p>`}</code> tags for common text\r\n            </nav>\r\n            <div className=\"title h5 mt-5\">HTML Horizontal Rules</div>\r\n            <LineDivider size=\"small\" />\r\n            <div>\r\n                <b>\r\n                    The <code>{`<hr>`}</code> tag defines a thematic break in an\r\n                    HTML page, and is most often displayed as a horizontal rule.\r\n                    The<code>{`<hr>`}</code>element is used to separate content\r\n                    (or define a change) in an HTML page:\r\n                </b>\r\n            </div>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/70b6rZBvYw5FEhJfOldaeNethFMdz1`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                {\" \"}\r\n                <b>\r\n                    The <code>{`<hr>`}</code> tag is an empty tag, which means\r\n                    that it has no end tag.\r\n                </b>\r\n            </nav>\r\n            <div className=\"title h5 mt-5\">HTML Line Breaks</div>\r\n            <LineDivider size=\"small\" />\r\n            <div>\r\n                <b>\r\n                    The HTML <code>{`<br>`}</code> element defines a line break.\r\n                </b>\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-2\">\r\n                Use <code>{`<br>`}</code> if you want a line break (a new line)\r\n                without starting a new paragraph:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/SDbM321JjNCGJXE1Hn6TIHJPVEVDuS`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    The <code>{` <br>`}</code> tag is an empty tag, which means\r\n                    that it has no end tag.\r\n                </b>\r\n            </nav>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">The Poem Problem</div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                This poem will display on a single line:\r\n            </nav>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/Pxq1BPoi3m1HQ9CjysoyGLGXu4sd0s`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    Solution - The HTML <code>{`<pre>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                The HTML <code>{`<pre>`}</code> element defines preformatted\r\n                text.\r\n            </nav>\r\n            <b>\r\n                The text inside a <code>{`<pre>`}</code> element is displayed in\r\n                a fixed-width font (usually Courier), and it preserves both\r\n                spaces and line breaks:\r\n            </b>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/O7MI6gPf7P6FzxXLzZ5akpN5PMdh9l`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag8\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag9\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag10\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Paragraphs);\r\n","export default {\r\n    getStarted: `<pre style=\"background: #face30\">\r\nMy Bonnie lies over the ocean.\r\n\r\nMy Bonnie lies over the sea.\r\n\r\nMy Bonnie lies over the ocean.\r\n\r\nOh, bring back my Bonnie to me.\r\n\r\nI know this every time\r\n</pre>`,\r\n    exTag0: `<div style=\"font-size:60px;color: #face30, background: #ffd\">More style on this div element</div>`,\r\n    exTag1: `<body style=\"background-color:powderblue;\">\r\n    <h1>This is a heading</h1>\r\n    <p>This is a paragraph.</p>\r\n</body>`,\r\n    exTag2: `<h1 style=\"background-color:powderblue;\">This is a heading</h1>\r\n<p style=\"background-color:tomato;\">This is a paragraph.</p>`,\r\n    exTag3: `<h1 style=\"color:blue;\">This is a heading</h1>\r\n<p style=\"color:red;\">This is a paragraph.</p>`,\r\n    exTag4: `<h1 style=\"font-family:verdana;\">This is a heading</h1>\r\n<p style=\"font-family:courier;\">This is a paragraph.</p>`,\r\n    exTag5: `<h1 style=\"font-size:300%;\">This is a heading</h1>\r\n<p style=\"font-size:160%;\">This is a paragraph.</p>`,\r\n    exTag6: `<h1 style=\"text-align:center;\">Centered Heading</h1>\r\n<p style=\"text-align:center;\">Centered paragraph.</p>`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p title=\"I'm a tooltip\">This is a paragraph.</p>`,\r\n    exTag10: `<a href=\"https://youtube.com/\">Visit youtube</a>`,\r\n    exTag11: `<a href=https://youtube.com/>Visit youtube</a>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Styles = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Styles</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    The HTML style attribute is used to add styles to an\r\n                    element, such as color, font, size, and more.\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-5\">\r\n                {\" \"}\r\n                <code>{`<a style=\"something in here...\" href=\"\">Some text...</a>`}</code>{\" \"}\r\n                tags.\r\n            </nav>\r\n            <b>\r\n                <coded>{`<h1> defines the most important heading. <h6>`}</coded>{\" \"}\r\n                defines the least important heading.\r\n            </b>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/4QIp3swnMkWNGILFbjXTyt5UDBEemf`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">The HTML Style Attribute</div>\r\n            <LineDivider size=\"small\" />\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item \">\r\n                    And so on..., not just one style, you can define more style\r\n                    on style attribute on each tag\r\n                </li>\r\n                <li className=\"list-group-item \">\r\n                    Setting the style of an HTML element, can be done with the\r\n                    style attribute.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    The HTML style attribute has the following syntax:\r\n                </li>\r\n            </ul>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag0\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"title h5 mt-5\">Background Color</div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS background-color property defines the background color\r\n                for an HTML element.\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/3uzB6cwWYuC2bsm0M6CU1vhOcPk21x`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/7jpea0kGuIOLKBjwMkGZN4dCiCH0vG`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Text Color</div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                The CSS color property defines the text color for an HTML\r\n                element:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/L7Uqs1d0cZOg2ib9OclleIc7Zm0omn`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Fonts</div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                The CSS font-family property defines the font to be used for an\r\n                HTML element:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/HnAYEhvMo9JDkUY3BpyqNjwjuTR5qX`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Text Size</div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                The CSS font-size property defines the text size for an HTML\r\n                element:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/EMLH8yWy9D4UkWmNhezTR0UMLmsuda`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Text Alignment</div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                The CSS text-align property defines the horizontal text\r\n                alignment for an HTML element:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a\r\n                href={`${SHARE_CODE}/6Xh1kilej8CazF3tEMwerpwj8mKyYR`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <LineDivider size=\"small\" />\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Styles);\r\n","export default {\r\n    getStarted: `This text is bold\r\nThis text is italic\r\nThis is subscript and superscript`,\r\n    structural: `<b>This text is bold</b>`,\r\n    exTag1: `<h1>My Code So Strong...</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n    exTag3: `<strong>This text is important!</strong>`,\r\n    exTag4: `<i>This text is italic</i>`,\r\n    exTag5: `<em>This text is emphasized</em>`,\r\n    exTag6: `<p>My favorite color is <del>blue</del> red.</p>`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Formatting = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Text Formatting</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    HTML contains several elements for defining text with a\r\n                    special meaning.\r\n                </div>\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/Bc9miZ6tNk9FnIGyJNRPu9bxa0KQu8`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">HTML Formatting Elements</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Formatting elements were designed to display special types of\r\n                text:\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item \">\r\n                    <code>{` <b>`}</code> - Bold text\r\n                </li>\r\n                <li className=\"list-group-item \">\r\n                    <code>{`<strong> - Important text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<i> - Italic text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<em> - Emphasized text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<mark> - Marked text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<small> - Smaller text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<del> - Deleted text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<ins> - Inserted text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<sub> - Subscript text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<sup> - Superscript text`}</code>\r\n                </li>\r\n            </ul>\r\n            <div className=\"title h5 mt-5\">\r\n                <code>{`HTML <b> and <strong> Elements`}</code>\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<b>`}</code> element defines bold text, without\r\n                any extra importance.\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/KwRUFwcBDJX92qpnMU5jdN22mDMxoI`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">The strong Attribute</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<strong>`}</code> element defines text with\r\n                strong importance. The content inside is typically displayed in\r\n                bold.\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/BuiTtqwWhYT9C1v1S7JE0aO2bs04T6`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                {\" \"}\r\n                HTML <code>{`<i> and <em>`}</code> Elements\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<i>`}</code> element defines a part of text in\r\n                an alternate voice or mood. The content inside is typically\r\n                displayed in italic.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Tip: The <code>{`<i>`}</code> tag is often used to indicate a\r\n                technical term, a phrase from another language, a thought, a\r\n                ship name, etc.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<em>`}</code> element defines emphasized text.\r\n                The content inside is typically displayed in italic.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Tip: A screen reader will pronounce the words in{\" \"}\r\n                <code>{`<em>`}</code> with an emphasis, using verbal stress.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"title h5 mt-5\">\r\n                HTML <code>{`<small>`}</code> Element\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <div>\r\n                <b>\r\n                    <code>{`The HTML <small> element defines smaller text:`}</code>\r\n                </b>\r\n            </div>\r\n            <small>This is some smaller text.</small>\r\n            <div className=\"title h5 mt-5\">\r\n                HTML <code>{`<mark>`}</code> Element\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<mark>`}</code> element defines text that\r\n                should be marked or highlighted:\r\n            </nav>\r\n            <div>\r\n                <b>\r\n                    <code>{`<p>Do not forget to buy <mark>milk</mark> today.</p>`}</code>\r\n                </b>\r\n            </div>\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    HTML <code>{`<del>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<del>`}</code> element defines text that has\r\n                been deleted from a document. Browsers will usually strike a\r\n                line through deleted text:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    HTML <code>{`<ins>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<ins>`}</code> element defines text that has\r\n                been deleted from a document. Browsers will usually strike a\r\n                line through deleted text:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag9\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>{\" \"}\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    HTML <code>{`<sub>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<sub>`}</code> element defines subscript text.\r\n                Subscript text appears half a character below the normal line,\r\n                and is sometimes rendered in a smaller font. Subscript text can\r\n                be used for chemical formulas, like H2O:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag10\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    HTML <code>{`<sup>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<sup>`}</code> element defines superscript\r\n                text. Superscript text appears half a character above the normal\r\n                line, and is sometimes rendered in a smaller font. Superscript\r\n                text can be used for footnotes, like WWW[1]:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag11\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Formatting);\r\n","export default {\r\n    getStarted: `<style>\r\nbody {background-color: powderblue;}\r\nh1   {color: blue;}\r\np    {color: red;}\r\n</style>\r\n</head>\r\n<body>\r\n\r\n<h1>This is a heading</h1>\r\n<p>This is a paragraph.</p>\r\n\r\n</body>`,\r\n    structural: `<head>\r\n<link rel=\"stylesheet\" href=\"styles.css\">\r\n</head>\r\n<body>\r\n\r\n<h1>This is a heading</h1>\r\n<p>This is a paragraph.</p>\r\n\r\n</body>`,\r\n    exTag1: `body {\r\nbackground-color: powderblue;\r\n}\r\nh1 {\r\ncolor: blue;\r\n}\r\np {\r\ncolor: red;\r\n}`,\r\n    exTag2: `<style>\r\nh1 {\r\n    color: blue;\r\n    font-family: verdana;\r\n    font-size: 300%;\r\n}\r\np {\r\n    color: red;\r\n    font-family: courier;\r\n    font-size: 160%;\r\n}\r\n</style>\r\n</head>\r\n<body>\r\n\r\n<h1>This is a heading</h1>\r\n<p>This is a paragraph.</p>\r\n\r\n</body>`,\r\n    exTag3: `p {\r\nborder: 2px solid powderblue;\r\n}`,\r\n    exTag4: `p {\r\nborder: 2px solid powderblue;\r\npadding: 30px;\r\n}`,\r\n    exTag5: `p {\r\nborder: 2px solid powderblue;\r\nmargin: 50px;\r\n}`,\r\n    exTag6: `<link rel=\"stylesheet\" href=\"https://www.w3schools.com/html/styles.css\">`,\r\n    exTag7: `<link rel=\"stylesheet\" href=\"/html/styles.css\">`,\r\n    exTag8: `<link rel=\"stylesheet\" href=\"styles.css\">`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst HTMLCSS = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Styles - CSS</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    CSS stands for Cascading Style Sheets.\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    CSS saves a lot of work. It can control the layout of\r\n                    multiple web pages all at once.\r\n                </div>\r\n            </nav>\r\n            <img\r\n                src=\"https://leecy.me/content/images/2021/06/image.png\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"h4 title mt-5\">What is CSS?</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Cascading Style Sheets (CSS) is used to format the layout of a\r\n                webpage.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                With CSS, you can control the color, font, the size of text, the\r\n                spacing between elements, how elements are positioned and laid\r\n                out, what background images or background colors are to be used,\r\n                different displays for different devices and screen sizes, and\r\n                much more!\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    Tip: The word cascading means that a style applied to a\r\n                    parent element will also apply to all children elements\r\n                    within the parent. So, if you set the color of the body text\r\n                    to \"blue\", all headings, paragraphs, and other text elements\r\n                    within the body will also get the same color (unless you\r\n                    specify something else)!\r\n                </b>\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">Using CSS</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                CSS can be added to HTML documents in 3 ways:\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    Inline - by using the style attribute inside HTML elements\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    Internal - by using a <code>{`<style>`}</code> element in\r\n                    the <code>{`<head>`}</code> section\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    External - by using a <code>{`<link>`}</code> element to\r\n                    link to an external CSS file\r\n                </li>\r\n            </ul>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The most common way to add CSS, is to keep the styles in\r\n                external CSS files. However, in this tutorial we will use inline\r\n                and internal styles, because this is easier to demonstrate, and\r\n                easier for you to try it yourself. The most common way to add\r\n                CSS, is to keep the styles in external CSS files. However, in\r\n                this tutorial we will use inline and internal styles, because\r\n                this is easier to demonstrate, and easier for you to try it\r\n                yourself.\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">Internal CSS</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                An internal CSS is used to define a style for a single HTML\r\n                page.\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    An internal CSS is defined in the{\" \"}\r\n                    <code>{`<head> section of an HTML page, within a <style>`}</code>{\" \"}\r\n                    element.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    Internal - by using a <code>{`<style>`}</code> element in\r\n                    the <code>{`<head>`}</code> section\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    The following example sets the text color of ALL the\r\n                    <code>{` <h1> elements (on that page) to blue, and the text color of ALL the <p>`}</code>{\" \"}\r\n                    elements to red. In addition, the page will be displayed\r\n                    with a \"powderblue\" background color:\r\n                </li>\r\n            </ul>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"h4 title mt-5\">External CSS</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                An external style sheet is used to define the style for many\r\n                HTML pages.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                To use an external style sheet, add a link to it in the{\" \"}\r\n                <code>{`<head> `}</code>section of each HTML page:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The external style sheet can be written in any text editor. The\r\n                file must not contain any HTML code, and must be saved with a\r\n                .css extension.\r\n            </nav>\r\n            <div>\r\n                <b>Here is what the \"styles.css\" file looks like:</b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">CSS Colors, Fonts and Sizes</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Here, we will demonstrate some commonly used CSS properties. You\r\n                will learn more about them later.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS color property defines the text color to be used.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS font-family property defines the font to be used.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS font-size property defines the text size to be used.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The external style sheet can be written in any text editor. The\r\n                file must not contain any HTML code, and must be saved with a\r\n                .css extension.\r\n            </nav>\r\n            <div>\r\n                <b>Here is what the \"styles.css\" file looks like:</b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">CSS Border</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS border property defines a border around an HTML element.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Tip: You can define a border for nearly all HTML elements.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The external style sheet can be written in any text editor. The\r\n                file must not contain any HTML code, and must be saved with a\r\n                .css extension.\r\n            </nav>\r\n            <div>\r\n                <b>Here is what the \"styles.css\" file looks like:</b>\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">CSS Padding</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS padding property defines a padding (space) between the\r\n                text and the border.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">CSS Margin</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The CSS margin property defines a margin (space) outside the\r\n                border.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"h4 title mt-5\">Link to External CSS</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                External style sheets can be referenced with a full URL or with\r\n                a path relative to the current web page.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag8\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(HTMLCSS);\r\n","export default {\r\n    getStarted: `<a href=\"url\">link text</a>`,\r\n    structural: `<head>\r\n<link rel=\"stylesheet\" href=\"styles.css\">\r\n</head>\r\n<body>\r\n\r\n<h1>This is a heading</h1>\r\n<p>This is a paragraph.</p>\r\n\r\n</body>`,\r\n    exTag1: `<a href=\"https://youtube.com/\">Youtube.com!</a>`,\r\n    exTag2: `<a href=\"https://www.youtube.com/\" target=\"_blank\">Youtube.com!</a>`,\r\n    exTag3: `<h2>Absolute URLs</h2>\r\n<p><a href=\"https://www.youtube.com.org/\">Youtueb</a></p>\r\n<p><a href=\"https://www.google.com/\">Google</a></p>\r\n<h2>Relative URLs</h2>\r\n<p><a href=\"html_images.asp\">HTML Images</a></p>\r\n<p><a href=\"/css/default.asp\">CSS Tutorial</a></p>`,\r\n    exTag4: `<a href=\"default.asp\">\r\n<img src=\"smiley.gif\" alt=\"HTML tutorial\" style=\"width:42px;height:42px;\">\r\n</a>`,\r\n    exTag5: `<a href=\"mailto:someone@example.com\">Send email</a>`,\r\n    exTag6: `<button onclick=\"document.location='youtube.com'\">HTML Tutorial</button>`,\r\n    exTag7: `<a href=\"https://www.w3schools.com/html/\" title=\"Go to W3Schools HTML section\">Visit our HTML Tutorial</a>`,\r\n    exTag8: `<a href=\"https://www.w3schools.com/html/default.asp\">HTML tutorial</a>`,\r\n    exTag9: `<a href=\"/html/default.asp\">HTML tutorial</a>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Links = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Links</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    Links are found in nearly all web pages. Links allow users\r\n                    to click their way from page to page.\r\n                </div>\r\n            </nav>\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    CSS saves a lot of work. It can control the layout of\r\n                    multiple web pages all at once.\r\n                </div>\r\n            </nav>\r\n            <img\r\n                src=\"https://media.geeksforgeeks.org/wp-content/uploads/box-model-1.png\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"h4 title mt-5\">HTML Links - Hyperlinks</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">HTML links are hyperlinks.</nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                You can click on a link and jump to another document.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    When you move the mouse over a link, the mouse arrow will\r\n                    turn into a little hand.\r\n                </b>\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                <b>\r\n                    Note: A link does not have to be text. A link can be an\r\n                    image or any other HTML element!\r\n                </b>\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">HTML Links - Syntax</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<a>`}</code> tag defines a hyperlink. It has\r\n                the following syntax:\r\n            </nav>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    The most important attribute of the <code>{`<a>`}</code>{\" \"}\r\n                    element is the href attribute, which indicates the link's\r\n                    destination.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    The link text is the part that will be visible to the\r\n                    reader.\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    Clicking on the link text, will send the reader to the\r\n                    specified URL address.\r\n                </li>\r\n            </ul>{\" \"}\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag1\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                By default, links will appear as follows in all browsers:\r\n            </nav>\r\n            <div className=\"guide\">\r\n                <div>An unvisited link is underlined and blue</div>\r\n                <div>A visited link is underlined and purple</div>\r\n                <div>An active link is underlined and red</div>\r\n            </div>\r\n            <nav className=\"breadcrumb mt-4\">\r\n                Tip: Links can of course be styled with CSS, to get another\r\n                look!\r\n            </nav>\r\n            <div className=\"h4 title mt-5\">\r\n                HTML Links - The target Attribute\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                By default, the linked page will be displayed in the current\r\n                browser window. To change this, you must specify another target\r\n                for the link.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The target attribute specifies where to open the linked\r\n                document.\r\n                <div>\r\n                    {\" \"}\r\n                    The target attribute can have one of the following values:\r\n                </div>\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item mt-2\">\r\n                    _self - Default. Opens the document in the same window/tab\r\n                    as it was clicked\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    _blank - Opens the document in a new window or tab\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    _parent - Opens the document in the parent frame\r\n                </li>\r\n                <li className=\"list-group-item mt-2\">\r\n                    _top - Opens the document in the full body of the window\r\n                </li>\r\n            </ul>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag2\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Absolute URLs vs. Relative URLs</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Both examples above are using an absolute URL (a full web\r\n                address) in the href attribute.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                A local link (a link to a page within the same website) is\r\n                specified with a relative URL (without the \"https://www\" part):\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">\r\n                HTML Links - Use an Image as a Link\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                To use an image as a link, just put the{\" \"}\r\n                <code>{`<img> tag inside the <a>`}</code> tag:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Link to an Email Address</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Use mailto: inside the href attribute to create a link that\r\n                opens the user's email program (to let them send a new email):\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Button as a Link</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                To use an HTML button as a link, you have to add some JavaScript\r\n                code.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                JavaScript allows you to specify what happens at certain events,\r\n                such as a click of a button:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">Link Titles</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The title attribute specifies extra information about an\r\n                element. The information is most often shown as a tooltip text\r\n                when the mouse moves over the element\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag7\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">\r\n                More on Absolute URLs and Relative URLs\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The title attribute specifies extra information about an\r\n                element. The information is most often shown as a tooltip text\r\n                when the mouse moves over the element\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag8\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag9\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Links);\r\n","export default {\r\n    getStarted: `<img src=\"pic_trulli.jpg\" alt=\"Italian Trulli\">`,\r\n    structural: `<b>This text is bold</b>`,\r\n    exTag1: `<h1>My Code So Strong...</h1>`,\r\n    exTag2: `<div>This is a div element</div>`,\r\n    exTag3: `<strong>This text is important!</strong>`,\r\n    exTag4: `<i>This text is italic</i>`,\r\n    exTag5: `<em>This text is emphasized</em>`,\r\n    exTag6: `<p>My favorite color is <del>blue</del> red.</p>`,\r\n    exTag7: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag8: `<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n    <body>\r\n    ...\r\n    </body>\r\n</html>>`,\r\n    exTag9: `<p>My favorite color is <del>blue</del> <ins>red</ins>.</p>`,\r\n    exTag10: `<p>This is <sub>subscripted</sub> text.</p>`,\r\n    exTag11: `<p>This is <sup>superscripted</sup> text.</p>`,\r\n    exTag12: `<p title='John \"ShotGun\" Nelson'>`,\r\n};\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Direct from \"../../../components/Direct\";\r\nimport LineDivider from \"../../../components/LineDivider\";\r\nimport { styles } from \"../Introduction/styles\";\r\nimport \"../Introduction/Introduction.css\";\r\nimport { CopyBlock, googlecode } from \"react-code-blocks\";\r\nimport ex from \"./example\";\r\nimport { API, CODE, CODES_ONLINE, SHARE_CODE } from \"../../../constant/axios\";\r\n\r\nconst Images = () => {\r\n    return (\r\n        <div className=\"container-content\">\r\n            <p className=\"lesson-title\">HTML Images</p>\r\n            <Direct />\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb my-bread\">\r\n                <div className=\"guide\">\r\n                    Images can improve the design and the appearance of a web\r\n                    page.\r\n                </div>\r\n            </nav>\r\n            <img\r\n                src=\"https://scontent.fdad3-1.fna.fbcdn.net/v/t1.15752-9/263589965_1116181812456413_4271057305934982282_n.jpg?_nc_cat=110&ccb=1-5&_nc_sid=ae9488&_nc_ohc=g6oSeW1i7JQAX8RHOAk&tn=AHJTDg93Zew1RfnP&_nc_ht=scontent.fdad3-1.fna&oh=67d24a2ca5f360a6dda20b526c9b96c8&oe=61D39242\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"getStarted\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/6hdXyHq3PZge7p8iA53VsQUkiPV4Mo`}\r\n                target=\"_blank\"\r\n                className=\"mt-5\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"h4 title mt-5\">HTML Formatting Elements</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Formatting elements were designed to display special types of\r\n                text:\r\n            </nav>\r\n            <ul className=\"list-group mt-3\">\r\n                <li className=\"list-group-item \">\r\n                    <code>{` <b>`}</code> - Bold text\r\n                </li>\r\n                <li className=\"list-group-item \">\r\n                    <code>{`<strong> - Important text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<i> - Italic text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<em> - Emphasized text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<mark> - Marked text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<small> - Smaller text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<del> - Deleted text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<ins> - Inserted text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<sub> - Subscript text`}</code>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <code>{`<sup> - Superscript text`}</code>\r\n                </li>\r\n            </ul>\r\n            <div className=\"title h5 mt-5\">\r\n                <code>{`HTML <b> and <strong> Elements`}</code>\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<b>`}</code> element defines bold text, without\r\n                any extra importance.\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"structural\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/KwRUFwcBDJX92qpnMU5jdN22mDMxoI`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">The strong Attribute</div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<strong>`}</code> element defines text with\r\n                strong importance. The content inside is typically displayed in\r\n                bold.\r\n            </nav>\r\n            <div className=\"example\">\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag3\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a\r\n                href={`${SHARE_CODE}/BuiTtqwWhYT9C1v1S7JE0aO2bs04T6`}\r\n                target=\"_blank\"\r\n            >\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                {\" \"}\r\n                HTML <code>{`<i> and <em>`}</code> Elements\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<i>`}</code> element defines a part of text in\r\n                an alternate voice or mood. The content inside is typically\r\n                displayed in italic.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Tip: The <code>{`<i>`}</code> tag is often used to indicate a\r\n                technical term, a phrase from another language, a thought, a\r\n                ship name, etc.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag4\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<em>`}</code> element defines emphasized text.\r\n                The content inside is typically displayed in italic.\r\n            </nav>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                Tip: A screen reader will pronounce the words in{\" \"}\r\n                <code>{`<em>`}</code> with an emphasis, using verbal stress.\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag5\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>\r\n            <div className=\"title h5 mt-5\">\r\n                HTML <code>{`<small>`}</code> Element\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <div>\r\n                <b>\r\n                    <code>{`The HTML <small> element defines smaller text:`}</code>\r\n                </b>\r\n            </div>\r\n            <small>This is some smaller text.</small>\r\n            <div className=\"title h5 mt-5\">\r\n                HTML <code>{`<mark>`}</code> Element\r\n            </div>\r\n            <LineDivider size=\"small\" />\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<mark>`}</code> element defines text that\r\n                should be marked or highlighted:\r\n            </nav>\r\n            <div>\r\n                <b>\r\n                    <code>{`<p>Do not forget to buy <mark>milk</mark> today.</p>`}</code>\r\n                </b>\r\n            </div>\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    HTML <code>{`<del>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<del>`}</code> element defines text that has\r\n                been deleted from a document. Browsers will usually strike a\r\n                line through deleted text:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag6\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    HTML <code>{`<ins>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<ins>`}</code> element defines text that has\r\n                been deleted from a document. Browsers will usually strike a\r\n                line through deleted text:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag9\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>{\" \"}\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    HTML <code>{`<sub>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<sub>`}</code> element defines subscript text.\r\n                Subscript text appears half a character below the normal line,\r\n                and is sometimes rendered in a smaller font. Subscript text can\r\n                be used for chemical formulas, like H2O:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag10\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <div className=\"title h5 mt-5\">\r\n                <div className=\"title h5 mt-5\">\r\n                    HTML <code>{`<sup>`}</code> Element\r\n                </div>\r\n                <LineDivider size=\"small\" />\r\n            </div>\r\n            <nav className=\"breadcrumb mt-3\">\r\n                The HTML <code>{`<sup>`}</code> element defines superscript\r\n                text. Superscript text appears half a character above the normal\r\n                line, and is sometimes rendered in a smaller font. Superscript\r\n                text can be used for footnotes, like WWW[1]:\r\n            </nav>\r\n            <div className=\"example mt-3\">\r\n                <div className=\"guide\">An example</div>\r\n\r\n                <CopyBlock\r\n                    language={\"html\"}\r\n                    text={ex[\"exTag11\"]}\r\n                    showLineNumbers={true}\r\n                    theme={googlecode}\r\n                    wrapLines={true}\r\n                    codeBlock\r\n                />\r\n            </div>{\" \"}\r\n            <a href={`${CODE}`} target=\"_blank\" className=\"mt-5\">\r\n                <button className=\"btn btn-code btn-large mt-3\">\r\n                    {CODES_ONLINE}\r\n                </button>\r\n            </a>\r\n            <Direct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Images);\r\n","import GetStarted from \"../../contentLibrary/html/GetStarted/GetStarted\";\r\nimport Introduction from \"../../contentLibrary/html/Introduction/Introduction\";\r\nimport React from \"react\";\r\nimport Basic from \"../../contentLibrary/html/Basic/Basic\";\r\nimport HTMLElements from \"../../contentLibrary/html/HTMLElements/HTMLElements\";\r\nimport Attributes from \"../../contentLibrary/html/Attributes/Attributes\";\r\nimport Heading from \"../../contentLibrary/html/Heading/Heading\";\r\nimport Paragraphs from \"../../contentLibrary/html/Paragraphs/Paragraphs\";\r\nimport Styles from \"../../contentLibrary/html/HTML Styles/Styles\";\r\nimport Formatting from \"../../contentLibrary/html/Formatting/Formatting\";\r\nimport HTMLCSS from \"../../contentLibrary/html/HTMLCSS/HTMLCSS\";\r\nimport Links from \"../../contentLibrary/html/Links/Links\";\r\nimport Images from \"../../contentLibrary/html/Images/Images\";\r\n\r\nexport const HTML_TUTORIALS = [\r\n    {\r\n        path: \"/tutorials/html/introduction\",\r\n        name: \"Introduction\",\r\n        exact: true,\r\n        component: (props) => <Introduction {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/get-started\",\r\n        name: \"Get Started\",\r\n        exact: true,\r\n        component: (props) => <GetStarted {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/html-basic\",\r\n        name: \"HTML Basic\",\r\n        exact: true,\r\n        component: (props) => <Basic {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/html-elements\",\r\n        name: \"HTML Elements\",\r\n        exact: true,\r\n        component: (props) => <HTMLElements {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/heading\",\r\n        name: \"Heading\",\r\n        exact: true,\r\n        component: (props) => <Heading {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/paragraphs\",\r\n        name: \"Paragraphs\",\r\n        exact: true,\r\n        component: (props) => <Paragraphs {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/styles\",\r\n        name: \"HTML Styles\",\r\n        exact: true,\r\n        component: (props) => <Styles {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/formatting\",\r\n        name: \"HTML Formatting\",\r\n        exact: true,\r\n        component: (props) => <Formatting {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/html-css\",\r\n        name: \"HTML - CSS\",\r\n        exact: true,\r\n        component: (props) => <HTMLCSS {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/html-links\",\r\n        name: \"HTML - Links\",\r\n        exact: true,\r\n        component: (props) => <Links {...props} />,\r\n    },\r\n    {\r\n        path: \"/tutorials/html/html-images\",\r\n        name: \"HTML - Images\",\r\n        exact: true,\r\n        component: (props) => <Images {...props} />,\r\n    },\r\n];\r\n","import { createActions } from \"redux-actions\";\r\n\r\nexport const openModalShare = createActions({\r\n    openModalShareRequest: (val) => val,\r\n    openModalShareSuccess: (val) => val,\r\n    openModalShareFailure: (val) => val,\r\n});\r\n","import { createActions } from \"redux-actions\";\r\n\r\nexport const setView = createActions({\r\n    setViewRequest: (val) => val,\r\n    setViewSuccess: (val) => val,\r\n    setViewFailure: (val) => val,\r\n});\r\n\r\nexport const setFullScreen = createActions({\r\n    setFullScreenRequest: (val) => val,\r\n    setFullScreenSuccess: (val) => val,\r\n    setFullScreenFailure: (val) => val,\r\n});\r\n\r\nexport const setLargeScreen = createActions({\r\n    setLargeScreenRequest: (val) => val,\r\n    setLargeScreenSuccess: (val) => val,\r\n    setLargeScreenFailure: (val) => val,\r\n});\r\n","import { createActions } from \"redux-actions\";\r\n\r\nexport const setMessage = createActions({\r\n    setMessageRequest: (val) => val,\r\n    setMessageSuccess: (val) => val,\r\n    setMessageFailure: (val) => val,\r\n});\r\n\r\nexport const setMess = createActions({\r\n    setMessRequest: (val) => val,\r\n    setMessSuccess: (val) => val,\r\n    setMessFailure: (val) => val,\r\n});\r\n\r\nexport const setAllMess = createActions({\r\n    setAllMessRequest: (val) => val,\r\n    setAllMessSuccess: (val) => val,\r\n    setAllMessFailure: (val) => val,\r\n});\r\n\r\nexport const setId = createActions({\r\n    setIdRequest: (val) => val,\r\n    setIdSuccess: (val) => val,\r\n    setIdFailure: (val) => val,\r\n});\r\n\r\nexport const setCurrentObj = createActions({\r\n    setCurrentObjRequest: (val) => val,\r\n    setCurrentObjSuccess: (val) => val,\r\n    setCurrentObjFailure: (val) => val,\r\n});\r\n\r\nexport const setFriends = createActions({\r\n    setFriendsRequest: (val) => val,\r\n    setFriendsSuccess: (val) => val,\r\n    setFriendsFailure: (val) => val,\r\n});\r\n\r\nexport const setDisplay = createActions({\r\n    setDisplayRequest: (val) => val,\r\n    setDisplaySuccess: (val) => val,\r\n    setDisplayFailure: (val) => val,\r\n});\r\n\r\nexport const setImageWillBeShow = createActions({\r\n    setImageWillBeShowRequest: (val) => val,\r\n    setImageWillBeShowSuccess: (val) => val,\r\n    setImageWillBeShowFailure: (val) => val,\r\n});\r\n\r\nexport const setUpdateSeen = createActions({\r\n    setUpdateSeenRequest: (val) => val,\r\n    setUpdateSeenSuccess: (val) => val,\r\n    setUpdateSeenFailure: (val) => val,\r\n});\r\n\r\nexport const openMessenger = createActions({\r\n    openMessengerRequest: (val) => val,\r\n    openMessengerSuccess: (val) => val,\r\n    openMessengerFailure: (val) => val,\r\n});\r\n\r\nexport const setViewMessenger = createActions({\r\n    setViewMessengerRequest: (val) => val,\r\n    setViewMessengerSuccess: (val) => val,\r\n    setViewMessengerFailure: (val) => val,\r\n});\r\n","import {\r\n    Button,\r\n    IconButton,\r\n    LinearProgress,\r\n    Typography,\r\n    Box,\r\n} from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    directToCode,\r\n    updateCode,\r\n    getProjects,\r\n    changeName,\r\n    setIsChanging,\r\n    setIsDeleting,\r\n} from \"../actions/code\";\r\nimport { logout, setNameCode } from \"../actions/login\";\r\nimport { openModalSuccess } from \"../actions/modal\";\r\nimport \"./Nav.css\";\r\n\r\nimport { setListTutorial, setOpen, setSidebar } from \"../actions/tutorial\";\r\nimport { HTML_TUTORIALS } from \"../common/constants/HTMLconstants\";\r\nimport { CSS_TUTORIALS } from \"../common/constants/CSSconstants\";\r\nimport { JS_TUTORIALS } from \"../common/constants/JSconstants\";\r\nimport { GoogleLogout } from \"react-google-login\";\r\nimport { API_GG, CODE } from \"../constant/axios\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\nimport { push } from \"connected-react-router\";\r\nimport { openModalShare } from \"../actions/modalShareCode\";\r\nimport { setFullScreen, setView, setLargeScreen } from \"../actions/view\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport CreateNewFolderIcon from \"@mui/icons-material/CreateNewFolder\";\r\nimport FolderIcon from \"@mui/icons-material/Folder\";\r\nimport FolderOpenIcon from \"@mui/icons-material/FolderOpen\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { openMessenger, setDisplay, setFriends } from \"../actions/messenger\";\r\nimport { setUrl } from \"../actions/code\";\r\n\r\nconst Nav = ({\r\n    openModalSuccessCreator,\r\n    updateCodeCreator,\r\n    name,\r\n    isAuthenticated,\r\n    nameCode,\r\n    directToCodeCreator,\r\n    logoutCreator,\r\n    getProjectsCreator,\r\n    projects,\r\n    setIsChangingCreator,\r\n    setIsDeletingCreator,\r\n    url,\r\n    locationForNav,\r\n    socketRef,\r\n}) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        displaySave: {\r\n            [\"@media(max-width:960px)\"]: {\r\n                display: nameCode ? `none !important` : `block !important`,\r\n            },\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const openSidebar = useSelector((state) => state.tutorial.openSidebar);\r\n    const picture = useSelector((state) => state.auth.account.picture);\r\n    const progress = useSelector((state) => state.modal.progress);\r\n    const fullScreen = useSelector((state) => state.view.fullScreen);\r\n    const largeScreen = useSelector((state) => state.view.largeScreen);\r\n    const mess = useSelector((state) => state.messenger.mess);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let [html, setHtml] = useLocalStorage(\"html\", \"\");\r\n    const [css, setCss] = useLocalStorage(\"css\", \"\");\r\n    const [js, setJs] = useLocalStorage(\"js\", \"\");\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const handleSave = (e) => {\r\n        e.preventDefault();\r\n        openModalSuccessCreator();\r\n    };\r\n\r\n    const handleDirect = () => {\r\n        directToCodeCreator();\r\n        dispatch(setNameCode(null));\r\n    };\r\n\r\n    const objId = useSelector((state) => state.auth.account.objId);\r\n\r\n    const handleLogout = (e, x) => {\r\n        e.preventDefault();\r\n\r\n        // Socket logout\r\n        socketRef.current.emit(\"sendLogout\", objId);\r\n        // dispatch(setFriends.setFriendsSuccess([]));\r\n        dispatch(setDisplay.setDisplaySuccess(false));\r\n\r\n        x();\r\n\r\n        // console.log(\"Answer\", typeof window.FB.logout === 'function');\r\n\r\n        localStorage.removeItem(\"access_token\");\r\n        logoutCreator();\r\n        dispatch(push(\"/login\"));\r\n    };\r\n\r\n    const onLogoutGGSuccess = (res) => {\r\n        localStorage.removeItem(\"access_token\");\r\n    };\r\n\r\n    const handleGetProjects = (e) => {\r\n        e.preventDefault();\r\n        // console.log(\"handleGetProjects run...\");\r\n        getProjectsCreator();\r\n    };\r\n\r\n    const handleChangeName = () => {\r\n        setIsChangingCreator(true);\r\n        openModalSuccessCreator();\r\n    };\r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n\r\n        setIsDeletingCreator(true);\r\n        openModalSuccessCreator();\r\n    };\r\n    const newProject = (e) => {\r\n        e.preventDefault();\r\n        localStorage.setItem(\r\n            \"code-html\",\r\n            JSON.stringify(`<div style=\"parent\">\r\n  <div class=\"text-type\">\r\n    <p>WELCOME to CODE-ONLINE&nbsp;</p>\r\n  </div>\r\n  <div class=\"text-type flow\">\r\n    <p>Type something to-start&nbsp;</p>\r\n  </div>\r\n</div>\r\n      `)\r\n        );\r\n        localStorage.setItem(\r\n            \"code-css\",\r\n            JSON.stringify(`body {\r\n  margin:0px;\r\n  height:100vh;\r\n  display:flex;\r\n  align-items:center;\r\n  justify-content:center;\r\n  color: #fff;\r\n\r\n}\r\n.parent {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.text-type {\r\n  padding:20px 30px;\r\n  background:#f5f5f5;\r\n  font-size:35px;\r\n  font-family:monospace;\r\n  border-radius:50px;\r\n  position: relative;\r\n  font-weight: 650;\r\n  top: -60px;\r\n  margin-top: 15px;\r\n  background-image: linear-gradient(45deg, #98DBC6 45.02%, #ffe6e1 10%);\r\n}\r\n.text-type p {\r\n  margin:0px;\r\n  white-space:nowrap;\r\n  overflow:hidden;\r\n  animation:typing 4s steps(22,end) forwards, blink 1s infinite;\r\n\r\n}\r\n.flow {\r\n  display: none;\r\n  padding:20px 30px;\r\n  background:#f5f5f5;\r\n  font-size:35px;\r\n  font-family:monospace;\r\n  border-radius:50px;\r\n  position: relative;\r\n  font-weight: 550;\r\n  top: -60px;\r\n  margin-top: 15px;\r\n  background-image: linear-gradient(to right, #98EDC6 60%, #98EDC6);\r\n}\r\n@keyframes typing {\r\n  0% { width:0% }\r\n  100% { width:100% }\r\n}\r\n@keyframes blink {\r\n  0%,100% {\r\n    border-right:2px solid transparent;\r\n  }\r\n  50% {\r\n    border-right:2px solid #222;\r\n  }\r\n}`)\r\n        );\r\n        localStorage.setItem(\r\n            \"code-js\",\r\n            JSON.stringify(`setTimeout(() => {\r\n            var x = document.getElementsByClassName('flow')[0];\r\n            x.style.cssText = \"display: flex !important\" },1000)`)\r\n        );\r\n        // window.open(\"http://localhost:3000/code\");\r\n        // dispatch(push(\"/code\"));\r\n        window.location.href = CODE;\r\n    };\r\n\r\n    const [projectsFiltered, setProjectsFiltered] = useState(projects);\r\n    const [keySearch, setKeySearch] = useState(\"\");\r\n    useEffect(() => {\r\n        setProjectsFiltered(\r\n            projects\r\n                .reverse()\r\n                .filter(\r\n                    (x) =>\r\n                        x.name\r\n                            .toString()\r\n                            .toLowerCase()\r\n                            .indexOf(keySearch.toLowerCase()) > -1 && x\r\n                )\r\n        );\r\n    }, [keySearch, projects]);\r\n    const onSearch = (e) => {\r\n        const value = e.target.value;\r\n        setKeySearch(value);\r\n    };\r\n    const renderProjects = () => {\r\n        let jsx;\r\n        jsx = (\r\n            <div\r\n                className=\"dropdown-menu\"\r\n                style={{\r\n                    maxHeight: `500px`,\r\n                    position: `absolute`,\r\n                    background: `#fff`,\r\n                    zIndex: `2000`,\r\n                    overflowY: projects.length >= 15 ? `scroll` : \"hidden\",\r\n                    maxWidth: `290px`,\r\n                    overflowX: `auto`,\r\n                    left: 0,\r\n                }}\r\n            >\r\n                <a\r\n                    href={CODE}\r\n                    // to=\"/code\"\r\n                    className=\"dropdown-item\"\r\n                    onClick={(e) => newProject(e)}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            display: `flex`,\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        {\" \"}\r\n                        <div>New Project</div>\r\n                        <div>\r\n                            {\" \"}\r\n                            <CreateNewFolderIcon\r\n                                sx={{\r\n                                    fontSize:\r\n                                        projects.length !== 0 ? `20px` : `18px`,\r\n                                    // paddingLeft: `3px`,\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n                <div\r\n                    style={{\r\n                        position: `relative`,\r\n                        marginBottom: `2.9px`,\r\n                        marginTop: `2.9px`,\r\n                    }}\r\n                >\r\n                    <SearchIcon\r\n                        sx={{\r\n                            position: `absolute`,\r\n                            left: 7,\r\n                            top: 5.9,\r\n                            borderRight: `1px solid #000`,\r\n                            padding: `0 5px 0 0`,\r\n                        }}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"search\"\r\n                        id=\"search\"\r\n                        placeholder=\"Search..\"\r\n                        onChange={onSearch}\r\n                    />\r\n                </div>\r\n                {projectsFiltered.map((project, key) => (\r\n                    <a\r\n                        key={key}\r\n                        className=\"dropdown-item limit-drop\"\r\n                        href={`/${project._id}`}\r\n                        style={{\r\n                            background: project.name === nameCode && `#8167a9`,\r\n                            color: project.name === nameCode && `#fff`,\r\n                        }}\r\n                    >\r\n                        {\" \"}\r\n                        <span\r\n                            style={{\r\n                                display: \"inline-block\",\r\n                                whiteSpace: \"nowrap\",\r\n                                overflow: \"hidden\",\r\n                                textOverflow: \"ellipsis\",\r\n                                maxWidth: \"25ch\",\r\n                                padding: `0`,\r\n                            }}\r\n                        >\r\n                            {project.name === nameCode ? (\r\n                                <FolderIcon\r\n                                    sx={{\r\n                                        fontSize: `20px`,\r\n                                        paddingRight: `5px`,\r\n                                    }}\r\n                                />\r\n                            ) : (\r\n                                <FolderOpenIcon\r\n                                    sx={{\r\n                                        fontSize: `20px`,\r\n                                        paddingRight: `5px`,\r\n                                    }}\r\n                                />\r\n                            )}\r\n                            {/* <FolderOpenIcon\r\n                                sx={{\r\n                                    fontSize: `20px`,\r\n                                    paddingRight: `5px`,\r\n                                }}\r\n                            /> */}\r\n\r\n                            {project.name}\r\n                        </span>\r\n                    </a>\r\n                ))}\r\n            </div>\r\n        );\r\n        return jsx;\r\n    };\r\n\r\n    const openListHTML = () => {\r\n        // dispatch(setNameCode(null));\r\n        dispatch(setListTutorial.setListTutorial(HTML_TUTORIALS));\r\n        dispatch(setOpen.setOpen(true));\r\n    };\r\n\r\n    const openListCSS = () => {\r\n        // dispatch(setNameCode(null));\r\n        dispatch(setListTutorial.setListTutorial(CSS_TUTORIALS));\r\n        dispatch(setOpen.setOpen(true));\r\n    };\r\n    const openListJS = () => {\r\n        // dispatch(setNameCode(null));\r\n        dispatch(setListTutorial.setListTutorial(JS_TUTORIALS));\r\n        dispatch(setOpen.setOpen(true));\r\n    };\r\n    const handleToggleSidebar = (e) => {\r\n        e.persist();\r\n        setTimeout(() => {\r\n            dispatch(setSidebar.setSidebar(!openSidebar));\r\n        }, 70);\r\n    };\r\n\r\n    const handleShare = () => {\r\n        dispatch(openModalShare.openModalShareRequest(url));\r\n    };\r\n\r\n    const status = useSelector((state) => state.view.status);\r\n\r\n    useEffect(() => {\r\n        getProjectsCreator();\r\n    }, [nameCode, name]);\r\n\r\n    // let checkLocation = useSelector((state) => state.tutorial.location);\r\n    // checkLocation = checkLocation.split(\"/\")[1];\r\n    // // console.log(\"checkLocation\", checkLocation);\r\n\r\n    const handleOpenMessenger = (e) => {\r\n        e.preventDefault();\r\n        // console.log(\"ABC\");\r\n        dispatch(openMessenger.openMessengerSuccess(true));\r\n    };\r\n\r\n    const handleCountNotify = () => {\r\n        const x = mess.filter(\r\n            (m) => m.objIds.includes(objId) && m.objId !== objId && !m.seen && m\r\n        );\r\n        return x.length;\r\n    };\r\n\r\n    return (\r\n        <div className=\"navigation-wrap bg-light start-header start-style\">\r\n            <div className=\"container1\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <nav\r\n                            className=\"navbar navbar-expand-md navbar-light static ml-auto\"\r\n                            style={{\r\n                                position: `relative`,\r\n                            }}\r\n                        >\r\n                            <div\r\n                                className=\"navbar-brand\"\r\n                                style={{\r\n                                    color: \"#8167a9\",\r\n                                    fontSize: `1.5rem`,\r\n                                    fontWeight: 680,\r\n                                    padding: `2px 8px`,\r\n                                    border: `none`,\r\n                                    outline: `none`,\r\n                                    background: `inherit`,\r\n                                    // boxShadow: \"2px 2px\",\r\n                                }}\r\n                            >\r\n                                <IconButton\r\n                                    size=\"large\"\r\n                                    edge=\"start\"\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"open drawer\"\r\n                                    onClick={(e) => handleToggleSidebar(e)}\r\n                                    // disabled={\r\n                                    //     checkLocation === \"tutorials\"\r\n                                    //         ? false\r\n                                    //         : true\r\n                                    // }\r\n                                >\r\n                                    <MenuIcon fontSize=\"medium\" />\r\n                                </IconButton>\r\n\r\n                                <Link\r\n                                    to=\"/code\"\r\n                                    // onClick={handleDirect}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        if (!status)\r\n                                            dispatch(\r\n                                                setView.setViewSuccess(true)\r\n                                            );\r\n                                        else\r\n                                            dispatch(\r\n                                                setView.setViewSuccess(false)\r\n                                            );\r\n                                        // dispatch(setNameCode(null));\r\n\r\n                                        // dispatch(push(\"/code\"));\r\n                                        dispatch(push(`/${url}`));\r\n                                    }}\r\n                                    style={{\r\n                                        color: \"#8167a9\",\r\n                                        fontSize: `1.5rem`,\r\n                                        fontWeight: 680,\r\n                                        padding: `2px 8px`,\r\n                                        textDecoration: `none`,\r\n                                        fontFamily: `'Roboto Condensed', sans-serif`,\r\n                                        // boxShadow: \"2px 2px\",\r\n                                    }}\r\n                                >\r\n                                    <span>\r\n                                        <span\r\n                                            style={{ visibility: `hidden` }}\r\n                                        >{`<`}</span>\r\n                                        Code Online{\" \"}\r\n                                        <span\r\n                                            style={{ visibility: `hidden` }}\r\n                                        >{`aaaa/>`}</span>\r\n                                    </span>\r\n                                </Link>\r\n                            </div>\r\n\r\n                            {/* <Button\r\n                                sx={{\r\n                                    color: \"#8167a9\",\r\n                                    [\"@media(max-width: 600px\"]: {\r\n                                        float: \"right\",\r\n                                        border: \"none\",\r\n                                        paddingRight: \"0\",\r\n                                        padding: 0,\r\n                                        margin: 0,\r\n                                        marginBottom: `-5px`,\r\n                                        color: \"#8167a9\",\r\n                                    },\r\n                                }}\r\n                                onClick={() => {\r\n                                    dispatch(setView.setViewSuccess(!status));\r\n                                }}\r\n                            >\r\n                                View 2\r\n                            </Button> */}\r\n\r\n                            <button\r\n                                className=\"navbar-toggler\"\r\n                                type=\"button\"\r\n                                data-toggle=\"collapse\"\r\n                                data-target=\"#navbarSupportedContent\"\r\n                                aria-controls=\"navbarSupportedContent\"\r\n                                aria-expanded=\"false\"\r\n                                aria-label=\"Toggle navigation\"\r\n                            >\r\n                                <span className=\"navbar-toggler-icon\"></span>\r\n                            </button>\r\n\r\n                            <div\r\n                                className=\"collapse navbar-collapse\"\r\n                                id=\"navbarSupportedContent\"\r\n                                style={{ marginRight: 17 }}\r\n                            >\r\n                                <ul className=\"navbar-nav ml-auto py-4 py-md-0\">\r\n                                    <li className=\"nav-item pl-4 pl-md-0 ml-0 md-4 v\">\r\n                                        <Link\r\n                                            className=\"nav-link dropdown-toggle\"\r\n                                            data-toggle=\"dropdown\"\r\n                                            type=\"button\"\r\n                                            role=\"button\"\r\n                                            aria-haspopup=\"true\"\r\n                                            aria-expanded=\"false\"\r\n                                            // onClick={(e) => {\r\n                                            //     e.preventDefault();\r\n                                            //     dispatch(\r\n                                            //         setView.setViewSuccess(\r\n                                            //             !status\r\n                                            //         )\r\n                                            //     );\r\n                                            // }}\r\n                                            style={{\r\n                                                color: \"#8167a9 !important\",\r\n                                                fontWeight: 780,\r\n                                                padding: `2px 8px`,\r\n                                            }}\r\n                                            to=\"/\"\r\n                                        >\r\n                                            {\" \"}\r\n                                            View\r\n                                        </Link>\r\n                                        <div className=\"dropdown-menu\">\r\n                                            <p\r\n                                                style={{\r\n                                                    cursor: `pointer`,\r\n                                                    background:\r\n                                                        status === false &&\r\n                                                        fullScreen === false &&\r\n                                                        `#8167a9`,\r\n                                                    color:\r\n                                                        status === false &&\r\n                                                        fullScreen === false &&\r\n                                                        `#fff`,\r\n                                                }}\r\n                                                className=\"dropdown-item\"\r\n                                                onClick={(e) => {\r\n                                                    e.preventDefault();\r\n                                                    dispatch(\r\n                                                        setView.setViewSuccess(\r\n                                                            false\r\n                                                        )\r\n                                                    );\r\n                                                }}\r\n                                            >\r\n                                                View 1\r\n                                            </p>\r\n                                            <p\r\n                                                style={{\r\n                                                    cursor: `pointer`,\r\n                                                    background:\r\n                                                        status === true &&\r\n                                                        !largeScreen &&\r\n                                                        `#8167a9`,\r\n                                                    color:\r\n                                                        status === true &&\r\n                                                        !largeScreen &&\r\n                                                        `#fff`,\r\n                                                }}\r\n                                                className=\"dropdown-item\"\r\n                                                onClick={(e) => {\r\n                                                    e.preventDefault();\r\n                                                    dispatch(\r\n                                                        setView.setViewSuccess(\r\n                                                            true\r\n                                                        )\r\n                                                    );\r\n                                                }}\r\n                                            >\r\n                                                View 2\r\n                                            </p>\r\n                                            <p\r\n                                                style={{\r\n                                                    cursor: `pointer`,\r\n                                                    background:\r\n                                                        largeScreen === true &&\r\n                                                        `#8167a9`,\r\n                                                    color:\r\n                                                        largeScreen === true &&\r\n                                                        `#fff`,\r\n                                                }}\r\n                                                className=\"dropdown-item\"\r\n                                                onClick={(e) => {\r\n                                                    e.preventDefault();\r\n                                                    dispatch(\r\n                                                        setLargeScreen.setLargeScreenSuccess(\r\n                                                            !largeScreen\r\n                                                        )\r\n                                                    );\r\n                                                }}\r\n                                            >\r\n                                                Large Screen\r\n                                            </p>\r\n                                            <p\r\n                                                className=\"dropdown-item\"\r\n                                                to=\"\"\r\n                                                style={{\r\n                                                    cursor: `pointer`,\r\n                                                    background:\r\n                                                        fullScreen === true &&\r\n                                                        `#8167a9`,\r\n                                                    color:\r\n                                                        fullScreen === true &&\r\n                                                        `#fff`,\r\n                                                }}\r\n                                                onClick={(e) => {\r\n                                                    e.preventDefault();\r\n                                                    if (!fullScreen) {\r\n                                                        dispatch(\r\n                                                            setFullScreen.setFullScreenSuccess()\r\n                                                        );\r\n                                                    } else\r\n                                                        dispatch(\r\n                                                            setFullScreen.setFullScreenFailure()\r\n                                                        );\r\n                                                }}\r\n                                            >\r\n                                                {!fullScreen\r\n                                                    ? \"Full Screen\"\r\n                                                    : \"Display Code\"}\r\n                                            </p>\r\n                                        </div>\r\n                                    </li>\r\n                                    {isAuthenticated && (\r\n                                        <li\r\n                                            className=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\"\r\n                                            style={{ position: `relative` }}\r\n                                        >\r\n                                            {isAuthenticated && name && (\r\n                                                <>\r\n                                                    <Link\r\n                                                        className=\"nav-link dropdown-toggle yp\"\r\n                                                        data-toggle=\"dropdown\"\r\n                                                        role=\"button\"\r\n                                                        aria-haspopup=\"true\"\r\n                                                        aria-expanded=\"false\"\r\n                                                        // to={url}\r\n                                                        to=\"\"\r\n                                                        style={{\r\n                                                            color: \"#8167a9 !important\",\r\n                                                            fontWeight: 780,\r\n                                                            // marginLeft: `25%`\r\n                                                        }}\r\n                                                        onClick={\r\n                                                            handleGetProjects\r\n                                                        }\r\n                                                    >\r\n                                                        <span\r\n                                                            style={{\r\n                                                                display:\r\n                                                                    \"inline-block\",\r\n                                                                whiteSpace:\r\n                                                                    \"nowrap\",\r\n                                                                overflow:\r\n                                                                    \"hidden\",\r\n                                                                textOverflow:\r\n                                                                    \"ellipsis\",\r\n                                                                maxWidth:\r\n                                                                    \"14ch\",\r\n                                                                padding: `0`,\r\n                                                            }}\r\n                                                        >\r\n                                                            Your Project\r\n                                                        </span>\r\n                                                        <span\r\n                                                            style={{\r\n                                                                display:\r\n                                                                    \"inline-block\",\r\n                                                                whiteSpace:\r\n                                                                    \"nowrap\",\r\n                                                                overflow:\r\n                                                                    \"hidden\",\r\n                                                                textOverflow:\r\n                                                                    \"ellipsis\",\r\n                                                                maxWidth:\r\n                                                                    \"14ch\",\r\n                                                                padding: `0`,\r\n                                                            }}\r\n                                                            className=\"span-nameCode\"\r\n                                                        >\r\n                                                            {nameCode\r\n                                                                ? `: ${nameCode}`\r\n                                                                : \"\"}\r\n                                                        </span>\r\n                                                    </Link>\r\n                                                    {renderProjects()}\r\n                                                </>\r\n                                            )}\r\n                                        </li>\r\n                                    )}\r\n\r\n                                    {nameCode && isAuthenticated && (\r\n                                        <li className=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\r\n                                            {isAuthenticated && name && (\r\n                                                <p\r\n                                                    className=\"nav-link dropdown-toggle\"\r\n                                                    data-toggle=\"dropdown\"\r\n                                                    role=\"button\"\r\n                                                    aria-haspopup=\"true\"\r\n                                                    aria-expanded=\"false\"\r\n                                                >\r\n                                                    <span\r\n                                                        style={{\r\n                                                            color: `#8167a9 !important`,\r\n                                                            fontWeight: `780`,\r\n                                                            display:\r\n                                                                \"inline-block\",\r\n                                                            whiteSpace:\r\n                                                                \"nowrap\",\r\n                                                            overflow: \"hidden\",\r\n                                                            textOverflow:\r\n                                                                \"ellipsis\",\r\n                                                            maxWidth: \"8ch\",\r\n                                                            padding: `0`,\r\n                                                        }}\r\n                                                        className=\"nameCode\"\r\n                                                    >\r\n                                                        {nameCode}\r\n                                                    </span>\r\n                                                </p>\r\n                                            )}\r\n                                            <div className=\"dropdown-menu\">\r\n                                                <p\r\n                                                    style={{\r\n                                                        cursor: `pointer`,\r\n                                                    }}\r\n                                                    className=\"dropdown-item\"\r\n                                                    onClick={handleShare}\r\n                                                >\r\n                                                    Share\r\n                                                </p>\r\n                                                <p\r\n                                                    style={{\r\n                                                        cursor: `pointer`,\r\n                                                    }}\r\n                                                    className=\"dropdown-item\"\r\n                                                    onClick={(e) =>\r\n                                                        handleSave(e)\r\n                                                    }\r\n                                                >\r\n                                                    Save\r\n                                                </p>\r\n                                                <p\r\n                                                    style={{\r\n                                                        cursor: `pointer`,\r\n                                                    }}\r\n                                                    className=\"dropdown-item\"\r\n                                                    onClick={handleChangeName}\r\n                                                >\r\n                                                    Change name\r\n                                                </p>\r\n                                                <p\r\n                                                    className=\"dropdown-item\"\r\n                                                    to=\"\"\r\n                                                    style={{\r\n                                                        cursor: `pointer`,\r\n                                                    }}\r\n                                                    onClick={handleDelete}\r\n                                                >\r\n                                                    Delete\r\n                                                </p>\r\n                                            </div>\r\n                                        </li>\r\n                                    )}\r\n                                    <li\r\n                                        className={`nav-item pl-4 pl-md-0 ml-0 ml-md-4 ${classes.displaySave}`}\r\n                                    >\r\n                                        <Link\r\n                                            className=\"nav-link\"\r\n                                            type=\"button\"\r\n                                            onClick={(e) => handleSave(e)}\r\n                                            style={{\r\n                                                color: \"#8167a9 !important\",\r\n                                                fontWeight: 780,\r\n                                                padding: `2px 8px`,\r\n                                            }}\r\n                                            to=\"/\"\r\n                                        >\r\n                                            Save\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4 contain-profile\">\r\n                                        {isAuthenticated && name && (\r\n                                            <Link\r\n                                                className=\"nav-link dropdown-toggle\"\r\n                                                data-toggle=\"dropdown\"\r\n                                                role=\"button\"\r\n                                                aria-haspopup=\"true\"\r\n                                                aria-expanded=\"false\"\r\n                                                to=\"\"\r\n                                            >\r\n                                                <span\r\n                                                    style={{\r\n                                                        color: `#8167a9 !important`,\r\n                                                        fontWeight: `780`,\r\n                                                    }}\r\n                                                >\r\n                                                    <div\r\n                                                        style={{\r\n                                                            display: `flex`,\r\n                                                        }}\r\n                                                    >\r\n                                                        <Fragment>\r\n                                                            {picture ? (\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                        marginRight: `5px`,\r\n                                                                        marginTop: `1.9px`,\r\n                                                                        display: `block`,\r\n                                                                        alignSelf: `center`,\r\n                                                                        width: \"25px important\",\r\n                                                                        height: `25px !important`,\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <img\r\n                                                                        src={\r\n                                                                            picture\r\n                                                                        }\r\n                                                                        alt=\"\"\r\n                                                                        width=\"25px\"\r\n                                                                        heigh=\"25px\"\r\n                                                                        style={{\r\n                                                                            width: \"25px important\",\r\n                                                                            maxHeight: `25px !important`,\r\n                                                                        }}\r\n                                                                        className=\"avatar-user\"\r\n                                                                    />\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </Fragment>\r\n                                                        <Fragment>\r\n                                                            <span\r\n                                                                style={{\r\n                                                                    alignSelf: `center`,\r\n                                                                }}\r\n                                                            >{` ${name}`}</span>\r\n                                                            {handleCountNotify() >\r\n                                                                0 && (\r\n                                                                <Typography\r\n                                                                    component={\r\n                                                                        \"span\"\r\n                                                                    }\r\n                                                                    variant={\r\n                                                                        \"body2\"\r\n                                                                    }\r\n                                                                    sx={{\r\n                                                                        position: `relative !important`,\r\n                                                                        background: `#FF0000`,\r\n                                                                        color: `#FFFFFF`,\r\n                                                                        borderRadius: `15px !important`,\r\n                                                                        fontSize: `13px !important`,\r\n                                                                        left: `5px !important`,\r\n                                                                        top: `-5px !important`,\r\n                                                                        padding:\r\n                                                                            \"5px 8px !important\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    {` ${handleCountNotify()}`}\r\n                                                                </Typography>\r\n                                                            )}\r\n                                                        </Fragment>\r\n                                                    </div>\r\n                                                </span>\r\n                                            </Link>\r\n                                        )}\r\n                                        <div className=\"dropdown-menu\">\r\n                                            {/* <Link\r\n                                                className=\"dropdown-item\"\r\n                                                to=\"/Employee/Shareholder\"\r\n                                                onClick={handleLogout}\r\n                                            >\r\n                                                Sign out\r\n                                            </Link> */}\r\n                                            <Typography\r\n                                                component=\"p\"\r\n                                                className=\"dropdown-item\"\r\n                                                onClick={handleOpenMessenger}\r\n                                                sx={{\r\n                                                    cursor: `pointer !important`,\r\n                                                    fontSize: `15px !important`,\r\n                                                }}\r\n                                            >\r\n                                                Messenger\r\n                                                {handleCountNotify() > 0 && (\r\n                                                    <Typography\r\n                                                        component={\"span\"}\r\n                                                        variant={\"body2\"}\r\n                                                        sx={{\r\n                                                            position: `relative !important`,\r\n                                                            background: `#FF0000`,\r\n                                                            color: `#FFFFFF`,\r\n                                                            borderRadius: `15px !important`,\r\n                                                            fontSize: `13px !important`,\r\n                                                            left: `5px !important`,\r\n                                                            top: `-5px !important`,\r\n                                                            padding:\r\n                                                                \"5px 6px !important\",\r\n                                                            paddingRight: `9px !important`,\r\n                                                        }}\r\n                                                    >\r\n                                                        {` ${handleCountNotify()}`}\r\n                                                    </Typography>\r\n                                                )}\r\n                                            </Typography>\r\n                                            <Link\r\n                                                className=\"dropdown-item\"\r\n                                                to={`/users/profile/${localStorage[\"access_token\"]}`}\r\n                                            >\r\n                                                Profile\r\n                                            </Link>\r\n                                            <GoogleLogout\r\n                                                clientId={API_GG}\r\n                                                render={(renderProps) => (\r\n                                                    <Link\r\n                                                        className=\"dropdown-item\"\r\n                                                        to=\"\"\r\n                                                        onClick={(e) =>\r\n                                                            handleLogout(\r\n                                                                e,\r\n                                                                renderProps.onClick\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        Sign out\r\n                                                    </Link>\r\n                                                )}\r\n                                                onLogoutSuccess={\r\n                                                    onLogoutGGSuccess\r\n                                                }\r\n                                            ></GoogleLogout>\r\n                                        </div>\r\n                                    </li>\r\n\r\n                                    {!isAuthenticated && (\r\n                                        <li className=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\r\n                                            <Link\r\n                                                className=\"nav-link\"\r\n                                                to=\"/login\"\r\n                                            >\r\n                                                Login\r\n                                            </Link>\r\n                                        </li>\r\n                                    )}\r\n\r\n                                    <li className=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\r\n                                        <>\r\n                                            <Link\r\n                                                className=\"nav-link dropdown-toggle\"\r\n                                                data-toggle=\"dropdown\"\r\n                                                role=\"button\"\r\n                                                aria-haspopup=\"true\"\r\n                                                aria-expanded=\"false\"\r\n                                                to=\"\"\r\n                                                style={{\r\n                                                    color: \"#8167a9 !important\",\r\n                                                    fontWeight: 780,\r\n                                                    // marginLeft: `25%`\r\n                                                }}\r\n                                            >\r\n                                                More\r\n                                            </Link>\r\n                                            <div className=\"dropdown-menu\">\r\n                                                <button\r\n                                                    className=\"dropdown-item\"\r\n                                                    // to=\"/forum/1\"\r\n                                                    onClick={() => {\r\n                                                        dispatch(\r\n                                                            setUrl(\"code\")\r\n                                                        );\r\n\r\n                                                        dispatch(\r\n                                                            setNameCode(null)\r\n                                                        );\r\n                                                        dispatch(\r\n                                                            push(\"/forum/1\")\r\n                                                        );\r\n                                                    }}\r\n                                                >\r\n                                                    Forum\r\n                                                </button>\r\n\r\n                                                <button\r\n                                                    className=\"dropdown-item\"\r\n                                                    onClick={openListHTML}\r\n                                                >\r\n                                                    HTML\r\n                                                </button>\r\n                                                <button\r\n                                                    className=\"dropdown-item\"\r\n                                                    onClick={openListCSS}\r\n                                                >\r\n                                                    CSS\r\n                                                </button>\r\n                                                <button\r\n                                                    className=\"dropdown-item\"\r\n                                                    onClick={openListJS}\r\n                                                >\r\n                                                    JS\r\n                                                </button>\r\n                                            </div>\r\n                                            {/* {renderProjects()} */}\r\n                                        </>\r\n                                    </li>\r\n\r\n                                    {/* <li className=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\r\n                                        <Link className=\"nav-link\" to=\"/code\">\r\n                                            {\"<Code />\"}\r\n                                        </Link>\r\n                                    </li> */}\r\n                                </ul>\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {progress && (\r\n                <Box\r\n                    sx={{\r\n                        width: \"100%\",\r\n                        marginBottom: `-25.5px`,\r\n                        paddingBottom: 0,\r\n                    }}\r\n                >\r\n                    <LinearProgress />\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    name: state.auth.account.name,\r\n    nameCode: state.auth.nameCode,\r\n    projects: state.code.projects,\r\n    url: state.code.url,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    openModalSuccessCreator: openModalSuccess,\r\n    updateCodeCreator: updateCode,\r\n    directToCodeCreator: directToCode,\r\n    logoutCreator: logout,\r\n    getProjectsCreator: getProjects,\r\n    setIsChangingCreator: setIsChanging,\r\n    setIsDeletingCreator: setIsDeleting,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Nav);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport styles from \"./styles\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nimport {\r\n    Typography,\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    TextField,\r\n    Alert,\r\n    Box,\r\n    LinearProgress,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    ggLogin,\r\n    fbLogin,\r\n    GGLogin,\r\n    login,\r\n    setErrorLogin,\r\n    checkLogin,\r\n} from \"../../actions/login\";\r\nimport { setProgress } from \"../../actions/modal\";\r\nimport { set } from \"mongoose\";\r\nimport Nav from \"../Nav.js\";\r\nimport { Fragment } from \"react\";\r\nimport GoogleLogin, { GoogleLogout } from \"react-google-login\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\n// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\n\r\nimport { API_GG } from \"../../constant/axios\";\r\nimport GoogleIcon from \"@mui/icons-material/Google\";\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nconst Login = (props) => {\r\n    const {\r\n        classes,\r\n        err,\r\n        loginCreator,\r\n        setProgressCreator,\r\n        progress,\r\n        isAuthenticated,\r\n        setErrorLoginCreator,\r\n        checkLoginCreator,\r\n    } = props;\r\n    // const [email, setEmail] = useState(\"\");\r\n    const [account, setAccount] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n    const nameCode = useSelector((state) => state.auth.nameCode);\r\n    const dispatch = useDispatch();\r\n    // console.log(\"Login Component render\");\r\n    useEffect(() => {\r\n        // setErrorLoginCreator(null);\r\n        loginCreator(null);\r\n        if (nameCode === null && !isAuthenticated) {\r\n            setErrorLoginCreator(null);\r\n        }\r\n        checkLoginCreator();\r\n    }, []);\r\n    // checkLoginCreator();\r\n\r\n    const onChange = (e) => {\r\n        setAccount({\r\n            ...account,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        loginCreator(account);\r\n    };\r\n\r\n    // const onClick = (e) => {\r\n    //     window.open(\"https://youtube.com/\");\r\n    // };\r\n\r\n    const responseGoogle = (res) => {\r\n        // console.log(res);\r\n        // sessionStorage.setItem(\"access_token\", res.tokenId);\r\n        dispatch(ggLogin.ggLoginRequest(res));\r\n    };\r\n    const responseFailureGoogle = (res) => {\r\n        // console.log(\"Just failed:\", res);\r\n        dispatch(push(\"/login\"));\r\n    };\r\n\r\n    const responseFacebook = (res) => {\r\n        dispatch(fbLogin.fbLoginRequest(res));\r\n        // console.log(\"FB Login:\", res);\r\n        // dispatch(setProgress(false));\r\n    };\r\n\r\n    const responseFacebookFailure = (res) => {\r\n        // console.log(\"FB Login failure:\", res);\r\n    };\r\n\r\n    // const directForgotPassword = (e) => {\r\n    //     e.preventDefault();\r\n    //     dispatch(push('/identify/user'))\r\n    // }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.background}>\r\n                <div className={classes.login}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <form action=\"\">\r\n                                <div className=\"text-xs-center pb-xs\">\r\n                                    <Typography\r\n                                        variant=\"caption\"\r\n                                        sx={{ fontSize: `14.2px` }}\r\n                                    >\r\n                                        Login to continue\r\n                                    </Typography>\r\n                                </div>\r\n                                <TextField\r\n                                    id=\"email\"\r\n                                    label=\"Email\"\r\n                                    className={classes.textField}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    name=\"email\"\r\n                                    value={account.email}\r\n                                    onChange={onChange}\r\n                                />\r\n                                <TextField\r\n                                    id=\"password\"\r\n                                    label=\"Password\"\r\n                                    className={classes.textField}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    value={account.password}\r\n                                    onChange={onChange}\r\n                                />\r\n\r\n                                {err && (\r\n                                    <Alert\r\n                                        variant=\"outlined\"\r\n                                        severity=\"error\"\r\n                                        className={classes.alert}\r\n                                    >\r\n                                        {err}\r\n                                    </Alert>\r\n                                )}\r\n\r\n                                <Box mt={2}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        fullWidth\r\n                                        type=\"submit\"\r\n                                        className={classes.btn}\r\n                                        onClick={handleLogin}\r\n                                    >\r\n                                        Login\r\n                                    </Button>\r\n                                    <Link\r\n                                        to=\"/identify/user\"\r\n                                        className={classes.link}\r\n                                    >\r\n                                        <Button\r\n                                            sx={{\r\n                                                display: `block`,\r\n                                                margin: `5px 0 2px 0`,\r\n                                                padding: 0,\r\n                                                width: `100%`,\r\n                                                textAlign: `right`,\r\n                                                textTransform: `none`,\r\n                                                fontSize: `15px`,\r\n                                                \"&:focus\": {\r\n                                                    outline: `none`,\r\n                                                },\r\n                                            }}\r\n                                            onClick={() =>\r\n                                                setErrorLoginCreator(null)\r\n                                            }\r\n                                            // onClick={(e) => directForgotPassword(e)}\r\n                                        >\r\n                                            Forgot the password?\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Box>\r\n                                <div\r\n                                    style={{\r\n                                        display: `flex`,\r\n                                        flexDirection: `column`,\r\n                                    }}\r\n                                >\r\n                                    <GoogleLogin\r\n                                        clientId={API_GG}\r\n                                        render={(renderProps) => (\r\n                                            <Button\r\n                                                variant=\"outlined\"\r\n                                                onClick={renderProps.onClick}\r\n                                                style={{\r\n                                                    fontSize: `14.7px`,\r\n                                                    width: `max-content`,\r\n                                                    margin: `7px auto 0 auto`,\r\n                                                }}\r\n                                            >\r\n                                                <GoogleIcon\r\n                                                    sx={{\r\n                                                        marginRight: `5px`,\r\n                                                    }}\r\n                                                />\r\n                                                Login with Google\r\n                                            </Button>\r\n                                        )}\r\n                                        buttonText=\"Login with Google\"\r\n                                        onSuccess={responseGoogle}\r\n                                        onFailure={responseFailureGoogle}\r\n                                        cookiePolicy={\"single_host_origin\"}\r\n                                    />\r\n\r\n                                    <FacebookLogin\r\n                                        // appId=\"430041831912720\"\r\n                                        appId=\"738343767123877\" // focus\r\n                                        // appId=\"1061825257933510\" // codesonline\r\n                                        autoLoad={false}\r\n                                        fields=\"name,email,picture\"\r\n                                        cssClass=\"btn btn-primary my-facebook-button-class pr-2 pl-2 btn-fb-login\"\r\n                                        icon=\"fa-facebook\"\r\n                                        callback={responseFacebook}\r\n                                        onFailure={responseFacebookFailure}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"pt-1 text md-center\">\r\n                                    <Link\r\n                                        // onClick={onClick}\r\n                                        to=\"/register\"\r\n                                    >\r\n                                        <Button\r\n                                            sx={{ fontSize: `15px` }}\r\n                                            onClick={() =>\r\n                                                setErrorLoginCreator(null)\r\n                                            }\r\n                                        >\r\n                                            Register new account?\r\n                                        </Button>\r\n                                    </Link>\r\n                                </div>\r\n                            </form>\r\n                        </CardContent>\r\n                        {progress && (\r\n                            <Box sx={{ width: \"100%\", marginBottom: 0 }}>\r\n                                <LinearProgress />\r\n                            </Box>\r\n                        )}\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // codeData: state.code.codeData,\r\n    // modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    // err: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    // updateCodeCreator: updateCode,\r\n    // getCodeCreator: getCode,\r\n    // openModalCreator: openModal,\r\n    // closeModalCreator: closeModal,\r\n    loginCreator: login,\r\n    setProgressCreator: setProgress,\r\n    setErrorLoginCreator: setErrorLogin,\r\n    checkLoginCreator: checkLogin,\r\n};\r\n\r\nconst withConnect = connect(mapStateToProps, mapActionsToProps);\r\n\r\nexport default compose(withConnect, withStyles(styles))(Login);\r\n","import { createActions } from \"redux-actions\";\r\n\r\nexport const direct = createActions({\r\n    directRequest: (val) => val,\r\n    directSuccess: (val) => val,\r\n    directFailure: (val) => val,\r\n});\r\n\r\nexport const verifyUrlRecover = createActions({\r\n    verifyUrlRecoverRequest: (val) => val,\r\n    verifyUrlRecoverSuccess: (val) => val,\r\n    verifyUrlRecoverFailure: (val) => val,\r\n});\r\n\r\n","// import { push } from \"connected-react-router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { direct } from \"../../actions/direct\";\r\nimport {\r\n    loginFailed,\r\n    loginSuccess,\r\n    logoutSuccess,\r\n    setErrorLogin,\r\n} from \"../../actions/login\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { Typography } from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst DirectHelper = () => {\r\n    const time = useSelector((state) => state.direct.time);\r\n    const [timeRun, setTimeRun] = useState(time);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (timeRun === 1) {\r\n            setTimeout(() => {\r\n                dispatch(direct.directFailure(false));\r\n                dispatch(setErrorLogin(null));\r\n                // dispatch(push(\"/identify/user\"));\r\n                // console.log(\"Time here:\", timeRun);\r\n            }, 999);\r\n        } else if (timeRun) {\r\n            setTimeout(() => {\r\n                setTimeRun(timeRun - 1);\r\n            }, 1000);\r\n        }\r\n    }, [timeRun, time]);\r\n    // console.log(\"DirectHelper\", timeRun);\r\n    return (\r\n        <div\r\n            style={{\r\n                fontSize: `15px`,\r\n                color: `#000`,\r\n                position: `relative`,\r\n                zIndex: `5000`,\r\n                marginBottom: `8px`,\r\n            }}\r\n        >\r\n            <Box\r\n                sx={{\r\n                    position: \"relative\",\r\n                    display: \"inline-flex\",\r\n                    top: `10px`,\r\n                }}\r\n            >\r\n                <CircularProgress\r\n                    disableShrink\r\n                    style={{ color: `rgba(189, 142, 186, 70%)` }}\r\n                    // color=\"secondary\"\r\n                />\r\n                <Box\r\n                    sx={{\r\n                        top: 0,\r\n                        left: 0,\r\n                        bottom: 0,\r\n                        right: 0,\r\n                        position: \"absolute\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                    <Typography\r\n                        variant=\"caption\"\r\n                        component=\"div\"\r\n                        sx={{ fontSize: `17px` }}\r\n                        color=\"text.secondary\"\r\n                    >\r\n                        {timeRun !== 0 ? timeRun : \"\"}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DirectHelper;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport DirectHelper from \"../AuthPage/DirectHelper\";\r\nimport \"./loading.css\";\r\nimport { makeStyle } from \"@mui/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { verifyUrlRecover } from \"../../actions/direct\";\r\n\r\nconst Loading = () => {\r\n    const isWaiting = useSelector((state) => state.direct.isWaiting);\r\n    const appear = useSelector((state) => state.direct.appear);\r\n    const message = useSelector((state) => state.direct.message);\r\n    useEffect(() => {\r\n        verifyUrlRecover.verifyUrlRecoverRequest(false);\r\n    }, []);\r\n    return (\r\n        <Fragment>\r\n            <div className=\"contain\">\r\n                <h1 data-text=\"CODE - ONLINE\" className=\"h1-type1\">\r\n                    CODE - ONLINE\r\n                </h1>\r\n\r\n                {isWaiting && (\r\n                    <h1 data-text=\"Please wait...\" className=\"h1-type\">\r\n                        Please wait...\r\n                    </h1>\r\n                )}\r\n\r\n                {!isWaiting && (\r\n                    <div className=\"server-content\">\r\n                        <p\r\n                            className=\"link-direct link-title\"\r\n                            style={{ display: `block !important` }}\r\n                        >\r\n                            Notify\r\n                        </p>\r\n                        <div>\r\n                            <a\r\n                                className=\"link-direct\"\r\n                                style={{ display: \"block !important\" }}\r\n                            >\r\n                                {/* Your account is now successfully activated. You\r\n                                can now return to the Login */}\r\n                                {message}\r\n                                {appear && <DirectHelper />}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {/* <div className=\"contain\">\r\n                <div\r\n                    style={{\r\n                        color: `#fff`,\r\n                        width: `92%`,\r\n                        margin: `auto`,\r\n                        fontSize: `20px`,\r\n                        marginTop: `5%`,\r\n                    }}\r\n                >\r\n                   \r\n                </div>\r\n            </div> */}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect, Fragment, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DoneAllIcon from \"@mui/icons-material/DoneAll\";\r\nimport {\r\n    Modal,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    LinearProgress,\r\n    Alert,\r\n    Tooltip,\r\n    // SliderValueLabel,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import { Link } from \"react-router-dom\";\r\n// import CloseIcon from \"@mui/icons-material/Close\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport { openModalShare } from \"../../actions/modalShareCode\";\r\nimport Loading from \"../Loading/Loading\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        top: `57%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -90%)`,\r\n        position: `absolute`,\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: `2px solid rgb(167, 202, 237)`,\r\n        boxShadow: theme.shadows[5],\r\n        // padding: theme.spacing(2, 4, 4),\r\n        outline: `none`,\r\n        padding: 0,\r\n        borderRadius: `8px 8px`,\r\n        \"@media(max-width: 442px)\": {\r\n            width: `95% !important`,\r\n        },\r\n        \"@media(max-height: 560px)\": {\r\n            // width: `95% !important`,\r\n            top: `70% !important`,\r\n        },\r\n        \"@media(max-height: 499px)\": {\r\n            // width: `95% !important`,\r\n            top: `70% !important`,\r\n        },\r\n        \"@media screen and (min-width: 2500px) and (min-height:1200px)\": {\r\n            // width: `95% !important`,\r\n            top: `57% !important`,\r\n        },\r\n    },\r\n    header: {\r\n        backgroundColor: theme.color.textColor,\r\n        color: theme.color.textColor,\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    title: {\r\n        color: theme.color.textColor,\r\n        fontWeight: 700,\r\n\r\n        width: `100%`,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    textField: {\r\n        width: `100%`,\r\n    },\r\n    textFieldOld: {\r\n        display: `block`,\r\n        minWidth: `100%`,\r\n        // marginBottom: `50px`,\r\n    },\r\n    box: {\r\n        margin: `0 15px 10px 0`,\r\n    },\r\n    typography1: {\r\n        margin: `5px 0 0 0px`,\r\n        fontSize: `15.5px`,\r\n        color: theme.color.error,\r\n    },\r\n    progress: {\r\n        color: \"#ff6278\",\r\n    },\r\n    typography2: {\r\n        textTransform: `none`,\r\n        width: `max-content`,\r\n        color: `#1ba700`,\r\n        fontWeight: `500`,\r\n        fontSize: `15px !important`,\r\n        margin: `4px 0 0 0px`,\r\n    },\r\n    typography3: {\r\n        textTransform: `none`,\r\n        width: `max-content`,\r\n        color: `#29b117`,\r\n        fontSize: `16px !important`,\r\n        textDecoration: `none`,\r\n        \"& > a:hover\": {\r\n            color: `#5dd0e8`,\r\n        },\r\n    },\r\n    box1: {\r\n        marginLeft: `7px`,\r\n        marginTop: `9x`,\r\n    },\r\n    box2: {\r\n        marginTop: `9x`,\r\n        marginLeft: `5px`,\r\n    },\r\n    icon: {\r\n        marginTop: 5,\r\n        cursor: `pointer`,\r\n    },\r\n}));\r\n\r\nconst ModalShare = (props) => {\r\n    const classes = useStyles();\r\n    const {\r\n        // modalIsOpen,\r\n        // handleCloseModal,\r\n        // isAuthenticated,\r\n        // err,\r\n        progress,\r\n        // updateCodeCreator,\r\n        errCode,\r\n        // setCodeCreator,\r\n        nameCode,\r\n        isChanging,\r\n        // changeNameCreator,\r\n        // setIsChangingCreator,\r\n        isDeleting,\r\n        // deleteProjectCreator,\r\n        // setIsDeletingCreator,\r\n        // setErrorCreator,\r\n        // closeModalCreator,\r\n    } = props;\r\n\r\n    const renderCheck = () => {\r\n        let jsx = null;\r\n        jsx = (\r\n            <Fragment>\r\n                {errCode && (\r\n                    <Typography className={classes.typography1} component=\"div\">\r\n                        <span style={{ margin: `2px 0 0 6px` }}>Copied!</span>\r\n                    </Typography>\r\n                )}\r\n                {value ? (\r\n                    <Box className={classes.box1}>\r\n                        <Typography\r\n                            component=\"div\"\r\n                            gutterBottom\r\n                            className={classes.typography2}\r\n                        >\r\n                            <DoneAllIcon sx={{ marginBottom: `3px` }} /> COPIED!\r\n                        </Typography>\r\n                    </Box>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n            </Fragment>\r\n        );\r\n        return jsx;\r\n    };\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const textRef = useRef(null);\r\n    const modalShareIsOpen = useSelector(\r\n        (state) => state.modalShare.modalShareIsOpen\r\n    );\r\n    const link = useSelector((state) => state.modalShare.link);\r\n    const isLoading = useSelector((state) => state.modalShare.isLoading);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => {\r\n        dispatch(openModalShare.openModalShareFailure());\r\n        setValue(\"\");\r\n    };\r\n\r\n    const onCopy = (e) => {\r\n        // console.log(\"textAreaRef\", textRef.current.value);\r\n        navigator.clipboard.writeText(\r\n            textRef.current._wrapperState.initialValue\r\n        );\r\n        setValue(textRef.current.value);\r\n    };\r\n    useEffect(() => {}, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            {isLoading ? (\r\n                <Loading />\r\n            ) : (\r\n                <Modal open={modalShareIsOpen}>\r\n                    <div className={classes.modal}>\r\n                        <div\r\n                            style={{\r\n                                display: `flex`,\r\n\r\n                                padding: 0,\r\n                                margin: 0,\r\n                            }}\r\n                        >\r\n                            {/* <div style={{ display: `flex`, justifyContent: `space-between`, background: `#1565C0`, height: `35px`, padding: 0, margin: 0 }}>NOTE</div> */}\r\n                            <Alert\r\n                                icon={false}\r\n                                severity=\"success\"\r\n                                sx={{\r\n                                    width: `100%`,\r\n                                    display: `block`,\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        display: `flex`,\r\n                                        justifyContent: `space-between`,\r\n                                    }}\r\n                                >\r\n                                    <p\r\n                                        style={{\r\n                                            fontWeight: `700`,\r\n                                            fontSize: `17px`,\r\n                                            marginBottom: `3px`,\r\n                                        }}\r\n                                    >\r\n                                        {!isDeleting\r\n                                            ? \"Share your link\"\r\n                                            : \"DELETE\"}\r\n                                    </p>\r\n                                    <CancelIcon\r\n                                        className={classes.icon}\r\n                                        onClick={() => handleClose()}\r\n                                    />\r\n                                </div>\r\n                            </Alert>\r\n                        </div>\r\n                        <div\r\n                            className={classes.header}\r\n                            style={{ marginTop: `7px` }}\r\n                        >\r\n                            <span className={classes.title}>\r\n                                {isChanging && nameCode && (\r\n                                    <Tooltip\r\n                                        arrow\r\n                                        title={\"Previous Project Name\"}\r\n                                        placement={nameCode ? \"top\" : \"top\"}\r\n                                    >\r\n                                        <TextField\r\n                                            readOnly={true}\r\n                                            id=\"outlined-required\"\r\n                                            label={\"Current Project Name\"}\r\n                                            placeholder=\"Your Project Name\"\r\n                                            placeholder=\"Your Project Name\"\r\n                                            className={`${classes.textField} value`}\r\n                                            value={nameCode}\r\n                                            sx={{ marginBottom: `15px` }}\r\n                                        />\r\n                                    </Tooltip>\r\n                                )}\r\n                                <Tooltip\r\n                                    arrow\r\n                                    title={\"Your link here\"}\r\n                                    placement={nameCode ? \"top\" : \"top\"}\r\n                                >\r\n                                    <TextField\r\n                                        required\r\n                                        readOnly={true}\r\n                                        id=\"outlined-required\"\r\n                                        label={\"Your Link Here\"}\r\n                                        placeholder=\"Your Link Here\"\r\n                                        className={classes.textField}\r\n                                        value={link}\r\n                                        // onChange={handleChange}\r\n                                        inputRef={textRef}\r\n                                    />\r\n                                </Tooltip>\r\n                                {renderCheck()}\r\n                            </span>\r\n                        </div>\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexDirection=\"row-reverse\"\r\n                            mt={2}\r\n                            className={classes.box}\r\n                        >\r\n                            <Box>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={false}\r\n                                    onClick={onCopy}\r\n                                >\r\n                                    COPY\r\n                                </Button>\r\n                            </Box>\r\n\r\n                            <Box mr={1}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"error\"\r\n                                    onClick={() => handleClose()}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        {/* <div className={classes.content}>{component}</div> */}\r\n                        {progress && (\r\n                            <Box sx={{ width: \"100%\" }}>\r\n                                <LinearProgress />\r\n                            </Box>\r\n                        )}\r\n                    </div>\r\n                </Modal>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // codeData: state.code.codeData,\r\n    // modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    errCode: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    nameCode: state.auth.nameCode,\r\n    isChanging: state.code.isChanging,\r\n    isDeleting: state.code.isDeleting,\r\n});\r\n\r\nconst mapActionsToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ModalShare);\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport Code from \"./Code\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\nimport { compose } from \"redux\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { getCode, updateCode } from \"../actions/code\";\r\nimport { closeModal, openModal } from \"../actions/modal\";\r\n// import { toast } from \"react-toastify\";\r\n// import { ToastContainer } from \"react-toastify\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\nimport NameProject from \"./NameProject\";\r\nimport Login from \"./AuthPage/Login\";\r\nimport { login, setErrorLogin } from \"../actions/login\";\r\n// import { Redirect } from \"react-router\";\r\n// import Navbar from \"./Navbar\";\r\n// import Nav from \"./Nav.js\";\r\nimport ModalShare from \"./ModalShare/ModalShare\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport cs from \"classnames\";\r\n// import Loading from \"./Loading/Loading\";\r\n// import { openModalShare } from \"../actions/modalShareCode\";\r\nconst useStyles = makeStyles((them) => ({\r\n    codeContainer: {\r\n        // background: `#fff`,\r\n        display: `flex`,\r\n        flexDirection: `column`,\r\n        marginTop: `70px`,\r\n        transitionTimingFunction: `linear`,\r\n        transition: `all 2s`,\r\n        zIndex: `0 !important`,\r\n    },\r\n    \"@keyframes fadeInFromBot\": {\r\n        \"0%\": {\r\n            marginTop: \"500px\",\r\n        },\r\n        \"100%\": {\r\n            opacity: 1,\r\n            marginTop: \"0px\",\r\n        },\r\n    },\r\n    \"@keyframes fadeInFromLeft\": {\r\n        \"0%\": {\r\n            marginLeft: \"-700px\",\r\n        },\r\n        \"100%\": {\r\n            opacity: 1,\r\n            marginLeft: \"0px\",\r\n        },\r\n    },\r\n    topPane: {\r\n        // width: status && !largeScreen ? \"50% !important\" : \"42% !important\",\r\n        width: \"50% !important\",\r\n        float: \"right\",\r\n        display: \"flex !important\",\r\n        flexDirection: \"column !important\",\r\n        height: \"min-content !important\",\r\n        transitionTimingFunction: `linear`,\r\n        transition: `all 2s`,\r\n        animation: `$fadeInFromLeft .5s ease-in-out`,\r\n    },\r\n    view: {\r\n        // width: status && !largeScreen ? \"50% !important\" : \"58% !important\",\r\n        width: \"50% !important\",\r\n        float: \"left !important\",\r\n        zIndex: \"0\",\r\n        position: \"fixed !important\",\r\n        right: \"0\",\r\n        height: \"100%\",\r\n        transitionTimingFunction: `linear`,\r\n        transition: `all 2s`,\r\n        animation: `$fadeInFromBot .4s ease-in-out`,\r\n        [\"@media(max-width: 500px)\"]: {\r\n            marginTop: `1% !important`,\r\n        },\r\n    },\r\n    fullScreen: {\r\n        display: `none !important`,\r\n    },\r\n    fullHeight: {\r\n        height: `150vh`,\r\n        minHeight: `150vh`,\r\n        marginTop: `1.5%`,\r\n        // overflowY: `hidden !important`,\r\n    },\r\n}));\r\nconst MainPage = ({\r\n    // updateCodeCreator,\r\n    getCodeCreator,\r\n    codeData,\r\n    match: { url: q },\r\n    modalIsOpen,\r\n    openModalCreator,\r\n    closeModalCreator,\r\n    isAuthenticated,\r\n    loginCreator,\r\n    err,\r\n    errLogin,\r\n    // isLoading,\r\n    useStyles2,\r\n}) => {\r\n    let [html, setHtml] = useLocalStorage(\"html\", \"\");\r\n\r\n    // if (!html) {\r\n    //   setHtml(`<!DOCTYPE html>\r\n    //   <html lang=\"en\">\r\n    //   <head>\r\n    //       <meta charset=\"UTF-8\">\r\n    //       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    //       <title>Document</title>\r\n    //   </head>\r\n    //   <body>\r\n\r\n    //   </body>\r\n    //   </html>`)\r\n    // }\r\n\r\n    const [css, setCss] = useLocalStorage(\"css\", \"\");\r\n    const [js, setJs] = useLocalStorage(\"js\", \"\");\r\n    const [srcDoc, setSrcDoc] = useState(\"\");\r\n    // const [openModal, setOpenModal] = useState(false);\r\n\r\n    const status = useSelector((state) => state.view.status);\r\n    const isLoad = useSelector((state) => state.modalShare.isLoading);\r\n    const fullScreen = useSelector((state) => state.view.fullScreen);\r\n    const largeScreen = useSelector((state) => state.view.largeScreen);\r\n    // const useStyles = makeStyles((theme) => ({\r\n    //     codeContainer: {\r\n    //         // background: `#fff`,\r\n    //         display: `flex`,\r\n    //         flexDirection: `column`,\r\n    //         marginTop: `70px`,\r\n    //         transitionTimingFunction: `linear`,\r\n    //         transition: `all 2s`,\r\n    //         zIndex: `0 !important`,\r\n    //     },\r\n    //     \"@keyframes fadeInFromBot\": {\r\n    //         \"0%\": {\r\n    //             marginTop: \"500px\",\r\n    //         },\r\n    //         \"100%\": {\r\n    //             opacity: 1,\r\n    //             marginTop: \"0px\",\r\n    //         },\r\n    //     },\r\n    //     \"@keyframes fadeInFromLeft\": {\r\n    //         \"0%\": {\r\n    //             marginLeft: \"-700px\",\r\n    //         },\r\n    //         \"100%\": {\r\n    //             opacity: 1,\r\n    //             marginLeft: \"0px\",\r\n    //         },\r\n    //     },\r\n    //     topPane: {\r\n    //         // width: status && !largeScreen ? \"50% !important\" : \"42% !important\",\r\n    //         width: \"50% !important\",\r\n    //         float: \"right\",\r\n    //         display: \"flex !important\",\r\n    //         flexDirection: \"column !important\",\r\n    //         height: \"min-content !important\",\r\n    //         transitionTimingFunction: `linear`,\r\n    //         transition: `all 2s`,\r\n    //         animation: `$fadeInFromLeft .5s ease-in-out`,\r\n    //     },\r\n    //     view: {\r\n    //         // width: status && !largeScreen ? \"50% !important\" : \"58% !important\",\r\n    //         width: \"50% !important\",\r\n    //         float: \"left !important\",\r\n    //         zIndex: \"0\",\r\n    //         position: \"fixed !important\",\r\n    //         right: \"0\",\r\n    //         height: \"100%\",\r\n    //         transitionTimingFunction: `linear`,\r\n    //         transition: `all 2s`,\r\n    //         animation: `$fadeInFromBot .4s ease-in-out`,\r\n    //         [\"@media(max-width: 500px)\"]: {\r\n    //             marginTop: `1% !important`,\r\n    //         },\r\n    //     },\r\n    //     fullScreen: {\r\n    //         display: `none !important`,\r\n    //     },\r\n    //     fullHeight: {\r\n    //         height: `150vh`,\r\n    //         minHeight: `150vh`,\r\n    //         // overflowY: `hidden !important`,\r\n    //     },\r\n    // }));\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n\r\n    // const url = useSelector((state) => state.code.url);\r\n    const modalShareIsOpen = useSelector(\r\n        (state) => state.modalShare.modalShareIsOpen\r\n    );\r\n\r\n    // !\r\n    const dispatch = useDispatch();\r\n    // dispatch(setErrorLogin(null));\r\n\r\n    useEffect(() => {\r\n        dispatch(setErrorLogin(null));\r\n        getCodeCreator(q);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSrcDoc(`\r\n        <html>\r\n          <body>${html}</body>\r\n          <style>${css}</style>\r\n          <script defer async>${js}</script>\r\n        </html>\r\n      `);\r\n        }, 270);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [html, css, js]);\r\n\r\n    const alertUser = (e) => {\r\n        e.preventDefault();\r\n        e.returnValue = \"\";\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"beforeunload\", alertUser);\r\n        return () => {\r\n            window.removeEventListener(\"beforeunload\", alertUser);\r\n        };\r\n    }, []);\r\n\r\n    const renderForm = () => {\r\n        let jsx;\r\n        if (!isAuthenticated) {\r\n            jsx = (\r\n                <Login\r\n                    err={errLogin}\r\n                    loginCreator={(acc) => loginCreator(acc)}\r\n                />\r\n            );\r\n        } else {\r\n            jsx = (\r\n                <NameProject\r\n                    modalIsOpen={modalIsOpen}\r\n                    handleCloseModal={() => handleCloseModal()}\r\n                    isAuthenticated={isAuthenticated}\r\n                    err={err}\r\n                />\r\n            );\r\n        }\r\n        return jsx;\r\n    };\r\n\r\n    const handleSave = () => {\r\n        openModalCreator();\r\n        // updateCodeCreator(html, css, js, q);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        closeModalCreator();\r\n    };\r\n\r\n    return (\r\n        <div\r\n            // style={{\r\n            //     display: `flex`,\r\n            //     flexDirection: `column`,\r\n            //     marginTop: `70px`,\r\n            // }}\r\n            // className={\r\n            //     isLoading\r\n            //         ? \"loading-container code-container\"\r\n            //         : \"code-container\"\r\n            // }\r\n            style={{\r\n                display: `flex`,\r\n                flexDirection: `column`,\r\n                marginTop: `70px`,\r\n            }}\r\n            className={cs(\"code-container\", {\r\n                [classes.codeContainer]: status === true,\r\n            })}\r\n        >\r\n            <Fragment>\r\n                {/* {isAuthenticated && ( */}\r\n\r\n                <NameProject\r\n                    modalIsOpen={modalIsOpen}\r\n                    handleCloseModal={() => handleCloseModal()}\r\n                    isAuthenticated={isAuthenticated}\r\n                    err={err}\r\n                />\r\n                <ModalShare\r\n                    modalShareIsOpen={modalShareIsOpen}\r\n                    // handleCloseModal={() => handleCloseModal()}\r\n                    isAuthenticated={isAuthenticated}\r\n                />\r\n                {/* )} */}\r\n                {/* {!isAuthenticated && (\r\n                <Redirect to='/login'></Redirect>\r\n            )} */}\r\n                {/* {renderForm()} */}\r\n                {/* <button onClick={() => handleSave()}>Save</button> */}\r\n                {!isLoad && (\r\n                    <Fragment>\r\n                        <div\r\n                            className={cs(\r\n                                \"pane\",\r\n                                \"top-pane\",\r\n                                {\r\n                                    [classes.topPane]: status === true,\r\n                                    [classes.fullScreen]: fullScreen === true,\r\n                                },\r\n                                {\r\n                                    [classes2.topPane]:\r\n                                        status === true && largeScreen === true,\r\n                                }\r\n                            )}\r\n                        >\r\n                            <Code\r\n                                language=\"xml\"\r\n                                displayName=\"HTML\"\r\n                                value={html}\r\n                                onChange={setHtml}\r\n                                color=\"#f59251\"\r\n                                pro=\"html\"\r\n                                q={q}\r\n                            />\r\n                            <Code\r\n                                language=\"css\"\r\n                                displayName=\"CSS\"\r\n                                value={css}\r\n                                onChange={setCss}\r\n                                color=\"lightskyblue\"\r\n                                pro=\"css\"\r\n                                q={q}\r\n                            />\r\n                            <Code\r\n                                color=\"gold\"\r\n                                language=\"javascript\"\r\n                                displayName=\"JS\"\r\n                                value={js}\r\n                                onChange={setJs}\r\n                                pro=\"js\"\r\n                                q={q}\r\n                            />\r\n                        </div>\r\n                        <div\r\n                            className={cs(\r\n                                \"pane\",\r\n                                \"view\",\r\n                                {\r\n                                    [classes.view]: status === true,\r\n                                    [classes.fullHeight]: fullScreen === true,\r\n                                },\r\n                                {\r\n                                    [classes2.view]:\r\n                                        status === true && largeScreen === true,\r\n                                }\r\n                            )}\r\n                        >\r\n                            <iframe\r\n                                srcDoc={srcDoc}\r\n                                title=\"output\"\r\n                                sandbox=\"allow-scripts\"\r\n                                frameBorder=\"0\"\r\n                                width=\"100%\"\r\n                                height=\"100%\"\r\n                            />\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    codeData: state.code.codeData,\r\n    modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    err: state.code.error,\r\n    errLogin: state.auth.error,\r\n    isLoading: state.modal.isLoading,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    updateCodeCreator: updateCode,\r\n    getCodeCreator: getCode,\r\n    openModalCreator: openModal,\r\n    closeModalCreator: closeModal,\r\n    loginCreator: login,\r\n};\r\n\r\nconst withConnect = connect(mapStateToProps, mapActionsToProps);\r\n\r\nexport default compose(withConnect)(MainPage);\r\n","import React from 'react'\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            NotFound\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\nconst Navbar = (props) => {\r\n    const { isAuthenticated } = props;\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar\r\n                position=\"static\"\r\n                color=\"transparent\"\r\n                sx={{ backgroundColor: \"rgba(255, 255, 255, 0.2)\" }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        size=\"small\"\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        sx={{ mr: 2 }}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        component=\"div\"\r\n                        sx={{ flexGrow: 1 }}\r\n                    >\r\n                        News\r\n                    </Typography>\r\n                    {!isAuthenticated && <Button color=\"inherit\">Login</Button>}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // codeData: state.code.codeData,\r\n    // modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    // err: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\n// const mapActionsToProps = {\r\n//     // updateCodeCreator: updateCode,\r\n//     // getCodeCreator: getCode,\r\n//     // openModalCreator: openModal,\r\n//     // closeModalCreator: closeModal,\r\n//     loginCreator: login,\r\n//     setProgressCreator: setProgress,\r\n//     setErrorLoginCreator: setErrorLogin,\r\n// };\r\n\r\nconst withConnect = connect(mapStateToProps, null);\r\n\r\nexport default compose(withConnect)(Navbar);\r\n","const styles = (theme) => ({\r\n    objStyleLinkActive: {\r\n        textDecoration: `none !important`,\r\n        color: \"#fff !important\",\r\n        background: `#8167a9`,\r\n        \"&:hover\": {\r\n            background: `rgba(129, 103, 189, 88%)`,\r\n            textDecoration: `none !important`,\r\n        },\r\n        // textAlign: `center`,\r\n    },\r\n    objStyleLink: {\r\n        textDecoration: `none !important`,\r\n        color: \"#8167a9 !important\",\r\n        \"&:hover\": {\r\n            background: `rgba(129, 103, 189, 87%)`,\r\n            textDecoration: `none !important`,\r\n            color: `#fff !important`,\r\n        },\r\n        // textAlign: `center`,\r\n    },\r\n    drawerPaper: {\r\n        [\"@media(min-width:1500px)\"]: {\r\n            width: `0 !important`,\r\n        },\r\n        \"& .MuiDrawer-paper\": {\r\n            // background: `rgba(255, 255, 255, 0.2)`,\r\n            // backgroundImage: `url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1462889/pat-back.svg\")`,\r\n            backgroundPosition: `center`,\r\n            backgroundRepeat: `repeat`,\r\n            backgroundSize: `0.1%,`,\r\n\r\n            position: \"relative\",\r\n            boxSizing: \"border-box\",\r\n            width: 200,\r\n            maxWidth: 200,\r\n            zIndex: 999,\r\n            minHeight: `100%`,\r\n            height: `400px`,\r\n            // overflowY: `visible`\r\n            overflowY: `scroll`,\r\n            [\"@media(min-width:1500px)\"]: {\r\n                width: `200px !important`,\r\n                maxWidth: `200px !important`,\r\n            },\r\n            [\"@media(min-width:500px)\"]: {\r\n                width: `200px !important`,\r\n                maxWidth: `200px !important`,\r\n            },\r\n            [\"@media(min-width:353px)\"]: {\r\n                width: `200px !important`,\r\n                maxWidth: `200px !important`,\r\n            },\r\n            [\"@media(min-width:550px)\"]: {\r\n                position: `absolute !important`,\r\n                width: `187px !important`,\r\n                maxWidth: `187px !important`,\r\n            },\r\n        },\r\n        [\"@media(min-width:1500px)\"]: {\r\n            zIndex: `1000`,\r\n            height: `100% !important`,\r\n            minHeight: `100% !important`,\r\n        },\r\n        [\"@media(min-width:500px)\"]: {\r\n            position: `fixed !important`,\r\n            zIndex: `1000`,\r\n            /* min-height: 10000% !important; */\r\n            height: `100% !important`,\r\n            minHeight: `100% !important`,\r\n        },\r\n        [\"@media(max-width:353px)\"]: {\r\n            position: `fixed !important`,\r\n            zIndex: `1000`,\r\n            /* min-height: 10000% !important; */\r\n            height: `100% !important`,\r\n            minHeight: `100% !important`,\r\n            marginTop: `12px`,\r\n        },\r\n        [\"@media(max-width:550px)\"]: {\r\n            position: `fixed !important`,\r\n            zIndex: `1000`,\r\n            /* min-height: 10000% !important; */\r\n            height: `100% !important`,\r\n            minHeight: `100% !important`,\r\n            // marginTop: `12px`,\r\n            maxWidth: `0 !important`,\r\n        },\r\n    },\r\n    link: {\r\n        display: `block`,\r\n        textDecoration: `none !important`,\r\n        color: `#8167a9 !important`,\r\n        // textAlign: `center`,\r\n        // margin: `auto`,\r\n    },\r\n});\r\n\r\nexport default styles;\r\n","import * as React from \"react\";\r\n// import Box from \"@mui/material/Box\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\n// import Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\n// import Divider from \"@mui/material/Divider\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\n// import ListItemIcon from \"@mui/material/ListItemIcon\";\r\n// import ListItemText from \"@mui/material/ListItemText\";\r\n// import InboxIcon from \"@mui/icons-material/MoveToInbox\";\r\n// import MailIcon from \"@mui/icons-material/Mail\";\r\n// import { ADMIN_ROUTES } from \"../../../constants/index\";\r\nimport styles from \"./styles\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { HTML_TUTORIALS } from \"../../common/constants/HTMLconstants\";\r\nimport { CSS_TUTORIALS } from \"../../common/constants/CSSconstants\";\r\nimport { JS_TUTORIALS } from \"../../common/constants/JSconstants\";\r\n\r\nconst Sidebar = (props) => {\r\n    // const [open, setOpen] = React.useState(false);\r\n    const { classes, showSidebar, onToggleSidebar, openSidebar } = props;\r\n    const tutorialList = useSelector((state) => state.tutorial.tutorialList);\r\n    const location = useSelector((state) => state.tutorial.location);\r\n\r\n    const toggleDrawer = (value) => {\r\n        onToggleSidebar(value);\r\n    };\r\n\r\n    const defTutorials = () => {\r\n        const l = window.location.href.toString();\r\n        const tutorialsRoute = HTML_TUTORIALS.concat(\r\n            CSS_TUTORIALS,\r\n            JS_TUTORIALS\r\n        );\r\n        const list = tutorialsRoute.filter(\r\n            (lesson) =>\r\n                l.indexOf(lesson.path.slice(0, lesson.path.lastIndexOf(\"/\"))) >\r\n                0\r\n        );\r\n        return list;\r\n    };\r\n\r\n    const renderList = () => {\r\n        let jsx = void 0;\r\n\r\n        const tutorialListRender =\r\n            tutorialList != void 0 && tutorialList.length\r\n                ? tutorialList\r\n                : defTutorials()\r\n                ? defTutorials()\r\n                : [];\r\n        jsx = (\r\n            <div className={classes.list}>\r\n                <List component=\"div\">\r\n                    {tutorialListRender.map((lesson) => (\r\n                        <NavLink\r\n                            to={lesson.path}\r\n                            exact={lesson.exact}\r\n                            className={classes.link}\r\n                            key={lesson.path}\r\n                        >\r\n                            <ListItem\r\n                                className={\r\n                                    location && location === lesson.path\r\n                                        ? classes.objStyleLinkActive\r\n                                        : classes.objStyleLink\r\n                                }\r\n                            >\r\n                                {lesson.name}\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    ))}\r\n                </List>\r\n            </div>\r\n        );\r\n        return jsx;\r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            open={openSidebar}\r\n            onClose={() => toggleDrawer(false)}\r\n            className={classes.drawerPaper}\r\n            variant=\"persistent\"\r\n        >\r\n            {renderList()}\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Sidebar);\r\n","const styles = (theme) => ({\r\n    container: {\r\n        display: `flex`,\r\n        flexDirection: `row`,\r\n        minHeight: `100vh`,\r\n        marginTop: 69,\r\n        [\"@media(max-width:550px)\"]: {\r\n            position: `relative !important`,\r\n            width: `100% !important`,\r\n            // marginLeft: `6px !important`,\r\n        },\r\n        [\"@media(max-width:441px)\"]: {\r\n            position: `relative !important`,\r\n            width: `100% !important`,\r\n            marginLeft: `5px !important`,\r\n        },\r\n        [\"@media(max-width:376px)\"]: {\r\n            position: `relative !important`,\r\n            width: `100% !important`,\r\n            marginLeft: `0 !important`,\r\n        },\r\n        [\"@media(max-width:353px)\"]: {\r\n            position: `relative !important`,\r\n            width: `100% !important`,\r\n        },\r\n        // [\"@media(max-width:353px)\"]: {\r\n        //     position: `relative !important`,\r\n        //     width: `100% !important`,\r\n        // },\r\n        // [\"@media(max-width:550px)\"]: {\r\n        //     position: `relative !important`,\r\n        //     width: `100% !important`,\r\n        //     marginLeft: `15px !important`,\r\n        // },\r\n        // [\"@media(max-width:441px)\"]: {\r\n        //     position: `relative !important`,\r\n        //     width: `100% !important`,\r\n        //     marginLeft: `5px !important`,\r\n        // },\r\n        // [\"@media(max-width:376px)\"]: {\r\n        //     position: `relative !important`,\r\n        //     width: `100% !important`,\r\n        //     marginLeft: `0 !important`,\r\n        // },\r\n    },\r\n    content: {\r\n        width: `100%`,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.sharp, // sharp or entering\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        [\"@media(min-width:1501px)\"]: {\r\n            position: `relative !important`,\r\n            width: `100%`,\r\n            margin: `auto !important`,\r\n        },\r\n        [\"@media(max-width:1500px)\"]: {\r\n            position: `relative !important`,\r\n            width: `100%`,\r\n            marginLeft: `200px`,\r\n        },\r\n        [\"@media(max-width:500px)\"]: {\r\n            position: `relative !important`,\r\n            width: `100%`,\r\n            marginLeft: `0px !important`,\r\n        },\r\n        [\"@media(max-width:353px)\"]: {\r\n            position: `relative !important`,\r\n            width: `100%`,\r\n            marginLeft: `0px !important`,\r\n        },\r\n        [\"@media(max-width:550px)\"]: {\r\n            margin: 0,\r\n        },\r\n        [\"@media(max-width:550px)\"]: {\r\n            position: `relative !important`,\r\n            width: `100%`,\r\n            marginLeft: 0,\r\n        },\r\n    },\r\n    turnLeft: {\r\n        marginLeft: -200,\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        [\"@media(max-width:1500px)\"]: {\r\n            marginLeft: `0 !important`,\r\n        },\r\n        [\"@media(max-width:500px)\"]: {\r\n            marginLeft: `0 !important`,\r\n        },\r\n        [\"@media(max-width:353px)\"]: {\r\n            marginLeft: `0 !important`,\r\n        },\r\n        [\"@media(max-width:550px)\"]: {\r\n            marginLeft: `0 !important`,\r\n        },\r\n    },\r\n});\r\n\r\nexport default styles;\r\n","import { withStyles } from \"@mui/styles\";\r\nimport React, { Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLocation } from \"../../actions/tutorial\";\r\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\r\nimport styles from \"./styles\";\r\nimport cn from \"classnames\";\r\n\r\n// import { connect } from 'react-redux';\r\n// import { checkLogin } from '../../actions/login';\r\n\r\nconst Tutorial = (props) => {\r\n    const { children, routerProps, classes } = props;\r\n    const openSidebar = useSelector((state) => state.tutorial.openSidebar);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        // console.log(\"routerProps.match.url\", routerProps.match.url);\r\n        dispatch(setLocation.setLocation(routerProps.match.url));\r\n    }, []);\r\n    // console.log(routerProps);\r\n    return (\r\n        <div className={classes.container}>\r\n            <Sidebar openSidebar={openSidebar} />\r\n            <div\r\n                className={cn(classes.content, {\r\n                    [classes.turnLeft]: openSidebar === false,\r\n                })}\r\n            >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// const mapActionsToProps = {\r\n//     checkLoginCreator: checkLogin\r\n// }\r\n\r\nexport default withStyles(styles)(Tutorial);\r\n","import React, { Fragment } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Tutorial from \"../../pages/tutorials/Tutorial\";\r\n\r\nconst TutorialLayout = (props) => {\r\n    const { component: Component, ...rest } = props;\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(routerProps) => (\r\n                <Tutorial {...rest} routerProps={routerProps}>{Component(routerProps)}</Tutorial>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default TutorialLayout;\r\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport List from \"@mui/material/List\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Slide from \"@mui/material/Slide\";\r\nimport { setOpen } from \"../actions/tutorial\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { HTML_TUTORIALS } from \"../common/constants/HTMLconstants\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { setNameCode } from \"../actions/login\";\r\nimport { setUrl } from \"../actions/code\";\r\n\r\n// const useStyles = makeStyles({\r\n//     link: {\r\n//         color: \"inherit\",\r\n//         textDecoration: \"none\",\r\n//         \"&.active > li\": {\r\n//             background: `black`,\r\n//         },\r\n//     },\r\n// });\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction TutorialList() {\r\n    // const [open, setOpen] = React.useState(false);\r\n    const open = useSelector((state) => state.tutorial.open);\r\n    const location = useSelector((state) => state.tutorial.location);\r\n    // const classes = useStyles();\r\n    const tutorialList = useSelector((state) => state.tutorial.tutorialList);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickOpen = () => {\r\n        dispatch(setOpen.setOpen(true));\r\n    };\r\n\r\n    const handleClose = () => {\r\n        dispatch(setNameCode(null));\r\n        dispatch(setUrl(\"code\"));\r\n\r\n        dispatch(setOpen.setOpen(false));\r\n    };\r\n\r\n    const handleCloseDialog = () => {\r\n        dispatch(setOpen.setOpen(false));\r\n    };\r\n\r\n    const objStyleLink = {\r\n        textDecoration: `none !important`,\r\n        color: \"#8167a9 !important\",\r\n        \"&: hover\": {\r\n            background: `rgba(129, 103, 189, 87%)`,\r\n            textDecoration: `none !important`,\r\n            color: `#fff !important`,\r\n        },\r\n        // fontWeight: 490,\r\n    };\r\n    const objStyleLinkActive = {\r\n        textDecoration: `none !important`,\r\n        color: \"#fff !important\",\r\n        background: `#8167a9`,\r\n        \"&: hover\": {\r\n            background: `rgba(129, 103, 189, 88%)`,\r\n            textDecoration: `none !important`,\r\n        },\r\n        // fontWeight: 490,\r\n    };\r\n    const renderList = () => {\r\n        const jsx = tutorialList\r\n            ? tutorialList.map((lesson) => {\r\n                //   console.log(\"lesson path: \", lesson.path);\r\n                  return (\r\n                      <React.Fragment key={lesson.path}>\r\n                          {/* <ListItemText primary=\"Phone ringtone\" /> */}\r\n                          <NavLink\r\n                              to={`${lesson.path}`}\r\n                              style={{ textDecoration: `none` }}\r\n                              // className={classes.link}\r\n                          >\r\n                              <ListItem\r\n                                  button\r\n                                  onClick={handleClose}\r\n                                  sx={\r\n                                      location && location === lesson.path\r\n                                          ? objStyleLinkActive\r\n                                          : objStyleLink\r\n                                  }\r\n                              >\r\n                                  {lesson.name}\r\n                              </ListItem>\r\n                          </NavLink>\r\n\r\n                          <Divider />\r\n                      </React.Fragment>\r\n                  );\r\n              })\r\n            : null;\r\n        return jsx;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen\r\n                open={open}\r\n                onClose={handleCloseDialog}\r\n                TransitionComponent={Transition}\r\n            >\r\n                <AppBar\r\n                    sx={{\r\n                        position: \"relative\",\r\n\r\n                        background: `#8167a9`,\r\n                    }}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            onClick={handleCloseDialog}\r\n                            aria-label=\"close\"\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography\r\n                            sx={{ ml: 2, flex: 1 }}\r\n                            variant=\"h6\"\r\n                            component=\"div\"\r\n                        >\r\n                            <Button autoFocus onClick={handleCloseDialog}>\r\n                                <Link\r\n                                    to=\"/code\"\r\n                                    style={{\r\n                                        color: `#fff`,\r\n                                        textDecoration: `none`,\r\n                                    }}\r\n                                >\r\n                                    CLOSE\r\n                                </Link>\r\n                            </Button>\r\n                        </Typography>\r\n                        <Button autoFocus>\r\n                            <Link\r\n                                to=\"/forum/1\"\r\n                                style={{\r\n                                    color: `#fff`,\r\n                                    textDecoration: `none`,\r\n                                }}\r\n                            >\r\n                                FORUM\r\n                            </Link>\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <List>{renderList()}</List>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TutorialList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport styles from \"./styles\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nimport {\r\n    Typography,\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    TextField,\r\n    Alert,\r\n    Box,\r\n    LinearProgress,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    ggLogin,\r\n    fbLogin,\r\n    GGLogin,\r\n    login,\r\n    setErrorLogin,\r\n    register,\r\n} from \"../../actions/login\";\r\nimport { setProgress } from \"../../actions/modal\";\r\nimport { set } from \"mongoose\";\r\nimport Nav from \"../Nav.js\";\r\nimport { Fragment } from \"react\";\r\nimport GoogleLogin, { GoogleLogout } from \"react-google-login\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\n// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\n\r\nimport { API_GG } from \"../../constant/axios\";\r\nimport GoogleIcon from \"@mui/icons-material/Google\";\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport Login from \"./Login\";\r\n\r\nconst Register = (props) => {\r\n    const {\r\n        classes,\r\n        err,\r\n        loginCreator,\r\n        setProgressCreator,\r\n        progress,\r\n        setErrorLoginCreator,\r\n        isAuthenticated,\r\n    } = props;\r\n    // const [email, setEmail] = useState(\"\");\r\n    const [account, setAccount] = useState({\r\n        email: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    const dispatch = useDispatch();\r\n    const errorStatus = useSelector((state) => state.auth.errorStatus);\r\n\r\n    useEffect(() => {\r\n        // setErrorLoginCreator(null);\r\n        loginCreator(null);\r\n    }, []);\r\n    // console.log(\"Register Component render\");\r\n\r\n    const onChange = (e) => {\r\n        setAccount({\r\n            ...account,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        dispatch(register.registerRequest(account));\r\n    };\r\n\r\n    const onClick = (e) => {\r\n        window.open(\"https://youtube.com/\");\r\n    };\r\n\r\n    const responseGoogle = (res) => {\r\n        // console.log(res);\r\n        // sessionStorage.setItem(\"access_token\", res.tokenId);\r\n        dispatch(ggLogin.ggLoginRequest(res));\r\n    };\r\n    const responseFailureGoogle = (res) => {\r\n        // console.log(\"Just failed:\", res);\r\n    };\r\n    const check = () => {\r\n        // console.log(\"CHECK!!!\");\r\n    };\r\n    const logout = (res) => {\r\n        // console.log(res);\r\n    };\r\n\r\n    const responseFacebook = (res) => {\r\n        dispatch(fbLogin.fbLoginRequest(res));\r\n        // console.log(\"FB Login:\", res);\r\n    };\r\n\r\n    const jsx = (\r\n        <Redirect\r\n            to=\"/login\"\r\n            component={({ match }) => <Login match={match} />}\r\n        ></Redirect>\r\n    );\r\n    // console.log(`isAuthenticated ${isAuthenticated}`);\r\n    return (\r\n        <Fragment>\r\n            {localStorage[\"access_token\"] ? (\r\n                jsx\r\n            ) : (\r\n                <Fragment>\r\n                    <div\r\n                        className={classes.background1}\r\n                        style={{ marginTop: `4.9%`, height: `300px` }}\r\n                    >\r\n                        <div className={classes.login1}>\r\n                            <Card\r\n                                sx={{\r\n                                    [\"@media(max-width: 1500px)\"]: {\r\n                                        marginTop: `-6%`,\r\n                                    },\r\n                                    [\"@media(max-width: 900px)\"]: {\r\n                                        marginTop: `3%`,\r\n                                    },\r\n                                    [\"@media(max-width: 550px)\"]: {\r\n                                        marginTop: `10%`,\r\n                                    },\r\n                                }}\r\n                            >\r\n                                <CardContent style={{ width: `100%` }}>\r\n                                    <form action=\"\">\r\n                                        <div className=\"text-xs-center pb-xs mt-3\">\r\n                                            <Typography\r\n                                                variant=\"caption\"\r\n                                                sx={{ fontSize: `14.2px` }}\r\n                                            >\r\n                                                Register to continue\r\n                                            </Typography>\r\n                                        </div>\r\n                                        <TextField\r\n                                            id=\"email\"\r\n                                            label=\"Email\"\r\n                                            className={classes.textField}\r\n                                            fullWidth\r\n                                            margin=\"normal\"\r\n                                            name=\"email\"\r\n                                            value={account.email}\r\n                                            onChange={onChange}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"name\"\r\n                                            label=\"Name\"\r\n                                            className={classes.textField}\r\n                                            fullWidth\r\n                                            margin=\"normal\"\r\n                                            name=\"name\"\r\n                                            value={account.name}\r\n                                            onChange={onChange}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"password\"\r\n                                            label=\"Password\"\r\n                                            className={classes.textField}\r\n                                            fullWidth\r\n                                            margin=\"normal\"\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            value={account.password}\r\n                                            onChange={onChange}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"confirmPassword\"\r\n                                            label=\"Confirm Password\"\r\n                                            className={classes.textField}\r\n                                            fullWidth\r\n                                            margin=\"normal\"\r\n                                            type=\"password\"\r\n                                            name=\"confirmPassword\"\r\n                                            value={account.confirmPassword}\r\n                                            onChange={onChange}\r\n                                        />\r\n\r\n                                        {err && (\r\n                                            <Alert\r\n                                                variant=\"outlined\"\r\n                                                severity={\r\n                                                    errorStatus\r\n                                                        ? \"error\"\r\n                                                        : \"success\"\r\n                                                }\r\n                                                className={classes.alert}\r\n                                            >\r\n                                                {err}\r\n                                            </Alert>\r\n                                        )}\r\n\r\n                                        <Box mt={2}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                fullWidth\r\n                                                type=\"submit\"\r\n                                                className={classes.btn}\r\n                                                onClick={handleRegister}\r\n                                            >\r\n                                                Register\r\n                                            </Button>\r\n                                        </Box>\r\n\r\n                                        {/* <div\r\n                                    style={{\r\n                                        display: `flex`,\r\n                                        flexDirection: `column`,\r\n                                    }}\r\n                                >\r\n                                    <GoogleLogin\r\n                                        clientId={API_GG}\r\n                                        render={(renderProps) => (\r\n                                            <Button\r\n                                                onClick={renderProps.onClick}\r\n                                                variant=\"outlined\"\r\n                                                style={{\r\n                                                    fontSize: `14.7px`,\r\n                                                    width: `max-content`,\r\n                                                    margin: `7px auto 0 auto`,\r\n                                                }}\r\n                                            >\r\n                                                <GoogleIcon\r\n                                                    sx={{\r\n                                                        marginRight: `5px`,\r\n                                                    }}\r\n                                                />\r\n                                                Login with Google\r\n                                            </Button>\r\n                                        )}\r\n                                        buttonText=\"Login with Google\"\r\n                                        onSuccess={responseGoogle}\r\n                                        onFailure={responseFailureGoogle}\r\n                                        cookiePolicy={\"single_host_origin\"}\r\n                                    />\r\n\r\n                                    <FacebookLogin\r\n                                        // appId=\"430041831912720\"\r\n                                        appId=\"738343767123877\"\r\n                                        autoLoad={false}\r\n                                        fields=\"name,email,picture\"\r\n                                        cssClass=\"btn btn-primary my-facebook-button-class pr-2 pl-2 btn-fb-login\"\r\n                                        icon=\"fa-facebook\"\r\n                                        callback={responseFacebook}\r\n                                    />\r\n                                </div> */}\r\n\r\n                                        <div className=\"pt-1 text md-center\">\r\n                                            <Link\r\n                                                // onClick={onClick}\r\n                                                // target=\"_blank\"\r\n                                                to=\"/login\"\r\n                                            >\r\n                                                <Button\r\n                                                    sx={{\r\n                                                        textTransform: `none`,\r\n                                                        fontSize: `15.7px`,\r\n                                                        margin: `0 0 0 0`,\r\n                                                        padding: 0,\r\n                                                    }}\r\n                                                    onClick={() =>\r\n                                                        dispatch(\r\n                                                            setErrorLogin(null)\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    Already have an account?\r\n                                                    Login\r\n                                                </Button>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </form>\r\n                                </CardContent>\r\n                                {progress && (\r\n                                    <Box\r\n                                        sx={{ width: \"100%\", marginBottom: 0 }}\r\n                                    >\r\n                                        <LinearProgress />\r\n                                    </Box>\r\n                                )}\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // codeData: state.code.codeData,\r\n    // modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    // err: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    // updateCodeCreator: updateCode,\r\n    // getCodeCreator: getCode,\r\n    // openModalCreator: openModal,\r\n    // closeModalCreator: closeModal,\r\n    loginCreator: login,\r\n    setProgressCreator: setProgress,\r\n    setErrorLoginCreator: setErrorLogin,\r\n};\r\n\r\nconst withConnect = connect(mapStateToProps, mapActionsToProps);\r\n\r\nexport default compose(withConnect, withStyles(styles))(Register);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport styles from \"./styles\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nimport {\r\n    Typography,\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    TextField,\r\n    Alert,\r\n    Box,\r\n    LinearProgress,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    ggLogin,\r\n    fbLogin,\r\n    GGLogin,\r\n    login,\r\n    setErrorLogin,\r\n} from \"../../actions/login\";\r\nimport { setProgress } from \"../../actions/modal\";\r\nimport { set } from \"mongoose\";\r\nimport Nav from \"../Nav.js\";\r\nimport { Fragment } from \"react\";\r\nimport GoogleLogin, { GoogleLogout } from \"react-google-login\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\n// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\n\r\nimport { API_GG } from \"../../constant/axios\";\r\nimport GoogleIcon from \"@mui/icons-material/Google\";\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport { push } from \"connected-react-router\";\r\nimport { checkLastPwd } from \"../../actions/login\";\r\nconst ForgotPassword = (props) => {\r\n    const {\r\n        classes,\r\n        err,\r\n        loginCreator,\r\n        setProgressCreator,\r\n        progress,\r\n        setErrorLoginCreator,\r\n    } = props;\r\n    // const [email, setEmail] = useState(\"\");\r\n    const [account, setAccount] = useState({\r\n        email: \"\",\r\n        recentPassword: \"\",\r\n    });\r\n    const dispatch = useDispatch();\r\n    const errorStatus = useSelector((state) => state.auth.errorStatus);\r\n    // useEffect(() => {\r\n    //     // setErrorLoginCreator(null);\r\n    //     loginCreator(null);\r\n    // }, []);\r\n    // console.log(\"ForgotPassword Component render\");\r\n\r\n    const onChange = (e) => {\r\n        setAccount({\r\n            ...account,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n    const handleCheckLastPwd = (e) => {\r\n        e.preventDefault();\r\n        dispatch(checkLastPwd.checkLastPwdRequest(account));\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.background2}>\r\n                <div className={classes.login}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <form action=\"\">\r\n                                <div className=\"text-xs-center pb-xs\">\r\n                                    <Typography\r\n                                        variant=\"caption\"\r\n                                        sx={{\r\n                                            fontSize: `17.2px`,\r\n                                            fontWeight: `499`,\r\n                                        }}\r\n                                    >\r\n                                        Recover account\r\n                                    </Typography>\r\n                                </div>\r\n                                <TextField\r\n                                    id=\"email\"\r\n                                    label=\"Email\"\r\n                                    className={classes.textField}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    name=\"email\"\r\n                                    value={account.email}\r\n                                    onChange={onChange}\r\n                                />\r\n                                <Typography\r\n                                    variant=\"caption\"\r\n                                    sx={{\r\n                                        fontSize: `15.9px`,\r\n                                        textAlign: `left`,\r\n                                    }}\r\n                                >\r\n                                    <span\r\n                                        style={{\r\n                                            textAlign: `left`,\r\n                                            width: `auto`,\r\n                                        }}\r\n                                    >\r\n                                        Enter the last password you remember to\r\n                                        use with this Google Account\r\n                                    </span>\r\n                                </Typography>\r\n                                <TextField\r\n                                    id=\"recentPassword\"\r\n                                    label=\"Enter the most recent password\"\r\n                                    className={classes.textField}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    type=\"password\"\r\n                                    name=\"recentPassword\"\r\n                                    value={account.recentPassword}\r\n                                    placeholder={`Enter the most recent password`}\r\n                                    onChange={onChange}\r\n                                />\r\n\r\n                                {err && (\r\n                                    <Alert\r\n                                        variant=\"outlined\"\r\n                                        severity={errorStatus ? \"error\" : \"success\"} \r\n                                        className={classes.alert}\r\n                                    >\r\n                                        {err}\r\n                                    </Alert>\r\n                                )}\r\n\r\n                                <Box mt={2}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        fullWidth\r\n                                        type=\"submit\"\r\n                                        className={classes.btn}\r\n                                        onClick={(e) => handleCheckLastPwd(e)}\r\n                                    >\r\n                                        Continue\r\n                                    </Button>\r\n                                    <Link to=\"/register\" className={classes.link1}>\r\n                                        <Button\r\n                                            sx={{\r\n                                                display: `block`,\r\n                                                margin: `5px 0 2px 0`,\r\n                                                padding: 0,\r\n                                                width: `100%`,\r\n                                                textAlign: `center`,\r\n                                                textTransform: `none`,\r\n                                                fontSize: `16.5px`,\r\n                                                \"&:focus\": {\r\n                                                    outline: `none`,\r\n                                                },\r\n                                            }}\r\n                                            onClick={() =>\r\n                                                dispatch(setErrorLogin(null))\r\n                                            }\r\n                                        >\r\n                                            Register new account?\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Box>\r\n                            </form>\r\n                        </CardContent>\r\n                        {progress && (\r\n                            <Box sx={{ width: \"100%\", marginBottom: 0 }}>\r\n                                <LinearProgress />\r\n                            </Box>\r\n                        )}\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // codeData: state.code.codeData,\r\n    // modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    // err: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    // updateCodeCreator: updateCode,\r\n    // getCodeCreator: getCode,\r\n    // openModalCreator: openModal,\r\n    // closeModalCreator: closeModal,\r\n    loginCreator: login,\r\n    setProgressCreator: setProgress,\r\n    setErrorLoginCreator: setErrorLogin,\r\n};\r\n\r\nconst withConnect = connect(mapStateToProps, mapActionsToProps);\r\n\r\nexport default compose(withConnect, withStyles(styles))(ForgotPassword);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport styles from \"./styles\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nimport {\r\n    Typography,\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    TextField,\r\n    Alert,\r\n    Box,\r\n    LinearProgress,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    ggLogin,\r\n    fbLogin,\r\n    GGLogin,\r\n    login,\r\n    setErrorLogin,\r\n    recoverPassword,\r\n} from \"../../actions/login\";\r\nimport { setProgress } from \"../../actions/modal\";\r\nimport { set } from \"mongoose\";\r\nimport Nav from \"../Nav.js\";\r\nimport { Fragment } from \"react\";\r\nimport GoogleLogin, { GoogleLogout } from \"react-google-login\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\n// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\n\r\nimport { API_GG } from \"../../constant/axios\";\r\nimport GoogleIcon from \"@mui/icons-material/Google\";\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport { push } from \"connected-react-router\";\r\nimport { checkLastPwd } from \"../../actions/login\";\r\nimport { loginFailed } from \"../../actions/login\";\r\nimport DirectHelper from \"./DirectHelper\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport { verifyUrlRecover } from \"../../actions/direct\";\r\n\r\nconst RecoveryPassword = (props) => {\r\n    const {\r\n        classes,\r\n        err,\r\n        loginCreator,\r\n        setProgressCreator,\r\n        progress,\r\n        setErrorLoginCreator,\r\n        match,\r\n    } = props;\r\n    // const [email, setEmail] = useState(\"\");\r\n    const [account, setAccount] = useState({\r\n        newPassword: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    const dispatch = useDispatch();\r\n    const errorStatus = useSelector((state) => state.auth.errorStatus);\r\n    const appear = useSelector((state) => state.direct.appear);\r\n    const isVerify = useSelector((state) => state.direct.isVerify);\r\n    // const time = useSelector(state => state.direct.time)\r\n\r\n    // console.log(\"RecoveryPassword Component render\");\r\n    const onChange = (e) => {\r\n        setAccount({\r\n            ...account,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n    const handleRecoverPassword = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            recoverPassword.recoverPasswordRequest({\r\n                ...account,\r\n                url: match.url.slice(1),\r\n            })\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        // console.log(\"VerifyUrlRecover: \", match.url.slice(1));\r\n        dispatch(\r\n            verifyUrlRecover.verifyUrlRecoverRequest({\r\n                isVerify: true,\r\n                url: match.url.slice(1),\r\n            })\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            {isVerify ? (\r\n                <Loading />\r\n            ) : (\r\n                <div className={classes.background2}>\r\n                    <div className={classes.login}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <form action=\"\">\r\n                                    <div className=\"text-xs-center pb-xs\">\r\n                                        <Typography\r\n                                            variant=\"caption\"\r\n                                            sx={{\r\n                                                fontSize: `17.2px`,\r\n                                                fontWeight: `499`,\r\n                                            }}\r\n                                        >\r\n                                            Recover account\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <TextField\r\n                                        id=\"newPassword\"\r\n                                        label=\"New password\"\r\n                                        className={classes.textField}\r\n                                        fullWidth\r\n                                        margin=\"normal\"\r\n                                        name=\"newPassword\"\r\n                                        type=\"password\"\r\n                                        value={account.newPassword}\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"confirmPassword\"\r\n                                        label=\"Confirm the new password\"\r\n                                        className={classes.textField}\r\n                                        fullWidth\r\n                                        margin=\"normal\"\r\n                                        type=\"password\"\r\n                                        name=\"confirmPassword\"\r\n                                        value={account.confirmPassword}\r\n                                        placeholder={`Confirm the new password`}\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <Link\r\n                                        to=\"/identify/user\"\r\n                                        className={classes.link}\r\n                                    >\r\n                                        <Button\r\n                                            sx={{\r\n                                                display: `block`,\r\n                                                margin: `5px 0 2px 0`,\r\n                                                padding: 0,\r\n                                                width: `100%`,\r\n                                                textAlign: `right`,\r\n                                                textTransform: `none`,\r\n                                                fontSize: `15px`,\r\n                                                \"&:focus\": {\r\n                                                    outline: `none`,\r\n                                                },\r\n                                            }}\r\n                                            onClick={() =>\r\n                                                dispatch(setErrorLogin(null))\r\n                                            }\r\n                                            // onClick={(e) => directForgotPassword(e)}\r\n                                        >\r\n                                            Send new request?\r\n                                        </Button>\r\n                                    </Link>\r\n\r\n                                    {err && (\r\n                                        <Alert\r\n                                            variant=\"outlined\"\r\n                                            severity={\r\n                                                errorStatus\r\n                                                    ? \"error\"\r\n                                                    : \"success\"\r\n                                            }\r\n                                            className={classes.alert}\r\n                                        >\r\n                                            {err}\r\n                                        </Alert>\r\n                                    )}\r\n                                    {appear && <DirectHelper />}\r\n\r\n                                    <Box mt={2}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            fullWidth\r\n                                            type=\"submit\"\r\n                                            className={classes.btn}\r\n                                            onClick={(e) =>\r\n                                                handleRecoverPassword(e)\r\n                                            }\r\n                                        >\r\n                                            Continue\r\n                                        </Button>\r\n\r\n                                        <Link to=\"/register\">\r\n                                            <Button\r\n                                                sx={{\r\n                                                    display: `block`,\r\n                                                    margin: `5px 0 2px 0`,\r\n                                                    padding: 0,\r\n                                                    width: `100%`,\r\n                                                    textAlign: `center`,\r\n                                                    textTransform: `none`,\r\n                                                    fontSize: `16.5px`,\r\n                                                    \"&:focus\": {\r\n                                                        outline: `none`,\r\n                                                    },\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    dispatch(\r\n                                                        setErrorLogin(null)\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                Register new account?\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </Box>\r\n                                </form>\r\n                            </CardContent>\r\n                            {progress && (\r\n                                <Box sx={{ width: \"100%\", marginBottom: 0 }}>\r\n                                    <LinearProgress />\r\n                                </Box>\r\n                            )}\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // codeData: state.code.codeData,\r\n    // modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    // err: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    // updateCodeCreator: updateCode,\r\n    // getCodeCreator: getCode,\r\n    // openModalCreator: openModal,\r\n    // closeModalCreator: closeModal,\r\n    loginCreator: login,\r\n    setProgressCreator: setProgress,\r\n    setErrorLoginCreator: setErrorLogin,\r\n    loginFailedCreator: loginFailed,\r\n};\r\n\r\nconst withConnect = connect(mapStateToProps, mapActionsToProps);\r\n\r\nexport default compose(withConnect, withStyles(styles))(RecoveryPassword);\r\n","const styles = () => ({\r\n    contain: {\r\n        position: \"relative\",\r\n        // top: `59%`,\r\n        // left: `50%`,\r\n        // transform: `translate(-50%, -50%)`,\r\n        maxWidth: \"100%\",\r\n        margin: `auto`,\r\n        height: `100%`,\r\n        zIndex: 99,\r\n        padding: 40,\r\n        display: `flex`,\r\n        // alignItems: `center`,\r\n        justifyContent: `center`,\r\n        textAlign: `center`,\r\n        marginTop: `-1.5%`,\r\n        [\"@media(max-width:787px)\"]: {\r\n            marginTop: `2.5% !important`,\r\n            width: \"100%\",\r\n            display: `flex`,\r\n            flexDirection: `column`,\r\n        },\r\n        // [\"@media(max-width:980px)\"]: {\r\n        //     marginTop: `5% !important`,\r\n        //     width: \"70%\",\r\n        // },\r\n        // [\"@media(max-width:700px)\"]: {\r\n        //     marginTop: `5% !important`,\r\n        //     width: \"90%\",\r\n        // },\r\n        // [\"@media(max-width:500px)\"]: {\r\n        //     marginTop: `5% !important`,\r\n        //     width: \"100%\",\r\n        // },\r\n        // [\"@media(max-width:387px)\"]: {\r\n        //     marginTop: `12% !important`,\r\n        //     width: \"100%\",\r\n        // },\r\n        // [\"@media(max-width:353px)\"]: {\r\n        //     marginTop: `17% !important`,\r\n        //     width: \"100%\",\r\n        // },\r\n        // [\"@media(max-width:196px)\"]: {\r\n        //     marginTop: `20% !important`,\r\n        //     width: \"100%\",\r\n        // },\r\n    },\r\n    imageBox: {\r\n        width: `100%`,\r\n    },\r\n    labelImage: {\r\n        width: `100%`,\r\n    },\r\n    cardProfile: {\r\n        width: `100%`,\r\n        border: `1px solid #000`,\r\n        // height: `auto`\r\n    },\r\n    title: {\r\n        borderBottom: `1px solid #000`,\r\n        fontWeight: `525`,\r\n        fontFamily: `Poppins`,\r\n    },\r\n    left: {\r\n        // marginRight: `5px`,\r\n        borderRight: `1px solid #000`,\r\n        margin: 0,\r\n        padding: 0,\r\n    },\r\n    right: {\r\n        // float: `left`,\r\n    },\r\n    profile: {\r\n        width: `100%`,\r\n        display: `flex`,\r\n        // flexDirection: `column`\r\n        // height: `400px`,\r\n        [\"@media(max-width:787px)\"]: {\r\n            marginTop: `5% !important`,\r\n            width: \"100%\",\r\n            display: `flex`,\r\n            flexDirection: `column`,\r\n        },\r\n    },\r\n    avatar: {\r\n        width: `89%`,\r\n        margin: `auto`,\r\n        padding: `12px 0 0 0px`,\r\n        // height: `350px !important`,\r\n        height: `420px !important`,\r\n        [\"@media(max-width:500px)\"]: {\r\n            width: \"100%\",\r\n            // height: `auto`,\r\n        },\r\n        // height: `auto !important`,\r\n\r\n        // height: `auto`,\r\n        // height: `300px`,\r\n    },\r\n    field: {\r\n        // display: `flex`,\r\n    },\r\n    textInfo: {\r\n        width: `89%`,\r\n        margin: `auto`,\r\n        marginTop: `5px !important`,\r\n        fontWeight: `520`,\r\n        // float: `right`,\r\n    },\r\n});\r\n\r\nexport default styles;\r\n","import { createActions } from \"redux-actions\";\r\n\r\nexport const getProfile = createActions({\r\n    getProfileRequest: (val) => val,\r\n    getProfileSuccess: (val) => val,\r\n    getProfileFailure: (val) => val,\r\n});\r\n\r\nexport const updateProfile = createActions({\r\n    updateProfileRequest: (val) => val,\r\n    updateProfileSuccess: (val) => val,\r\n    updateProfileFailure: (val) => val,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport styles from \"./styles\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nimport {\r\n    // Typography,\r\n    // Card,\r\n    // CardContent,\r\n    Button,\r\n    TextField,\r\n    // Alert,\r\n    Box,\r\n    // LinearProgress,\r\n    Grid,\r\n    CardHeader,\r\n    // Avatar,\r\n    CardMedia,\r\n} from \"@mui/material\";\r\n// import { Link } from \"react-router-dom\";\r\nimport {\r\n    // ggLogin,\r\n    // fbLogin,\r\n    // GGLogin,\r\n    login,\r\n    setErrorLogin,\r\n    // recoverPassword,\r\n} from \"../../../actions/login\";\r\nimport { setProgress } from \"../../../actions/modal\";\r\nimport { set } from \"mongoose\";\r\nimport Nav from \"../../Nav.js\";\r\nimport { Fragment } from \"react\";\r\nimport GoogleLogin, { GoogleLogout } from \"react-google-login\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\n// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\n\r\nimport { API_GG } from \"../../../constant/axios\";\r\nimport GoogleIcon from \"@mui/icons-material/Google\";\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport { push } from \"connected-react-router\";\r\nimport { checkLastPwd } from \"../../../actions/login\";\r\nimport { loginFailed } from \"../../../actions/login\";\r\nimport DirectHelper from \"../DirectHelper\";\r\nimport Loading from \"../../Loading/Loading\";\r\nimport { verifyUrlRecover } from \"../../../actions/direct\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getProfile, updateProfile } from \"../../../actions/profile\";\r\nimport useId from \"@mui/utils/useId\";\r\n\r\nconst Profile = (props) => {\r\n    const { classes, match } = props;\r\n    // const [email, setEmail] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const [preview, setPreview] = useState();\r\n    const appear = useSelector((state) => state.direct.appear);\r\n    const account = useSelector((state) => state.profile.profile);\r\n    const isVerify = useSelector((state) => state.direct.isVerify);\r\n    const fid = useSelector((state) => state.auth.fbAccountInfo.fid);\r\n    const gid = useSelector((state) => state.auth.ggAccountInfo.gid);\r\n    const uid = useSelector((state) => state.auth.account.uid);\r\n    const name = useSelector((state) => state.auth.account.name);\r\n    // const time = useSelector(state => state.direct.time)\r\n\r\n    // console.log(\"Profile Component render\");\r\n    const onChange = (e) => {\r\n        dispatch(\r\n            updateProfile.updateProfileSuccess({\r\n                [e.target.name]: e.target.value,\r\n            })\r\n        );\r\n    };\r\n    // const handleRecoverPassword = (e) => {\r\n    //     e.preventDefault();\r\n    //     dispatch(\r\n    //         recoverPassword.recoverPasswordRequest({\r\n    //             ...account,\r\n    //             url: match.url.slice(1),\r\n    //         })\r\n    //     );\r\n    // };\r\n\r\n    const previewFile = (file) => {\r\n        if (!file) return;\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            dispatch(\r\n                updateProfile.updateProfileSuccess({ picture: reader.result })\r\n            );\r\n        };\r\n    };\r\n\r\n    const onChangeImage = (e) => {\r\n        e.preventDefault();\r\n        // setAccount({ ...account, [e.target.name]: e.target.files[0] });\r\n        previewFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        const i = Number(match.url.lastIndexOf(\"/\"));\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateProfile.updateProfileRequest({\r\n                account: account,\r\n                isVerify: true,\r\n                url: match.url.slice(i + 1),\r\n                fid: fid,\r\n                gid: gid,\r\n            })\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        const i = Number(match.url.lastIndexOf(\"/\"));\r\n        // console.log(\"useEffect Profile run...\");\r\n        dispatch(\r\n            getProfile.getProfileRequest({\r\n                isVerify: true,\r\n                url: match.url.slice(i + 1),\r\n            })\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            {isVerify ? (\r\n                <Loading />\r\n            ) : (\r\n                <Box className={classes.contain}>\r\n                    <Box className={classes.cardProfile}>\r\n                        <Grid item xs={12} sm={12} className={classes.title}>\r\n                            <CardHeader title={`${name}'s Information`} />\r\n                        </Grid>\r\n                        <div className={classes.profile}>\r\n                            <Grid item sm={12} className={classes.left}>\r\n                                {/* <CardHeader\r\n                                    avatar={<Avatar>A</Avatar>}\r\n                                    title=\"This is title\"\r\n                                /> */}\r\n\r\n                                <div className={classes.imageBox}>\r\n                                    <label\r\n                                        htmlFor=\"file-input\"\r\n                                        className={classes.labelImage}\r\n                                    >\r\n                                        {!account.picture && (\r\n                                            <CardMedia\r\n                                                className={classes.avatar}\r\n                                                component=\"img\"\r\n                                                // image=\"https://images.pexels.com/photos/1461974/pexels-photo-1461974.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\r\n                                                image=\"https://res.cloudinary.com/deoymeupe/image/upload/v1638436015/user_images/tdqnnrbo31ykrk8saaot.png\"\r\n                                            />\r\n                                        )}\r\n                                        {account.picture && (\r\n                                            <img\r\n                                                className={classes.avatar}\r\n                                                src={account.picture}\r\n                                            />\r\n                                        )}\r\n                                    </label>\r\n\r\n                                    <input\r\n                                        id=\"file-input\"\r\n                                        type=\"file\"\r\n                                        name=\"image\"\r\n                                        onChange={onChangeImage}\r\n                                        style={{ display: `none` }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item sm={12} className={classes.right}>\r\n                                <Box mt={1}>\r\n                                    <TextField\r\n                                        id=\"email\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        label=\"Email\"\r\n                                        value={account.email}\r\n                                        variant=\"standard\"\r\n                                        className={classes.textInfo}\r\n                                    />\r\n                                    {uid && (\r\n                                        <TextField\r\n                                            id=\"uid\"\r\n                                            InputProps={{\r\n                                                readOnly: true,\r\n                                            }}\r\n                                            label=\"ID\"\r\n                                            value={uid}\r\n                                            variant=\"standard\"\r\n                                            className={classes.textInfo}\r\n                                        />\r\n                                    )}\r\n                                    {fid && (\r\n                                        <TextField\r\n                                            id=\"fid\"\r\n                                            InputProps={{\r\n                                                readOnly: true,\r\n                                            }}\r\n                                            label=\"ID\"\r\n                                            value={fid}\r\n                                            variant=\"standard\"\r\n                                            className={classes.textInfo}\r\n                                        />\r\n                                    )}\r\n                                    {gid && (\r\n                                        <TextField\r\n                                            id=\"gid\"\r\n                                            InputProps={{\r\n                                                readOnly: true,\r\n                                            }}\r\n                                            label=\"ID\"\r\n                                            value={gid}\r\n                                            variant=\"standard\"\r\n                                            className={classes.textInfo}\r\n                                        />\r\n                                    )}\r\n\r\n                                    <TextField\r\n                                        id=\"name\"\r\n                                        // InputProps={{\r\n                                        //     readOnly: true,\r\n                                        // }}\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        required={true}\r\n                                        value={account.name}\r\n                                        onChange={onChange}\r\n                                        variant=\"standard\"\r\n                                        className={classes.textInfo}\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"password\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        type=\"password\"\r\n                                        label=\"Password\"\r\n                                        value={account.password}\r\n                                        variant=\"standard\"\r\n                                        className={classes.textInfo}\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"country\"\r\n                                        // InputProps={{\r\n                                        //     readOnly: true,\r\n                                        // }}\r\n                                        label=\"Country\"\r\n                                        value={account.country}\r\n                                        name=\"country\"\r\n                                        variant=\"standard\"\r\n                                        className={classes.textInfo}\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"phone\"\r\n                                        // InputProps={{\r\n                                        //     readOnly: true,\r\n                                        // }}\r\n                                        label=\"Phone\"\r\n                                        value={account.phone}\r\n                                        variant=\"standard\"\r\n                                        className={classes.textInfo}\r\n                                        onChange={onChange}\r\n                                        name=\"phone\"\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"job\"\r\n                                        // InputProps={{\r\n                                        //     readOnly: true,\r\n                                        // }}\r\n                                        label=\"Job\"\r\n                                        value={account.job}\r\n                                        variant=\"standard\"\r\n                                        className={classes.textInfo}\r\n                                        onChange={onChange}\r\n                                        name=\"job\"\r\n                                    />\r\n                                    <Box mt={2} mb={1}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            // color=\"secondary\"\r\n                                            onClick={handleSubmit}\r\n                                            sx={{\r\n                                                background: `#55DDC6`,\r\n                                                \"&:hover\": {\r\n                                                    background: `#28EEC6 !important`,\r\n                                                },\r\n                                            }}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Grid>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // codeData: state.code.codeData,\r\n    // modalIsOpen: state.modal.modalIsOpen,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    // err: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    // updateCodeCreator: updateCode,\r\n    // getCodeCreator: getCode,\r\n    // openModalCreator: openModal,\r\n    // closeModalCreator: closeModal,\r\n    loginCreator: login,\r\n    setProgressCreator: setProgress,\r\n    setErrorLoginCreator: setErrorLogin,\r\n    loginFailedCreator: loginFailed,\r\n};\r\n\r\nconst withConnect = connect(mapStateToProps, mapActionsToProps);\r\n\r\nexport default compose(withConnect, withStyles(styles))(Profile);\r\n","import { createActions } from \"redux-actions\";\r\n\r\nexport const getShareCode = createActions({\r\n    getShareCodeRequest: (val) => val,\r\n    getShareCodeSuccess: (val) => val,\r\n    getShareCodeFailure: (val) => val,\r\n});\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { getShareCode } from \"../actions/getShareCode\";\r\nimport Loading from \"./Loading/Loading\";\r\n\r\nconst GetShareCode = ({ match }) => {\r\n    // console.log(match);\r\n    const isLoading = useSelector((state) => state.getShareCode.isLoading);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getShareCode.getShareCodeRequest(match.params.id));\r\n    }, [dispatch, match.params.id]);\r\n    return (\r\n        <Fragment>\r\n            {isLoading ? <Loading /> : <Redirect to=\"/code\"></Redirect>}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default GetShareCode;\r\n","import React from \"react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport parse from \"html-react-parser\";\r\nimport { useState } from \"react\";\r\nimport cs from \"classnames\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport \"./styles.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textEdit: {\r\n        marginTop: `3% !important`,\r\n        fontSize: `none`,\r\n        textAlign: `none !important`,\r\n        // width: `95% !important`,\r\n        height: `350px`,\r\n        // maxHeight: `50vh !important`,\r\n        // margin: `auto !important`,\r\n        borderTop: `1px solid #e0e0e0`,\r\n        paddingTop: `9px`,\r\n        overflowY: `auto`,\r\n    },\r\n    yourAnswer: {\r\n        fontSize: `20px`,\r\n        marginBottom: `10px`,\r\n        color: \"000\",\r\n        fontWeight: `499`,\r\n    },\r\n}));\r\n\r\nconst Text = (props) => {\r\n    const { title, text, setText } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <div className={cs(classes.textEdit)}>\r\n                <div className={cs(classes.yourAnswer)}>{title}</div>\r\n                <CKEditor\r\n                    editor={ClassicEditor}\r\n                    data={text}\r\n                    onChange={(event, editor) => {\r\n                        const data = editor.getData();\r\n                        setText(data);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Text;\r\n","import { createActions } from \"redux-actions\";\r\n\r\nexport const setOpenAskModal = createActions({\r\n    setOpenAskModalRequest: (val) => val,\r\n    setOpenAskModalSuccess: (val) => val,\r\n    setOpenAskModalFailure: (val) => val,\r\n});\r\n\r\nexport const createThread = createActions({\r\n    createThreadRequest: (val) => val,\r\n    createThreadSuccess: (val) => val,\r\n    createThreadFailure: (val) => val,\r\n});\r\n\r\nexport const updateThread = createActions({\r\n    updateThreadRequest: (val) => val,\r\n    updateThreadSuccess: (val) => val,\r\n    updateThreadFailure: (val) => val,\r\n});\r\n\r\nexport const getThreads = createActions({\r\n    getThreadsRequest: (val) => val,\r\n    getThreadsSuccess: (val) => val,\r\n    getThreadsFailure: (val) => val,\r\n});\r\n\r\nexport const setNotify = createActions({\r\n    setNotifyRequest: (val) => val,\r\n    setNotifySuccess: (val) => val,\r\n    setNotifyFailure: (val) => val,\r\n});\r\n\r\nexport const setLoadingForum = createActions({\r\n    setLoadingForumRequest: (val) => val,\r\n    setLoadingForumSuccess: (val) => val,\r\n    setLoadingForumFailure: (val) => val,\r\n});\r\n\r\nexport const setQuestionLoadingForum = createActions({\r\n    setQuestionLoadingForumRequest: (val) => val,\r\n    setQuestionLoadingForumSuccess: (val) => val,\r\n    setQuestionLoadingForumFailure: (val) => val,\r\n});\r\n\r\nexport const setQuestion = createActions({\r\n    setQuestionRequest: (val) => val,\r\n    setQuestionSuccess: (val) => val,\r\n    setQuestionFailure: (val) => val,\r\n});\r\n\r\nexport const createAnswer = createActions({\r\n    createAnswerRequest: (val) => val,\r\n    createAnswerSuccess: (val) => val,\r\n    createAnswerFailure: (val) => val,\r\n});\r\n\r\nexport const setCircleProgress = createActions({\r\n    setCircleProgressRequest: (val) => val,\r\n    setCircleProgressSuccess: (val) => val,\r\n    setCircleProgressFailure: (val) => val,\r\n});\r\n\r\nexport const updateAnswer = createActions({\r\n    updateAnswerRequest: (val) => val,\r\n    updateAnswerSuccess: (val) => val,\r\n    updateAnswerFailure: (val) => val,\r\n});\r\n\r\nexport const deleteAnswer = createActions({\r\n    deleteAnswerRequest: (val) => val,\r\n    deleteAnswerSuccess: (val) => val,\r\n    deleteAnswerFailure: (val) => val,\r\n});\r\n\r\nexport const openModalDeleteAnswer = createActions({\r\n    openModalDeleteAnswerRequest: (val) => val,\r\n    openModalDeleteAnswerSuccess: (val) => val,\r\n    openModalDeleteAnswerFailure: (val) => val,\r\n});\r\n\r\nexport const setDeleteSuccess = createActions({\r\n    setDeleteSuccessSuccess: (val) => val,\r\n});\r\n\r\nexport const deleteThread = createActions({\r\n    deleteThreadRequest: (val) => val,\r\n    deleteThreadSuccess: (val) => val,\r\n    deleteThreadFailure: (val) => val,\r\n});\r\n\r\nexport const openDeleteThreadModal = createActions({\r\n    openDeleteThreadModalRequest: (val) => val,\r\n    openDeleteThreadModalSuccess: (val) => val,\r\n    openDeleteThreadModalFailure: (val) => val,\r\n});\r\n\r\nexport const setViewThread = createActions({\r\n    setViewThreadRequest: (val) => val,\r\n    setViewThreadSuccess: (val) => val,\r\n    setViewThreadFailure: (val) => val,\r\n});\r\n\r\nexport const like = createActions({\r\n    likeRequest: (val) => val,\r\n    likeSuccess: (val) => val,\r\n    likeFailure: (val) => val,\r\n});\r\nexport const dislike = createActions({\r\n    dislikeRequest: (val) => val,\r\n    dislikeSuccess: (val) => val,\r\n    dislikeFailure: (val) => val,\r\n});\r\n\r\nexport const likeAnswer = createActions({\r\n    likeAnswerRequest: (val) => val,\r\n    likeAnswerSuccess: (val) => val,\r\n    likeAnswerFailure: (val) => val,\r\n});\r\nexport const dislikeAnswer = createActions({\r\n    dislikeAnswerRequest: (val) => val,\r\n    dislikeAnswerSuccess: (val) => val,\r\n    dislikeAnswerFailure: (val) => val,\r\n});\r\n\r\nexport const setThread = createActions({\r\n    setThreadRequest: (val) => val,\r\n    setThreadSuccess: (val) => val,\r\n    setThreadFailure: (val) => val,\r\n});\r\n\r\nexport const ban = createActions({\r\n    banRequest: (val) => val,\r\n    banSuccess: (val) => val,\r\n    banFailure: (val) => val,\r\n});\r\n\r\nexport const unban = createActions({\r\n    unbanRequest: (val) => val,\r\n    unbanSuccess: (val) => val,\r\n    unbanFailure: (val) => val,\r\n});\r\n\r\nexport const setBan = createActions({\r\n    setBanRequest: (val) => val,\r\n    setBanSuccess: (val) => val,\r\n    setBanFailure: (val) => val,\r\n});\r\n\r\nexport const setBanModal = createActions({\r\n    setBanModalRequest: (val) => val,\r\n    setBanModalSuccess: (val) => val,\r\n    setBanModalFailure: (val) => val,\r\n});\r\n\r\nexport const setBanAnswerModal = createActions({\r\n    setBanAnswerModalRequest: (val) => val,\r\n    setBanAnswerModalSuccess: (val) => val,\r\n    setBanAnswerModalFailure: (val) => val,\r\n});\r\n\r\nexport const setUnbanModal = createActions({\r\n    setUnbanModalRequest: (val) => val,\r\n    setUnbanModalSuccess: (val) => val,\r\n    setUnbanModalFailure: (val) => val,\r\n});\r\n// export const setLargeScreen = createActions({\r\n//     setLargeScreenRequest: (val) => val,\r\n//     setLargeScreenSuccess: (val) => val,\r\n//     setLargeScreenFailure: (val) => val,\r\n// });\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Text from \"./Text\";\r\nimport { Alert, TextField } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport cs from \"classnames\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createThread } from \"../../actions/forum\";\r\n// import DirectHelper from \"../AuthPage/DirectHelper\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textField: {},\r\n    textEditorContain: {\r\n        marginTop: `-1.5%`,\r\n    },\r\n    notify: {},\r\n    directInAskModal: {\r\n        textAlign: `center`,\r\n    },\r\n}));\r\n\r\nconst style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: `85%`,\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #fff\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n    borderRadius: `12px`,\r\n};\r\n\r\nexport default function AskModal(props) {\r\n    const classes = useStyles();\r\n    const { handleClose, open } = props;\r\n    const error = useSelector((state) => state.forum.error);\r\n    const isCircleProgress = useSelector(\r\n        (state) => state.forum.isCircleProgress\r\n    );\r\n    const notify = useSelector((state) => state.forum.notify);\r\n    const [text, setText] = React.useState(\"\");\r\n    const [title, setTitle] = React.useState(\"\");\r\n    const dp = useDispatch();\r\n\r\n    const onChange = (e) => {\r\n        setTitle(e.target.value);\r\n    };\r\n    const handleCreate = () => {\r\n        dp(createThread.createThreadRequest({ title, content: text }));\r\n    };\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"child-modal-title\"\r\n                aria-describedby=\"child-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        component=\"h2\"\r\n                        sx={{ textAlign: `center !important` }}\r\n                    >\r\n                        Ask your question?\r\n                    </Typography>\r\n                    <TextField\r\n                        id=\"title\"\r\n                        label=\"Title\"\r\n                        className={classes.textField}\r\n                        placeholder={\"Title\"}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        name=\"Title\"\r\n                        value={title}\r\n                        onChange={onChange}\r\n                    />\r\n\r\n                    <div className={cs(classes.textEditorContain)}>\r\n                        <Text\r\n                            title={\"Your question\"}\r\n                            text={text}\r\n                            setText={setText}\r\n                        />\r\n                    </div>\r\n                    {isCircleProgress ? (\r\n                        <Box className={cs(classes.directInAskModal)}>\r\n                            <CircularProgress />\r\n                        </Box>\r\n                    ) : (\r\n                        notify && (\r\n                            <Alert\r\n                                variant=\"outlined\"\r\n                                severity={!error ? \"success\" : \"warning\"}\r\n                            >\r\n                                {notify}\r\n                            </Alert>\r\n                        )\r\n                    )}\r\n                    {/* {notify && (\r\n                        <Alert\r\n                            variant=\"outlined\"\r\n                            severity={!error ? \"success\" : \"warning\"}\r\n                        >\r\n                            {notify}\r\n                        </Alert>\r\n                    )} */}\r\n                    <div className={cs(\"mt-2\")}>\r\n                        <Button\r\n                            onClick={handleClose}\r\n                            variant=\"contained\"\r\n                            className={cs(\"mr-2\")}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={handleCreate} variant=\"contained\">\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {/* <p>\r\n                        <span style={{ color: error ? \"red\" : \"green\" }}>\r\n                            {notify}\r\n                        </span>\r\n                    </p> */}\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: `400px`,\r\n    bgcolor: \"background.paper\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n\r\n    // borderBottom: `1px solid #e0e0e0`,\r\n    // borderLeft: `1px solid #e0e0e0`,\r\n    // // borderRight: `1px solid #e0e0e0`,\r\n    // boxShadow: `-5px 3px 10px #e0e0e0`,\r\n    // borderRadius: `5px`,\r\n\r\n    outline: `none !important`,\r\n    borderBottom: `1px solid #e0e0e0`,\r\n    borderLeft: `1px solid #e0e0e0`,\r\n    // borderRight: `1px solid #e0e0e0`,\r\n    // boxShadow: `-10px 7px 10px #e0e0e0`,\r\n    boxShadow: `0px 0px 8px 5px #e0e0e0`,\r\n    // boxShadow: `0 0 5px 2px #000`,\r\n    borderRadius: `5px`,\r\n\r\n    [\"@media(max-width: 767px)\"]: {\r\n        width: `95%`,\r\n        margin: `auto`,\r\n    },\r\n};\r\n\r\nexport default function TransitionsModal({ open, handleOpen, handleClose }) {\r\n    return (\r\n        <div>\r\n            {/* <Button onClick={handleOpen}>Open modal</Button> */}\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <Box sx={style}>\r\n                        <Typography\r\n                            id=\"transition-modal-title\"\r\n                            variant=\"h6\"\r\n                            component=\"h2\"\r\n                            sx={{\r\n                                fontFamily: `'Roboto Condensed', sans-serif`,\r\n                            }}\r\n                        >\r\n                            Login required!\r\n                        </Typography>\r\n                        <Typography\r\n                            id=\"transition-modal-description\"\r\n                            sx={{\r\n                                mt: 1,\r\n                                textAlign: `left !important`,\r\n                            }}\r\n                        >\r\n                            You need to login to use this!\r\n                            <Link to=\"/login\">\r\n                                <Button\r\n                                    sx={{\r\n                                        fontSize: `17px`,\r\n                                    }}\r\n                                >\r\n                                    Login\r\n                                </Button>\r\n                            </Link>\r\n                        </Typography>\r\n                    </Box>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import {\r\n    Box,\r\n    Button,\r\n    CircularProgress,\r\n    Divider,\r\n    Grid,\r\n    IconButton,\r\n    Avatar,\r\n    CardHeader,\r\n    CardMedia,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport cs from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AskModal from \"./AskModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    createThread,\r\n    getThreads,\r\n    setLoadingForum,\r\n    setNotify,\r\n    setOpenAskModal,\r\n    setThread,\r\n} from \"../../actions/forum\";\r\n// import moment from \"moment\";\r\nimport moment from \"moment-timezone\";\r\n\r\nimport parse from \"html-react-parser\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport LoginRequire from \"./LoginRequire\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     dividerB: {\r\n//         color: `#8167a9`,\r\n//         background: `#8167a9`,\r\n//         margin: `8px 0`,\r\n//         height: `7px`,\r\n//         borderRadius: `7px 7px`,\r\n//     },\r\n//     dividerS: {\r\n//         color: `#8167a9`,\r\n//         background: `#8167a9`,\r\n//         margin: `8px 0 15px 0`,\r\n//         height: `3px`,\r\n//         borderRadius: `7px 7px`,\r\n\r\n//         margin: `auto !important`,\r\n//         width: `95% !important`,\r\n//         background: `#1976D2`,\r\n//     },\r\n//     forumContainer: {\r\n//         // background: `#fff`,\r\n//         marginBottom: `9%`,\r\n//     },\r\n//     threadList: {\r\n//         width: `95%`,\r\n//         margin: `2% auto`,\r\n\r\n//         // [\"@media(max-width:412px)\"]: {\r\n//         //     width: `90% !important`,\r\n//         //     maxWidth: `90% !important`,\r\n//         //     // margin: `auto`,\r\n//         // },\r\n//     },\r\n//     mainContainer: {\r\n//         width: `80%`,\r\n//         margin: `auto`,\r\n//         marginTop: `9%`,\r\n//         // minWidth: `500px !important`,\r\n\r\n//         width: `80% !important`,\r\n\r\n//         // height: `150vh`,\r\n//         height: `100%`,\r\n\r\n//         // background: `#fff`,\r\n//         borderBottom: `1px solid #e0e0e0`,\r\n//         borderLeft: `1px solid #e0e0e0`,\r\n//         // borderRight: `1px solid #e0e0e0`,\r\n//         // boxShadow: `-10px 7px 10px #e0e0e0`,\r\n//         boxShadow: `-5px -5px 10px 9px #e0e0e0`,\r\n//         // boxShadow: `0 0 5px 2px #000`,\r\n//         borderRadius: `5px`,\r\n\r\n//         // marginBottom: `5%`,\r\n\r\n//         [\"@media(max-width:768px)\"]: {\r\n//             // width: `95%`,\r\n//             // margin: `auto`,\r\n\r\n//             width: `95% !important`,\r\n//             margin: `auto !important`,\r\n//             borderBottom: `1px solid #e0e0e0`,\r\n//             borderLeft: `1px solid #e0e0e0`,\r\n//             // borderRight: `1px solid #e0e0e0`,\r\n//             boxShadow: `-10px 3px 10px #e0e0e0`,\r\n//             borderRadius: `5px`,\r\n//         },\r\n//         [\"@media(max-width:320px)\"]: {\r\n//             width: `90% !important`,\r\n//             margin: `auto !important`,\r\n//             borderBottom: `1px solid #e0e0e0`,\r\n//             borderLeft: `1px solid #e0e0e0`,\r\n//             // borderRight: `1px solid #e0e0e0`,\r\n//             boxShadow: `-10px 3px 10px #e0e0e0`,\r\n//             borderRadius: `5px`,\r\n//         },\r\n//     },\r\n//     thread: {\r\n//         marginBottom: `1.2%`,\r\n//         // borderTop: `1px solid #e0e0e0`,\r\n//         borderBottom: `1px solid #e0e0e0`,\r\n//         borderLeft: `1px solid #e0e0e0`,\r\n//         borderRight: `1px solid #e0e0e0`,\r\n//         borderRadius: `8px 8px`,\r\n//         // padding: `15px`,\r\n//         display: `flex`,\r\n//         justifyContent: \"space-between\",\r\n//         boxSizing: `border-box`,\r\n//         width: `100%`,\r\n//         boxShadow: `0px 2px 2px #e0e0e0`,\r\n//     },\r\n//     threadTitle: {\r\n//         fontSize: \"17px\",\r\n//         fontWeight: 700,\r\n//         margin: \"0\",\r\n//         padding: \"0\",\r\n//         // color: \"#8167a9\",\r\n//         color: \"#1976D2\",\r\n//         boxSizing: `border-box`,\r\n\r\n//         overflow: \"hidden\",\r\n//         textOverflow: \"ellipsis\",\r\n//         display: \"-webkit-box\",\r\n//         WebkitLineClamp: \"2\",\r\n//         lineClamp: 2,\r\n//         WebkitBoxOrient: \"vertical\",\r\n\r\n//         paddingTop: `2px`,\r\n//         marginTop: `8px`,\r\n//         [\"@media(max-width:768px)\"]: {\r\n//             fontSize: `15px`,\r\n//         },\r\n//     },\r\n//     previewContent: {\r\n//         fontSize: \"14px\",\r\n//         margin: \"0\",\r\n//         padding: \"0\",\r\n//         color: \"#191e1e\",\r\n//         boxSizing: `border-box`,\r\n//         textAlign: `left !important`,\r\n\r\n//         [\"@media(max-width:768px)\"]: {\r\n//             fontSize: `10px !important`,\r\n//         },\r\n//     },\r\n//     replies: {\r\n//         fontSize: \"12px\",\r\n//         margin: \"0\",\r\n//         padding: \"0\",\r\n//         color: \"#191e1e\",\r\n//     },\r\n//     views: { fontSize: \"12px\", margin: \"0\", padding: \"0\", color: \"#191e1e\" },\r\n//     threadLeft: {\r\n//         position: `relative`,\r\n//         display: `flex`,\r\n//         flexDirection: `column`,\r\n//         width: `15%`,\r\n//         // padding: 0,\r\n//         // margin: 0,\r\n//         boxSizing: `border-box`,\r\n\r\n//         marginBottom: `7px`,\r\n\r\n//         [\"@media(min-width:1502px)\"]: {\r\n//             width: `unset !important`,\r\n//         },\r\n//         // [\"@media(max-width:412px)\"]: {\r\n//         //     display: `none`,\r\n//         //     // margin: `auto`,\r\n//         // },\r\n//     },\r\n//     threadRight: {\r\n//         position: `relative`,\r\n//         width: `85%`,\r\n//         marginLeft: `7px`,\r\n//         borderLeft: `1px solid #e0e0e0`,\r\n//         padding: `0px 15px`,\r\n//         marginTop: `8px`,\r\n//         [\"@media(max-width:768px)\"]: {\r\n//             marginLeft: `20px`,\r\n//         },\r\n//         // [\"@media(max-width:412px)\"]: {\r\n//         //     borderLeft: `unset`,\r\n//         //     marginLeft: `0`,\r\n//         //     // padding: `0`,\r\n\r\n//         //     // margin: `auto`,\r\n//         // },\r\n//     },\r\n//     userImage: {\r\n//         width: `85% !important`,\r\n//         height: `90px !important`,\r\n//         // margin: 0,\r\n//         // padding: 0,\r\n//         boxSizing: `border-box`,\r\n//         [\"@media(min-width:1502px)\"]: {\r\n//             width: `250px!important`,\r\n//             height: `auto !important`,\r\n//             padding: `15px`,\r\n//         },\r\n//         [\"@media(max-width:1501px)\"]: {\r\n//             width: `100% !important`,\r\n//             maxWidth: `120px !important`,\r\n//             height: `120px !important`,\r\n//             padding: `9px`,\r\n//             borderRadius: `50% !important`,\r\n//         },\r\n//         [\"@media(max-width:768px)\"]: {\r\n//             width: `100px !important`,\r\n//             height: `70px !important`,\r\n//         },\r\n\r\n//         [\"@media(max-width:360px)\"]: {\r\n//             display: `table !important`,\r\n//             boxSizing: `border-box`,\r\n//             width: `70px !important`,\r\n//             height: `50px !important`,\r\n//         },\r\n//     },\r\n//     userPostInfo: {\r\n//         fontSize: \"12px\",\r\n//         padding: \"0\",\r\n//         color: \"#191e1e\",\r\n//         boxSizing: `border-box`,\r\n//         // marginLeft: `8px`,\r\n//         padding: `0`,\r\n//         textAlign: `center`,\r\n//         whiteSpace: `nowrap`,\r\n//         [\"@media(max-width:768px)\"]: {\r\n//             fontSize: `8px`,\r\n//         },\r\n//     },\r\n//     textSpanCollapse: {\r\n//         display: `block`,\r\n//         // position: `absolute`,\r\n//         // whiteSpace: \"nowrap\",\r\n//         // overflow: \"hidden\",\r\n//         // textOverflow: \"ellipsis\",\r\n//         // maxWidth: \"100ch\",\r\n//         textAlign: `left !important`,\r\n//         marginTop: `4px`,\r\n//         marginLeft: `5px`,\r\n//         overflow: \"hidden\",\r\n//         textOverflow: \"ellipsis\",\r\n//         display: \"-webkit-box\",\r\n//         WebkitLineClamp: \"2\",\r\n//         lineClamp: 2,\r\n//         WebkitBoxOrient: \"vertical\",\r\n//         \"& h2, & h3, & h4, & p\": {\r\n//             fontSize: `14px !important`,\r\n//             fontWeight: `normal !important`,\r\n//             padding: `0px 0px !important`,\r\n//             paddingTop: `5px !important`,\r\n//             textAlign: `left`,\r\n//         },\r\n//         \"& table\": {\r\n//             display: `none !important`,\r\n//         },\r\n//     },\r\n//     viewInfo: {\r\n//         marginTop: `15px`,\r\n//         position: `absolute`,\r\n//         bottom: `10px`,\r\n//         [\"@media(max-width:1030px)\"]: {\r\n//             position: `relative !important`,\r\n//             bottom: `none !important`,\r\n//         },\r\n//     },\r\n//     userInfoPreview: {\r\n//         marginTop: `4px`,\r\n//     },\r\n//     waitingByCircle: {\r\n//         // marginTop: `25%`,\r\n//         position: `relative`,\r\n//         textAlign: `center`,\r\n//         background: `#fff !important`,\r\n//         width: `80% !important`,\r\n//         margin: `auto !important`,\r\n//         height: `90vh !important`,\r\n//         borderBottom: `1px solid #e0e0e0`,\r\n//         borderLeft: `1px solid #e0e0e0`,\r\n//         borderRight: `1px solid #e0e0e0`,\r\n//         boxShadow: `-10px 3px 10px #e0e0e0`,\r\n//         borderRadius: `5px`,\r\n//         // border: `1px solid #e0e0e0`,\r\n//     },\r\n//     search: {\r\n//         width: \"100%\",\r\n//         boxSizing: \"border-box\",\r\n//         border: \"2px solid #ccc\",\r\n//         borderRadius: \"4px\",\r\n//         fontSize: \"16px\",\r\n//         backgroundColor: \"white\",\r\n//         backgroundPosition: \"10px 10px\",\r\n//         backgroundRepeat: \"no-repeat\",\r\n//         height: `20px`,\r\n//     },\r\n//     boxSearch: {\r\n//         // top: `20%`,\r\n//         height: `15px`,\r\n//     },\r\n//     groupInput: {},\r\n// }));\r\n\r\nconst Forum = (props) => {\r\n    const open = useSelector((state) => state.forum.open);\r\n    const threads = useSelector((state) => state.forum.threads);\r\n    const isVerify = useSelector((state) => state.direct.isVerify);\r\n    const isLoading = useSelector((state) => state.forum.isLoading);\r\n    const [openSearch, setOpenSearch] = useState(false);\r\n\r\n    const handleOpenSearch = () => {\r\n        setOpenSearch(!openSearch);\r\n    };\r\n    const useStyles = makeStyles((theme) => ({\r\n        dividerB: {\r\n            color: `#8167a9`,\r\n            background: `#8167a9`,\r\n            margin: `8px 0`,\r\n            height: `7px`,\r\n            borderRadius: `7px 7px`,\r\n        },\r\n        dividerS: {\r\n            color: `#8167a9`,\r\n            background: `#8167a9`,\r\n            margin: `8px 0 15px 0`,\r\n            height: `3px`,\r\n            borderRadius: `7px 7px`,\r\n\r\n            margin: `auto !important`,\r\n            width: `95% !important`,\r\n            background: `#1976D2`,\r\n        },\r\n        forumContainer: {\r\n            // background: `#fff`,\r\n            marginBottom: `5%`,\r\n        },\r\n        threadList: {\r\n            width: `95%`,\r\n            margin: `2% auto`,\r\n\r\n            // [\"@media(max-width:412px)\"]: {\r\n            //     width: `90% !important`,\r\n            //     maxWidth: `90% !important`,\r\n            //     // margin: `auto`,\r\n            // },\r\n        },\r\n        mainContainer: {\r\n            width: `80%`,\r\n            margin: `auto`,\r\n            marginTop: `9% !important`,\r\n            // minWidth: `500px !important`,\r\n\r\n            width: `80% !important`,\r\n\r\n            // height: `150vh`,\r\n            height: `100%`,\r\n\r\n            // background: `#fff`,\r\n            borderBottom: `1px solid #e0e0e0`,\r\n            borderLeft: `1px solid #e0e0e0`,\r\n            // borderRight: `1px solid #e0e0e0`,\r\n            // boxShadow: `-10px 7px 10px #e0e0e0`,\r\n            boxShadow: `-5px -5px 10px 9px #e0e0e0`,\r\n            // boxShadow: `0 0 5px 2px #000`,\r\n            borderRadius: `5px`,\r\n\r\n            marginBottom: `2%`,\r\n            [\"@media(max-width:1030px)\"]: {\r\n                marginTop: `15% !important`,\r\n            },\r\n\r\n            [\"@media(max-width:768px)\"]: {\r\n                // width: `95%`,\r\n                // margin: `auto`,\r\n\r\n                width: `95% !important`,\r\n                margin: `0 auto !important`,\r\n                borderBottom: `1px solid #e0e0e0`,\r\n                borderLeft: `1px solid #e0e0e0`,\r\n                // borderRight: `1px solid #e0e0e0`,\r\n                boxShadow: `-10px 3px 10px #e0e0e0`,\r\n                borderRadius: `5px`,\r\n                marginTop: `15% !important`,\r\n            },\r\n            [\"@media(max-width:500px)\"]: {\r\n                width: `90% !important`,\r\n                margin: `0 auto !important`,\r\n                borderBottom: `1px solid #e0e0e0`,\r\n                borderLeft: `1px solid #e0e0e0`,\r\n                // borderRight: `1px solid #e0e0e0`,\r\n                boxShadow: `-10px 3px 10px #e0e0e0`,\r\n                borderRadius: `5px`,\r\n                marginTop: `24% !important`,\r\n            },\r\n            [\"@media(max-width:472px)\"]: {\r\n                width: `90% !important`,\r\n                margin: `0 auto !important`,\r\n                borderBottom: `1px solid #e0e0e0`,\r\n                borderLeft: `1px solid #e0e0e0`,\r\n                // borderRight: `1px solid #e0e0e0`,\r\n                boxShadow: `-10px 3px 10px #e0e0e0`,\r\n                borderRadius: `5px`,\r\n                marginTop: `30% !important`,\r\n            },\r\n            [\"@media(max-width:367px)\"]: {\r\n                width: `90% !important`,\r\n                margin: `0 auto !important`,\r\n                borderBottom: `1px solid #e0e0e0`,\r\n                borderLeft: `1px solid #e0e0e0`,\r\n                // borderRight: `1px solid #e0e0e0`,\r\n                boxShadow: `-10px 3px 10px #e0e0e0`,\r\n                borderRadius: `5px`,\r\n                marginTop: `45% !important`,\r\n            },\r\n            [\"@media(max-width:300px)\"]: {\r\n                width: `90% !important`,\r\n                margin: `0 auto !important`,\r\n                borderBottom: `1px solid #e0e0e0`,\r\n                borderLeft: `1px solid #e0e0e0`,\r\n                // borderRight: `1px solid #e0e0e0`,\r\n                boxShadow: `-10px 3px 10px #e0e0e0`,\r\n                borderRadius: `5px`,\r\n                marginTop: `57% !important`,\r\n            },\r\n            [\"@media(max-width:260px)\"]: {\r\n                marginTop: `70% !important`,\r\n            },\r\n            [\"@media(max-width:200px)\"]: {\r\n                marginTop: `90% !important`,\r\n            },\r\n        },\r\n        thread: {\r\n            marginBottom: `1.2%`,\r\n            // borderTop: `1px solid #e0e0e0`,\r\n            borderBottom: `1px solid #e0e0e0`,\r\n            borderLeft: `1px solid #e0e0e0`,\r\n            borderRight: `1px solid #e0e0e0`,\r\n            borderRadius: `8px 8px`,\r\n            // padding: `15px`,\r\n            display: `flex`,\r\n            justifyContent: \"space-between\",\r\n            boxSizing: `border-box`,\r\n            width: `100%`,\r\n            boxShadow: `0px 2px 2px #e0e0e0`,\r\n            [\"@media(max-width:189px)\"]: {\r\n                display: `table `,\r\n                marginBottom: `3%`,\r\n            },\r\n        },\r\n        threadTitle: {\r\n            fontSize: \"17px\",\r\n            fontWeight: 700,\r\n            margin: \"0\",\r\n            padding: \"0\",\r\n            // color: \"#8167a9\",\r\n            color: \"#1976D2\",\r\n            boxSizing: `border-box`,\r\n\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\",\r\n            display: \"-webkit-box\",\r\n            WebkitLineClamp: \"2\",\r\n            lineClamp: 2,\r\n            WebkitBoxOrient: \"vertical\",\r\n\r\n            paddingTop: `2px`,\r\n            marginTop: `8px`,\r\n            wordBreak: \"break-word\",\r\n            [\"@media(max-width:768px)\"]: {\r\n                fontSize: `15px`,\r\n            },\r\n        },\r\n        previewContent: {\r\n            fontSize: \"14px\",\r\n            margin: \"0\",\r\n            padding: \"0\",\r\n            color: \"#191e1e\",\r\n            boxSizing: `border-box`,\r\n            textAlign: `left !important`,\r\n\r\n            [\"@media(max-width:768px)\"]: {\r\n                fontSize: `10px !important`,\r\n            },\r\n        },\r\n        replies: {\r\n            fontSize: \"12px\",\r\n            margin: \"0\",\r\n            padding: \"0\",\r\n            color: \"#191e1e\",\r\n        },\r\n        views: {\r\n            fontSize: \"12px\",\r\n            margin: \"0\",\r\n            padding: \"0\",\r\n            color: \"#191e1e\",\r\n        },\r\n        threadLeft: {\r\n            position: `relative`,\r\n            display: `flex`,\r\n            flexDirection: `column`,\r\n            width: `15%`,\r\n            // padding: 0,\r\n            // margin: 0,\r\n            boxSizing: `border-box`,\r\n\r\n            marginBottom: `7px`,\r\n\r\n            [\"@media(min-width:1502px)\"]: {\r\n                // width: `unset !important`,\r\n            },\r\n            [\"@media(max-width:968px)\"]: {\r\n                padding: `0px 2px`,\r\n                marginLeft: `15px !important`,\r\n            },\r\n            [\"@media(max-width:768px)\"]: {\r\n                // width: `95%`,\r\n                // margin: `auto`,\r\n\r\n                display: `none !important`,\r\n            },\r\n            // [\"@media(max-width:412px)\"]: {\r\n            //     display: `none`,\r\n            //     // margin: `auto`,\r\n            // },\r\n        },\r\n        threadRight: {\r\n            position: `relative`,\r\n            width: `85%`,\r\n            marginLeft: `7px`,\r\n            borderLeft: `1px solid #e0e0e0`,\r\n            padding: `0px 15px`,\r\n            marginTop: `8px`,\r\n            [\"@media(max-width:968px)\"]: {\r\n                marginLeft: `30px`,\r\n                padding: `0px 5px`,\r\n            },\r\n            [\"@media(max-width:768px)\"]: {\r\n                marginLeft: `20px`,\r\n                borderLeft: `none !important`,\r\n                padding: `0px 5px`,\r\n            },\r\n\r\n            // [\"@media(max-width:412px)\"]: {\r\n            //     borderLeft: `unset`,\r\n            //     marginLeft: `0`,\r\n            //     // padding: `0`,\r\n\r\n            //     // margin: `auto`,\r\n            // },\r\n        },\r\n        userImage: {\r\n            width: `85% !important`,\r\n            height: `90px !important`,\r\n            // margin: 0,\r\n            // padding: 0,\r\n            boxSizing: `border-box`,\r\n            [\"@media(min-width:1502px)\"]: {\r\n                // width: `250px!important`,\r\n                // height: `auto !important`,\r\n                // padding: `15px`,\r\n                display: `block !important`,\r\n                width: `170px !important`,\r\n                height: `150px !important`,\r\n                padding: `15px`,\r\n                textAlign: `center !important`,\r\n                borderRadius: `50% !important`,\r\n\r\n                // width: `100% !important`,\r\n                // maxWidth: `100% !important`,\r\n                // height: `100% !important`,\r\n                // padding: `9px`,\r\n                // borderRadius: `50% !important`,\r\n            },\r\n            [\"@media(max-width:1501px)\"]: {\r\n                width: `100% !important`,\r\n                maxWidth: `120px !important`,\r\n                height: `120px !important`,\r\n                padding: `9px`,\r\n                borderRadius: `50% !important`,\r\n            },\r\n            [\"@media(max-width:969px)\"]: {\r\n                width: `100% !important`,\r\n                maxWidth: `120px !important`,\r\n                height: `120px !important`,\r\n                padding: `0`,\r\n                borderRadius: `50% !important`,\r\n                marginLeft: `5px !important`,\r\n            },\r\n            [\"@media(max-width:768px)\"]: {\r\n                width: `100px !important`,\r\n                height: `70px !important`,\r\n            },\r\n\r\n            [\"@media(max-width:360px)\"]: {\r\n                display: `table !important`,\r\n                boxSizing: `border-box`,\r\n                width: `70px !important`,\r\n                height: `50px !important`,\r\n            },\r\n        },\r\n        userPostInfo: {\r\n            fontSize: \"12px\",\r\n            padding: \"0\",\r\n            color: \"#191e1e\",\r\n            boxSizing: `border-box`,\r\n            // marginLeft: `8px`,\r\n            padding: `0`,\r\n            textAlign: `center`,\r\n            whiteSpace: `nowrap`,\r\n            [\"@media(max-width:768px)\"]: {\r\n                fontSize: `8px`,\r\n            },\r\n        },\r\n        textSpanCollapse: {\r\n            display: `block`,\r\n            // position: `absolute`,\r\n            // whiteSpace: \"nowrap\",\r\n            // overflow: \"hidden\",\r\n            // textOverflow: \"ellipsis\",\r\n            // maxWidth: \"100ch\",\r\n            textAlign: `left !important`,\r\n            marginTop: `4px`,\r\n            marginLeft: `5px`,\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\",\r\n            display: \"-webkit-box\",\r\n            WebkitLineClamp: \"2\",\r\n            lineClamp: 2,\r\n            WebkitBoxOrient: \"vertical\",\r\n            \"& h2, & h3, & h4, & p\": {\r\n                fontSize: `14px !important`,\r\n                fontWeight: `normal !important`,\r\n                padding: `0px 0px !important`,\r\n                paddingTop: `5px !important`,\r\n                textAlign: `left`,\r\n            },\r\n            \"& table\": {\r\n                display: `none !important`,\r\n            },\r\n        },\r\n        viewInfo: {\r\n            marginTop: `15px`,\r\n            position: `absolute`,\r\n            bottom: `10px`,\r\n            [\"@media(max-width:1030px)\"]: {\r\n                position: `relative !important`,\r\n                bottom: `none !important`,\r\n            },\r\n            // marginTop: `4%`,\r\n            // // marginBottom: `15px`,\r\n            // position: `relative`,\r\n            // bottom: `7px`,\r\n            // [\"@media(max-width:1030px)\"]: {\r\n            //     position: `relative !important`,\r\n            //     bottom: `none !important`,\r\n            // },\r\n        },\r\n        userInfoPreview: {\r\n            marginTop: `4px`,\r\n        },\r\n        waitingByCircle: {\r\n            // marginTop: `25%`,\r\n            position: `relative`,\r\n            textAlign: `center`,\r\n            background: `#fff !important`,\r\n            width: `80% !important`,\r\n            margin: `auto !important`,\r\n            height: `90vh !important`,\r\n            borderBottom: `1px solid #e0e0e0`,\r\n            borderLeft: `1px solid #e0e0e0`,\r\n            borderRight: `1px solid #e0e0e0`,\r\n            boxShadow: `-10px 3px 10px #e0e0e0`,\r\n            borderRadius: `5px`,\r\n            // border: `1px solid #e0e0e0`,\r\n        },\r\n\r\n        groupInput: {\r\n            position: `fixed !important`,\r\n            width: `300px !important`,\r\n            zIndex: `999`,\r\n            top: `50%`,\r\n            marginLeft: !openSearch ? `-260px` : \"0\",\r\n            transition: `all .7s`,\r\n            borderRadius: `7px !important`,\r\n        },\r\n        inputSearch: {\r\n            \"&:active\": {\r\n                outline: `none !important`,\r\n                boxShadow: `none !important`,\r\n                border: `none !important`,\r\n            },\r\n            \"&:focus\": {\r\n                outline: `none !important`,\r\n                border: `none !important`,\r\n                boxShadow: `#6d9ddf !important`,\r\n            },\r\n        },\r\n        spanNavigate: {\r\n            [\"@media(max-width: 380px)\"]: {\r\n                fontSize: `15px !important`,\r\n            },\r\n        },\r\n        userInfoInSmallDevice: {\r\n            display: `none !important`,\r\n            [\"@media(max-width: 768px)\"]: {\r\n                display: `flex !important`,\r\n                position: `absolute`,\r\n                width: `max-content !important`,\r\n                fontFamily: `'Roboto Condensed', sans-serif`,\r\n                fontWeight: `400 !important`,\r\n                right: `3%`,\r\n                bottom: `7% !important`,\r\n            },\r\n            [\"@media(max-width: 315px)\"]: {\r\n                display: `flex !important`,\r\n                position: `relative`,\r\n                width: `max-content !important`,\r\n                fontFamily: `'Roboto Condensed', sans-serif`,\r\n                fontWeight: `400 !important`,\r\n                right: `3%`,\r\n                bottom: `7% !important`,\r\n                marginTop: `5px !important`,\r\n            },\r\n        },\r\n        imgSmallDevice: {\r\n            width: `25px !important`,\r\n            height: `25px !important`,\r\n            borderRadius: `50% !important`,\r\n            marginRight: `4px !important`,\r\n        },\r\n        usernameSmallDevice: {\r\n            marginTop: `3px !important`,\r\n            [\"@media(max-width: 240px)\"]: {\r\n                wordBreak: `break-word`,\r\n            },\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const [threadArray, setThreadArray] = useState(threads);\r\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n\r\n    const { match } = props;\r\n\r\n    const page = Number(match.params.page);\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const onChangeInput = (e) => {\r\n        setSearch(e.target.value);\r\n    };\r\n\r\n    let perPage = 5;\r\n    let start = perPage * (page - 1);\r\n    let end = page * perPage;\r\n\r\n    const dp = useDispatch();\r\n\r\n    const [openLoginRequire, setOpenLoginRequire] = React.useState(false);\r\n    const handleOpenLoginRequire = () => setOpenLoginRequire(true);\r\n    const handleCloseLoginRequire = () => setOpenLoginRequire(false);\r\n\r\n    const handleOpen = () => {\r\n        if (!isAuthenticated) {\r\n            handleOpenLoginRequire();\r\n            return;\r\n        }\r\n        dp(setOpenAskModal.setOpenAskModalSuccess(true));\r\n    };\r\n    const handleClose = () => {\r\n        dp(setNotify.setNotifySuccess(\"\"));\r\n\r\n        dp(setOpenAskModal.setOpenAskModalSuccess(false));\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     dp(getThreads.getThreadsRequest());\r\n    // }, []);\r\n\r\n    function ChangeToSlug(title) {\r\n        var slug;\r\n\r\n        //Lấy text từ thẻ input title\r\n\r\n        //Đổi chữ hoa thành chữ thường\r\n        slug = title\r\n            .toLowerCase()\r\n            .replace(/ /g, \"-\")\r\n            .replace(/[^\\w-]+/g, \"\");\r\n        return slug;\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     if (!threads.length) {\r\n    //         dp(setLoadingForum.setLoadingForumRequest());\r\n    //         dp(\r\n    //             getThreads.getThreadsRequest({\r\n    //                 match: null,\r\n    //             })\r\n    //         );\r\n    //     }\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        if (!threadArray.length) {\r\n            dp(setLoadingForum.setLoadingForumRequest());\r\n            dp(\r\n                getThreads.getThreadsRequest({\r\n                    match: null,\r\n                })\r\n            );\r\n        }\r\n    }, []);\r\n\r\n    // const clickQuestion = (e) => {\r\n    //     e.preventDefault();\r\n    // }\r\n    // console.log(\"threadArray\", threadArray);\r\n    // console.log(\"threads\", threads);\r\n\r\n    const navigate = () => {\r\n        let jsx = [];\r\n        if (page === 1) {\r\n            for (var i = page; i <= page + 2; i++) {\r\n                jsx.push(\r\n                    <Button\r\n                        key={i}\r\n                        color=\"secondary\"\r\n                        disabled={(i - 1) * perPage >= threads.length}\r\n                        sx={{\r\n                            padding: 0,\r\n                            display:\r\n                                (i - 1) * perPage >= threads.length && `none`,\r\n                        }}\r\n                    >\r\n                        <Link\r\n                            to={`/forum/${i}`}\r\n                            style={{\r\n                                width: `100%`,\r\n                                padding: 7,\r\n                                fontSize: `17px`,\r\n                                margin: 0,\r\n                            }}\r\n                        >\r\n                            <span\r\n                                className={cs(classes.spanNavigate)}\r\n                                style={{\r\n                                    width: `100%`,\r\n                                    display: `block`,\r\n                                    color: page === i && `#FFFFFF`,\r\n                                    background: page === i && `#1976D2`,\r\n                                }}\r\n                            >\r\n                                {i}\r\n                            </span>\r\n                        </Link>\r\n                    </Button>\r\n                );\r\n            }\r\n            return jsx;\r\n        }\r\n        for (var i = page - 1; i <= page + 1; i++) {\r\n            jsx.push(\r\n                <Button\r\n                    key={i}\r\n                    color=\"secondary\"\r\n                    disabled={(i - 1) * perPage >= threads.length}\r\n                    sx={{\r\n                        padding: 0,\r\n                        display: (i - 1) * perPage >= threads.length && `none`,\r\n                    }}\r\n                >\r\n                    <Link\r\n                        to={`/forum/${i}`}\r\n                        style={{\r\n                            width: `100%`,\r\n                            padding: 7,\r\n                            fontSize: `17px`,\r\n                            margin: 0,\r\n                        }}\r\n                    >\r\n                        <span\r\n                            className={cs(classes.spanNavigate)}\r\n                            style={{\r\n                                width: `100%`,\r\n                                display: `block`,\r\n                                background: page === i && `#1976D2`,\r\n                                color: page === i && `#FFFFFF`,\r\n                            }}\r\n                        >\r\n                            {i}\r\n                        </span>\r\n                    </Link>\r\n                </Button>\r\n            );\r\n        }\r\n        return jsx;\r\n    };\r\n\r\n    const [statusFilter, setStatusFilter] = useState(\"N\");\r\n    const handleFindNewest = () => {\r\n        setStatusFilter(\"N\");\r\n        dp(setThread.setThreadSuccess({ key: \"N\" }));\r\n        // setThreadArray(\r\n        //     threads.slice(start, end).sort((a, b) => {\r\n        //         return moment(b.createdAt)\r\n        //             .tz(\"Asia/Ho_Chi_Minh\")\r\n        //             .diff(moment(a.createdAt).tz(\"Asia/Ho_Chi_Minh\"));\r\n        //     })\r\n        // );\r\n    };\r\n\r\n    useEffect(() => {\r\n        setThreadArray(\r\n            threads\r\n                .slice(start, end)\r\n                .filter(\r\n                    (thread) =>\r\n                        thread.title\r\n                            .toUpperCase()\r\n                            .indexOf(search.toUpperCase()) > -1 && thread\r\n                )\r\n        );\r\n    }, [match, threads, search, page, statusFilter]);\r\n\r\n    const handleFindLikes = () => {\r\n        setStatusFilter(\"L\");\r\n        dp(setThread.setThreadSuccess({ key: \"L\" }));\r\n\r\n        // setThreadArray(\r\n        //     threads.slice(start, end).sort((a, b) => {\r\n        //         return b.likes - a.likes;\r\n        //     })\r\n        // );\r\n    };\r\n\r\n    const handleFindUnAnswers = () => {\r\n        setStatusFilter(\"U\");\r\n        dp(setThread.setThreadSuccess({ key: \"U\" }));\r\n\r\n        // setThreadArray(\r\n        //     threads.slice(start, end).filter((a) => {\r\n        //         return a.replies === 0 && a;\r\n        //     })\r\n        // );\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                // isVerify && !threads.length ? (\r\n                //     <Loading />\r\n                // )\r\n                isLoading ? (\r\n                    <Box className={cs(classes.waitingByCircle)}>\r\n                        <div className={cs(classes.backgroundLoading)}>\r\n                            <CircularProgress sx={{ marginTop: `25%` }} />\r\n                        </div>\r\n                    </Box>\r\n                ) : (\r\n                    <Fragment>\r\n                        <LoginRequire\r\n                            open={openLoginRequire}\r\n                            handleOpen={handleOpenLoginRequire}\r\n                            handleClose={handleCloseLoginRequire}\r\n                        />\r\n                        <div className={cs(\"input-group\", classes.groupInput)}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className={cs(\r\n                                    \"form-control\",\r\n                                    classes.inputSearch\r\n                                )}\r\n                                placeholder=\"Search...\"\r\n                                name=\"search\"\r\n                                // onClick={openX}\r\n                                value={search}\r\n                                onChange={onChangeInput}\r\n                            />\r\n                            <div\r\n                                className=\"input-group-btn\"\r\n                                style={{\r\n                                    position: !openSearch\r\n                                        ? `relative`\r\n                                        : `relative`,\r\n                                    right: 0,\r\n                                }}\r\n                                onClick={handleOpenSearch}\r\n                            >\r\n                                <button\r\n                                    className=\"btn btn-default\"\r\n                                    type=\"submit\"\r\n                                    style={{ background: `#6d9ddf` }}\r\n                                >\r\n                                    <SearchIcon sx={{ color: `#FFFFFF` }} />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <AskModal\r\n                            open={open}\r\n                            handleOpen={handleOpen}\r\n                            handleClose={handleClose}\r\n                            // handleCreate={handleCreate}\r\n                        />\r\n                        <div className={cs(classes.mainContainer)}>\r\n                            <div className={cs(classes.forumContainer)}>\r\n                                <div className={cs(classes.top)}>\r\n                                    <Button\r\n                                        onClick={handleOpen}\r\n                                        sx={{\r\n                                            marginLeft: `21px`,\r\n                                            marginTop: `2.7%`,\r\n                                            \"&:focus\": {\r\n                                                outline: `none !important`,\r\n                                                border: `none !important`,\r\n                                            },\r\n                                        }}\r\n                                    >\r\n                                        Ask question{\" \"}\r\n                                        <span\r\n                                            style={{\r\n                                                marginLeft: `3px`,\r\n                                            }}\r\n                                        >\r\n                                            ?\r\n                                        </span>\r\n                                    </Button>\r\n                                    <Button\r\n                                        onClick={handleFindNewest}\r\n                                        sx={{\r\n                                            marginLeft: `21px`,\r\n                                            marginTop: `2.7%`,\r\n                                            borderTop:\r\n                                                statusFilter === \"N\" &&\r\n                                                `2px solid #1976D2`,\r\n                                            \"&:focus\": {\r\n                                                outline: `none !important`,\r\n                                            },\r\n                                        }}\r\n                                    >\r\n                                        Newest\r\n                                    </Button>\r\n                                    <Button\r\n                                        onClick={handleFindLikes}\r\n                                        sx={{\r\n                                            marginLeft: `21px`,\r\n                                            marginTop: `2.7%`,\r\n                                            borderTop:\r\n                                                statusFilter === \"L\" &&\r\n                                                `2px solid #1976D2`,\r\n                                            \"&:focus\": {\r\n                                                outline: `none !important`,\r\n                                            },\r\n                                        }}\r\n                                    >\r\n                                        Likes\r\n                                    </Button>\r\n                                    <Button\r\n                                        onClick={handleFindUnAnswers}\r\n                                        sx={{\r\n                                            marginLeft: `21px`,\r\n                                            marginTop: `2.7%`,\r\n                                            borderTop:\r\n                                                statusFilter === \"U\" &&\r\n                                                `2px solid #1976D2`,\r\n                                            \"&:focus\": {\r\n                                                outline: `none !important`,\r\n                                            },\r\n                                        }}\r\n                                    >\r\n                                        Unanswered\r\n                                    </Button>\r\n                                </div>\r\n                                <Divider className={classes.dividerS} />\r\n                                <div className={cs(classes.threadList)}>\r\n                                    {\r\n                                        // threads.map((thread) => {\r\n                                        threadArray.map((thread) => {\r\n                                            return (\r\n                                                <div\r\n                                                    className={cs(\r\n                                                        classes.thread\r\n                                                    )}\r\n                                                    key={thread._id}\r\n                                                >\r\n                                                    <div\r\n                                                        className={cs(\r\n                                                            classes.threadLeft\r\n                                                        )}\r\n                                                    >\r\n                                                        <div>\r\n                                                            <img\r\n                                                                src={\r\n                                                                    thread.user\r\n                                                                        .picture\r\n                                                                }\r\n                                                                alt=\"\"\r\n                                                                className={cs(\r\n                                                                    classes.userImage\r\n                                                                )}\r\n                                                            />\r\n                                                        </div>\r\n\r\n                                                        <div\r\n                                                            className={cs(\r\n                                                                classes.userInfoPreview\r\n                                                            )}\r\n                                                        >\r\n                                                            <div\r\n                                                                className={cs(\r\n                                                                    classes.userPostInfo\r\n                                                                )}\r\n                                                            >\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                        display: `inline-block`,\r\n                                                                        whiteSpace:\r\n                                                                            \"nowrap\",\r\n                                                                        overflow:\r\n                                                                            \"hidden\",\r\n                                                                        textOverflow:\r\n                                                                            \"ellipsis\",\r\n                                                                        maxWidth:\r\n                                                                            \"19ch\",\r\n                                                                        // fontSize: \"15px\",\r\n                                                                        // marginTop: `17px !important`,\r\n                                                                    }}\r\n                                                                >\r\n                                                                    by{\" \"}\r\n                                                                    {\r\n                                                                        thread\r\n                                                                            .user\r\n                                                                            .name\r\n                                                                    }\r\n                                                                </span>\r\n                                                            </div>\r\n                                                            <div\r\n                                                                className={cs(\r\n                                                                    classes.userPostInfo\r\n                                                                )}\r\n                                                            >\r\n                                                                {\r\n                                                                    moment(\r\n                                                                        thread.createdAt\r\n                                                                    )\r\n                                                                        .tz(\r\n                                                                            \"Asia/Ho_Chi_Minh\"\r\n                                                                        )\r\n                                                                        .format(\r\n                                                                            \"hh:m MMM DD, YYYY\"\r\n                                                                        )\r\n                                                                    // .toLocaleString(\r\n                                                                    //     \"en-US\",\r\n                                                                    //     {\r\n                                                                    //         timeZone:\r\n                                                                    //             \"Asia/Bangkok\",\r\n                                                                    //     }\r\n                                                                    // )\r\n                                                                    // .format(\r\n                                                                    //     \"HH:MM MMM DD, YYYY\"\r\n                                                                    // )\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div\r\n                                                        className={cs(\r\n                                                            classes.threadRight\r\n                                                        )}\r\n                                                    >\r\n                                                        <Link\r\n                                                            to={`/questions/${ChangeToSlug(\r\n                                                                thread.title\r\n                                                            )}/${thread._id}/1`}\r\n                                                            // onClick={clickQuestion}\r\n                                                        >\r\n                                                            <div\r\n                                                                className={cs(\r\n                                                                    classes.threadTitle\r\n                                                                )}\r\n                                                            >\r\n                                                                {thread.title}\r\n                                                            </div>\r\n                                                        </Link>\r\n                                                        <div\r\n                                                            className={cs(\r\n                                                                classes.previewContent\r\n                                                            )}\r\n                                                        >\r\n                                                            <span\r\n                                                                className={cs(\r\n                                                                    classes.textSpanCollapse\r\n                                                                )}\r\n                                                                style={{\r\n                                                                    overflow:\r\n                                                                        \"hidden\",\r\n                                                                    textOverflow:\r\n                                                                        \"ellipsis\",\r\n                                                                    display:\r\n                                                                        \"-webkit-box\",\r\n                                                                    WebkitLineClamp:\r\n                                                                        \"2\",\r\n                                                                    lineClamp: 2,\r\n                                                                    WebkitBoxOrient:\r\n                                                                        \"vertical\",\r\n                                                                }}\r\n                                                            >\r\n                                                                {parse(\r\n                                                                    thread.content\r\n                                                                )}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                        <div\r\n                                                            className={cs(\r\n                                                                classes.viewInfo\r\n                                                            )}\r\n                                                        >\r\n                                                            {\" \"}\r\n                                                            <div\r\n                                                                className={cs(\r\n                                                                    classes.replies\r\n                                                                )}\r\n                                                            >\r\n                                                                Replies:{\" \"}\r\n                                                                {thread.replies}\r\n                                                            </div>\r\n                                                            <div\r\n                                                                className={cs(\r\n                                                                    classes.views\r\n                                                                )}\r\n                                                            >\r\n                                                                Views:{\" \"}\r\n                                                                {thread.views}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div\r\n                                                            className={cs(\r\n                                                                classes.userInfoInSmallDevice\r\n                                                            )}\r\n                                                        >\r\n                                                            <img\r\n                                                                src={\r\n                                                                    thread.user\r\n                                                                        .picture\r\n                                                                }\r\n                                                                alt=\"\"\r\n                                                                className={cs(\r\n                                                                    classes.imgSmallDevice\r\n                                                                )}\r\n                                                            />\r\n                                                            <span\r\n                                                                className={cs(\r\n                                                                    classes.usernameSmallDevice\r\n                                                                )}\r\n                                                            >\r\n                                                                {\r\n                                                                    thread.user\r\n                                                                        .name\r\n                                                                }\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                        {/* <CardHeader\r\n                                                            avatar={\r\n                                                                <Avatar>\r\n                                                                    {\" \"}\r\n                                                                    <CardMedia\r\n                                                                        image={\r\n                                                                            thread\r\n                                                                                .user\r\n                                                                                .picture\r\n                                                                        }\r\n                                                                        title=\"Title\"\r\n                                                                        component=\"img\"\r\n                                                                        className={\r\n                                                                            classes.media\r\n                                                                        }\r\n                                                                    />\r\n                                                                </Avatar>\r\n                                                            }\r\n                                                            sx={{\r\n                                                                background: `#FFFFFF !important`,\r\n                                                            }}\r\n                                                            // title={post.author}\r\n                                                            title={\r\n                                                                <span>\r\n                                                                    {\r\n                                                                        thread\r\n                                                                            .user\r\n                                                                            .name\r\n                                                                    }\r\n                                                                </span>\r\n                                                            }\r\n                                                            subheader={``}\r\n                                                            className={cs(\r\n                                                                classes.userInfoInSmallDevice\r\n                                                            )}\r\n                                                        /> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </div>\r\n\r\n                                <div\r\n                                    style={{\r\n                                        width: `100%`,\r\n                                        textAlign: `center`,\r\n                                    }}\r\n                                >\r\n                                    <Button\r\n                                        disabled={start <= 0}\r\n                                        color=\"secondary\"\r\n                                        sx={{\r\n                                            padding: 0,\r\n                                            [\"@media(max-width: 380px)\"]: {\r\n                                                display: `none`,\r\n                                            },\r\n                                        }}\r\n                                    >\r\n                                        <Link\r\n                                            to={`/forum/${page - 1}`}\r\n                                            style={{\r\n                                                width: `100%`,\r\n                                                display: `block`,\r\n                                                padding: 5,\r\n                                                margin: 0,\r\n                                            }}\r\n                                        >\r\n                                            <ArrowBackIosNewIcon\r\n                                                sx={{\r\n                                                    width: `100%`,\r\n                                                    display: `block`,\r\n                                                }}\r\n                                            />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    {navigate()}\r\n\r\n                                    <Button\r\n                                        color=\"secondary\"\r\n                                        disabled={end >= threads.length}\r\n                                        sx={{\r\n                                            padding: 0,\r\n                                            [\"@media(max-width: 380px)\"]: {\r\n                                                display: `none`,\r\n                                            },\r\n                                        }}\r\n                                    >\r\n                                        <Link\r\n                                            to={`/forum/${page + 1}`}\r\n                                            style={{\r\n                                                width: `100%`,\r\n                                                display: `block`,\r\n                                                padding: 5,\r\n                                                margin: 0,\r\n                                            }}\r\n                                        >\r\n                                            <ArrowForwardIosIcon\r\n                                                sx={{\r\n                                                    width: `100%`,\r\n                                                    display: `block`,\r\n                                                }}\r\n                                            />\r\n                                        </Link>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                )\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Forum;\r\n","import React, {\r\n     useState, useEffect, Fragment, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DoneAllIcon from \"@mui/icons-material/DoneAll\";\r\nimport {\r\n    Modal,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    LinearProgress,\r\n    Alert,\r\n    Tooltip,\r\n    SliderValueLabel,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport { openModalShare } from \"../../actions/modalShareCode\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport BlockIcon from \"@mui/icons-material/Block\";\r\n\r\nconst DeleteAnswerModal = (props) => {\r\n    const {\r\n        isAuthenticated,\r\n        progress,\r\n\r\n        handleCloseDeleteModal,\r\n        handleDeleteAnswer,\r\n        currentAnswer,\r\n    } = props;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            top: `57%`,\r\n            left: `50%`,\r\n            transform: `translate(-50%, -90%)`,\r\n            position: `absolute`,\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: `2px solid rgb(167, 202, 237)`,\r\n            boxShadow: theme.shadows[5],\r\n            // padding: theme.spacing(2, 4, 4),\r\n            outline: `none`,\r\n            padding: 0,\r\n            borderRadius: `8px 8px`,\r\n            \"@media(max-width: 442px)\": {\r\n                width: `95% !important`,\r\n            },\r\n        },\r\n        header: {\r\n            backgroundColor: theme.color.textColor,\r\n            color: theme.color.textColor,\r\n            padding: theme.spacing(2),\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        title: {\r\n            color: theme.color.textColor,\r\n            fontWeight: 700,\r\n\r\n            width: `100%`,\r\n        },\r\n        content: {\r\n            padding: theme.spacing(2),\r\n        },\r\n        textField: {\r\n            width: `100%`,\r\n        },\r\n        textFieldOld: {\r\n            display: `block`,\r\n            minWidth: `100%`,\r\n            // marginBottom: `50px`,\r\n        },\r\n        box: {\r\n            margin: `0 15px 10px 0`,\r\n        },\r\n        typography1: {\r\n            margin: `5px 0 0 0px`,\r\n            fontSize: `15.5px`,\r\n            color: theme.color.error,\r\n        },\r\n        progress: {\r\n            color: \"#ff6278\",\r\n        },\r\n        typography2: {\r\n            textTransform: `none`,\r\n            width: `max-content`,\r\n            color: !currentAnswer.isBanned ? `#1ba700` : `#c40606`,\r\n            fontWeight: `500`,\r\n            fontSize: `15px !important`,\r\n            margin: `5px 0 -10px 0px`,\r\n            width: `100% !important`,\r\n        },\r\n        typography3: {\r\n            textTransform: `none`,\r\n            width: `max-content`,\r\n            color: `#29b117`,\r\n            fontSize: `16px !important`,\r\n            textDecoration: `none`,\r\n            \"& > a:hover\": {\r\n                color: `#5dd0e8`,\r\n            },\r\n        },\r\n        box1: {\r\n            marginLeft: `7px`,\r\n            margin: `5px 0 -10px 0px`,\r\n        },\r\n        box2: {\r\n            marginTop: `9x`,\r\n            marginLeft: `5px`,\r\n        },\r\n        icon: {\r\n            marginTop: 5,\r\n            cursor: `pointer`,\r\n        },\r\n        notify: {\r\n            color: `#000`,\r\n            textAlign: `left`,\r\n            padding: `0`,\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const renderCheck = () => {\r\n        let jsx = null;\r\n        jsx = (\r\n            <Fragment>\r\n                {/* {errCode && (\r\n                    <Typography className={classes.typography1} component=\"div\">\r\n                        <span style={{ margin: `2px 0 0 6px` }}>Copied!</span>\r\n                    </Typography>\r\n                )} */}\r\n                {notify ? (\r\n                    <Box className={classes.box1}>\r\n                        <Typography\r\n                            component=\"div\"\r\n                            gutterBottom\r\n                            className={classes.typography2}\r\n                        >\r\n                            {!currentAnswer.isBanned ? (\r\n                                <DoneAllIcon\r\n                                    sx={{\r\n                                        marginBottom: `3px`,\r\n                                        marginRight: `5px`,\r\n                                    }}\r\n                                />\r\n                            ) : (\r\n                                <BlockIcon\r\n                                    sx={{\r\n                                        marginBottom: `3px`,\r\n                                        marginRight: `5px`,\r\n                                    }}\r\n                                />\r\n                            )}\r\n                            {notify}\r\n                        </Typography>\r\n                    </Box>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n            </Fragment>\r\n        );\r\n        return jsx;\r\n    };\r\n\r\n    const textRef = useRef(null);\r\n    const modalShareIsOpen = useSelector(\r\n        (state) => state.modalShare.modalShareIsOpen\r\n    );\r\n    const link = useSelector((state) => state.modalShare.link);\r\n    const deleteSuccess = useSelector((state) => state.forum.deleteSuccess);\r\n    const deleteAnswerModal = useSelector(\r\n        (state) => state.forum.deleteAnswerModal\r\n    );\r\n    const notify = useSelector((state) => state.forum.notify);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => {\r\n        dispatch(deleteAnswerModal.deleteAnswerModalSuccess(false));\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                <Modal open={deleteAnswerModal}>\r\n                    <div className={classes.modal}>\r\n                        <div\r\n                            style={{\r\n                                display: `flex`,\r\n\r\n                                padding: 0,\r\n                                margin: 0,\r\n                            }}\r\n                        >\r\n                            {/* <div style={{ display: `flex`, justifyContent: `space-between`, background: `#1565C0`, height: `35px`, padding: 0, margin: 0 }}>NOTE</div> */}\r\n                            <Alert\r\n                                icon={false}\r\n                                severity=\"success\"\r\n                                sx={{\r\n                                    width: `100%`,\r\n                                    display: `block`,\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        display: `flex`,\r\n                                        justifyContent: `space-between`,\r\n                                    }}\r\n                                >\r\n                                    <p\r\n                                        style={{\r\n                                            fontWeight: `700`,\r\n                                            fontSize: `17px`,\r\n                                            marginBottom: `3px`,\r\n                                        }}\r\n                                    >\r\n                                        CONFIRM!\r\n                                    </p>\r\n                                    <CancelIcon\r\n                                        className={classes.icon}\r\n                                        onClick={() => handleCloseDeleteModal()}\r\n                                    />\r\n                                </div>\r\n                            </Alert>\r\n                        </div>\r\n                        <div\r\n                            className={classes.header}\r\n                            style={{ marginTop: `7px` }}\r\n                        >\r\n                            <span className={classes.title}>\r\n                                {\r\n                                    <p className={`${classes.notify} value`}>\r\n                                        Your answer will no longer to visible to\r\n                                        others. Are you sure you want to delete\r\n                                        it?\r\n                                    </p>\r\n                                }\r\n\r\n                                {renderCheck()}\r\n                            </span>\r\n                        </div>\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexDirection=\"row-reverse\"\r\n                            mt={2}\r\n                            className={classes.box}\r\n                        >\r\n                            <Box>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={\r\n                                        isAuthenticated && !deleteSuccess\r\n                                            ? false\r\n                                            : true\r\n                                    }\r\n                                    onClick={handleDeleteAnswer}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                            </Box>\r\n\r\n                            <Box mr={1}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"error\"\r\n                                    onClick={() => handleCloseDeleteModal()}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        {/* <div className={classes.content}>{component}</div> */}\r\n                        {progress && (\r\n                            <Box sx={{ width: \"100%\" }}>\r\n                                <LinearProgress />\r\n                            </Box>\r\n                        )}\r\n                    </div>\r\n                </Modal>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    errCode: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    nameCode: state.auth.nameCode,\r\n    isChanging: state.code.isChanging,\r\n    isDeleting: state.code.isDeleting,\r\n});\r\n\r\nconst mapActionsToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(DeleteAnswerModal);\r\n","import * as React from \"react\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport cs from \"classnames\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\r\nimport ThumbDownIcon from \"@mui/icons-material/ThumbDown\";\r\nimport { Avatar, Card, CardHeader, CardMedia, IconButton } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport QuestionAnswerIcon from \"@mui/icons-material/QuestionAnswer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment-timezone\";\r\nimport { setCurrentObj, setDisplay } from \"../../actions/messenger\";\r\n\r\nconst style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: `400px`,\r\n    bgcolor: \"background.paper\",\r\n    boxShadow: 24,\r\n    p: 3,\r\n    outline: `none !important`,\r\n    borderBottom: `1px solid #e0e0e0`,\r\n    borderLeft: `1px solid #e0e0e0`,\r\n    // borderRight: `1px solid #e0e0e0`,\r\n    boxShadow: `-5px 3px 10px #e0e0e0`,\r\n    borderRadius: `5px`,\r\n    height: `520px`,\r\n    [\"@media(max-width: 767px)\"]: {\r\n        width: `95%`,\r\n        margin: `auto`,\r\n\r\n        p: 2,\r\n    },\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n    boxStatistic: {\r\n        display: `flex`,\r\n        justifyContent: `space-around`,\r\n    },\r\n    cardStatistic: {\r\n        width: `100%`,\r\n        marginBottom: `1px`,\r\n        borderRadius: `none !important`,\r\n        // borderBottom: `1px solid #888`,\r\n        // borderLeft: `1px solid #888`,\r\n    },\r\n    more: {\r\n        marginTop: `8px`,\r\n    },\r\n    iconButton: {\r\n        \"&:focus\": {\r\n            outline: `none !important`,\r\n            border: `none !important`,\r\n        },\r\n    },\r\n}));\r\nexport default function LikeAnswerStatistic({\r\n    open,\r\n    handleOpen,\r\n    handleClose,\r\n    likes,\r\n    dislikes,\r\n    viewStatus,\r\n    setViewStatus,\r\n    id,\r\n    answer,\r\n    handleOpenLoginRequire,\r\n}) {\r\n    const classes = useStyles();\r\n\r\n    const [arrDisplay, setArrDisplay] = useState(likes);\r\n    // console.log(\"Likes\", likes);\r\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n\r\n    const viewStatisticLike = () => {};\r\n    const viewStatisticDislike = () => {};\r\n\r\n    useEffect(() => {\r\n        if (viewStatus === 0) {\r\n            setArrDisplay(likes);\r\n        } else {\r\n            setArrDisplay(dislikes);\r\n        }\r\n    }, [likes, dislikes, viewStatus]);\r\n\r\n    const rend = () => {\r\n        var jsx = [];\r\n        for (var i = 0; i < 20; i++) {\r\n            jsx.push(\r\n                <React.Fragment>\r\n                    <Card\r\n                        className={cs(classes.cardStatistic)}\r\n                        key={likes.questionId}\r\n                    >\r\n                        <CardHeader\r\n                            avatar={\r\n                                <Avatar>\r\n                                    {\" \"}\r\n                                    <CardMedia\r\n                                        image={likes.picture}\r\n                                        title=\"Title\"\r\n                                        component=\"img\"\r\n                                        className={classes.media}\r\n                                    />\r\n                                </Avatar>\r\n                            }\r\n                            // title={post.author}\r\n                            title={<span>{likes.name}</span>}\r\n                            // subheader={moment(post.updatedAt).format(\r\n                            //     \"HH:MM MMM DD, YYYY\"\r\n                            // )}\r\n                            subheader={moment(likes.updatedAt)\r\n                                .tz(\"Asia/Ho_Chi_Minh\")\r\n                                .format(\"hh:m MMM DD, YYYY\")}\r\n                            // action={<IconButton>{<MoreVertIcon />}</IconButton>}\r\n                            action={\r\n                                isAuthenticated ? (\r\n                                    <IconButton\r\n                                        className={cs(classes.iconButton)}\r\n                                        // onClick={handleOpen}\r\n                                    >\r\n                                        <MoreVertIcon\r\n                                            className={cs(classes.more)}\r\n                                        />\r\n                                    </IconButton>\r\n                                ) : (\r\n                                    <IconButton\r\n                                        className={cs(classes.moreInQuestion)}\r\n                                    >\r\n                                        {\" \"}\r\n                                        <QuestionAnswerIcon\r\n                                            sx={{\r\n                                                // background: `#fff !important`,\r\n                                                color: `#8167a9 !important`,\r\n                                            }}\r\n                                        />\r\n                                    </IconButton>\r\n                                )\r\n                            }\r\n                            className={cs(classes.questionHeader)}\r\n                        />\r\n                    </Card>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n        return jsx;\r\n    };\r\n\r\n    const dp = useDispatch();\r\n\r\n    const handleOpenChat = (objId) => {\r\n        if (!isAuthenticated) {\r\n            handleOpenLoginRequire();\r\n            return;\r\n        }\r\n        dp(setCurrentObj.setCurrentObjSuccess(objId));\r\n        dp(setDisplay.setDisplaySuccess(true));\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* <Button onClick={handleOpen}>Open modal</Button> */}\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <Box sx={style}>\r\n                        <div className={cs(classes.boxStatistic)}>\r\n                            <Typography\r\n                                id=\"transition-modal-title\"\r\n                                component=\"div\"\r\n                                sx={{\r\n                                    fontFamily: `'Roboto Condensed', sans-serif`,\r\n                                    borderBottom:\r\n                                        viewStatus === 0 && `2px solid #1976D2`,\r\n                                    cursor: `pointer !important`,\r\n                                }}\r\n                                onClick={() => setViewStatus(0)}\r\n                                className={cs(classes.like)}\r\n                            >\r\n                                <IconButton\r\n                                    sx={{\r\n                                        color: viewStatus === 0 && \"#1976D2\",\r\n                                        \"&:focus\": {\r\n                                            outline: `none !important`,\r\n                                            border: `none !important`,\r\n                                        },\r\n                                    }}\r\n                                    // onClick={likeQuestion}\r\n\r\n                                    // disabled={checkLiked() ? true : false}\r\n                                >\r\n                                    <ThumbUpIcon\r\n                                        sx={{\r\n                                            color:\r\n                                                viewStatus === 0 && \"#1976D2\",\r\n                                        }}\r\n                                    />\r\n                                </IconButton>\r\n                                Like\r\n                            </Typography>\r\n                            <Typography\r\n                                id=\"transition-modal-title\"\r\n                                component=\"div\"\r\n                                sx={{\r\n                                    fontFamily: `'Roboto Condensed', sans-serif`,\r\n\r\n                                    borderBottom:\r\n                                        viewStatus === 1 && `2px solid #1976D2`,\r\n                                    cursor: `pointer !important`,\r\n                                }}\r\n                                onClick={() => setViewStatus(1)}\r\n                            >\r\n                                <IconButton\r\n                                    sx={{\r\n                                        color: viewStatus === 1 && \"#1976D2\",\r\n                                        \"&:focus\": {\r\n                                            outline: `none !important`,\r\n                                            border: `none !important`,\r\n                                        },\r\n                                    }}\r\n                                >\r\n                                    <ThumbDownIcon\r\n                                        sx={{\r\n                                            color:\r\n                                                viewStatus === 1 && \"#1976D2\",\r\n                                        }}\r\n                                    />\r\n                                </IconButton>\r\n                                Dislike\r\n                            </Typography>\r\n                        </div>\r\n                        <Typography\r\n                            sx={{\r\n                                mt: 1,\r\n                                textAlign: `left !important`,\r\n                                height: `90%`,\r\n\r\n                                overflowY: `auto`,\r\n                            }}\r\n                            component=\"div\"\r\n                        >\r\n                            {arrDisplay.length > 0 &&\r\n                                arrDisplay.map(\r\n                                    (people) =>\r\n                                        people.answerId === answer?._id &&\r\n                                        people.questionId === id && (\r\n                                            <React.Fragment key={people._id}>\r\n                                                <Card\r\n                                                    className={cs(\r\n                                                        classes.cardStatistic\r\n                                                    )}\r\n                                                >\r\n                                                    <CardHeader\r\n                                                        avatar={\r\n                                                            <Avatar>\r\n                                                                {\" \"}\r\n                                                                <CardMedia\r\n                                                                    image={\r\n                                                                        people.picture\r\n                                                                    }\r\n                                                                    title=\"Title\"\r\n                                                                    component=\"img\"\r\n                                                                    className={\r\n                                                                        classes.media\r\n                                                                    }\r\n                                                                />\r\n                                                            </Avatar>\r\n                                                        }\r\n                                                        // title={post.author}\r\n                                                        title={\r\n                                                            <span>\r\n                                                                {people.name}\r\n                                                            </span>\r\n                                                        }\r\n                                                        // subheader={moment(post.updatedAt).format(\r\n                                                        //     \"HH:MM MMM DD, YYYY\"\r\n                                                        // )}\r\n                                                        subheader={moment(\r\n                                                            people.updatedAt\r\n                                                        )\r\n                                                            .tz(\r\n                                                                \"Asia/Ho_Chi_Minh\"\r\n                                                            )\r\n                                                            .format(\r\n                                                                \"hh:m MMM DD, YYYY\"\r\n                                                            )}\r\n                                                        // action={<IconButton>{<MoreVertIcon />}</IconButton>}\r\n                                                        action={\r\n                                                            isAuthenticated && (\r\n                                                                // (\r\n                                                                //     <IconButton\r\n                                                                //         className={cs(\r\n                                                                //             classes.iconButton\r\n                                                                //         )}\r\n                                                                //         // onClick={handleOpen}\r\n                                                                //     >\r\n                                                                //         <MoreVertIcon\r\n                                                                //             className={cs(\r\n                                                                //                 classes.more\r\n                                                                //             )}\r\n                                                                //         />\r\n                                                                //     </IconButton>\r\n                                                                // ) :\r\n                                                                <IconButton\r\n                                                                    className={cs(\r\n                                                                        classes.moreInQuestion\r\n                                                                    )}\r\n                                                                    onClick={() =>\r\n                                                                        handleOpenChat(\r\n                                                                            people.objId\r\n                                                                        )\r\n                                                                    }\r\n                                                                >\r\n                                                                    {\" \"}\r\n                                                                    <QuestionAnswerIcon\r\n                                                                        sx={{\r\n                                                                            // background: `#fff !important`,\r\n                                                                            color: `#555 !important`,\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </IconButton>\r\n                                                            )\r\n                                                        }\r\n                                                        className={cs(\r\n                                                            classes.questionHeader\r\n                                                        )}\r\n                                                    />\r\n                                                </Card>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                )}\r\n                            {/* {rend()} */}\r\n\r\n                            {/* <Link to=\"/login\">\r\n                                <Button\r\n                                    sx={{\r\n                                        fontSize: `17px`,\r\n                                    }}\r\n                                >\r\n                                    Login\r\n                                </Button>\r\n                            </Link> */}\r\n                        </Typography>\r\n                    </Box>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React, { \r\n    // useState, useEffect,\r\n     Fragment, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DoneAllIcon from \"@mui/icons-material/DoneAll\";\r\nimport {\r\n    Modal,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    LinearProgress,\r\n    Alert,\r\n    Tooltip,\r\n    SliderValueLabel,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport { openModalShare } from \"../../actions/modalShareCode\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport { ban, unban } from \"../../actions/forum\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        top: `57%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -90%)`,\r\n        position: `absolute`,\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: `2px solid rgb(167, 202, 237)`,\r\n        boxShadow: theme.shadows[5],\r\n        // padding: theme.spacing(2, 4, 4),\r\n        outline: `none`,\r\n        padding: 0,\r\n        borderRadius: `8px 8px`,\r\n        \"@media(max-width: 442px)\": {\r\n            width: `95% !important`,\r\n        },\r\n    },\r\n    header: {\r\n        backgroundColor: theme.color.textColor,\r\n        color: theme.color.textColor,\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    title: {\r\n        color: theme.color.textColor,\r\n        fontWeight: 700,\r\n\r\n        width: `100%`,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    textField: {\r\n        width: `100%`,\r\n    },\r\n    textFieldOld: {\r\n        display: `block`,\r\n        minWidth: `100%`,\r\n        // marginBottom: `50px`,\r\n    },\r\n    box: {\r\n        margin: `0 15px 10px 0`,\r\n    },\r\n    typography1: {\r\n        margin: `5px 0 0 0px`,\r\n        fontSize: `15.5px`,\r\n        color: theme.color.error,\r\n    },\r\n    progress: {\r\n        color: \"#ff6278\",\r\n    },\r\n    typography2: {\r\n        textTransform: `none`,\r\n        width: `max-content`,\r\n        color: `#1ba700`,\r\n        fontWeight: `500`,\r\n        fontSize: `15px !important`,\r\n        margin: `5px 0 -10px 0px`,\r\n    },\r\n    typography3: {\r\n        textTransform: `none`,\r\n        width: `max-content`,\r\n        color: `#29b117`,\r\n        fontSize: `16px !important`,\r\n        textDecoration: `none`,\r\n        \"& > a:hover\": {\r\n            color: `#5dd0e8`,\r\n        },\r\n    },\r\n    box1: {\r\n        marginLeft: `7px`,\r\n        margin: `5px 0 -10px 0px`,\r\n    },\r\n    box2: {\r\n        marginTop: `9x`,\r\n        marginLeft: `5px`,\r\n    },\r\n    icon: {\r\n        marginTop: 5,\r\n        cursor: `pointer`,\r\n    },\r\n    notify: {\r\n        color: `#000`,\r\n        textAlign: `left`,\r\n        padding: `0`,\r\n    },\r\n}));\r\n\r\nconst BanAnswerModal = (props) => {\r\n    const classes = useStyles();\r\n    const {\r\n        isAuthenticated,\r\n        progress,\r\n        banModal,\r\n        handleOpenBanModal,\r\n        handleCloseBanModal,\r\n        currentAnswer,\r\n    } = props;\r\n\r\n    const renderCheck = () => {\r\n        let jsx = null;\r\n        jsx = (\r\n            <Fragment>\r\n                {/* {errCode && (\r\n                    <Typography className={classes.typography1} component=\"div\">\r\n                        <span style={{ margin: `2px 0 0 6px` }}>Copied!</span>\r\n                    </Typography>\r\n                )} */}\r\n                {notify ? (\r\n                    <Box className={classes.box1}>\r\n                        <Typography\r\n                            component=\"div\"\r\n                            gutterBottom\r\n                            className={classes.typography2}\r\n                        >\r\n                            <DoneAllIcon\r\n                                sx={{ marginBottom: `3px`, marginRight: `5px` }}\r\n                            />\r\n                            {notify}\r\n                        </Typography>\r\n                    </Box>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n            </Fragment>\r\n        );\r\n        return jsx;\r\n    };\r\n\r\n    const textRef = useRef(null);\r\n    const modalShareIsOpen = useSelector(\r\n        (state) => state.modalShare.modalShareIsOpen\r\n    );\r\n    const link = useSelector((state) => state.modalShare.link);\r\n    const deleteSuccess = useSelector((state) => state.forum.deleteSuccess);\r\n    const notify = useSelector((state) => state.forum.notify);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleBan = () => {\r\n        // console.log(\"currentAnswer\", currentAnswer);\r\n        dispatch(ban.banRequest(currentAnswer));\r\n    };\r\n\r\n    const handleUnban = () => {\r\n        dispatch(unban.unbanRequest(currentAnswer));\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                <Modal open={banModal}>\r\n                    <div className={classes.modal}>\r\n                        <div\r\n                            style={{\r\n                                display: `flex`,\r\n\r\n                                padding: 0,\r\n                                margin: 0,\r\n                            }}\r\n                        >\r\n                            {/* <div style={{ display: `flex`, justifyContent: `space-between`, background: `#1565C0`, height: `35px`, padding: 0, margin: 0 }}>NOTE</div> */}\r\n                            <Alert\r\n                                icon={false}\r\n                                severity=\"success\"\r\n                                sx={{\r\n                                    width: `100%`,\r\n                                    display: `block`,\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        display: `flex`,\r\n                                        justifyContent: `space-between`,\r\n                                    }}\r\n                                >\r\n                                    <p\r\n                                        style={{\r\n                                            fontWeight: `700`,\r\n                                            fontSize: `17px`,\r\n                                            marginBottom: `3px`,\r\n                                        }}\r\n                                    >\r\n                                        CONFIRM!\r\n                                    </p>\r\n                                    <CancelIcon\r\n                                        className={classes.icon}\r\n                                        onClick={() => handleCloseBanModal()}\r\n                                    />\r\n                                </div>\r\n                            </Alert>\r\n                        </div>\r\n                        <div\r\n                            className={classes.header}\r\n                            style={{ marginTop: `7px` }}\r\n                        >\r\n                            <span className={classes.title}>\r\n                                {\r\n                                    <p className={`${classes.notify} value`}>\r\n                                        {!currentAnswer.isBanned\r\n                                            ? \"This person will be banned and will not be able to post or reply to topics \"\r\n                                            : \"The ban will no longer be in effect and this user can use forum activities\"}\r\n                                    </p>\r\n                                }\r\n\r\n                                {renderCheck()}\r\n                            </span>\r\n                        </div>\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexDirection=\"row-reverse\"\r\n                            mt={2}\r\n                            className={classes.box}\r\n                        >\r\n                            <Box>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={\r\n                                        isAuthenticated && !deleteSuccess\r\n                                            ? false\r\n                                            : true\r\n                                    }\r\n                                    onClick={\r\n                                        !currentAnswer.isBanned\r\n                                            ? handleBan\r\n                                            : handleUnban\r\n                                    }\r\n                                >\r\n                                    {!currentAnswer.isBanned ? \"BAN\" : \"UNBAN\"}\r\n                                </Button>\r\n                            </Box>\r\n\r\n                            <Box mr={1}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"error\"\r\n                                    onClick={() => handleCloseBanModal()}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        {/* <div className={classes.content}>{component}</div> */}\r\n                        {progress && (\r\n                            <Box sx={{ width: \"100%\" }}>\r\n                                <LinearProgress />\r\n                            </Box>\r\n                        )}\r\n                    </div>\r\n                </Modal>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    errCode: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    nameCode: state.auth.nameCode,\r\n    isChanging: state.code.isChanging,\r\n    isDeleting: state.code.isDeleting,\r\n});\r\n\r\nconst mapActionsToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(BanAnswerModal);\r\n","import { makeStyles } from \"@mui/styles\";\r\nimport React, { Fragment, useCallback, useState } from \"react\";\r\nimport cs from \"classnames\";\r\nimport {\r\n    Alert,\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    CardMedia,\r\n    // CssBaseline,\r\n    IconButton,\r\n    Menu,\r\n    MenuItem,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteSweepIcon from \"@mui/icons-material/DeleteSweep\";\r\n// import AlertDialogSlide from \"../../Helpers/AlertDialogSlide\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\n// import FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport \"./styles.css\";\r\nimport ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\r\nimport ThumbDownIcon from \"@mui/icons-material/ThumbDown\";\r\nimport Text from \"./Text\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport parse from \"html-react-parser\";\r\nimport moment from \"moment-timezone\";\r\nimport SentimentVerySatisfiedIcon from \"@mui/icons-material/SentimentVerySatisfied\";\r\nimport BlockIcon from \"@mui/icons-material/Block\";\r\nimport {\r\n    createAnswer,\r\n    deleteAnswer,\r\n    dislikeAnswer,\r\n    likeAnswer,\r\n    openModalDeleteAnswer,\r\n    setBanAnswerModal,\r\n    setDeleteSuccess,\r\n    setNotify,\r\n    updateAnswer,\r\n} from \"../../actions/forum\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport QuestionAnswerIcon from \"@mui/icons-material/QuestionAnswer\";\r\nimport DeleteAnswerModal from \"./DeleteAnswerModal\";\r\nimport LoginRequire from \"./LoginRequire\";\r\nimport LikeAnswerStatistic from \"./LikeAnswerStatistic\";\r\nimport { useEffect } from \"react\";\r\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { setCurrentObj, setDisplay } from \"../../actions/messenger\";\r\nimport BanAnswerModal from \"./BanAnswerModal\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    questionContainer: {\r\n        background: `#fff`,\r\n    },\r\n    mainContainer: {\r\n        width: `80%`,\r\n        margin: `auto`,\r\n        minWidth: `500px !important`,\r\n        marginTop: `10% !important`,\r\n    },\r\n    userInfo: {\r\n        display: `flex`,\r\n    },\r\n    cardQuestion: {\r\n        marginBottom: `1.5%`,\r\n    },\r\n    media: {\r\n        height: `auto !important`,\r\n        width: `100%`,\r\n    },\r\n    questionHeader: {\r\n        borderBottom: `1px solid rgba(26, 54, 126, 0.2)`,\r\n        // background: `#98DBC6`,\r\n        \"&:hover\": {\r\n            background: `rgba(224, 224, 224, 40%) !important`,\r\n        },\r\n    },\r\n    cardActions: {\r\n        backgroundColor: `rgba(0,0,0,.03)`,\r\n    },\r\n    questionTitle: {\r\n        fontSize: \"18px\",\r\n        fontWeight: 700,\r\n        margin: \"0\",\r\n        padding: \"0\",\r\n        color: \"#000\",\r\n        boxSizing: `border-box`,\r\n    },\r\n    questionTitleCollapse: {\r\n        display: `block`,\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        maxWidth: \"70ch\",\r\n    },\r\n    textEdit: {\r\n        fontSize: `none`,\r\n        textAlign: `none !important`,\r\n    },\r\n    moreInQuestion: {\r\n        marginTop: `12px`,\r\n    },\r\n    answerContent: {\r\n        \"& h2\": {\r\n            fontSize: `22px !important`,\r\n            fontWeight: `bold !important`,\r\n            padding: `0px 0px !important`,\r\n            margin: `0 !important`,\r\n            paddingTop: `5px !important`,\r\n            textAlign: `left`,\r\n        },\r\n        \"& h3\": {\r\n            fontSize: `18px !important`,\r\n            fontWeight: `bold !important`,\r\n            padding: `0px 0px !important`,\r\n            margin: `0 !important`,\r\n            paddingTop: `5px !important`,\r\n            textAlign: `left`,\r\n        },\r\n        \"& h4\": {\r\n            fontSize: `16px !important`,\r\n            fontWeight: `bold !important`,\r\n            margin: `0 !important`,\r\n            padding: `0px 0px !important`,\r\n            paddingTop: `5px !important`,\r\n            textAlign: `left`,\r\n        },\r\n        \"& p\": {\r\n            textAlign: \"left\",\r\n            margin: 0,\r\n            padding: 0,\r\n        },\r\n    },\r\n    navigateBox: {\r\n        width: `100%`,\r\n        textAlign: `center`,\r\n        [\"@media(max-width: 380px)\"]: {\r\n            fontSize: `12px !important`,\r\n            whiteSpace: `nowrap`,\r\n        },\r\n    },\r\n    linkNavigate: {\r\n        width: `100%`,\r\n        padding: 7,\r\n        fontSize: `17px`,\r\n        margin: 0,\r\n    },\r\n    spanNavigate: {\r\n        [\"@media(max-width: 380px)\"]: {\r\n            fontSize: `15px !important`,\r\n        },\r\n    },\r\n}));\r\n\r\nconst Answer = (props) => {\r\n    const [text, setText] = useState(\"\");\r\n    const [currentAnswer, setCurrentAnswer] = useState({});\r\n    const [isUpdating, setIsUpdating] = useState(null);\r\n\r\n    const {\r\n        answers,\r\n        id,\r\n        ChangeToSlug,\r\n        // handleOpenBanModal,\r\n        // handleCloseBanModal,\r\n    } = props;\r\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n    const isAdmin = useSelector((state) => state.auth.account.isAdmin);\r\n\r\n    const likes = useSelector((state) => state.forum.likes);\r\n    const dislikes = useSelector((state) => state.forum.dislikes);\r\n    const question = useSelector((state) => state.forum.question);\r\n    const banAnswerModal = useSelector((state) => state.forum.banAnswerModal);\r\n\r\n    const error = useSelector((state) => state.forum.error);\r\n    const notify = useSelector((state) => state.forum.notify);\r\n    const isCircleProgress = useSelector(\r\n        (state) => state.forum.isCircleProgress\r\n    );\r\n    const objId = useSelector((state) => state.auth.account.objId);\r\n    const classes = useStyles();\r\n    const dp = useDispatch();\r\n    // console.log(\"cardAnswer\", answers);\r\n\r\n    const [answerArray, setAnswerArray] = useState(answers);\r\n    const { match } = props;\r\n    const page = Number(match.params.page);\r\n\r\n    let perPage = 3;\r\n    let start = perPage * (page - 1);\r\n    let end = page * perPage;\r\n    // console.log(\"page answers\", page);\r\n\r\n    useEffect(() => {\r\n        setAnswerArray(answers.slice(start, end));\r\n    }, [match, page, answers, question, start, end]);\r\n\r\n    const navigate = () => {\r\n        let jsx = [];\r\n        if (page === 1) {\r\n            for (var i = page; i <= page + 2; i++) {\r\n                jsx.push(\r\n                    <Button\r\n                        key={i}\r\n                        color=\"secondary\"\r\n                        disabled={(i - 1) * perPage >= answers.length}\r\n                        sx={{\r\n                            padding: 0,\r\n                            display:\r\n                                (i - 1) * perPage >= answers.length && `none`,\r\n                        }}\r\n                    >\r\n                        <Link\r\n                            to={`/questions/${ChangeToSlug(question.title)}/${\r\n                                question._id\r\n                            }/${i}`}\r\n                            style={{\r\n                                width: `100%`,\r\n                                padding: 7,\r\n                                fontSize: `17px`,\r\n                                margin: 0,\r\n                            }}\r\n                        >\r\n                            <span\r\n                                className={cs(classes.spanNavigate)}\r\n                                style={{\r\n                                    width: `100%`,\r\n                                    display: `block`,\r\n                                    color: page === i && `#FFFFFF`,\r\n                                    background: page === i && `#1976D2`,\r\n                                }}\r\n                            >\r\n                                {i}\r\n                            </span>\r\n                        </Link>\r\n                    </Button>\r\n                );\r\n            }\r\n            return jsx;\r\n        }\r\n        for (let i = page - 1; i <= page + 1; i++) {\r\n            jsx.push(\r\n                <Button\r\n                    key={i}\r\n                    color=\"secondary\"\r\n                    disabled={(i - 1) * perPage >= answers.length}\r\n                    sx={{\r\n                        padding: 0,\r\n                        display: (i - 1) * perPage >= answers.length && `none`,\r\n                    }}\r\n                >\r\n                    <Link\r\n                        to={`/questions/${ChangeToSlug(question.title)}/${\r\n                            question._id\r\n                        }/${i}`}\r\n                        style={{\r\n                            width: `100%`,\r\n                            padding: 7,\r\n                            fontSize: `17px`,\r\n                            margin: 0,\r\n                        }}\r\n                    >\r\n                        <span\r\n                            className={cs(classes.spanNavigate)}\r\n                            style={{\r\n                                width: `100%`,\r\n                                display: `block`,\r\n                                background: page === i && `#1976D2`,\r\n                                color: page === i && `#FFFFFF`,\r\n                            }}\r\n                        >\r\n                            {i}\r\n                        </span>\r\n                    </Link>\r\n                </Button>\r\n            );\r\n        }\r\n        return jsx;\r\n    };\r\n\r\n    const [anchorEL, setAnchorEL] = useState(null);\r\n    const handleOpen = (e, answer) => {\r\n        setAnchorEL(e.currentTarget);\r\n        setCurrentAnswer(answer);\r\n    };\r\n\r\n    const handleClose = useCallback(() => {\r\n        setAnchorEL(null);\r\n    }, []);\r\n\r\n    const handleCreateAnswer = () => {\r\n        dp(createAnswer.createAnswerRequest({ text, id }));\r\n    };\r\n\r\n    const handleUpdateAnswer = (answer) => {\r\n        dp(setNotify.setNotifySuccess(\"\"));\r\n        window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            // left: 100,\r\n            behavior: \"smooth\",\r\n        });\r\n        setText(currentAnswer.content);\r\n        setIsUpdating(true);\r\n        // console.log(\"answer.content\", answer._id);\r\n        handleClose();\r\n    };\r\n\r\n    const handleCancelUpdate = () => {\r\n        setIsUpdating(false);\r\n        setText(\"\");\r\n        // setCurrentAnswer(null);\r\n    };\r\n\r\n    const handleUpdateRequest = () => {\r\n        dp(updateAnswer.updateAnswerRequest({ text, currentAnswer }));\r\n    };\r\n\r\n    const handleDeleteAnswer = () => {\r\n        dp(deleteAnswer.deleteAnswerRequest({ currentAnswer }));\r\n    };\r\n\r\n    const handleOpenDeleteModal = () => {\r\n        handleClose();\r\n        dp(setNotify.setNotifySuccess(\"\"));\r\n        dp(openModalDeleteAnswer.openModalDeleteAnswerSuccess(true));\r\n        setIsUpdating(false);\r\n        setText(\"\");\r\n    };\r\n\r\n    const handleCloseDeleteModal = () => {\r\n        dp(setDeleteSuccess.setDeleteSuccessSuccess(false));\r\n        dp(openModalDeleteAnswer.openModalDeleteAnswerSuccess(false));\r\n        dp(setNotify.setNotifySuccess(\"\"));\r\n    };\r\n\r\n    const checkLiked = (answer) => {\r\n        let check;\r\n        check = likes.find(\r\n            (like) =>\r\n                like.objId === objId &&\r\n                like.questionId === answer.questionId &&\r\n                like.answerId === answer._id\r\n        );\r\n        // console.log(\"CHECKliked\", check);\r\n        return check;\r\n    };\r\n\r\n    const checkDisliked = (answer) => {\r\n        let check;\r\n        check = dislikes.find(\r\n            (dislike) =>\r\n                dislike.objId === objId &&\r\n                dislike.questionId === answer.questionId &&\r\n                dislike.answerId === answer._id\r\n        );\r\n        return check;\r\n    };\r\n\r\n    const handleLikeAnswer = (answer) => {\r\n        if (!isAuthenticated) {\r\n            handleOpenLoginRequire();\r\n        } else {\r\n            dp(\r\n                likeAnswer.likeAnswerRequest({\r\n                    questionId: question._id,\r\n                    objId,\r\n                    answerId: answer._id,\r\n                })\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleDislikeAnswer = (answer) => {\r\n        if (!isAuthenticated) {\r\n            handleOpenLoginRequire();\r\n        } else {\r\n            dp(\r\n                dislikeAnswer.dislikeAnswerRequest({\r\n                    questionId: question._id,\r\n                    objId,\r\n                    answerId: answer._id,\r\n                })\r\n            );\r\n        }\r\n    };\r\n\r\n    const [openLoginRequire, setOpenLoginRequire] = React.useState(false);\r\n    const handleOpenLoginRequire = () => setOpenLoginRequire(true);\r\n    const handleCloseLoginRequire = () => setOpenLoginRequire(false);\r\n\r\n    const [viewStatus, setViewStatus] = React.useState(0);\r\n    const [openLikeQuestionStatistic, setOpenLikeQuestionStatistic] =\r\n        React.useState(false);\r\n\r\n    // const [checkCondition, setCheckCondition] = React.useState(\"\");\r\n\r\n    const handleOpenLikeQuestionStatistic = (x, answer) => {\r\n        setViewStatus(x);\r\n        setCurrentAnswer(answer);\r\n        setOpenLikeQuestionStatistic(true);\r\n    };\r\n    const handleCloseLikeQuestionStatistic = () => {\r\n        setOpenLikeQuestionStatistic(false);\r\n    };\r\n\r\n    const handleOpenChat = (objId) => {\r\n        if (!isAuthenticated) {\r\n            handleOpenLoginRequire();\r\n            return;\r\n        }\r\n        dp(setCurrentObj.setCurrentObjSuccess(objId));\r\n        dp(setDisplay.setDisplaySuccess(true));\r\n    };\r\n\r\n    const handleOpenBanAnswerModal = () => {\r\n        handleClose();\r\n        dp(setNotify.setNotifySuccess(\"\"));\r\n        dp(setBanAnswerModal.setBanAnswerModalSuccess(true));\r\n    };\r\n    const handleCloseBanAnswerModal = () => {\r\n        dp(setBanAnswerModal.setBanAnswerModalSuccess(false));\r\n        dp(setNotify.setNotifySuccess(\"\"));\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <LoginRequire\r\n                open={openLoginRequire}\r\n                handleOpen={handleOpenLoginRequire}\r\n                handleClose={handleCloseLoginRequire}\r\n            />\r\n            <LikeAnswerStatistic\r\n                id={id}\r\n                viewStatus={viewStatus}\r\n                setViewStatus={setViewStatus}\r\n                likes={likes}\r\n                dislikes={dislikes}\r\n                open={openLikeQuestionStatistic}\r\n                handleOpen={handleOpenLikeQuestionStatistic}\r\n                handleClose={handleCloseLikeQuestionStatistic}\r\n                answer={currentAnswer}\r\n                handleOpenLoginRequire={handleOpenLoginRequire}\r\n            />\r\n            <DeleteAnswerModal\r\n                handleCloseDeleteModal={handleCloseDeleteModal}\r\n                handleDeleteAnswer={handleDeleteAnswer}\r\n                currentAnswer={currentAnswer}\r\n            />\r\n            <BanAnswerModal\r\n                banModal={banAnswerModal}\r\n                handleOpenBanModal={handleOpenBanAnswerModal}\r\n                handleCloseBanModal={handleCloseBanAnswerModal}\r\n                currentAnswer={currentAnswer}\r\n            />\r\n            {answers.length > 0 &&\r\n                // answers.map((answer) => (\r\n                answerArray.map((answer) => (\r\n                    <Card className={classes.cardQuestion} key={answer._id}>\r\n                        <CardHeader\r\n                            avatar={\r\n                                <Avatar>\r\n                                    {\" \"}\r\n                                    <CardMedia\r\n                                        image={answer.user.picture}\r\n                                        title=\"Title\"\r\n                                        component=\"img\"\r\n                                        className={classes.media}\r\n                                    />\r\n                                </Avatar>\r\n                            }\r\n                            // title={post.author}\r\n                            title={\r\n                                <span\r\n                                    style={{ cursor: `pointer` }}\r\n                                    onClick={() => handleOpenChat(answer.objId)}\r\n                                >\r\n                                    {answer.user.name}{\" \"}\r\n                                    {answer.isBanned ? (\r\n                                        <Typography\r\n                                            component={\"span\"}\r\n                                            variant={\"body2\"}\r\n                                            sx={{\r\n                                                background: `red !important`,\r\n                                                color: `#FFFFFF !important`,\r\n                                                padding: `3px 5px !important`,\r\n                                                fontWeight: `500 !important`,\r\n                                            }}\r\n                                        >\r\n                                            BANNED\r\n                                        </Typography>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </span>\r\n                            }\r\n                            subheader={`Answer at ${moment(answer.createdAt)\r\n                                .tz(\"Asia/Ho_Chi_Minh\")\r\n                                .format(\"hh:m MMM DD, YYYY\")}`}\r\n                            // subheader={\"24 Dec, 2021\"}\r\n                            // action={<IconButton>{<MoreVertIcon />}</IconButton>}\r\n                            action={\r\n                                (answer.user.objId === objId &&\r\n                                    isAuthenticated) ||\r\n                                (isAdmin && isAuthenticated) ? (\r\n                                    <IconButton\r\n                                        className={cs(\r\n                                            \"btn\",\r\n                                            classes.moreInQuestion\r\n                                        )}\r\n                                        onClick={(e) => handleOpen(e, answer)}\r\n                                    >\r\n                                        <MoreVertIcon />\r\n                                    </IconButton>\r\n                                ) : (\r\n                                    <IconButton\r\n                                        className={cs(\r\n                                            \"btn\",\r\n                                            classes.moreInQuestion\r\n                                        )}\r\n                                        onClick={() => {\r\n                                            window.scrollTo({\r\n                                                top: document.documentElement\r\n                                                    .scrollHeight,\r\n                                                // left: 100,\r\n                                                behavior: \"smooth\",\r\n                                            });\r\n                                            setIsUpdating(null);\r\n                                        }}\r\n                                    >\r\n                                        {\" \"}\r\n                                        <QuestionAnswerIcon\r\n                                            sx={{\r\n                                                // background: `#fff !important`,\r\n                                                color: `#8167a9 !important`,\r\n                                            }}\r\n                                        />\r\n                                    </IconButton>\r\n                                )\r\n                            }\r\n                            className={cs(classes.questionHeader)}\r\n                        />\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEL}\r\n                            open={Boolean(anchorEL)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            {/* <MenuItem>\r\n                                <FavoriteIcon\r\n                                    sx={{ marginRight: 1, marginTop: 0.7 }}\r\n                                />{\" \"}\r\n                                <Button>\r\n                                    Hello Đan Phượng của anh...${\"<3\"}{\" \"}\r\n                                </Button>\r\n                            </MenuItem> */}\r\n                            <MenuItem onClick={handleUpdateAnswer}>\r\n                                <span>\r\n                                    <EditIcon\r\n                                        fontSize=\"small\"\r\n                                        sx={{ marginRight: 1 }}\r\n                                    />\r\n                                </span>\r\n                                <Button>Update</Button>\r\n                            </MenuItem>\r\n                            <MenuItem onClick={handleOpenDeleteModal}>\r\n                                {\" \"}\r\n                                <span>\r\n                                    <DeleteSweepIcon\r\n                                        fontSize=\"small\"\r\n                                        sx={{\r\n                                            marginRight: 1,\r\n                                            marginTop: `-4px`,\r\n                                        }}\r\n                                    />\r\n                                </span>\r\n                                <Button>Delete</Button>\r\n                            </MenuItem>\r\n                            {isAdmin && (\r\n                                <MenuItem\r\n                                    onClick={handleOpenBanAnswerModal}\r\n                                    disabled={\r\n                                        currentAnswer.isBanned ? false : true\r\n                                    }\r\n                                >\r\n                                    <span>\r\n                                        <SentimentVerySatisfiedIcon\r\n                                            fontSize=\"small\"\r\n                                            sx={{\r\n                                                marginRight: 1,\r\n                                                marginTop: `-1px`,\r\n                                            }}\r\n                                        />\r\n                                    </span>\r\n                                    <Button>UNBAN</Button>\r\n                                </MenuItem>\r\n                            )}\r\n                            {isAdmin && (\r\n                                <MenuItem\r\n                                    onClick={handleOpenBanAnswerModal}\r\n                                    disabled={\r\n                                        !currentAnswer.isBanned ? false : true\r\n                                    }\r\n                                >\r\n                                    <span>\r\n                                        <BlockIcon\r\n                                            fontSize=\"small\"\r\n                                            sx={{\r\n                                                marginRight: 1,\r\n                                                marginTop: `-4px`,\r\n                                            }}\r\n                                        />\r\n                                    </span>\r\n                                    <Button>BAN</Button>\r\n                                </MenuItem>\r\n                            )}\r\n                        </Menu>\r\n\r\n                        <CardContent>\r\n                            <Typography\r\n                                variant=\"p\"\r\n                                color=\"textPrimary\"\r\n                                className={cs(classes.answerContent)}\r\n                            >\r\n                                {parse(answer.content)}\r\n                            </Typography>\r\n                            {/* <Typography\r\n                            variant=\"body2\"\r\n                            component=\"p\"\r\n                            color=\"textSecondary\"\r\n                        >\r\n                            ABC\r\n                        </Typography> */}\r\n                        </CardContent>\r\n                        <CardActions className={cs(classes.cardActions)}>\r\n                            <Typography\r\n                                component=\"span\"\r\n                                color=\"textSecondary\"\r\n                                sx={{\r\n                                    marginLeft: `5px`,\r\n                                    cursor: `pointer`,\r\n                                    \"&:hover\": {\r\n                                        color: `#1976D2`,\r\n                                        borderBottom: `1px solid #1976D2`,\r\n                                        fontSize: `20px`,\r\n                                        transition: `all .5s`,\r\n                                    },\r\n                                }}\r\n                                onClick={() =>\r\n                                    handleOpenLikeQuestionStatistic(0, answer)\r\n                                }\r\n                            >\r\n                                {answer.likes}\r\n                            </Typography>\r\n                            <IconButton\r\n                                sx={{ marginLeft: `5px` }}\r\n                                onClick={() => handleLikeAnswer(answer)}\r\n                            >\r\n                                <ThumbUpIcon\r\n                                    sx={{\r\n                                        color: checkLiked(answer)\r\n                                            ? \"#1976D2\"\r\n                                            : \"unset !important\",\r\n                                    }}\r\n                                />\r\n                            </IconButton>\r\n                            <Typography\r\n                                component=\"span\"\r\n                                color=\"textSecondary\"\r\n                                onClick={() =>\r\n                                    handleOpenLikeQuestionStatistic(1, answer)\r\n                                }\r\n                                sx={{\r\n                                    marginLeft: `5px`,\r\n                                    cursor: `pointer`,\r\n                                    \"&:hover\": {\r\n                                        color: `#1976D2`,\r\n                                        borderBottom: `1px solid #1976D2`,\r\n                                        fontSize: `20px`,\r\n                                        transition: `all .5s`,\r\n                                    },\r\n                                }}\r\n                            >\r\n                                {answer.dislikes}\r\n                            </Typography>\r\n                            <IconButton\r\n                                onClick={() => handleDislikeAnswer(answer)}\r\n                            >\r\n                                <ThumbDownIcon\r\n                                    sx={{\r\n                                        color: checkDisliked(answer)\r\n                                            ? \"#1976D2\"\r\n                                            : \"unset !important\",\r\n                                    }}\r\n                                />\r\n                            </IconButton>\r\n                        </CardActions>\r\n                    </Card>\r\n                ))}\r\n\r\n            {answers.length > perPage && (\r\n                <div className={cs(classes.navigateBox)}>\r\n                    <Button\r\n                        disabled={start <= 0}\r\n                        color=\"secondary\"\r\n                        sx={{\r\n                            padding: 0,\r\n                            [\"@media(max-width: 380px)\"]: {\r\n                                display: `none`,\r\n                            },\r\n                        }}\r\n                    >\r\n                        <Link\r\n                            to={`/questions/${ChangeToSlug(question.title)}/${\r\n                                question._id\r\n                            }/${page - 1}`}\r\n                            style={{\r\n                                width: `100%`,\r\n                                display: `block`,\r\n                                padding: 5,\r\n                                margin: 0,\r\n                            }}\r\n                        >\r\n                            <ArrowBackIosNewIcon\r\n                                sx={{\r\n                                    width: `100%`,\r\n                                    display: `block`,\r\n                                }}\r\n                            />\r\n                        </Link>\r\n                    </Button>\r\n                    {navigate()}\r\n\r\n                    <Button\r\n                        color=\"secondary\"\r\n                        disabled={end >= answers.length}\r\n                        sx={{\r\n                            padding: 0,\r\n                            [\"@media(max-width: 380px)\"]: {\r\n                                display: `none`,\r\n                            },\r\n                        }}\r\n                    >\r\n                        <Link\r\n                            to={`/questions/${ChangeToSlug(question.title)}/${\r\n                                question._id\r\n                            }/${page + 1}`}\r\n                            style={{\r\n                                width: `100%`,\r\n                                display: `block`,\r\n                                padding: 5,\r\n                                margin: 0,\r\n                            }}\r\n                        >\r\n                            <ArrowForwardIosIcon\r\n                                sx={{\r\n                                    width: `100%`,\r\n                                    display: `block`,\r\n                                }}\r\n                            />\r\n                        </Link>\r\n                    </Button>\r\n                </div>\r\n            )}\r\n\r\n            {isAuthenticated ? (\r\n                <Fragment>\r\n                    <Text\r\n                        title={\"Your answer\"}\r\n                        text={text}\r\n                        setText={setText}\r\n                        currentAnswer={currentAnswer}\r\n                        setCurrentAnswer={setCurrentAnswer}\r\n                        handleCancelUpdate={handleCancelUpdate}\r\n                    />\r\n\r\n                    {isCircleProgress ? (\r\n                        <Box\r\n                            sx={{\r\n                                textAlign: `center`,\r\n                            }}\r\n                        >\r\n                            <CircularProgress />\r\n                        </Box>\r\n                    ) : (\r\n                        notify && (\r\n                            <Alert\r\n                                variant=\"outlined\"\r\n                                severity={!error ? \"success\" : \"warning\"}\r\n                            >\r\n                                {notify}\r\n                            </Alert>\r\n                        )\r\n                    )}\r\n                    {!isUpdating ? (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={handleCreateAnswer}\r\n                            sx={{\r\n                                textAlign: `center`,\r\n                                marginBottom: `3%`,\r\n                                marginTop: `12px`,\r\n                            }}\r\n                        >\r\n                            Answer\r\n                        </Button>\r\n                    ) : (\r\n                        <Fragment>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={handleUpdateRequest}\r\n                                sx={{\r\n                                    textAlign: `center`,\r\n                                    marginBottom: `3%`,\r\n                                    marginTop: `12px`,\r\n                                }}\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={handleCancelUpdate}\r\n                                sx={{\r\n                                    textAlign: `center`,\r\n                                    marginBottom: `3%`,\r\n                                    marginTop: `12px`,\r\n                                    marginLeft: `1%`,\r\n                                }}\r\n                                color=\"warning\"\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                        </Fragment>\r\n                    )}\r\n                </Fragment>\r\n            ) : (\r\n                <Fragment>\r\n                    <div\r\n                        style={{\r\n                            textAlign: `center`,\r\n                            marginBottom: `50px`,\r\n                            marginTop: `12px`,\r\n                        }}\r\n                    >\r\n                        <Typography component=\"span\" color=\"textSecondary\">\r\n                            You need to login to answer about this question!\r\n                        </Typography>\r\n                        <Link to=\"/login\" style={{ textDecoration: `none` }}>\r\n                            <Button style={{ fontSize: `15px` }}>Login</Button>\r\n                        </Link>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n            {/* <div className={cs(classes.textEdit)}>\r\n                <CKEditor\r\n                    editor={ClassicEditor}\r\n                    data={text}\r\n                    onChange={(event, editor) => {\r\n                        const data = editor.getData();\r\n                        setText(data);\r\n                    }}\r\n                />\r\n            </div> */}\r\n        </Fragment>\r\n    );\r\n};\r\nexport default Answer;\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Text from \"./Text\";\r\nimport { Alert, TextField } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport cs from \"classnames\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    // createThread,\r\n    updateThread,\r\n} from \"../../actions/forum\";\r\n// import DirectHelper from \"../AuthPage/DirectHelper\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textField: {},\r\n    textEditorContain: {\r\n        marginTop: `-1.5%`,\r\n    },\r\n    notify: {},\r\n    directInAskModal: {\r\n        textAlign: `center`,\r\n    },\r\n}));\r\n\r\nconst style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: `85%`,\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nexport default function UpdateAskModal(props) {\r\n    const classes = useStyles();\r\n    const { handleClose, open, question, id } = props;\r\n    const error = useSelector((state) => state.forum.error);\r\n    const isCircleProgress = useSelector(\r\n        (state) => state.forum.isCircleProgress\r\n    );\r\n    const notify = useSelector((state) => state.forum.notify);\r\n    const [text, setText] = React.useState(question.content);\r\n    const [title, setTitle] = React.useState(question.title);\r\n\r\n    React.useEffect(() => {\r\n        setText(question.content);\r\n        setTitle(question.title);\r\n    }, [question]);\r\n\r\n    const dp = useDispatch();\r\n\r\n    const onChange = (e) => {\r\n        setTitle(e.target.value);\r\n    };\r\n    const handleUpdate = () => {\r\n        dp(updateThread.updateThreadRequest({ title, content: text, id }));\r\n    };\r\n    const handleCloseModal = () => {\r\n        handleClose();\r\n        setText(question.content);\r\n        setTitle(question.title);\r\n    };\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleCloseModal}\r\n                aria-labelledby=\"child-modal-title\"\r\n                aria-describedby=\"child-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        component=\"h2\"\r\n                        sx={{ textAlign: `center !important` }}\r\n                    >\r\n                        Update your question!\r\n                    </Typography>\r\n                    <TextField\r\n                        id=\"title\"\r\n                        label=\"Title\"\r\n                        className={classes.textField}\r\n                        placeholder={\"Title\"}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        name=\"Title\"\r\n                        value={title}\r\n                        onChange={onChange}\r\n                    />\r\n\r\n                    <div className={cs(classes.textEditorContain)}>\r\n                        <Text\r\n                            title={\"Your question\"}\r\n                            text={text}\r\n                            setText={setText}\r\n                        />\r\n                    </div>\r\n                    {isCircleProgress ? (\r\n                        <Box className={cs(classes.directInAskModal)}>\r\n                            <CircularProgress />\r\n                        </Box>\r\n                    ) : (\r\n                        notify && (\r\n                            <Alert\r\n                                variant=\"outlined\"\r\n                                severity={!error ? \"success\" : \"warning\"}\r\n                            >\r\n                                {notify}\r\n                            </Alert>\r\n                        )\r\n                    )}\r\n                    {/* {notify && (\r\n                        <Alert\r\n                            variant=\"outlined\"\r\n                            severity={!error ? \"success\" : \"warning\"}\r\n                        >\r\n                            {notify}\r\n                        </Alert>\r\n                    )} */}\r\n                    <div className={cs(\"mt-2\")}>\r\n                        <Button\r\n                            onClick={handleCloseModal}\r\n                            variant=\"contained\"\r\n                            className={cs(\"mr-2\")}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={handleUpdate} variant=\"contained\">\r\n                            Update\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {/* <p>\r\n                        <span style={{ color: error ? \"red\" : \"green\" }}>\r\n                            {notify}\r\n                        </span>\r\n                    </p> */}\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React, { \r\n    // useState, useEffect,\r\n     Fragment, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DoneAllIcon from \"@mui/icons-material/DoneAll\";\r\nimport {\r\n    Modal,\r\n    // TextField,\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    LinearProgress,\r\n    Alert,\r\n    // Tooltip,\r\n    // SliderValueLabel,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport { openModalShare } from \"../../actions/modalShareCode\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport { deleteThread } from \"../../actions/forum\";\r\nimport BlockIcon from \"@mui/icons-material/Block\";\r\nconst DeleteThreadModal = (props) => {\r\n    const question = useSelector((state) => state.forum.question);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            top: `57%`,\r\n            left: `50%`,\r\n            transform: `translate(-50%, -90%)`,\r\n            position: `absolute`,\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: `2px solid rgb(167, 202, 237)`,\r\n            boxShadow: theme.shadows[5],\r\n            // padding: theme.spacing(2, 4, 4),\r\n            outline: `none`,\r\n            padding: 0,\r\n            borderRadius: `8px 8px`,\r\n            \"@media(max-width: 442px)\": {\r\n                width: `95% !important`,\r\n            },\r\n        },\r\n        header: {\r\n            backgroundColor: theme.color.textColor,\r\n            color: theme.color.textColor,\r\n            padding: theme.spacing(2),\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        title: {\r\n            color: theme.color.textColor,\r\n            fontWeight: 700,\r\n\r\n            width: `100%`,\r\n        },\r\n        content: {\r\n            padding: theme.spacing(2),\r\n        },\r\n        textField: {\r\n            width: `100%`,\r\n        },\r\n        textFieldOld: {\r\n            display: `block`,\r\n            minWidth: `100%`,\r\n            // marginBottom: `50px`,\r\n        },\r\n        box: {\r\n            margin: `0 15px 10px 0`,\r\n        },\r\n        typography1: {\r\n            margin: `5px 0 0 0px`,\r\n            fontSize: `15.5px`,\r\n            color: theme.color.error,\r\n        },\r\n        progress: {\r\n            color: \"#ff6278\",\r\n        },\r\n        typography2: {\r\n            textTransform: `none`,\r\n            width: `max-content`,\r\n            color: !question.isBanned ? `#1ba700` : \"#c40606\",\r\n            fontWeight: `500`,\r\n            fontSize: `15px !important`,\r\n            margin: `5px 0 -10px 0px`,\r\n            width: `100% !important`,\r\n        },\r\n        typography3: {\r\n            textTransform: `none`,\r\n            width: `max-content`,\r\n            color: `#29b117`,\r\n            fontSize: `16px !important`,\r\n            textDecoration: `none`,\r\n            \"& > a:hover\": {\r\n                color: `#5dd0e8`,\r\n            },\r\n        },\r\n        box1: {\r\n            marginLeft: `7px`,\r\n            margin: `5px 0 -10px 0px`,\r\n        },\r\n        box2: {\r\n            marginTop: `9x`,\r\n            marginLeft: `5px`,\r\n        },\r\n        icon: {\r\n            marginTop: 5,\r\n            cursor: `pointer`,\r\n        },\r\n        notify: {\r\n            color: `#000`,\r\n            textAlign: `left`,\r\n            padding: `0`,\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    const {\r\n        isAuthenticated,\r\n        progress,\r\n\r\n        handleCloseDeleteThreadModal,\r\n        handleOpenDeleteThreadModal,\r\n        isOpenDeleteThreadModal,\r\n        id,\r\n    } = props;\r\n\r\n    const renderCheck = () => {\r\n        let jsx = null;\r\n        jsx = (\r\n            <Fragment>\r\n                {/* {errCode && (\r\n                    <Typography className={classes.typography1} component=\"div\">\r\n                        <span style={{ margin: `2px 0 0 6px` }}>Copied!</span>\r\n                    </Typography>\r\n                )} */}\r\n                {notify ? (\r\n                    <Box className={classes.box1}>\r\n                        <Typography\r\n                            component=\"div\"\r\n                            gutterBottom\r\n                            className={classes.typography2}\r\n                        >\r\n                            {!question.isBanned ? (\r\n                                <DoneAllIcon\r\n                                    sx={{\r\n                                        marginBottom: `3px`,\r\n                                        marginRight: `5px`,\r\n                                    }}\r\n                                />\r\n                            ) : (\r\n                                <BlockIcon\r\n                                    sx={{\r\n                                        marginBottom: `3px`,\r\n                                        marginRight: `5px`,\r\n                                    }}\r\n                                />\r\n                            )}\r\n                            {notify}\r\n                        </Typography>\r\n                    </Box>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n            </Fragment>\r\n        );\r\n        return jsx;\r\n    };\r\n\r\n    const textRef = useRef(null);\r\n\r\n    const deleteSuccess = useSelector((state) => state.forum.deleteSuccess);\r\n    const deleteAnswerModal = useSelector(\r\n        (state) => state.forum.deleteAnswerModal\r\n    );\r\n    const notify = useSelector((state) => state.forum.notify);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => {\r\n        dispatch(deleteAnswerModal.deleteAnswerModalSuccess(false));\r\n    };\r\n\r\n    const handleDeleteThread = () => {\r\n        dispatch(deleteThread.deleteThreadRequest({ id }));\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                <Modal open={isOpenDeleteThreadModal}>\r\n                    <div className={classes.modal}>\r\n                        <div\r\n                            style={{\r\n                                display: `flex`,\r\n\r\n                                padding: 0,\r\n                                margin: 0,\r\n                            }}\r\n                        >\r\n                            {/* <div style={{ display: `flex`, justifyContent: `space-between`, background: `#1565C0`, height: `35px`, padding: 0, margin: 0 }}>NOTE</div> */}\r\n                            <Alert\r\n                                icon={false}\r\n                                severity=\"success\"\r\n                                sx={{\r\n                                    width: `100%`,\r\n                                    display: `block`,\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        display: `flex`,\r\n                                        justifyContent: `space-between`,\r\n                                    }}\r\n                                >\r\n                                    <p\r\n                                        style={{\r\n                                            fontWeight: `700`,\r\n                                            fontSize: `17px`,\r\n                                            marginBottom: `3px`,\r\n                                        }}\r\n                                    >\r\n                                        CONFIRM!\r\n                                    </p>\r\n                                    <CancelIcon\r\n                                        className={classes.icon}\r\n                                        onClick={() =>\r\n                                            handleCloseDeleteThreadModal()\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            </Alert>\r\n                        </div>\r\n                        <div\r\n                            className={classes.header}\r\n                            style={{ marginTop: `7px` }}\r\n                        >\r\n                            <span className={classes.title}>\r\n                                {\r\n                                    <p className={`${classes.notify} value`}>\r\n                                        Your question will no longer to visible\r\n                                        to others. Are you sure you want to\r\n                                        delete it?\r\n                                    </p>\r\n                                }\r\n\r\n                                {renderCheck()}\r\n                            </span>\r\n                        </div>\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexDirection=\"row-reverse\"\r\n                            mt={2}\r\n                            className={classes.box}\r\n                        >\r\n                            <Box>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={\r\n                                        isAuthenticated && !deleteSuccess\r\n                                            ? false\r\n                                            : true\r\n                                    }\r\n                                    onClick={handleDeleteThread}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                            </Box>\r\n\r\n                            <Box mr={1}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"error\"\r\n                                    onClick={() =>\r\n                                        handleCloseDeleteThreadModal()\r\n                                    }\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        {/* <div className={classes.content}>{component}</div> */}\r\n                        {progress && (\r\n                            <Box sx={{ width: \"100%\" }}>\r\n                                <LinearProgress />\r\n                            </Box>\r\n                        )}\r\n                    </div>\r\n                </Modal>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    errCode: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    nameCode: state.auth.nameCode,\r\n    isChanging: state.code.isChanging,\r\n    isDeleting: state.code.isDeleting,\r\n});\r\n\r\nconst mapActionsToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(DeleteThreadModal);\r\n","import * as React from \"react\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport cs from \"classnames\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\r\nimport ThumbDownIcon from \"@mui/icons-material/ThumbDown\";\r\nimport { Avatar, Card, CardHeader, CardMedia, IconButton } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport QuestionAnswerIcon from \"@mui/icons-material/QuestionAnswer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment-timezone\";\r\nimport { setCurrentObj, setDisplay } from \"../../actions/messenger\";\r\n\r\nconst style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: `400px`,\r\n    bgcolor: \"background.paper\",\r\n    boxShadow: 24,\r\n    p: 3,\r\n    outline: `none !important`,\r\n    borderBottom: `1px solid #e0e0e0`,\r\n    borderLeft: `1px solid #e0e0e0`,\r\n    // borderRight: `1px solid #e0e0e0`,\r\n    boxShadow: `-5px 3px 10px #e0e0e0`,\r\n    borderRadius: `5px`,\r\n    height: `520px`,\r\n    [\"@media(max-width: 767px)\"]: {\r\n        width: `95%`,\r\n        margin: `auto`,\r\n\r\n        p: 2,\r\n    },\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n    boxStatistic: {\r\n        display: `flex`,\r\n        justifyContent: `space-around`,\r\n    },\r\n    cardStatistic: {\r\n        width: `100%`,\r\n        marginBottom: `1px`,\r\n        borderRadius: `none !important`,\r\n        // borderBottom: `1px solid #888`,\r\n        // borderLeft: `1px solid #888`,\r\n    },\r\n    more: {\r\n        marginTop: `8px`,\r\n    },\r\n    iconButton: {\r\n        \"&:focus\": {\r\n            outline: `none !important`,\r\n            border: `none !important`,\r\n        },\r\n    },\r\n}));\r\nexport default function LikeStatistic({\r\n    open,\r\n    handleOpen,\r\n    handleClose,\r\n    likes,\r\n    dislikes,\r\n    viewStatus,\r\n    setViewStatus,\r\n    id,\r\n    checkCondition,\r\n    handleOpenLoginRequire,\r\n}) {\r\n    const classes = useStyles();\r\n\r\n    const [arrDisplay, setArrDisplay] = useState(likes);\r\n    // console.log(\"Likes\", likes);\r\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n    const dp = useDispatch();\r\n\r\n    const viewStatisticLike = () => {};\r\n    const viewStatisticDislike = () => {};\r\n\r\n    useEffect(() => {\r\n        if (viewStatus === 0) {\r\n            setArrDisplay(likes);\r\n        } else {\r\n            setArrDisplay(dislikes);\r\n        }\r\n    }, [likes, dislikes, viewStatus]);\r\n\r\n    const rend = () => {\r\n        var jsx = [];\r\n        for (var i = 0; i < 20; i++) {\r\n            jsx.push(\r\n                <React.Fragment>\r\n                    <Card\r\n                        className={cs(classes.cardStatistic)}\r\n                        key={likes.questionId}\r\n                    >\r\n                        <CardHeader\r\n                            avatar={\r\n                                <Avatar>\r\n                                    {\" \"}\r\n                                    <CardMedia\r\n                                        image={likes.picture}\r\n                                        title=\"Title\"\r\n                                        component=\"img\"\r\n                                        className={classes.media}\r\n                                    />\r\n                                </Avatar>\r\n                            }\r\n                            // title={post.author}\r\n                            title={<span>{likes.name}</span>}\r\n                            // subheader={moment(post.updatedAt).format(\r\n                            //     \"HH:MM MMM DD, YYYY\"\r\n                            // )}\r\n                            subheader={moment(likes.updatedAt)\r\n                                .tz(\"Asia/Ho_Chi_Minh\")\r\n                                .format(\"hh:m MMM DD, YYYY\")}\r\n                            // action={<IconButton>{<MoreVertIcon />}</IconButton>}\r\n                            action={\r\n                                isAuthenticated ? (\r\n                                    <IconButton\r\n                                        className={cs(classes.iconButton)}\r\n                                        // onClick={handleOpen}\r\n                                    >\r\n                                        <MoreVertIcon\r\n                                            className={cs(classes.more)}\r\n                                        />\r\n                                    </IconButton>\r\n                                ) : (\r\n                                    <IconButton\r\n                                        className={cs(classes.moreInQuestion)}\r\n                                    >\r\n                                        {\" \"}\r\n                                        <QuestionAnswerIcon\r\n                                            sx={{\r\n                                                // background: `#fff !important`,\r\n                                                color: `#8167a9 !important`,\r\n                                            }}\r\n                                        />\r\n                                    </IconButton>\r\n                                )\r\n                            }\r\n                            className={cs(classes.questionHeader)}\r\n                        />\r\n                    </Card>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n        return jsx;\r\n    };\r\n\r\n    const handleOpenChat = (objId) => {\r\n        if (!isAuthenticated) {\r\n            handleOpenLoginRequire();\r\n            return;\r\n        }\r\n        dp(setCurrentObj.setCurrentObjSuccess(objId));\r\n        dp(setDisplay.setDisplaySuccess(true));\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* <Button onClick={handleOpen}>Open modal</Button> */}\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <Box sx={style}>\r\n                        <div className={cs(classes.boxStatistic)}>\r\n                            <Typography\r\n                                id=\"transition-modal-title\"\r\n                                component=\"div\"\r\n                                sx={{\r\n                                    fontFamily: `'Roboto Condensed', sans-serif`,\r\n                                    borderBottom:\r\n                                        viewStatus === 0 && `2px solid #1976D2`,\r\n                                    cursor: `pointer !important`,\r\n                                }}\r\n                                onClick={() => setViewStatus(0)}\r\n                                className={cs(classes.like)}\r\n                            >\r\n                                <IconButton\r\n                                    sx={{\r\n                                        color: viewStatus === 0 && \"#1976D2\",\r\n                                        \"&:focus\": {\r\n                                            outline: `none !important`,\r\n                                            border: `none !important`,\r\n                                        },\r\n                                    }}\r\n                                    // onClick={likeQuestion}\r\n\r\n                                    // disabled={checkLiked() ? true : false}\r\n                                >\r\n                                    <ThumbUpIcon\r\n                                        sx={{\r\n                                            color:\r\n                                                viewStatus === 0 && \"#1976D2\",\r\n                                        }}\r\n                                    />\r\n                                </IconButton>\r\n                                Like\r\n                            </Typography>\r\n                            <Typography\r\n                                id=\"transition-modal-title\"\r\n                                component=\"div\"\r\n                                sx={{\r\n                                    fontFamily: `'Roboto Condensed', sans-serif`,\r\n\r\n                                    borderBottom:\r\n                                        viewStatus === 1 && `2px solid #1976D2`,\r\n                                    cursor: `pointer !important`,\r\n                                }}\r\n                                onClick={() => setViewStatus(1)}\r\n                            >\r\n                                <IconButton\r\n                                    sx={{\r\n                                        color: viewStatus === 1 && \"#1976D2\",\r\n                                        \"&:focus\": {\r\n                                            outline: `none !important`,\r\n                                            border: `none !important`,\r\n                                        },\r\n                                    }}\r\n                                >\r\n                                    <ThumbDownIcon\r\n                                        sx={{\r\n                                            color:\r\n                                                viewStatus === 1 && \"#1976D2\",\r\n                                        }}\r\n                                    />\r\n                                </IconButton>\r\n                                Dislike\r\n                            </Typography>\r\n                        </div>\r\n                        <Typography\r\n                            sx={{\r\n                                mt: 1,\r\n                                textAlign: `left !important`,\r\n                                height: `90%`,\r\n\r\n                                overflowY: `auto`,\r\n                            }}\r\n                            component=\"div\"\r\n                        >\r\n                            {arrDisplay.length > 0 &&\r\n                                arrDisplay.map(\r\n                                    (people) =>\r\n                                        people.answerId === \"\" &&\r\n                                        people.questionId === id && (\r\n                                            <React.Fragment key={people._id}>\r\n                                                <Card\r\n                                                    className={cs(\r\n                                                        classes.cardStatistic\r\n                                                    )}\r\n                                                >\r\n                                                    <CardHeader\r\n                                                        avatar={\r\n                                                            <Avatar>\r\n                                                                {\" \"}\r\n                                                                <CardMedia\r\n                                                                    image={\r\n                                                                        people.picture\r\n                                                                    }\r\n                                                                    title=\"Title\"\r\n                                                                    component=\"img\"\r\n                                                                    className={\r\n                                                                        classes.media\r\n                                                                    }\r\n                                                                />\r\n                                                            </Avatar>\r\n                                                        }\r\n                                                        // title={post.author}\r\n                                                        title={\r\n                                                            <span>\r\n                                                                {people.name}\r\n                                                            </span>\r\n                                                        }\r\n                                                        // subheader={moment(post.updatedAt).format(\r\n                                                        //     \"HH:MM MMM DD, YYYY\"\r\n                                                        // )}\r\n                                                        subheader={moment(\r\n                                                            people.updatedAt\r\n                                                        )\r\n                                                            .tz(\r\n                                                                \"Asia/Ho_Chi_Minh\"\r\n                                                            )\r\n                                                            .format(\r\n                                                                \"hh:m MMM DD, YYYY\"\r\n                                                            )}\r\n                                                        // action={<IconButton>{<MoreVertIcon />}</IconButton>}\r\n                                                        action={\r\n                                                            isAuthenticated && (\r\n                                                                <IconButton\r\n                                                                    className={cs(\r\n                                                                        classes.moreInQuestion\r\n                                                                    )}\r\n                                                                    onClick={() =>\r\n                                                                        handleOpenChat(\r\n                                                                            people.objId\r\n                                                                        )\r\n                                                                    }\r\n                                                                >\r\n                                                                    {\" \"}\r\n                                                                    <QuestionAnswerIcon\r\n                                                                        sx={{\r\n                                                                            // background: `#fff !important`,\r\n                                                                            color: `#555 !important`,\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </IconButton>\r\n                                                            )\r\n                                                        }\r\n                                                        className={cs(\r\n                                                            classes.questionHeader\r\n                                                        )}\r\n                                                    />\r\n                                                </Card>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                )}\r\n                            {/* {rend()} */}\r\n\r\n                            {/* <Link to=\"/login\">\r\n                                <Button\r\n                                    sx={{\r\n                                        fontSize: `17px`,\r\n                                    }}\r\n                                >\r\n                                    Login\r\n                                </Button>\r\n                            </Link> */}\r\n                        </Typography>\r\n                    </Box>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React, { \r\n    // useState, useEffect,\r\n     Fragment, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DoneAllIcon from \"@mui/icons-material/DoneAll\";\r\nimport {\r\n    Modal,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    LinearProgress,\r\n    Alert,\r\n    Tooltip,\r\n    SliderValueLabel,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport { openModalShare } from \"../../actions/modalShareCode\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport { ban, unban } from \"../../actions/forum\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        top: `57%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -90%)`,\r\n        position: `absolute`,\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: `2px solid rgb(167, 202, 237)`,\r\n        boxShadow: theme.shadows[5],\r\n        // padding: theme.spacing(2, 4, 4),\r\n        outline: `none`,\r\n        padding: 0,\r\n        borderRadius: `8px 8px`,\r\n        \"@media(max-width: 442px)\": {\r\n            width: `95% !important`,\r\n        },\r\n    },\r\n    header: {\r\n        backgroundColor: theme.color.textColor,\r\n        color: theme.color.textColor,\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    title: {\r\n        color: theme.color.textColor,\r\n        fontWeight: 700,\r\n\r\n        width: `100%`,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    textField: {\r\n        width: `100%`,\r\n    },\r\n    textFieldOld: {\r\n        display: `block`,\r\n        minWidth: `100%`,\r\n        // marginBottom: `50px`,\r\n    },\r\n    box: {\r\n        margin: `0 15px 10px 0`,\r\n    },\r\n    typography1: {\r\n        margin: `5px 0 0 0px`,\r\n        fontSize: `15.5px`,\r\n        color: theme.color.error,\r\n    },\r\n    progress: {\r\n        color: \"#ff6278\",\r\n    },\r\n    typography2: {\r\n        textTransform: `none`,\r\n        width: `max-content`,\r\n        color: `#1ba700`,\r\n        fontWeight: `500`,\r\n        fontSize: `15px !important`,\r\n        margin: `5px 0 -10px 0px`,\r\n    },\r\n    typography3: {\r\n        textTransform: `none`,\r\n        width: `max-content`,\r\n        color: `#29b117`,\r\n        fontSize: `16px !important`,\r\n        textDecoration: `none`,\r\n        \"& > a:hover\": {\r\n            color: `#5dd0e8`,\r\n        },\r\n    },\r\n    box1: {\r\n        marginLeft: `7px`,\r\n        margin: `5px 0 -10px 0px`,\r\n    },\r\n    box2: {\r\n        marginTop: `9x`,\r\n        marginLeft: `5px`,\r\n    },\r\n    icon: {\r\n        marginTop: 5,\r\n        cursor: `pointer`,\r\n    },\r\n    notify: {\r\n        color: `#000`,\r\n        textAlign: `left`,\r\n        padding: `0`,\r\n    },\r\n}));\r\n\r\nconst BanModal = (props) => {\r\n    const classes = useStyles();\r\n    const {\r\n        isAuthenticated,\r\n        progress,\r\n        banModal,\r\n        handleOpenBanModal,\r\n        handleCloseBanModal,\r\n        question,\r\n    } = props;\r\n\r\n    const renderCheck = () => {\r\n        let jsx = null;\r\n        jsx = (\r\n            <Fragment>\r\n                {/* {errCode && (\r\n                    <Typography className={classes.typography1} component=\"div\">\r\n                        <span style={{ margin: `2px 0 0 6px` }}>Copied!</span>\r\n                    </Typography>\r\n                )} */}\r\n                {notify ? (\r\n                    <Box className={classes.box1}>\r\n                        <Typography\r\n                            component=\"div\"\r\n                            gutterBottom\r\n                            className={classes.typography2}\r\n                        >\r\n                            <DoneAllIcon\r\n                                sx={{ marginBottom: `3px`, marginRight: `5px` }}\r\n                            />\r\n                            {notify}\r\n                        </Typography>\r\n                    </Box>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n            </Fragment>\r\n        );\r\n        return jsx;\r\n    };\r\n\r\n    const textRef = useRef(null);\r\n    const modalShareIsOpen = useSelector(\r\n        (state) => state.modalShare.modalShareIsOpen\r\n    );\r\n    const link = useSelector((state) => state.modalShare.link);\r\n    const deleteSuccess = useSelector((state) => state.forum.deleteSuccess);\r\n    const notify = useSelector((state) => state.forum.notify);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleBan = () => {\r\n        dispatch(ban.banRequest(question));\r\n    };\r\n\r\n    const handleUnban = () => {\r\n        dispatch(unban.unbanRequest(question));\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                <Modal open={banModal}>\r\n                    <div className={classes.modal}>\r\n                        <div\r\n                            style={{\r\n                                display: `flex`,\r\n\r\n                                padding: 0,\r\n                                margin: 0,\r\n                            }}\r\n                        >\r\n                            {/* <div style={{ display: `flex`, justifyContent: `space-between`, background: `#1565C0`, height: `35px`, padding: 0, margin: 0 }}>NOTE</div> */}\r\n                            <Alert\r\n                                icon={false}\r\n                                severity=\"success\"\r\n                                sx={{\r\n                                    width: `100%`,\r\n                                    display: `block`,\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        display: `flex`,\r\n                                        justifyContent: `space-between`,\r\n                                    }}\r\n                                >\r\n                                    <p\r\n                                        style={{\r\n                                            fontWeight: `700`,\r\n                                            fontSize: `17px`,\r\n                                            marginBottom: `3px`,\r\n                                        }}\r\n                                    >\r\n                                        CONFIRM!\r\n                                    </p>\r\n                                    <CancelIcon\r\n                                        className={classes.icon}\r\n                                        onClick={() => handleCloseBanModal()}\r\n                                    />\r\n                                </div>\r\n                            </Alert>\r\n                        </div>\r\n                        <div\r\n                            className={classes.header}\r\n                            style={{ marginTop: `7px` }}\r\n                        >\r\n                            <span className={classes.title}>\r\n                                {\r\n                                    <p className={`${classes.notify} value`}>\r\n                                        {!question.isBanned\r\n                                            ? \"This person will be banned and will not be able to post or reply to topics \"\r\n                                            : \"The ban will no longer be in effect and this user can use forum activities\"}\r\n                                    </p>\r\n                                }\r\n\r\n                                {renderCheck()}\r\n                            </span>\r\n                        </div>\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexDirection=\"row-reverse\"\r\n                            mt={2}\r\n                            className={classes.box}\r\n                        >\r\n                            <Box>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={\r\n                                        isAuthenticated && !deleteSuccess\r\n                                            ? false\r\n                                            : true\r\n                                    }\r\n                                    onClick={\r\n                                        !question.isBanned\r\n                                            ? handleBan\r\n                                            : handleUnban\r\n                                    }\r\n                                >\r\n                                    {!question.isBanned ? \"BAN\" : \"UNBAN\"}\r\n                                </Button>\r\n                            </Box>\r\n\r\n                            <Box mr={1}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"error\"\r\n                                    onClick={() => handleCloseBanModal()}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        {/* <div className={classes.content}>{component}</div> */}\r\n                        {progress && (\r\n                            <Box sx={{ width: \"100%\" }}>\r\n                                <LinearProgress />\r\n                            </Box>\r\n                        )}\r\n                    </div>\r\n                </Modal>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    errCode: state.code.error,\r\n    err: state.auth.error,\r\n    progress: state.modal.progress,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    nameCode: state.auth.nameCode,\r\n    isChanging: state.code.isChanging,\r\n    isDeleting: state.code.isDeleting,\r\n});\r\n\r\nconst mapActionsToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(BanModal);\r\n","import { makeStyles } from \"@mui/styles\";\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport cs from \"classnames\";\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    CardMedia,\r\n    CircularProgress,\r\n    IconButton,\r\n    Menu,\r\n    MenuItem,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteSweepIcon from \"@mui/icons-material/DeleteSweep\";\r\n// import AlertDialogSlide from \"../../Helpers/AlertDialogSlide\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport \"./styles.css\";\r\nimport ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\r\nimport ThumbDownIcon from \"@mui/icons-material/ThumbDown\";\r\nimport Answer from \"./Answer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    getThreads,\r\n    openDeleteThreadModal,\r\n    openModalDeleteAnswer,\r\n    setLoadingForum,\r\n    setNotify,\r\n    setOpenAskModal,\r\n    setQuestion,\r\n    setQuestionLoadingForum,\r\n    setViewThread,\r\n    like,\r\n    dislike,\r\n    ban,\r\n    unban,\r\n    setBanModal,\r\n} from \"../../actions/forum\";\r\nimport moment from \"moment-timezone\";\r\n\r\nimport parse from \"html-react-parser\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { push } from \"connected-react-router\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport QuestionAnswerIcon from \"@mui/icons-material/QuestionAnswer\";\r\nimport UpdateAskModal from \"./UpdateAskModal\";\r\nimport DeleteThreadModal from \"./DeleteThreadModal\";\r\nimport LoginRequire from \"./LoginRequire\";\r\nimport LikeStatistic from \"./LikeStatistic\";\r\nimport KeyboardBackspaceIcon from \"@mui/icons-material/KeyboardBackspace\";\r\nimport { setCurrentObj, setDisplay } from \"../../actions/messenger\";\r\nimport BanModal from \"./BanModal\";\r\nimport SentimentVerySatisfiedIcon from \"@mui/icons-material/SentimentVerySatisfied\";\r\nimport BlockIcon from \"@mui/icons-material/Block\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    questionContainer: {\r\n        // background: `#fff`,\r\n\r\n        // width: `95%`,\r\n        // margin: `auto`,\r\n        // borderBottom: `1px solid #e0e0e0`,\r\n        // borderLeft: `1px solid #e0e0e0`,\r\n        // // borderRight: `1px solid #e0e0e0`,\r\n        // boxShadow: `-10px 3px 10px #e0e0e0`,\r\n        // borderRadius: `5px`,\r\n        borderBottom: `1px solid #e0e0e0`,\r\n        borderLeft: `1px solid #e0e0e0`,\r\n        // borderRight: `1px solid #e0e0e0`,\r\n        // boxShadow: `-10px 7px 10px #e0e0e0`,\r\n        boxShadow: `-5px -5px 10px 9px #e0e0e0`,\r\n        // boxShadow: `0 0 5px 2px #000`,\r\n        borderRadius: `5px`,\r\n        padding: `20px 15px 0px 15px`,\r\n    },\r\n    mainContainer: {\r\n        width: `80% !important`,\r\n        margin: `auto !important`,\r\n        minWidth: `500px !important`,\r\n        marginTop: `10% !important`,\r\n\r\n        [\"@media(max-width:768px)\"]: {\r\n            minWidth: `unset !important`,\r\n            width: `95% !important`,\r\n            margin: `auto !important`,\r\n        },\r\n        [\"@media(max-width:320px)\"]: {\r\n            marginTop: `120px !important`,\r\n        },\r\n    },\r\n    userInfo: {\r\n        display: `flex`,\r\n    },\r\n    cardQuestion: {\r\n        marginTop: `1%`,\r\n        marginBottom: `2%`,\r\n        // borderBottom: `1px solid rgba(26, 54, 126, 0.2)`,\r\n        background: `none !important`,\r\n    },\r\n    media: {\r\n        height: `auto !important`,\r\n        width: `100%`,\r\n    },\r\n    questionHeader: {\r\n        borderBottom: `1px solid rgba(26, 54, 126, 0.2)`,\r\n        \"&:hover\": {\r\n            background: `rgba(224, 224, 224, 40%) !important`,\r\n        },\r\n        // background: `#98DBC6`,\r\n        // backgroundImage: `linear-gradient(45deg, #98DBC6 50%, #fff 10%)`,\r\n    },\r\n    cardActions: {\r\n        borderTop: `2px solid #e0e0e0`,\r\n        // backgroundColor: `rgba(0,0,0,.03)`,\r\n        // backgroundColor: `rgba(0, 0, 0, 5%)`,\r\n        // filter: `blur(2px)`,\r\n\r\n        // backdropFilter: `blur(6px)`,\r\n    },\r\n    questionTitle: {\r\n        fontSize: \"18px\",\r\n        fontWeight: 700,\r\n        margin: \"0\",\r\n        padding: \"0\",\r\n        color: \"#000\",\r\n        boxSizing: `border-box`,\r\n    },\r\n    questionTitleCollapse: {\r\n        // display: `block`,\r\n        // whiteSpace: \"nowrap\",\r\n        // overflow: \"hidden\",\r\n        // textOverflow: \"ellipsis\",\r\n        // maxWidth: \"70ch\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        display: \"-webkit-box\",\r\n        WebkitLineClamp: \"2\",\r\n        lineClamp: 2,\r\n        WebkitBoxOrient: \"vertical\",\r\n    },\r\n    moreInQuestion: {\r\n        marginTop: `12px`,\r\n    },\r\n    textConfig: {\r\n        wordBreak: `break-word`,\r\n        \"& h2\": {\r\n            fontSize: `22px !important`,\r\n            fontWeight: `bold !important`,\r\n            padding: `0px 0px !important`,\r\n            paddingTop: `5px !important`,\r\n            textAlign: `left`,\r\n        },\r\n        \"& h3\": {\r\n            fontSize: `18px !important`,\r\n            fontWeight: `bold !important`,\r\n            padding: `0px 0px !important`,\r\n            paddingTop: `5px !important`,\r\n            textAlign: `left`,\r\n        },\r\n        \"& h4\": {\r\n            fontSize: `16px !important`,\r\n            fontWeight: `bold !important`,\r\n            padding: `0px 0px !important`,\r\n            paddingTop: `5px !important`,\r\n            textAlign: `left`,\r\n        },\r\n        \"& p\": {\r\n            fontSize: `16px !important`,\r\n            fontWeight: `normal !important`,\r\n            padding: `0px 0px !important`,\r\n            paddingTop: `5px !important`,\r\n            textAlign: `left`,\r\n        },\r\n    },\r\n    waitingByCircle: {\r\n        // marginTop: `25%`,\r\n        position: `relative`,\r\n        textAlign: `center`,\r\n        background: `#fff !important`,\r\n        width: `80% !important`,\r\n        margin: `auto !important`,\r\n        height: `90vh !important`,\r\n        borderBottom: `1px solid #e0e0e0`,\r\n        borderLeft: `1px solid #e0e0e0`,\r\n        borderRight: `1px solid #e0e0e0`,\r\n        boxShadow: `-10px 3px 10px #e0e0e0`,\r\n        borderRadius: `5px`,\r\n        // border: `1px solid #e0e0e0`,\r\n    },\r\n    backgroundLoading: {},\r\n}));\r\n\r\nconst Question = (props) => {\r\n    const classes = useStyles();\r\n    const { match } = props;\r\n    const id = match.params.id;\r\n    const dp = useDispatch();\r\n\r\n    const isQuestionLoading = useSelector(\r\n        (state) => state.forum.isQuestionLoading\r\n    );\r\n    const threads = useSelector((state) => state.forum.threads);\r\n    const answers = useSelector((state) => state.forum.answers);\r\n    const likes = useSelector((state) => state.forum.likes);\r\n    const dislikes = useSelector((state) => state.forum.dislikes);\r\n    const isVerify = useSelector((state) => state.direct.isVerify);\r\n    const question = useSelector((state) => state.forum.question);\r\n    const objId = useSelector((state) => state.auth.account.objId);\r\n    const isAdmin = useSelector((state) => state.auth.account.isAdmin);\r\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n    const [anchorEL, setAnchorEL] = useState(null);\r\n    const open = useSelector((state) => state.forum.open);\r\n    const banModal = useSelector((state) => state.forum.banModal);\r\n    const isBanned = useSelector((state) => state.forum.isBanned);\r\n    const isOpenDeleteThreadModal = useSelector(\r\n        (state) => state.forum.isOpenDeleteThreadModal\r\n    );\r\n\r\n    const [openLoginRequire, setOpenLoginRequire] = React.useState(false);\r\n    const handleOpenLoginRequire = () => setOpenLoginRequire(true);\r\n    const handleCloseLoginRequire = () => setOpenLoginRequire(false);\r\n\r\n    const handleOpenBanModal = (a) => {\r\n        dp(setNotify.setNotifySuccess(\"\"));\r\n        handleClose();\r\n        dp(setBanModal.setBanModalSuccess(true));\r\n    };\r\n    const handleCloseBanModal = (a) => {\r\n        dp(setNotify.setNotifySuccess(\"\"));\r\n        dp(setBanModal.setBanModalSuccess(false));\r\n    };\r\n\r\n    const handleOpenUnbanModal = (a) => {\r\n        dp(unban.unbanRequest(a));\r\n    };\r\n\r\n    const handleOpenModal = () => {\r\n        dp(setNotify.setNotifySuccess(\"\"));\r\n        handleClose();\r\n        dp(setOpenAskModal.setOpenAskModalSuccess(true));\r\n    };\r\n    const handleCloseModal = () => {\r\n        dp(setNotify.setNotifySuccess(\"\"));\r\n        dp(setOpenAskModal.setOpenAskModalSuccess(false));\r\n    };\r\n\r\n    const handleOpen = useCallback((e) => {\r\n        setAnchorEL(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleClose = useCallback(() => {\r\n        setAnchorEL(null);\r\n    }, []);\r\n    // const [question, setQuestion] = useState(-1);\r\n\r\n    //     setQuestion(threads.find((thread) => thread._id === id));\r\n    // let question;\r\n    // if (threads.length) {\r\n    //     question = threads.find((thread) => thread._id === id);\r\n    // }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (threads.length <= 0) {\r\n                dp(getThreads.getThreadsRequest({ match }));\r\n            } else if (threads.length > 0) {\r\n                // console.log(\"HERE !!!!!!\");\r\n                var x = threads.find((thread) => thread._id === id);\r\n                if (!x) {\r\n                    dp(push(\"/not-found/error\"));\r\n                } else {\r\n                    dp(\r\n                        setQuestion.setQuestionSuccess(\r\n                            // threads.find((thread) => thread._id === id)\r\n                            x\r\n                        )\r\n                    );\r\n                    dp(\r\n                        setQuestionLoadingForum.setQuestionLoadingForumSuccess(\r\n                            false\r\n                        )\r\n                    );\r\n                    dp(setViewThread.setViewThreadRequest(id));\r\n                }\r\n\r\n                // else {\r\n                //     dp(push(\"/not-found/error\"));\r\n                // }\r\n            }\r\n            // else if (threads.length && question === null) {\r\n            //     dp(push(\"/forum\"));\r\n            // }\r\n        },\r\n        // [threads, id, match]\r\n        [id, match, likes, dislikes, answers]\r\n    );\r\n    const answersForThisQuestion = answers.filter(\r\n        (answer) => id === answer.questionId && answer\r\n    );\r\n\r\n    // console.log(\"question\", question);\r\n\r\n    const handleOpenDeleteThreadModal = () => {\r\n        handleClose();\r\n        dp(setNotify.setNotifySuccess(\"\"));\r\n        dp(openDeleteThreadModal.openDeleteThreadModalSuccess(true));\r\n    };\r\n    const handleCloseDeleteThreadModal = () => {\r\n        dp(setNotify.setNotifySuccess(\"\"));\r\n        dp(openDeleteThreadModal.openDeleteThreadModalSuccess(false));\r\n    };\r\n\r\n    const checkLiked = () => {\r\n        let check;\r\n        check = likes.find(\r\n            (like) =>\r\n                like.objId === objId &&\r\n                like.questionId === question._id &&\r\n                like.answerId === \"\"\r\n        );\r\n        // console.log(\"CHECKliked\", check);\r\n        return check;\r\n    };\r\n\r\n    const checkDisliked = () => {\r\n        let check;\r\n        check = dislikes.find(\r\n            (dislike) =>\r\n                dislike.objId === objId &&\r\n                dislike.questionId === question._id &&\r\n                dislike.answerId === \"\"\r\n        );\r\n        return check;\r\n    };\r\n\r\n    const likeQuestion = () => {\r\n        if (!isAuthenticated) {\r\n            handleOpenLoginRequire();\r\n        } else {\r\n            dp(like.likeRequest({ question, objId, answer: \"\" }));\r\n        }\r\n    };\r\n\r\n    const dislikeQuestion = () => {\r\n        if (!isAuthenticated) {\r\n            handleOpenLoginRequire();\r\n        } else {\r\n            dp(dislike.dislikeRequest({ question, objId, answer: \"\" }));\r\n        }\r\n    };\r\n\r\n    const [viewStatus, setViewStatus] = React.useState(0);\r\n    const [openLikeQuestionStatistic, setOpenLikeQuestionStatistic] =\r\n        React.useState(false);\r\n\r\n    const [checkCondition, setCheckCondition] = React.useState(\"\");\r\n\r\n    const handleOpenLikeQuestionStatistic = (x) => {\r\n        setViewStatus(x);\r\n        setOpenLikeQuestionStatistic(true);\r\n    };\r\n    const handleCloseLikeQuestionStatistic = () => {\r\n        setOpenLikeQuestionStatistic(false);\r\n    };\r\n\r\n    function ChangeToSlug(title) {\r\n        var slug;\r\n\r\n        //Lấy text từ thẻ input title\r\n\r\n        //Đổi chữ hoa thành chữ thường\r\n        slug = title\r\n            .toLowerCase()\r\n            .replace(/ /g, \"-\")\r\n            .replace(/[^\\w-]+/g, \"\");\r\n        return slug;\r\n    }\r\n\r\n    const handleOpenChat = () => {\r\n        if (!isAuthenticated) {\r\n            handleOpenLoginRequire();\r\n            return;\r\n        }\r\n        dp(setCurrentObj.setCurrentObjSuccess(question.objId));\r\n        dp(setDisplay.setDisplaySuccess(true));\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {isQuestionLoading ? (\r\n                <Box className={cs(classes.waitingByCircle)}>\r\n                    <div className={cs(classes.backgroundLoading)}>\r\n                        <CircularProgress sx={{ marginTop: `25%` }} />\r\n                    </div>\r\n                </Box>\r\n            ) : (\r\n                <Fragment>\r\n                    <LoginRequire\r\n                        open={openLoginRequire}\r\n                        handleOpen={handleOpenLoginRequire}\r\n                        handleClose={handleCloseLoginRequire}\r\n                    />\r\n\r\n                    <LikeStatistic\r\n                        id={id}\r\n                        viewStatus={viewStatus}\r\n                        setViewStatus={setViewStatus}\r\n                        likes={likes}\r\n                        dislikes={dislikes}\r\n                        open={openLikeQuestionStatistic}\r\n                        handleOpen={handleOpenLikeQuestionStatistic}\r\n                        handleClose={handleCloseLikeQuestionStatistic}\r\n                        handleOpenLoginRequire={handleOpenLoginRequire}\r\n                    />\r\n                    <DeleteThreadModal\r\n                        isOpenDeleteThreadModal={isOpenDeleteThreadModal}\r\n                        handleCloseDeleteThreadModal={\r\n                            handleCloseDeleteThreadModal\r\n                        }\r\n                        handleOpenDeleteThreadModal={\r\n                            handleOpenDeleteThreadModal\r\n                        }\r\n                        id={id}\r\n                    />\r\n                    <BanModal\r\n                        banModal={banModal}\r\n                        handleOpenBanModal={handleOpenBanModal}\r\n                        handleCloseBanModal={handleCloseBanModal}\r\n                        question={question}\r\n                    />\r\n                    <UpdateAskModal\r\n                        handleOpen={handleOpenModal}\r\n                        handleClose={handleCloseModal}\r\n                        open={open}\r\n                        question={question}\r\n                        id={id}\r\n                    />\r\n                    <div className={cs(classes.mainContainer)}>\r\n                        <div className={cs(classes.questionContainer)}>\r\n                            <Link to=\"/forum/1\" style={{ width: `100%` }}>\r\n                                {\" \"}\r\n                                <Button>\r\n                                    <KeyboardBackspaceIcon />\r\n                                    Back{\" \"}\r\n                                </Button>\r\n                            </Link>\r\n\r\n                            {/* <div className={cs(classes.userInfo)}>\r\n                    <div className={cs(classes.userInfoLeft)}></div>\r\n                    <div className={cs(classes.userInfoRight)}></div>\r\n                </div> */}\r\n                            <Card sx={{ marginBottom: `8px` }}>\r\n                                <CardContent\r\n                                    sx={{ background: `#FFFFFF !important` }}\r\n                                >\r\n                                    <Typography variant=\"p\" color=\"textPrimary\">\r\n                                        <div\r\n                                            className={cs(\r\n                                                classes.questionTitle\r\n                                            )}\r\n                                        >\r\n                                            <span\r\n                                                className={cs(\r\n                                                    classes.questionTitleCollapse\r\n                                                )}\r\n                                            >\r\n                                                {question.title}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div>\r\n                                            {\r\n                                                // question.updatedAt\r\n                                                //     .toString()\r\n                                                //     .trim() ===\r\n                                                // question.createdAt.toString().trim()\r\n                                                //     ? moment(\r\n                                                //           question.createdAt\r\n                                                //       ).format(\"HH:MM MMM DD, YYYY\")\r\n                                                //     : moment(\r\n                                                //           question.updatedAt\r\n                                                //       ).format(\r\n                                                //           \"HH:MM MMM DD, YYYY\"\r\n                                                //       )\r\n\r\n                                                moment(question.createdAt)\r\n                                                    .tz(\"Asia/Ho_Chi_Minh\")\r\n                                                    .format(\"hh:m MMM DD, YYYY\")\r\n                                            }\r\n                                        </div>\r\n                                        <div>{question.replies} Replies</div>\r\n                                    </Typography>\r\n                                    {/* <Typography\r\n                            variant=\"body2\"\r\n                            component=\"p\"\r\n                            color=\"textSecondary\"\r\n                        >\r\n                            ABC\r\n                        </Typography> */}\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                            <Card className={classes.cardQuestion}>\r\n                                <CardHeader\r\n                                    avatar={\r\n                                        <Avatar>\r\n                                            {\" \"}\r\n                                            <CardMedia\r\n                                                image={question.user.picture}\r\n                                                title=\"Title\"\r\n                                                component=\"img\"\r\n                                                className={classes.media}\r\n                                            />\r\n                                        </Avatar>\r\n                                    }\r\n                                    sx={{ background: `#FFFFFF !important` }}\r\n                                    // title={post.author}\r\n                                    title={\r\n                                        <span\r\n                                            style={{ cursor: `pointer` }}\r\n                                            onClick={handleOpenChat}\r\n                                        >\r\n                                            {question.user.name}{\" \"}\r\n                                            {question.isBanned ? (\r\n                                                <Typography\r\n                                                    component={\"span\"}\r\n                                                    variant={\"body2\"}\r\n                                                    sx={{\r\n                                                        background: `red !important`,\r\n                                                        color: `#FFFFFF !important`,\r\n                                                        padding: `3px 5px !important`,\r\n                                                        fontWeight: `bold !important`,\r\n                                                    }}\r\n                                                >\r\n                                                    BANNED\r\n                                                </Typography>\r\n                                            ) : (\r\n                                                \"\"\r\n                                            )}\r\n                                        </span>\r\n                                    }\r\n                                    // subheader={moment(post.updatedAt).format(\r\n                                    //     \"HH:MM MMM DD, YYYY\"\r\n                                    // )}\r\n                                    subheader={`Asked at ${moment(\r\n                                        question.createdAt\r\n                                    )\r\n                                        .tz(\"Asia/Ho_Chi_Minh\")\r\n                                        .format(\"hh:m MMM DD, YYYY\")}`}\r\n                                    // action={<IconButton>{<MoreVertIcon />}</IconButton>}\r\n                                    action={\r\n                                        (question.user.objId === objId &&\r\n                                            isAuthenticated &&\r\n                                            !isBanned) ||\r\n                                        (isAdmin &&\r\n                                            isAuthenticated &&\r\n                                            !isBanned) ? (\r\n                                            <IconButton\r\n                                                className={cs(\r\n                                                    \"\",\r\n                                                    classes.moreInQuestion\r\n                                                )}\r\n                                                onClick={handleOpen}\r\n                                            >\r\n                                                <MoreVertIcon />\r\n                                            </IconButton>\r\n                                        ) : (\r\n                                            <IconButton\r\n                                                className={cs(\r\n                                                    \"btn\",\r\n                                                    classes.moreInQuestion\r\n                                                )}\r\n                                                onClick={() => {\r\n                                                    window.scrollTo({\r\n                                                        top: document\r\n                                                            .documentElement\r\n                                                            .scrollHeight,\r\n                                                        // left: 100,\r\n                                                        behavior: \"smooth\",\r\n                                                    });\r\n                                                    // setIsUpdating(null);\r\n                                                }}\r\n                                            >\r\n                                                {\" \"}\r\n                                                <QuestionAnswerIcon\r\n                                                    sx={{\r\n                                                        // background: `#fff !important`,\r\n                                                        color: `#8167a9 !important`,\r\n                                                    }}\r\n                                                />\r\n                                            </IconButton>\r\n                                        )\r\n                                    }\r\n                                    className={cs(classes.questionHeader)}\r\n                                />\r\n                                <Menu\r\n                                    id=\"simple-menu\"\r\n                                    anchorEl={anchorEL}\r\n                                    open={Boolean(anchorEL)}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    {/* <MenuItem>\r\n                                    <FavoriteIcon\r\n                                        sx={{ marginRight: 1, marginTop: 0.7 }}\r\n                                    />{\" \"}\r\n                                    <Button>Hello</Button>\r\n                                </MenuItem> */}\r\n                                    <MenuItem onClick={handleOpenModal}>\r\n                                        {\" \"}\r\n                                        <span>\r\n                                            <EditIcon\r\n                                                fontSize=\"small\"\r\n                                                sx={{\r\n                                                    marginRight: 1,\r\n                                                }}\r\n                                            />\r\n                                        </span>\r\n                                        <Button>Update</Button>\r\n                                    </MenuItem>\r\n                                    <MenuItem\r\n                                        onClick={handleOpenDeleteThreadModal}\r\n                                    >\r\n                                        {\" \"}\r\n                                        <span>\r\n                                            <DeleteSweepIcon\r\n                                                fontSize=\"small\"\r\n                                                sx={{\r\n                                                    marginTop: `-4px`,\r\n                                                    marginRight: 1,\r\n                                                }}\r\n                                            />\r\n                                        </span>\r\n                                        <Button>Delete</Button>\r\n                                    </MenuItem>\r\n                                    {isAdmin && (\r\n                                        <MenuItem\r\n                                            onClick={handleOpenBanModal}\r\n                                            disabled={\r\n                                                question.isBanned ? false : true\r\n                                            }\r\n                                        >\r\n                                            <span>\r\n                                                <SentimentVerySatisfiedIcon\r\n                                                    fontSize=\"small\"\r\n                                                    sx={{\r\n                                                        marginRight: 1,\r\n                                                        marginTop: `-1px`,\r\n                                                    }}\r\n                                                />\r\n                                            </span>\r\n                                            <Button>UNBAN</Button>\r\n                                        </MenuItem>\r\n                                    )}\r\n                                    {isAdmin && (\r\n                                        <MenuItem\r\n                                            onClick={handleOpenBanModal}\r\n                                            disabled={\r\n                                                !question.isBanned\r\n                                                    ? false\r\n                                                    : true\r\n                                            }\r\n                                        >\r\n                                            <span>\r\n                                                <BlockIcon\r\n                                                    fontSize=\"small\"\r\n                                                    sx={{\r\n                                                        marginTop: `-4px`,\r\n                                                        marginRight: 1,\r\n                                                    }}\r\n                                                />\r\n                                            </span>\r\n                                            <Button>BAN</Button>\r\n                                        </MenuItem>\r\n                                    )}\r\n                                </Menu>\r\n\r\n                                <CardContent\r\n                                    sx={{ background: `#FFFFFF !important` }}\r\n                                >\r\n                                    <Typography\r\n                                        variant=\"p\"\r\n                                        color=\"textPrimary\"\r\n                                        className={cs(classes.textConfig)}\r\n                                    >\r\n                                        {parse(question.content)}\r\n                                    </Typography>\r\n                                    {/* <Typography\r\n                            variant=\"body2\"\r\n                            component=\"p\"\r\n                            color=\"textSecondary\"\r\n                        >\r\n                            ABC\r\n                        </Typography> */}\r\n                                </CardContent>\r\n                                <CardActions\r\n                                    className={cs(classes.cardActions)}\r\n                                >\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        // color=\"textSecondary\"\r\n                                        sx={{\r\n                                            marginLeft: `5px`,\r\n                                            cursor: `pointer`,\r\n                                            \"&:hover\": {\r\n                                                color: `#1976D2`,\r\n                                                borderBottom: `1px solid #1976D2`,\r\n                                                fontSize: `20px`,\r\n                                                transition: `all .5s`,\r\n                                            },\r\n                                        }}\r\n                                        onClick={() =>\r\n                                            handleOpenLikeQuestionStatistic(0)\r\n                                        }\r\n                                    >\r\n                                        {question.likes}\r\n                                    </Typography>\r\n                                    <IconButton\r\n                                        onClick={likeQuestion}\r\n                                        sx={{ marginLeft: `5px` }}\r\n                                        // disabled={checkLiked() ? true : false}\r\n                                    >\r\n                                        <ThumbUpIcon\r\n                                            sx={{\r\n                                                color: checkLiked()\r\n                                                    ? \"#1976D2\"\r\n                                                    : \"unset !important\",\r\n                                            }}\r\n                                        />\r\n                                    </IconButton>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        // color=\"textSecondary\"\r\n                                        onClick={() =>\r\n                                            handleOpenLikeQuestionStatistic(1)\r\n                                        }\r\n                                        sx={{\r\n                                            cursor: `pointer`,\r\n                                            \"&:hover\": {\r\n                                                color: `#1976D2`,\r\n                                                borderBottom: `1px solid #1976D2`,\r\n                                                fontSize: `20px`,\r\n                                                transition: `all .5s`,\r\n                                            },\r\n                                        }}\r\n                                    >\r\n                                        {question.dislikes}\r\n                                    </Typography>\r\n                                    <IconButton onClick={dislikeQuestion}>\r\n                                        <ThumbDownIcon\r\n                                            sx={{\r\n                                                color: checkDisliked()\r\n                                                    ? \"#1976D2\"\r\n                                                    : \"unset !important\",\r\n                                            }}\r\n                                        />\r\n                                    </IconButton>\r\n                                </CardActions>\r\n                            </Card>\r\n\r\n                            <Typography\r\n                                id=\"transition-modal-title\"\r\n                                component=\"div\"\r\n                                sx={{\r\n                                    fontFamily: `'Roboto Condensed', sans-serif`,\r\n                                    borderBottom:\r\n                                        viewStatus === 0 && `2px solid #e0e0e0`,\r\n                                    fontSize: `20px !important`,\r\n                                    marginBottom: `2%`,\r\n                                }}\r\n                                onClick={() => setViewStatus(0)}\r\n                                className={cs(classes.like)}\r\n                            >\r\n                                {question.replies} Answers\r\n                            </Typography>\r\n                            <Answer\r\n                                ChangeToSlug={ChangeToSlug}\r\n                                answers={answersForThisQuestion}\r\n                                id={id}\r\n                                question={question}\r\n                                match={match}\r\n                                // banModal={banModal}\r\n                                handleOpenBanModal={handleOpenBanModal}\r\n                                handleCloseBanModal={handleCloseBanModal}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\nexport default Question;\r\n","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollHandler = ({ location }) => {\r\n    useEffect(() => {\r\n        const element = document.getElementById(location.hash);\r\n\r\n        setTimeout(() => {\r\n            window.scrollTo({\r\n                behavior: element ? \"smooth\" : \"auto\",\r\n                top: element ? element.offsetTop : 0,\r\n            });\r\n        }, 100);\r\n    }, [location]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default withRouter(ScrollHandler);\r\n","import { makeStyles } from \"@mui/styles\";\r\nimport React, {\r\n    Fragment,\r\n    useCallback,\r\n    useEffect,\r\n    useRef,\r\n    useState,\r\n} from \"react\";\r\nimport cs from \"classnames\";\r\nimport { host } from \"../../constant/axios\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    setAllMess,\r\n    setCurrentObj,\r\n    setDisplay,\r\n    setFriends,\r\n    setId,\r\n    setImageWillBeShow,\r\n    setMess,\r\n    setMessage,\r\n    setUpdateSeen,\r\n} from \"../../actions/messenger\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport {\r\n    Avatar,\r\n    CardHeader,\r\n    IconButton,\r\n    Card,\r\n    CardMedia,\r\n    Button,\r\n    Menu,\r\n    MenuItem,\r\n    Typography,\r\n    // Tooltip,\r\n} from \"@mui/material\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport moment from \"moment-timezone\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteSweepIcon from \"@mui/icons-material/DeleteSweep\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport MoodIcon from \"@mui/icons-material/Mood\";\r\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\r\nimport BlockIcon from \"@mui/icons-material/Block\";\r\nimport PeopleAltIcon from \"@mui/icons-material/PeopleAlt\";\r\nimport AppsIcon from \"@mui/icons-material/Apps\";\r\n\r\nconst CustomTooltip = styled(({ className, ...props }) => (\r\n    <Tooltip {...props} classes={{ popper: className }} />\r\n))({\r\n    [`& .${tooltipClasses.tooltip}`]: {\r\n        fontSize: `14px`,\r\n        padding: `5px 9px!important`,\r\n        borderRadius: `9px !important`,\r\n    },\r\n});\r\n\r\nconst Chat = (props) => {\r\n    const display = useSelector((state) => state.messenger.display);\r\n    const [previewImg, setPreviewImg] = useState([]);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        chatItem: {\r\n            width: `100% !important`,\r\n            // background: `#e0e0e0`,\r\n            wordBreak: `break-word`,\r\n\r\n            // maxWidth: `174px !important`,\r\n            // width: `max-content !important`,\r\n            // maxWidth: `max-content !important`,\r\n            // minWidth: `max-content !important`,\r\n\r\n            // whiteSpace: `normal !important`,\r\n            // height: `auto !important`,\r\n            // maxWidth: `178px`,\r\n        },\r\n        boxAll: {\r\n            height: `100vh`,\r\n        },\r\n        boxChat: {\r\n            zIndex: `1000 !important`,\r\n\r\n            position: `fixed`,\r\n            width: \"350px\",\r\n            height: `455px !important`,\r\n            borderBottom: `1px solid #e0e0e0`,\r\n            borderLeft: `1px solid #e0e0e0`,\r\n            // background: `#fff`,\r\n            // borderRight: `1px solid #e0e0e0`,\r\n            // boxShadow: `-5px -5px 10px 9px #e0e0e0`,\r\n            boxShadow: `0px 0px 9px #e0e0e0`,\r\n\r\n            // boxShadow: `0 0 5px 2px #000`,\r\n            borderRadius: `9px`,\r\n            // right: `200px`,\r\n            right: `120px`,\r\n            bottom: `0 !important`,\r\n\r\n            backgroundImage:\r\n                'url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1462889/pat-back.svg\") !important',\r\n            backgroundPosition: \"center\",\r\n            backgroundRepeat: \"repeat\",\r\n            backgroundSize: \"7%\",\r\n            display: display ? \"\" : \"none\",\r\n            transition: `all .5s`,\r\n            [\"@media(max-width: 768px)\"]: {\r\n                right: `12px !important`,\r\n            },\r\n        },\r\n        boxChatMessage: {\r\n            // width: `100%`,\r\n            minHeight: \"345px\",\r\n            maxHeight: \"345px\",\r\n            overflowY: \"auto\",\r\n\r\n            maxHeight: !previewImg.length\r\n                ? \"345px !important\"\r\n                : previewImg.length < 5\r\n                ? \"279px\"\r\n                : \"263px !important\",\r\n            //     // previewImg.length >= 5\r\n            //     //     ? \"279px !important\"\r\n            //     previewImg.length < 5 ? \"300px\" : \"345px\",\r\n            minHeight: !previewImg.length\r\n                ? \"345px !important\"\r\n                : previewImg.length < 5\r\n                ? \"279px\"\r\n                : \"263px !important\",\r\n\r\n            // // previewImg.length >= 5\r\n            // //     ? \"279px !important\"\r\n            //     previewImg.length < 5 ? \"300px\" : \"345px\",\r\n        },\r\n        sendBox: {\r\n            position: `relative`,\r\n            width: \"100%\",\r\n            // bottom: `-38px !important`,\r\n            display: `flex`,\r\n        },\r\n        textArea: {\r\n            width: \"100%\",\r\n            height: `41px`,\r\n            margin: \"0\",\r\n            padding: \"0.62em\",\r\n            background: \"#ebf5fd\",\r\n            // background: \"#FFFFFF\",\r\n            borderRadius: \"2em\",\r\n            display: \"flex\",\r\n            float: \"left\",\r\n            lineHeight: `normal !important`,\r\n        },\r\n        boxInput: {\r\n            width: `90%`,\r\n        },\r\n        cardTop: {\r\n            borderRadius: `none !important`,\r\n            height: `62px`,\r\n        },\r\n        yourMessage: {\r\n            position: `relative`,\r\n            // width: `min-content`,\r\n            // background: \"#009bff\",\r\n            // margin: \"1em\",\r\n            borderRadius: \"1em\",\r\n            // padding: \"0.5em\",\r\n            padding: \"2px !important\",\r\n            color: \"white\",\r\n            float: \"right !important\",\r\n            textAlign: `right !important`,\r\n            right: `0`,\r\n            // width: `max-content !important`,\r\n        },\r\n        otherMessage: {\r\n            position: `relative`,\r\n\r\n            // width: `min-content`,\r\n            // background: \"#868686\",\r\n            // margin: \"1em\",\r\n            borderRadius: \"1em\",\r\n            padding: \"0.5em\",\r\n            color: \"#000\",\r\n            textAlign: \"left !important\",\r\n            left: `0`,\r\n            float: \"left !important\",\r\n            // width: `max-content !important`,\r\n        },\r\n        p: {\r\n            background: \"#009bff\",\r\n            display: `block !important`,\r\n            padding: \"0.5em\",\r\n            color: \"white\",\r\n            width: `max-content !important`,\r\n            maxWidth: `220px !important`,\r\n            borderRadius: \"15px !important\",\r\n            // textAlign: `left !important`,\r\n            // float: m.id === id ? \"right !important\" : \"left !important\",\r\n        },\r\n        p1: {\r\n            display: `block !important`,\r\n            padding: \"0.5em\",\r\n            color: \"white\",\r\n            width: `max-content !important`,\r\n            maxWidth: `220px !important`,\r\n            borderRadius: \"15px !important\",\r\n            // textAlign: `left !important`,\r\n            // float: m.id === id ? \"right !important\" : \"left !important\",\r\n        },\r\n        hideChat: {\r\n            bottom: `-400px !important`,\r\n            transition: `all .5s`,\r\n        },\r\n        previewImg: {\r\n            position: `relative !important`,\r\n            objectFit: `cover !important`,\r\n            borderRadius: `6px !important`,\r\n            width: \"48px !important\",\r\n            height: \"48px !important\",\r\n        },\r\n        boxImage: {\r\n            position: `relative !important`,\r\n            float: `left !important`,\r\n            background: `#fff`,\r\n            marginLeft: `19px !important`,\r\n            marginBottom: `2px !important`,\r\n            marginTop: `16px !important`,\r\n        },\r\n        removeImage: {\r\n            display: !previewImg.length && \"none !important\",\r\n            position: `absolute !important`,\r\n            top: \"-15px !important\",\r\n            right: \"-15px !important\",\r\n            background: `#FFFFFF !important`,\r\n        },\r\n        imgContainer: {},\r\n        boxAllImg: {\r\n            position: `relative !important`,\r\n            bottom: `8px !important`,\r\n        },\r\n        boxMessageImg: {\r\n            display: `flex !important`,\r\n            flexWrap: `wrap !important`,\r\n        },\r\n        messageImg: {\r\n            borderRadius: `8px !important`,\r\n            height: \"70px !important\",\r\n            flexWrap: \"wrap !important\",\r\n            width: \"90px\",\r\n            margin: \"4px 7px 4px 4px !important\",\r\n        },\r\n        messageImg1: {\r\n            borderRadius: `8px !important`,\r\n            margin: \"2px 2px 0px 0px !important\",\r\n        },\r\n        imgContain2: {\r\n            flexBasis: `1`,\r\n        },\r\n        imgSmall: {\r\n            position: \"relative !important\",\r\n            display: `block !important`,\r\n            left: \"0\",\r\n            marginLeft: \"5px !important\",\r\n            float: \"left !important\",\r\n            width: `25px !important`,\r\n            height: `25px !important`,\r\n            borderRadius: `25px !important`,\r\n        },\r\n        imgUser: {\r\n            width: `25px !important`,\r\n            height: `25px !important`,\r\n            borderRadius: `50% !important`,\r\n        },\r\n        imgUserSeen: {\r\n            width: `20px !important`,\r\n            height: `20px !important`,\r\n            borderRadius: `50% !important`,\r\n        },\r\n    }));\r\n\r\n    const { socketRef } = props;\r\n    const classes = useStyles();\r\n    const dp = useDispatch();\r\n\r\n    const objId = useSelector((state) => state.auth.account.objId);\r\n    const message = useSelector((state) => state.messenger.message);\r\n    const mess = useSelector((state) => state.messenger.mess);\r\n    const id = useSelector((state) => state.messenger.id);\r\n    const account = useSelector((state) => state.auth.account);\r\n    const friends = useSelector((state) => state.messenger.friends);\r\n    const currentObj = useSelector((state) => state.messenger.currentObj);\r\n    const currentMess = useSelector((state) => state.messenger.currentMess);\r\n    const [anchorEL, setAnchorEL] = useState(null);\r\n    const [anchorELBoxIcon, setAnchorELBoxIcon] = useState(null);\r\n    const [anchorELBoxIconOpen, setAnchorELBoxIconOpen] = useState(null);\r\n    const [openPicker, setOpenPicker] = useState(null);\r\n    const [anchorELTool, setAnchorELTool] = useState(null);\r\n    const [hide, setHide] = useState(false);\r\n    const handleOpen = (e) => {\r\n        e.stopPropagation();\r\n\r\n        // console.log(\"OPEN\");\r\n        setAnchorEL(e.currentTarget);\r\n    };\r\n\r\n    const handleClose = useCallback(() => {\r\n        setAnchorEL(null);\r\n    }, []);\r\n\r\n    const handleOpenBoxIcon = (e) => {\r\n        // console.log(\"OPEN\");\r\n        setAnchorELBoxIcon(e.currentTarget);\r\n    };\r\n\r\n    const handleCloseBoxIcon = useCallback(() => {\r\n        setAnchorELBoxIcon(null);\r\n    }, []);\r\n\r\n    const handleOpenBoxIconOpen = (e) => {\r\n        // console.log(\"e.currentTarget\", e.currentTarget);\r\n        // setAnchorELBoxIconOpen(e.currentTarget);\r\n        setOpenPicker(!openPicker);\r\n        handleCloseBoxIcon();\r\n    };\r\n\r\n    const handleCloseBoxIconOpen = useCallback(() => {\r\n        setAnchorELBoxIconOpen(null);\r\n    }, []);\r\n\r\n    const handleOpenTool = (e) => {\r\n        setAnchorELTool(e.currentTarget);\r\n    };\r\n\r\n    const handleCloseTool = useCallback(() => {\r\n        setAnchorELTool(null);\r\n    }, []);\r\n\r\n    // const socketRef = useRef();\r\n    const messagesEnd = useRef();\r\n    // const [id, setId] = useState();\r\n\r\n    useEffect(() => {\r\n        if (objId) {\r\n            socketRef.current = socketIOClient.connect(host);\r\n            // console.log(\"socketRef\", socketRef);\r\n\r\n            socketRef.current.on(\"getFriendList\", (data) => {\r\n                // console.log(\"FriendList\", data);\r\n                dp(setFriends.setFriendsSuccess(data));\r\n            });\r\n\r\n            //\r\n            socketRef.current.on(\"sendListMessage\", (data) => {\r\n                // console.log(\"sendListMessage\", data);\r\n                dp(setAllMess.setAllMessSuccess(data.mess));\r\n            });\r\n\r\n            socketRef.current.on(\"getUpdateSeen\", (data) => {\r\n                // console.log(\"getUpdateSeen\", data);\r\n                dp(setUpdateSeen.setUpdateSeenSuccess(data.mess));\r\n            });\r\n\r\n            socketRef.current.on(\"getFriendListAfterLogout\", (data) => {\r\n                // console.log(\"FriendListAfterLogout\", data);\r\n                dp(setFriends.setFriendsSuccess(data));\r\n            });\r\n\r\n            socketRef.current.on(\"getId\", (data) => {\r\n                socketRef.current.emit(\"sendObjId\", objId);\r\n                // socketRef.current.emit(\"getFriendListOnline\", objId);\r\n                // console.log(\"data\", data);\r\n                dp(setId.setIdSuccess(data.id));\r\n\r\n                // dp(setId.setIdSuccess(data.id));\r\n            });\r\n\r\n            socketRef.current.on(\"sendDataServer\", (dataGot) => {\r\n                // console.log(\"dataGot\", dataGot);\r\n                dp(setMess.setMessSuccess([dataGot.data]));\r\n                scrollToBottom();\r\n            });\r\n\r\n            socketRef.current.on(\"getUpdateBlock\", (data) => {\r\n                // console.log(\"getUpdateBlock\", data);\r\n                dp(setFriends.setFriendsSuccess(data.friends));\r\n\r\n                // scrollToBottom();\r\n            });\r\n\r\n            return () => {\r\n                // socketRef.current.emit(\"forceDisconnect\");\r\n\r\n                // console.log(\"Disconnect!\");\r\n                socketRef.current.disconnect();\r\n                // socketRef.current.emit(\"forceDisconnect\", id);\r\n            };\r\n        }\r\n    }, [objId]);\r\n    const scrollToBottom = () => {\r\n        if (messagesEnd.current) {\r\n            messagesEnd.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.getElementById(\"endMess\").scrollIntoView();\r\n        clickFocus();\r\n        // document\r\n        //     .getElementById(\"endMess\")\r\n        //     .scrollTo({\r\n        //         bottom: document.getElementById(\"endMess\").scrollHeight,\r\n        //     });\r\n    }, [display, currentObj]);\r\n\r\n    const sendMessage = () => {\r\n        if (!message.trim() && previewImg.length <= 0) {\r\n            return;\r\n        }\r\n        if (message || previewImg.length > 0) {\r\n            if (objId !== currentObj.objId) {\r\n                // console.log(message);\r\n                const msg = {\r\n                    message: message.toString().trim() !== \"\" ? message : \"\",\r\n                    id: id,\r\n                    objId: objId,\r\n                    currentObj: currentObj,\r\n                    currentObjId: currentObj.objId,\r\n                    objIds: [objId, currentObj.objId],\r\n                    pictures: previewImg,\r\n                    name: account.name,\r\n                    picture: account.picture,\r\n                };\r\n                // console.log(\"Success: \", previewImg.slice());\r\n                socketRef.current.emit(\"sendDataClient\", msg);\r\n                dp(setMessage.setMessageSuccess(\"\"));\r\n                setPreviewImg([]);\r\n            }\r\n        }\r\n    };\r\n\r\n    // const [divScroll, setDivScroll] = useState(null);\r\n\r\n    // const [messSlice, setMessSlice] = useState(mess);\r\n\r\n    // useEffect(() => {\r\n    //     // setDivScroll(document.getElementById(\"box-chat-messenger\"));\r\n    //     // if (messSlice.length - 5 >= 0) {\r\n    //     //     setMessSlice(mess.slice(10));\r\n    //     // } else {\r\n    //     setMessSlice(mess.slice(mess.length - 10));\r\n    //     // }\r\n    // }, [mess, objId]);\r\n\r\n    // const onScroll = (e) => {\r\n    //     var x = document.getElementById(\"box-chat-messenger\");\r\n    //     if (x.scrollTop == 0) {\r\n    //         if (mess.length - messSlice.length - 3 >= 0) {\r\n    //             setMessSlice(mess.slice(mess.length - messSlice.length - 3));\r\n    //             x.scrollBy(0, 25);\r\n    //         } else {\r\n    //             setMessSlice(mess.slice(0));\r\n    //             // document.getElementById(\"endMess\").scrollIntoView(false);\r\n    //         }\r\n    //         console.log(\"ABC\", mess);\r\n    //     }\r\n    // };\r\n    // console.log(\"messSlice\", mess);\r\n\r\n    const renderMess = () => {\r\n        const x =\r\n            mess.length > 0 &&\r\n            mess.filter(\r\n                (m) =>\r\n                    m.objIds.includes(objId) &&\r\n                    m.objIds.includes(currentObj.objId) &&\r\n                    currentObj.objId !== null &&\r\n                    currentObj.objId !== objId &&\r\n                    m\r\n            );\r\n        return x.length > 0\r\n            ? x.map(\r\n                  (m, index) =>\r\n                      //   (objId === m.objId &&\r\n                      //       currentObj.objId === m.currentObj.objId) ||\r\n                      //   (objId === m.currentObj.objId &&\r\n                      m.objIds.includes(objId) &&\r\n                      m.objIds.includes(currentObj.objId) &&\r\n                      currentObj.objId !== null &&\r\n                      currentObj.objId !== objId && (\r\n                          <Fragment key={index}>\r\n                              {m.objIds[0] !== objId && (\r\n                                  <Fragment>\r\n                                      <span className={cs(classes.imgSmall)}>\r\n                                          <img\r\n                                              className={cs(classes.imgUser)}\r\n                                              src={currentObj.picture}\r\n                                          ></img>\r\n                                      </span>\r\n                                      {/* <Typography\r\n                                          component={\"span\"}\r\n                                          variant={\"body2\"}\r\n                                          sx={{\r\n                                              float: `left !important`,\r\n                                          }}\r\n                                      >\r\n                                          {currentObj.name}\r\n                                      </Typography> */}\r\n                                  </Fragment>\r\n                              )}\r\n                              {m.message && (\r\n                                  <div\r\n                                      className={cs(\r\n                                          classes.chatItem,\r\n                                          {\r\n                                              [classes.yourMessage]:\r\n                                                  objId === m.objIds[0],\r\n                                              //   m.id === id &&\r\n                                              //   m.objIds.includes(objId),\r\n                                          },\r\n                                          {\r\n                                              [classes.otherMessage]:\r\n                                                  m.objIds[0] !== objId,\r\n\r\n                                              //   m.id !== id &&\r\n                                              //   m.objIds.includes(\r\n                                              //       currentObj.objId\r\n                                              //   ),\r\n                                          }\r\n                                      )}\r\n                                      //   style={{\r\n                                      //       display:\r\n                                      //           !m.message ||\r\n                                      //           (m.message === \"\" &&\r\n                                      //               `none !important`),\r\n                                      //   }}\r\n                                  >\r\n                                      <CustomTooltip\r\n                                          className={classes.tooltipTime}\r\n                                          arrow\r\n                                          title={`${moment(m.createdAt)\r\n                                              .tz(\"Asia/Ho_Chi_Minh\")\r\n                                              .format(\"hh:m MMM DD, YYYY\")}`}\r\n                                          placement={\r\n                                              objId === m.objIds[0]\r\n                                                  ? \"left\"\r\n                                                  : \"right\"\r\n                                          }\r\n                                      >\r\n                                          <p\r\n                                              data-toggle=\"collapse\"\r\n                                              data-target={`#message${index}`}\r\n                                              id={\r\n                                                  objId === m.objIds[0]\r\n                                                      ? \"m-right\"\r\n                                                      : \"m-left\"\r\n                                              }\r\n                                              className={\r\n                                                  cs(\"p-message\", classes.p)\r\n                                                  //   ,\r\n                                                  //   {\r\n                                                  //       \"message-right\": m.id === id,\r\n                                                  //   },\r\n                                                  //   {\r\n                                                  //       \"message-left\": m.id !== id,\r\n                                                  //   }\r\n                                              }\r\n                                              style={{\r\n                                                  background:\r\n                                                      objId === m.objIds[0]\r\n                                                          ? \"#009bff\"\r\n                                                          : \"#E4E6EB\",\r\n                                                  float:\r\n                                                      objId === m.objIds[0]\r\n                                                          ? \"right !important\"\r\n                                                          : \"left !important\",\r\n                                              }}\r\n                                          >\r\n                                              {m.message}\r\n                                              {/* <Typography\r\n                                          component={\"span\"}\r\n                                          variant={\"body2\"}\r\n                                          className={cs(classes.boxMessageImg)}\r\n                                          sx={{\r\n                                              display:\r\n                                                  m.pictures.length <= 0 &&\r\n                                                  \"none\",\r\n                                          }}\r\n                                      >\r\n                                          {m.pictures.length > 0 &&\r\n                                              m.pictures.map((pi, i) => (\r\n                                                  <Typography\r\n                                                      key={i}\r\n                                                      component={\"span\"}\r\n                                                      variant={\"body2\"}\r\n                                                      className={cs(\r\n                                                          classes.imgContain2\r\n                                                      )}\r\n                                                  >\r\n                                                      <img\r\n                                                          className={cs(\r\n                                                              {\r\n                                                                  [classes.messageImg]:\r\n                                                                      m.pictures\r\n                                                                          .length >=\r\n                                                                      3,\r\n                                                              },\r\n                                                              {\r\n                                                                  [classes.messageImg1]:\r\n                                                                      m.pictures\r\n                                                                          .length <=\r\n                                                                      2,\r\n                                                              }\r\n                                                          )}\r\n                                                          src={pi}\r\n                                                      ></img>\r\n                                                  </Typography>\r\n                                              ))}\r\n                                      </Typography> */}\r\n                                          </p>\r\n                                      </CustomTooltip>\r\n                                  </div>\r\n                              )}\r\n                              {m.pictures.length > 0 && (\r\n                                  <div\r\n                                      className={cs(\r\n                                          classes.chatItem,\r\n                                          {\r\n                                              [classes.yourMessage]:\r\n                                                  objId === m.objIds[0],\r\n                                          },\r\n                                          {\r\n                                              [classes.otherMessage]:\r\n                                                  m.objIds[0] !== objId,\r\n                                          }\r\n                                      )}\r\n                                  >\r\n                                      <p\r\n                                          id={\r\n                                              objId === m.objIds[0]\r\n                                                  ? \"m-right\"\r\n                                                  : \"m-left\"\r\n                                          }\r\n                                          className={cs(\r\n                                              \"p-message\",\r\n                                              classes.p1\r\n                                          )}\r\n                                          style={{\r\n                                              background:\r\n                                                  objId === m.objIds[0]\r\n                                                      ? \"rgba(80, 155, 255, 40%)\"\r\n                                                      : \"#E4E6EB\",\r\n                                              float:\r\n                                                  objId === m.objIds[0]\r\n                                                      ? \"right !important\"\r\n                                                      : \"left !important\",\r\n                                          }}\r\n                                      >\r\n                                          <Typography\r\n                                              component={\"span\"}\r\n                                              variant={\"body2\"}\r\n                                              className={cs(\r\n                                                  classes.boxMessageImg\r\n                                              )}\r\n                                              sx={{\r\n                                                  display:\r\n                                                      m.pictures.length <= 0 &&\r\n                                                      \"none\",\r\n                                              }}\r\n                                          >\r\n                                              {m.pictures.length > 0 &&\r\n                                                  m.pictures.map((pi, i) => (\r\n                                                      <CustomTooltip\r\n                                                          key={i}\r\n                                                          className={\r\n                                                              classes.tooltipTime\r\n                                                          }\r\n                                                          arrow\r\n                                                          title={`${moment(\r\n                                                              m.createdAt\r\n                                                          )\r\n                                                              .tz(\r\n                                                                  \"Asia/Ho_Chi_Minh\"\r\n                                                              )\r\n                                                              .format(\r\n                                                                  \"hh:m MMM DD, YYYY\"\r\n                                                              )}`}\r\n                                                          placement={\r\n                                                              objId ===\r\n                                                              m.objIds[0]\r\n                                                                  ? \"left\"\r\n                                                                  : \"right\"\r\n                                                          }\r\n                                                      >\r\n                                                          <Typography\r\n                                                              key={i}\r\n                                                              component={\"span\"}\r\n                                                              variant={\"body2\"}\r\n                                                              className={cs(\r\n                                                                  classes.imgContain2\r\n                                                              )}\r\n                                                              style={{\r\n                                                                  cursor: `pointer`,\r\n                                                              }}\r\n                                                              onClick={() =>\r\n                                                                  dp(\r\n                                                                      setImageWillBeShow.setImageWillBeShowSuccess(\r\n                                                                          pi\r\n                                                                      )\r\n                                                                  )\r\n                                                              }\r\n                                                          >\r\n                                                              <img\r\n                                                                  className={cs(\r\n                                                                      {\r\n                                                                          [classes.messageImg]:\r\n                                                                              m\r\n                                                                                  .pictures\r\n                                                                                  .length >=\r\n                                                                              4,\r\n                                                                      },\r\n                                                                      {\r\n                                                                          [classes.messageImg1]:\r\n                                                                              m\r\n                                                                                  .pictures\r\n                                                                                  .length <\r\n                                                                              4,\r\n                                                                      }\r\n                                                                  )}\r\n                                                                  src={pi}\r\n                                                              ></img>\r\n                                                          </Typography>\r\n                                                      </CustomTooltip>\r\n                                                  ))}\r\n                                          </Typography>\r\n                                      </p>\r\n                                  </div>\r\n                              )}\r\n\r\n                              {m.objIds[0] === objId && m.seen && (\r\n                                  <div\r\n                                      className={cs(\r\n                                          classes.chatItem,\r\n                                          {\r\n                                              [classes.yourMessage]:\r\n                                                  objId === m.objIds[0],\r\n                                          },\r\n                                          {\r\n                                              [classes.otherMessage]:\r\n                                                  m.objIds[0] !== objId,\r\n                                          },\r\n                                          { collapse: index !== x.length - 1 }\r\n                                      )}\r\n                                      id={`message${index}`}\r\n                                  >\r\n                                      <p\r\n                                          id={\r\n                                              //   objId === m.objIds[0]\r\n                                              \"m-right\"\r\n                                              //   : \"m-left\"\r\n                                          }\r\n                                          className={cs(\r\n                                              \"p-message\",\r\n                                              classes.p1\r\n                                          )}\r\n                                          style={{\r\n                                              //   background:\r\n                                              //       objId === m.objIds[0]\r\n                                              //           ? \"rgba(80, 155, 255, 40%)\"\r\n                                              //           : \"#E4E6EB\",\r\n                                              color: `#000000`,\r\n                                              float:\r\n                                                  objId === m.objIds[0]\r\n                                                      ? \"right !important\"\r\n                                                      : \"left !important\",\r\n                                          }}\r\n                                      >\r\n                                          <Typography\r\n                                              component={\"span\"}\r\n                                              variant={\"body2\"}\r\n                                              className={cs(\r\n                                                  classes.boxMessageImg\r\n                                              )}\r\n                                              sx={{\r\n                                                  display:\r\n                                                      m.pictures.length <= 0 &&\r\n                                                      \"none\",\r\n                                              }}\r\n                                          >\r\n                                              <CustomTooltip\r\n                                                  className={\r\n                                                      classes.tooltipTime\r\n                                                  }\r\n                                                  arrow\r\n                                                  title={`Seen at ${moment(\r\n                                                      m.updatedAt\r\n                                                  )\r\n                                                      .tz(\"Asia/Ho_Chi_Minh\")\r\n                                                      .format(\r\n                                                          \"hh:m MMM DD, YYYY\"\r\n                                                      )}`}\r\n                                                  placement={\r\n                                                      objId === m.objIds[0]\r\n                                                          ? \"left\"\r\n                                                          : \"right\"\r\n                                                  }\r\n                                              >\r\n                                                  <Typography\r\n                                                      component={\"span\"}\r\n                                                      variant={\"body2\"}\r\n                                                      className={cs(\r\n                                                          classes.imgContain2\r\n                                                      )}\r\n                                                      style={{\r\n                                                          cursor: `pointer`,\r\n                                                      }}\r\n                                                  >\r\n                                                      <span\r\n                                                          className={cs(\r\n                                                              classes.imgSmallSeen\r\n                                                          )}\r\n                                                      >\r\n                                                          <img\r\n                                                              className={cs(\r\n                                                                  classes.imgUserSeen\r\n                                                              )}\r\n                                                              src={\r\n                                                                  currentObj.picture\r\n                                                              }\r\n                                                          ></img>\r\n                                                      </span>\r\n                                                      {/* Seen */}\r\n                                                  </Typography>\r\n                                              </CustomTooltip>\r\n                                          </Typography>\r\n                                      </p>\r\n                                  </div>\r\n                              )}\r\n                          </Fragment>\r\n                      )\r\n              )\r\n            : [];\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        dp(setMessage.setMessageSuccess(e.target.value));\r\n    };\r\n\r\n    const onEnterPress = (e) => {\r\n        if (e.keyCode == 13 && e.shiftKey == false) {\r\n            sendMessage();\r\n        }\r\n    };\r\n\r\n    // console.log(\"mess\", mess);\r\n    // console.log(\"id\", id);\r\n\r\n    const setObj = (objId) => {\r\n        dp(setCurrentObj.setCurrentObjSuccess(objId));\r\n    };\r\n\r\n    const hideChat = () => {\r\n        setHide(!hide);\r\n        handleClose();\r\n    };\r\n\r\n    const close = () => {\r\n        handleClose();\r\n\r\n        dp(setDisplay.setDisplaySuccess(false));\r\n    };\r\n    // const display = useSelector((state) => state.messenger.display);\r\n    const onPaste = (event) => {\r\n        var items = (event.clipboardData || event.originalEvent.clipboardData)\r\n            .items;\r\n        // console.log(JSON.stringify(items)); // will give you the mime types\r\n        // find pasted image among pasted items\r\n        var blob = null;\r\n        for (var i = 0; i < items.length; i++) {\r\n            if (items[i].type.indexOf(\"image\") === 0) {\r\n                blob = items[i].getAsFile();\r\n            }\r\n        }\r\n        // load image if there is a pasted image\r\n        if (blob !== null) {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n\r\n            reader.onload = function (event) {\r\n                // console.log(\"event.target.result\", event.target.result); // data url!\r\n                // document.getElementById(\"pastedImage\").src =\r\n                //     event.target.result;\r\n                const x = previewImg.concat(event.target.result);\r\n                setPreviewImg(x);\r\n            };\r\n            // reader.readAsDataURL(blob);\r\n        }\r\n    };\r\n\r\n    const removeImage = (i) => {\r\n        const x = previewImg.filter((pi, index) => i !== index && pi);\r\n        setPreviewImg(x);\r\n    };\r\n\r\n    const clickFocus = (e) => {\r\n        if (Object.keys(currentObj).length > 0) {\r\n            dp(setCurrentObj.setCurrentObjSuccess(currentObj.objId));\r\n        }\r\n        if (openPicker) {\r\n            setOpenPicker(!openPicker);\r\n        }\r\n        const x =\r\n            mess.length > 0 &&\r\n            mess.filter(\r\n                (m) =>\r\n                    m.objIds.includes(objId) &&\r\n                    m.objIds.includes(currentObj.objId) &&\r\n                    currentObj.objId !== null &&\r\n                    currentObj.objId !== objId\r\n            );\r\n        const finalMes = x[x.length - 1];\r\n        // console.log(\"finalMes\", finalMes);\r\n        const y = finalMes && finalMes.seen ? finalMes.seen : false;\r\n        const z = finalMes && finalMes.objIds ? finalMes.objIds[0] : null;\r\n        // const y = finalMes.seen;\r\n        // const z = finalMes.objIds[0];\r\n        if (y) {\r\n            return;\r\n        } else if (!y) {\r\n            if (z === objId) {\r\n                return;\r\n            } else if (!z) {\r\n                // console.log(\"z null\");\r\n                return;\r\n            } else {\r\n                // console.log(\"y ne:\", y);\r\n\r\n                socketRef.current.emit(\r\n                    \"sendUpdateSeen\",\r\n                    //  {\r\n                    //     ...finalMes,\r\n                    //     seen: false,\r\n                    // }\r\n                    finalMes\r\n                );\r\n            }\r\n        }\r\n        return;\r\n    };\r\n\r\n    const countUnreadMessage = (e) => {\r\n        const x =\r\n            mess.length > 0 &&\r\n            mess.filter(\r\n                (m) =>\r\n                    m.objIds.includes(objId) &&\r\n                    m.objIds.includes(currentObj.objId) &&\r\n                    !m.seen &&\r\n                    m.objIds[0] !== objId &&\r\n                    currentObj.objId !== null &&\r\n                    currentObj.objId !== objId\r\n            );\r\n\r\n        // console.log(\"countLengthUnreadMessage\", x);\r\n\r\n        return x.length;\r\n    };\r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        event.stopPropagation();\r\n\r\n        dp(setMessage.setMessageSuccess(message + emojiObject.emoji));\r\n    };\r\n\r\n    const onChangeImage = (e) => {\r\n        e.preventDefault();\r\n\r\n        // setAccount({ ...account, [e.target.name]: e.target.files[0] });\r\n        previewFile(e.target.files[0]);\r\n    };\r\n\r\n    const previewFile = (file) => {\r\n        handleCloseBoxIcon();\r\n\r\n        if (!file) return;\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = (e) => {\r\n            const x = previewImg.concat(e.target.result);\r\n            // console.log(\"x\", x);\r\n            setPreviewImg(x);\r\n        };\r\n    };\r\n\r\n    const blockMessage = () => {\r\n        socketRef.current.emit(\"sendUpdateBlock\", {\r\n            objId: objId,\r\n            currentObjId: currentObj.objId,\r\n        });\r\n        handleCloseTool();\r\n    };\r\n\r\n    const unblockMessage = () => {\r\n        socketRef.current.emit(\"sendUpdateUnblock\", {\r\n            objId: objId,\r\n            currentObjId: currentObj.objId,\r\n        });\r\n        handleCloseTool();\r\n    };\r\n\r\n    // console.log(\"previewImg:\", previewImg);\r\n\r\n    const beforeMyObj = friends.find((ele) => ele.objId === objId);\r\n\r\n    // const myObj = friends.find((ele) => ele.objId === objId) ? ;\r\n    const myObj = beforeMyObj ? beforeMyObj : {};\r\n    // console.log(\"myObj:\", myObj);\r\n    return (\r\n        <Fragment>\r\n            <Fragment>\r\n                {/* <textarea\r\n                    onPaste={onPaste}\r\n                    id=\"pasteArea\"\r\n                    placeholder=\"Paste Image Here\"\r\n                ></textarea> */}\r\n                {currentObj && (\r\n                    <div\r\n                        className={cs(classes.boxChat, \"boxChat\", {\r\n                            [classes.hideChat]: hide === true,\r\n                        })}\r\n                        // style={{ cursor: `pointer` }}\r\n                        onClick={clickFocus}\r\n                    >\r\n                        <Card\r\n                            className={cs(classes.cardTop)}\r\n                            sx={{\r\n                                cursor: `pointer`,\r\n                            }}\r\n                        >\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar>\r\n                                        {\" \"}\r\n                                        <CardMedia\r\n                                            image={currentObj.picture}\r\n                                            title=\"Title\"\r\n                                            component=\"img\"\r\n                                            className={classes.media}\r\n                                        />\r\n                                    </Avatar>\r\n                                }\r\n                                sx={{\r\n                                    background: `#FFFFFF !important`,\r\n                                    \"&:hover\": {\r\n                                        background: `rgba(224, 224, 224, 40%) !important`,\r\n                                    },\r\n                                }}\r\n                                onClick={handleOpenTool}\r\n                                title={\r\n                                    <span>\r\n                                        <Typography\r\n                                            component={\"span\"}\r\n                                            variant={\"body2\"}\r\n                                            sx={{\r\n                                                fontSize: `15px !important`,\r\n                                                fontWeight: `500 !important`,\r\n                                            }}\r\n                                        >\r\n                                            {currentObj.name}\r\n                                        </Typography>\r\n                                        {countUnreadMessage() > 0 && (\r\n                                            <Typography\r\n                                                component={\"span\"}\r\n                                                variant={\"body2\"}\r\n                                                sx={{\r\n                                                    position: `absolute !important`,\r\n                                                    background: `#FF0000`,\r\n                                                    color: `#FFFFFF`,\r\n                                                    borderRadius: `15px !important`,\r\n                                                    fontSize: `19px !important`,\r\n                                                    left: \"-13px !important\",\r\n                                                    top: \"-9px !important\",\r\n                                                    padding:\r\n                                                        \"3px 9px !important\",\r\n                                                }}\r\n                                            >\r\n                                                {countUnreadMessage()}\r\n                                            </Typography>\r\n                                        )}\r\n                                    </span>\r\n                                }\r\n                                // subheader={`Asked at ${moment(account.uid)\r\n                                //     .tz(\"Asia/Ho_Chi_Minh\")\r\n                                //     .format(\"hh:m MMM DD, YYYY\")}`}\r\n                                subheader={\r\n                                    <span>\r\n                                        <CircleIcon\r\n                                            sx={{\r\n                                                fontSize: `9px !important`,\r\n                                                marginRight: `3px`,\r\n                                                color: currentObj.online\r\n                                                    ? `green`\r\n                                                    : \"#e0e0e0\",\r\n                                            }}\r\n                                        />\r\n                                        {currentObj.online\r\n                                            ? `Online`\r\n                                            : `Offline`}{\" \"}\r\n                                    </span>\r\n                                }\r\n                                action={\r\n                                    <IconButton\r\n                                        className={cs(\r\n                                            \"\",\r\n                                            classes.moreInQuestion\r\n                                        )}\r\n                                        onClick={handleOpen}\r\n                                    >\r\n                                        <MoreVertIcon />\r\n                                    </IconButton>\r\n                                }\r\n                                className={cs(classes.questionHeader)}\r\n                            />\r\n                        </Card>\r\n                        <div\r\n                            className={cs(classes.boxChatMessage)}\r\n                            id=\"box-chat-messenger\"\r\n                            // onScroll={onScroll}\r\n                        >\r\n                            {renderMess()}\r\n                            <div\r\n                                id=\"endMess\"\r\n                                style={{ float: \"left\", clear: \"both\" }}\r\n                                ref={messagesEnd}\r\n                            ></div>\r\n\r\n                            {openPicker && (\r\n                                <div style={{}}>\r\n                                    <Picker\r\n                                        pickerStyle={{}}\r\n                                        onEmojiClick={onEmojiClick}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        {/* <div className={cs(classes.boxImage)}>\r\n                            {previewImg.length > 0  && (\r\n                                <Fragment>\r\n                                    <div className={cs(classes.imgContainer)}>\r\n                                        <img\r\n                                            id=\"pastedImage\"\r\n                                            className={cs(classes.previewImg)}\r\n                                            src={previewImg}\r\n                                        ></img>\r\n                                        <IconButton\r\n                                            className={cs(classes.removeImage)}\r\n                                            onClick={removeImage}\r\n                                        >\r\n                                            <CloseIcon\r\n                                                sx={{\r\n                                                    fontSize: `14px !important`,\r\n                                                }}\r\n                                            />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )}\r\n                        </div> */}\r\n                        <div\r\n                            style={{\r\n                                display: \"flex !important\",\r\n                                width: \"100% !important\",\r\n                                float: \"left\",\r\n                                whiteSpace: \"nowrap !important\",\r\n                                overflow: \"auto !important\",\r\n                            }}\r\n                            className={cs(\"boxAllImg\", classes.boxAllImg)}\r\n                        >\r\n                            {previewImg.length > 0 &&\r\n                                previewImg.map((pi, i) => (\r\n                                    <div\r\n                                        className={cs(classes.boxImage)}\r\n                                        key={i}\r\n                                    >\r\n                                        <Fragment>\r\n                                            <div\r\n                                                className={cs(\r\n                                                    classes.imgContainer\r\n                                                )}\r\n                                            >\r\n                                                <img\r\n                                                    id=\"pastedImage\"\r\n                                                    className={cs(\r\n                                                        classes.previewImg\r\n                                                    )}\r\n                                                    src={pi}\r\n                                                ></img>\r\n                                                <IconButton\r\n                                                    className={cs(\r\n                                                        classes.removeImage\r\n                                                    )}\r\n                                                    onClick={() =>\r\n                                                        removeImage(i)\r\n                                                    }\r\n                                                >\r\n                                                    <CloseIcon\r\n                                                        sx={{\r\n                                                            fontSize: `12px !important`,\r\n                                                        }}\r\n                                                    />\r\n                                                </IconButton>\r\n                                            </div>\r\n                                        </Fragment>\r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n\r\n                        {currentObj &&\r\n                        currentObj.blocklist &&\r\n                        !currentObj.blocklist.includes(objId) &&\r\n                        myObj.blocklist &&\r\n                        !myObj.blocklist.includes(currentObj.objId) ? (\r\n                            <div className={cs(classes.sendBox)}>\r\n                                <div className={cs(classes.boxMore)}>\r\n                                    <IconButton onClick={handleOpenBoxIcon}>\r\n                                        <AppsIcon\r\n                                            sx={{\r\n                                                color:\r\n                                                    message.trim().length > 0 &&\r\n                                                    `#0666c4`,\r\n                                                transition: `all .5s`,\r\n                                            }}\r\n                                        />\r\n                                    </IconButton>\r\n                                </div>\r\n                                <div className={cs(classes.boxInput)}>\r\n                                    <textarea\r\n                                        className={cs(classes.textArea)}\r\n                                        value={message}\r\n                                        onKeyDown={onEnterPress}\r\n                                        onChange={handleChange}\r\n                                        onPaste={onPaste}\r\n                                        placeholder=\"Aa...\"\r\n                                        // disabled={true}\r\n                                        // autocomplete=\"off\"\r\n                                        // autocorrect=\"off\"\r\n                                        // autocapitalize=\"off\"\r\n                                        // spellcheck=\"false\"\r\n                                        autoComplete=\"off\"\r\n                                        autoCorrect=\"off\"\r\n                                        autoCapitalize=\"off\"\r\n                                        spellCheck=\"false\"\r\n                                        // ng-model-options=\"{ updateOn: 'blur' }\"\r\n                                    ></textarea>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <IconButton\r\n                                        onClick={sendMessage}\r\n                                        sx={{\r\n                                            color:\r\n                                                message.trim().length > 0 &&\r\n                                                `#1976D2`,\r\n                                            transition: `all .5s`,\r\n                                        }}\r\n                                    >\r\n                                        <SendIcon />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            myObj &&\r\n                            myObj.blocklist &&\r\n                            (myObj.blocklist.includes(currentObj.objId) ||\r\n                                (currentObj &&\r\n                                    currentObj.blocklist &&\r\n                                    currentObj.blocklist.includes(objId))) && (\r\n                                <div\r\n                                    className={cs(classes.sendBox)}\r\n                                    sx={{\r\n                                        textAlign: `center !important`,\r\n                                        width: `100% !important`,\r\n                                    }}\r\n                                >\r\n                                    <div className={cs(classes.boxInput)}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"warning\"\r\n                                            sx={{\r\n                                                fontSize: `14px !important`,\r\n                                                whiteSpace: `nowrap !important`,\r\n                                            }}\r\n                                        >\r\n                                            You now cannot send a reply to this\r\n                                            chat\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        )}\r\n\r\n                        <Menu\r\n                            id=\"simple-menu-option-view\"\r\n                            anchorEl={anchorEL}\r\n                            open={Boolean(anchorEL)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            {/* <MenuItem>\r\n                        <FavoriteIcon\r\n                            sx={{ marginRight: 1, marginTop: 0.7 }}\r\n                        />{\" \"}\r\n                        <Button>\r\n                            Hello Đan Phượng của anh...${\"<3\"}{\" \"}\r\n                        </Button>\r\n                    </MenuItem> */}\r\n                            <MenuItem onClick={hideChat}>\r\n                                {!hide ? (\r\n                                    <Fragment>\r\n                                        <span>\r\n                                            <ExpandMoreIcon\r\n                                                fontSize=\"small\"\r\n                                                sx={{\r\n                                                    marginRight: 0,\r\n                                                    marginTop: 0,\r\n                                                }}\r\n                                            />\r\n                                        </span>\r\n                                        <Button\r\n                                            sx={{\r\n                                                padding: `0 !important`,\r\n                                                \"&:focus\": {\r\n                                                    outline: `none !important`,\r\n                                                    border: `none !important`,\r\n                                                },\r\n                                            }}\r\n                                        >\r\n                                            Hide\r\n                                        </Button>\r\n                                    </Fragment>\r\n                                ) : (\r\n                                    <Fragment>\r\n                                        <span>\r\n                                            <ExpandLessIcon\r\n                                                fontSize=\"small\"\r\n                                                sx={{\r\n                                                    marginRight: 0,\r\n                                                    marginTop: 0,\r\n                                                }}\r\n                                            />\r\n                                        </span>\r\n                                        <Button\r\n                                            sx={{\r\n                                                padding: `0 !important`,\r\n                                                \"&:focus\": {\r\n                                                    outline: `none !important`,\r\n                                                    border: `none !important`,\r\n                                                },\r\n                                            }}\r\n                                        >\r\n                                            Open\r\n                                        </Button>\r\n                                    </Fragment>\r\n                                )}\r\n                            </MenuItem>\r\n                            <MenuItem onClick={close}>\r\n                                {\" \"}\r\n                                <span>\r\n                                    <CloseIcon\r\n                                        fontSize=\"small\"\r\n                                        sx={{\r\n                                            marginRight: 0,\r\n                                            marginLeft: `3px`,\r\n                                            fontSize: `16px`,\r\n                                        }}\r\n                                    />\r\n                                </span>\r\n                                <Button\r\n                                    sx={{\r\n                                        padding: `0 !important`,\r\n                                        marginTop: `3px !important`,\r\n                                        \"&:focus\": {\r\n                                            outline: `none !important`,\r\n                                            border: `none !important`,\r\n                                        },\r\n                                    }}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                            </MenuItem>\r\n                        </Menu>\r\n\r\n                        <Menu\r\n                            id=\"simple-menu-image\"\r\n                            anchorEl={anchorELBoxIcon}\r\n                            open={Boolean(anchorELBoxIcon)}\r\n                            onClose={handleCloseBoxIcon}\r\n                        >\r\n                            <MenuItem onClick={handleOpenBoxIconOpen}>\r\n                                {\r\n                                    <Fragment>\r\n                                        <span>\r\n                                            <MoodIcon\r\n                                                fontSize=\"small\"\r\n                                                sx={{\r\n                                                    marginRight: 0,\r\n                                                    marginTop: `-2px`,\r\n                                                }}\r\n                                            />\r\n                                        </span>\r\n                                        <Button\r\n                                            disableElevation={false}\r\n                                            sx={{\r\n                                                padding: `0 !important`,\r\n                                                \"&:focus\": {\r\n                                                    outline: `none !important`,\r\n                                                    border: `none !important`,\r\n                                                },\r\n                                            }}\r\n                                        >\r\n                                            Icons\r\n                                        </Button>\r\n                                    </Fragment>\r\n                                }\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                component=\"label\"\r\n                                htmlFor=\"file-input-upload-messenger\"\r\n                                // onClick={handleCloseBoxIcon}\r\n                            >\r\n                                <span>\r\n                                    <AttachFileIcon\r\n                                        fontSize=\"small\"\r\n                                        sx={{\r\n                                            marginRight: 0,\r\n                                            marginTop: `-5px`,\r\n                                        }}\r\n                                    />\r\n                                </span>\r\n                                <Button\r\n                                    sx={{\r\n                                        padding: `0 !important`,\r\n                                        \"&:focus\": {\r\n                                            outline: `none !important`,\r\n                                            border: `none !important`,\r\n                                        },\r\n                                    }}\r\n                                    disableElevation={false}\r\n                                >\r\n                                    <Typography\r\n                                        component=\"label\"\r\n                                        htmlFor=\"file-input-upload-messenger\"\r\n                                        sx={{\r\n                                            fontWeight: `450`,\r\n                                            fontSize: `16px !important`,\r\n                                            width: `100% !important`,\r\n                                        }}\r\n                                    >\r\n                                        File\r\n                                    </Typography>\r\n                                </Button>\r\n                                <input\r\n                                    id=\"file-input-upload-messenger\"\r\n                                    type=\"file\"\r\n                                    name=\"image\"\r\n                                    onChange={onChangeImage}\r\n                                    style={{ display: `none` }}\r\n                                />\r\n                            </MenuItem>\r\n                        </Menu>\r\n\r\n                        <Menu\r\n                            id=\"simple-menu-tool\"\r\n                            anchorEl={anchorELTool}\r\n                            open={Boolean(anchorELTool)}\r\n                            onClose={handleCloseTool}\r\n                        >\r\n                            {myObj &&\r\n                            myObj.blocklist &&\r\n                            !myObj.blocklist.includes(currentObj.objId) ? (\r\n                                <MenuItem\r\n                                    onClick={blockMessage}\r\n                                    sx={{\r\n                                        background: `#FFFFFF !important`,\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        <Fragment>\r\n                                            <span>\r\n                                                <BlockIcon\r\n                                                    fontSize=\"small\"\r\n                                                    sx={{\r\n                                                        marginRight: 0,\r\n                                                        marginTop: `-2px`,\r\n                                                    }}\r\n                                                />\r\n                                            </span>\r\n                                            <Button\r\n                                                disableElevation={false}\r\n                                                sx={{\r\n                                                    padding: `0 !important`,\r\n                                                    \"&:focus\": {\r\n                                                        outline: `none !important`,\r\n                                                        border: `none !important`,\r\n                                                    },\r\n                                                }}\r\n                                            >\r\n                                                Block\r\n                                            </Button>\r\n                                        </Fragment>\r\n                                    }\r\n                                </MenuItem>\r\n                            ) : (\r\n                                <MenuItem\r\n                                    onClick={unblockMessage}\r\n                                    sx={{\r\n                                        background: `#FFFFFF !important`,\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        <Fragment>\r\n                                            <span>\r\n                                                <PeopleAltIcon\r\n                                                    fontSize=\"small\"\r\n                                                    sx={{\r\n                                                        marginRight: 0,\r\n                                                        marginTop: `-2px`,\r\n                                                    }}\r\n                                                />\r\n                                            </span>\r\n                                            <Button\r\n                                                disableElevation={false}\r\n                                                sx={{\r\n                                                    // padding: `0 !important`,\r\n                                                    \"&:focus\": {\r\n                                                        outline: `none !important`,\r\n                                                        border: `none !important`,\r\n                                                    },\r\n                                                }}\r\n                                            >\r\n                                                Unblock\r\n                                            </Button>\r\n                                        </Fragment>\r\n                                    }\r\n                                </MenuItem>\r\n                            )}\r\n                            {/* <MenuItem\r\n\r\n                            // onClick={handleCloseBoxIcon}\r\n                            >\r\n                                <span>\r\n                                    <AttachFileIcon\r\n                                        fontSize=\"small\"\r\n                                        sx={{\r\n                                            marginRight: 0,\r\n                                            marginTop: `-5px`,\r\n                                        }}\r\n                                    />\r\n                                </span>\r\n                                <Button sx={{ padding: `0 !important` }}>\r\n                                    Notifications\r\n                                </Button>\r\n                            </MenuItem> */}\r\n                        </Menu>\r\n                    </div>\r\n                )}\r\n                {/* </div> */}\r\n            </Fragment>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n","import * as React from \"react\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setImageWillBeShow } from \"../../actions/messenger\";\r\nimport { CardMedia, IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport cs from \"classnames\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst style = {\r\n    position: \"absolute\",\r\n    top: \"49%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: `85% !important`,\r\n    // bgcolor: \"background.paper\",\r\n    // boxShadow: 24,\r\n    // padding: `60px 0px !important`,\r\n    p: 5,\r\n\r\n    outline: `none !important`,\r\n    border: `none !important`,\r\n    // borderBottom: `1px solid #e0e0e0`,\r\n    // borderLeft: `1px solid #e0e0e0`,\r\n    // // borderRight: `1px solid #e0e0e0`,\r\n    // boxShadow: `-5px 3px 10px #e0e0e0`,\r\n    // borderRadius: `5px`,\r\n\r\n    // height: `520px`,\r\n    // margin: `25px 0px 0px 0px !important`,\r\n\r\n    margin: `auto !important`,\r\n    [\"@media(max-width: 767px)\"]: {\r\n        width: `95%`,\r\n        margin: `auto`,\r\n\r\n        p: 1,\r\n    },\r\n    // [\"@media(min-width: 1267px)\"]: {\r\n    //     width: `95%`,\r\n    //     margin: `auto`,\r\n\r\n    //     p: 1,\r\n    // },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    closeImageShow: {\r\n        zIndex: `1000 !important`,\r\n        position: \"absolute !important\",\r\n        top: \"50% !important\",\r\n        background: \"#FFFFFF !important\",\r\n        right: \"-18px !important\",\r\n        [\"@media(max-width: 1032px)\"]: {\r\n            zIndex: `1000 !important`,\r\n            position: \"absolute !important\",\r\n            top: \"-9px !important\",\r\n            left: \"-15px !important\",\r\n        },\r\n        [\"@media(min-width: 2200px)\"]: {\r\n            zIndex: `1000 !important`,\r\n            position: \"relative !important\",\r\n            top: \"-9px !important\",\r\n            // left: \"-15px !important\",\r\n        },\r\n    },\r\n    boxImage: {\r\n        position: `relative !important`,\r\n        // outline: `none !important`,\r\n        // borderBottom: `1px solid #e0e0e0`,\r\n        // borderLeft: `1px solid #e0e0e0`,\r\n        // // borderRight: `1px solid #e0e0e0`,\r\n        // boxShadow: `-5px 3px 10px #e0e0e0`,\r\n        // borderRadius: `5px`,\r\n        [\"@media(max-width: 1032px)\"]: {\r\n            outline: `none !important`,\r\n            borderBottom: `1px solid #e0e0e0`,\r\n            borderLeft: `1px solid #e0e0e0`,\r\n            borderRight: `1px solid #e0e0e0`,\r\n            boxShadow: `0px 0px 10px 9px #e0e0e0`,\r\n\r\n            borderRadius: `5px`,\r\n            transition: `all 2s !important`,\r\n        },\r\n    },\r\n    imgShow: {\r\n        // borderBottom: `1px solid #e0e0e0 !important`,\r\n        // borderLeft: `1px solid #e0e0e0 !important`,\r\n        // // borderRight: `1px solid #e0e0e0`,\r\n        // boxShadow: `-5px 3px 10px #e0e0e0 !important`,\r\n        // borderRadius: `5px`,\r\n    },\r\n}));\r\n\r\nexport default function ImageModal() {\r\n    const classes = useStyles();\r\n    const dp = useDispatch();\r\n    const handleOpen = () => dp(setImageWillBeShow.setImageWillBeShowSuccess());\r\n    const handleClose = () =>\r\n        dp(setImageWillBeShow.setImageWillBeShowFailure());\r\n\r\n    const imageWillBeShow = useSelector(\r\n        (state) => state.messenger.imageWillBeShow\r\n    );\r\n    const openImageModal = useSelector(\r\n        (state) => state.messenger.openImageModal\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                open={openImageModal}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n                sx={{ width: `100% !important`, margin: `auto !important` }}\r\n            >\r\n                <Fade in={openImageModal}>\r\n                    <Box sx={style}>\r\n                        <Typography\r\n                            id=\"transition-modal-description\"\r\n                            className={cs(classes.boxImage)}\r\n                        >\r\n                            <img\r\n                                src={imageWillBeShow}\r\n                                alt=\"\"\r\n                                className={cs(classes.imgShow)}\r\n                            />\r\n                            <IconButton\r\n                                className={cs(classes.closeImageShow)}\r\n                                onClick={handleClose}\r\n                            >\r\n                                <CloseIcon\r\n                                    sx={{\r\n                                        fontSize: `15px !important`,\r\n                                        [\"@media(min-width: 1532px)\"]: {\r\n                                            fontSize: `24px !important`,\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            </IconButton>\r\n                        </Typography>\r\n\r\n                        {/* <Typography\r\n                            id=\"transition-modal-description\"\r\n                            sx={{ mt: 0 }}\r\n                        >\r\n                            <CardMedia\r\n                                image={imageWillBeShow}\r\n                                title=\"Title\"\r\n                                component=\"img\"\r\n                                sx={{\r\n                                    width: `50px !important`,\r\n                                    height: `50px !important`,\r\n                                }}\r\n                            />\r\n                        </Typography> */}\r\n                    </Box>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport cs from \"classnames\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport RecordVoiceOverIcon from \"@mui/icons-material/RecordVoiceOver\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\n\r\nimport {\r\n    Avatar,\r\n    Card,\r\n    CardHeader,\r\n    CardMedia,\r\n    IconButton,\r\n    Menu,\r\n    MenuItem,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport QuestionAnswerIcon from \"@mui/icons-material/QuestionAnswer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment-timezone\";\r\nimport {\r\n    openMessenger,\r\n    setCurrentObj,\r\n    setDisplay,\r\n    setViewMessenger,\r\n} from \"../../actions/messenger\";\r\nimport ForumIcon from \"@mui/icons-material/Forum\";\r\nimport GroupIcon from \"@mui/icons-material/Group\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { useCallback } from \"react\";\r\nimport { Fragment } from \"react\";\r\n\r\n// const style = {\r\n//     position: \"absolute\",\r\n//     top: \"50%\",\r\n//     left: \"50%\",\r\n//     transform: \"translate(-50%, -50%)\",\r\n//     width: `400px`,\r\n//     bgcolor: \"background.paper\",\r\n//     boxShadow: 24,\r\n//     p: 1,\r\n//     outline: `none !important`,\r\n//     // borderBottom: `1px solid #e0e0e0`,\r\n//     // borderLeft: `1px solid #e0e0e0`,\r\n//     border: `none !important`,\r\n//     // borderRight: `1px solid #e0e0e0`,\r\n//     boxShadow: `-5px 3px 10px #e0e0e0`,\r\n//     borderRadius: `5px`,\r\n//     height: `520px`,\r\n//     [\"@media(max-width: 767px)\"]: {\r\n//         width: `95%`,\r\n//         margin: `auto`,\r\n\r\n//         p: 2,\r\n//     },\r\n// };\r\nconst useStyles = makeStyles((theme) => ({\r\n    boxStatistic: {\r\n        display: `flex`,\r\n        justifyContent: `space-around`,\r\n        zIndex: `1200 !important`,\r\n    },\r\n    cardStatistic: {\r\n        width: `100%`,\r\n        marginBottom: `2px !important`,\r\n        borderRadius: `none !important`,\r\n        border: `none !important`,\r\n        outline: `none !important`,\r\n        // borderBottom: `1px solid #888`,\r\n        // borderLeft: `1px solid #888`,\r\n        boxShadow: `none !important`,\r\n        \"& div.MuiAvatar-circular\": {\r\n            width: `60px !important`,\r\n\r\n            height: `60px !important`,\r\n        },\r\n        \"&:hover\": {\r\n            cursor: `pointer !important`,\r\n            background: `#e0e0e0 !important`,\r\n        },\r\n    },\r\n    more: {\r\n        marginTop: `8px`,\r\n    },\r\n    iconButton: {\r\n        \"&:focus\": {\r\n            outline: `none !important`,\r\n            border: `none !important`,\r\n        },\r\n    },\r\n    searchInput: {\r\n        width: `100% !important`,\r\n        // paddingLeft: `-15px !important`,\r\n    },\r\n    iconButton: {\r\n        fontSize: `16px !important`,\r\n    },\r\n    previewMessage: {\r\n        display: \"inline-block\",\r\n        maxWidth: \"40ch\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        [\"@media(max-width: 766px)\"]: {\r\n            display: \"inline-block\",\r\n            maxWidth: \"45ch\",\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\",\r\n            whiteSpace: \"nowrap\",\r\n        },\r\n        [\"@media(max-width: 574px)\"]: {\r\n            display: \"inline-block\",\r\n            maxWidth: \"40ch\",\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\",\r\n            whiteSpace: \"nowrap\",\r\n        },\r\n        [\"@media(max-width: 490px)\"]: {\r\n            display: \"inline-block\",\r\n            maxWidth: \"22ch\",\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\",\r\n            whiteSpace: \"nowrap\",\r\n        },\r\n        [\"@media(max-width: 326px)\"]: {\r\n            display: \"inline-block\",\r\n            maxWidth: \"15ch\",\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\",\r\n            whiteSpace: \"nowrap !important\",\r\n        },\r\n    },\r\n}));\r\nexport default function BoxMessenger({}) {\r\n    const classes = useStyles();\r\n    const dp = useDispatch();\r\n    const objId = useSelector((state) => state.auth.account.objId);\r\n    const message = useSelector((state) => state.messenger.message);\r\n    const friends = useSelector((state) => state.messenger.friends);\r\n    const viewMessenger = useSelector((state) => state.messenger.viewMessenger);\r\n    const isOpenMessenger = useSelector(\r\n        (state) => state.messenger.isOpenMessenger\r\n    );\r\n    const currentObj = useSelector((state) => state.messenger.currentObj);\r\n\r\n    const mess = useSelector((state) => state.messenger.mess);\r\n\r\n    const [anchorEL, setAnchorEL] = useState(null);\r\n    const handleOpenMenu = (e) => {\r\n        e.stopPropagation();\r\n\r\n        // console.log(\"OPEN\");\r\n        setAnchorEL(e.currentTarget);\r\n    };\r\n\r\n    const handleCloseMenu = useCallback(() => {\r\n        setAnchorEL(null);\r\n    }, []);\r\n\r\n    const [arrDisplay, setArrDisplay] = useState([]);\r\n    const [arrMessage, setArrMessage] = useState([]);\r\n    const [searchMessage, setSearchMessage] = useState(\"\");\r\n    const [currentTarget, setCurrentTarget] = useState(\"\");\r\n\r\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n    // console.log(\"messssss\", mess);\r\n    const style = {\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        width: viewMessenger === 0 ? `500px` : `600px`,\r\n        bgcolor: \"background.paper\",\r\n        boxShadow: 24,\r\n        p: 1,\r\n        outline: `none !important`,\r\n        // borderBottom: `1px solid #e0e0e0`,\r\n        // borderLeft: `1px solid #e0e0e0`,\r\n        border: `none !important`,\r\n        // borderRight: `1px solid #e0e0e0`,\r\n        boxShadow: `0px 0px 10px #e0e0e0`,\r\n        borderRadius: `5px`,\r\n        height: `520px`,\r\n        [\"@media(max-width: 767px)\"]: {\r\n            width: `95%`,\r\n            margin: `auto`,\r\n\r\n            p: 2,\r\n        },\r\n    };\r\n    useEffect(() => {\r\n        // console.log(\"messssss11111111111111\", mess);\r\n\r\n        if (viewMessenger === 0) {\r\n            const x =\r\n                mess.length > 0 &&\r\n                mess.filter((m) => m.objIds.includes(objId) && m).reverse();\r\n            const y = [];\r\n            const z = [];\r\n            const p =\r\n                x.length > 0 &&\r\n                x.map((m, i) => {\r\n                    let checkExist = false;\r\n                    y.map((m1) => {\r\n                        // if (\r\n                        //     m1.objIds &&\r\n                        //     m1.objIds.includes(objId) &&\r\n                        //     (m1.objId === objId\r\n                        //         ? m1.objIds[1] === m.currentObjId\r\n                        //         : m1.objIds[1] === objId)\r\n                        // ) {\r\n                        //     checkExist = true;\r\n                        // }\r\n                        if (m1.objIds && m1.objIds.includes(objId)) {\r\n                            if (m1.objIds[0] === objId) {\r\n                                if (m.objIds[0] === objId) {\r\n                                    if (m1.objIds[1] === m.objIds[1]) {\r\n                                        checkExist = true;\r\n                                    }\r\n                                } else if (m.objIds[0] !== objId) {\r\n                                    if (m1.objIds[1] === m.objIds[0]) {\r\n                                        checkExist = true;\r\n                                    }\r\n                                }\r\n                            } else if (m1.objIds[0] !== objId) {\r\n                                if (m.objIds[0] === objId) {\r\n                                    if (m1.objIds[0] === m.objIds[1]) {\r\n                                        checkExist = true;\r\n                                    }\r\n                                } else if (m.objIds[0] !== objId) {\r\n                                    if (m1.objIds[0] === m.objIds[0]) {\r\n                                        checkExist = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                    if (!checkExist) {\r\n                        y.push(m);\r\n                    }\r\n                });\r\n\r\n            setArrDisplay(y);\r\n            setArrMessage(y);\r\n            // console.log(\"y loop\", y);\r\n            // console.log(\"x loop\", x);\r\n        } else {\r\n            setArrDisplay(friends);\r\n            // console.log(\"friends\", friends);\r\n        }\r\n    }, [mess, viewMessenger, friends, isOpenMessenger]);\r\n\r\n    const handleClose = () => {\r\n        setArrDisplay([]);\r\n        setSearchMessage(\"\");\r\n\r\n        dp(openMessenger.openMessengerSuccess(false));\r\n    };\r\n\r\n    const onSearchMessage = (e) => {\r\n        setSearchMessage(e.target.value);\r\n    };\r\n\r\n    const handleOpenChat = (objId) => {\r\n        // console.log(\"objId ne:\", objId);\r\n        dp(setCurrentObj.setCurrentObjSuccess(objId));\r\n        dp(setDisplay.setDisplaySuccess(true));\r\n        dp(openMessenger.openMessengerSuccess(false));\r\n        setArrDisplay([]);\r\n    };\r\n\r\n    const handleOpenChatByMenu = () => {\r\n        // console.log(\"objId ne:\", objId);\r\n        setArrDisplay([]);\r\n        dp(setCurrentObj.setCurrentObjSuccess(currentTarget));\r\n        dp(setDisplay.setDisplaySuccess(true));\r\n        handleCloseMenu();\r\n        dp(openMessenger.openMessengerSuccess(false));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (viewMessenger === 0) {\r\n            setArrDisplay(\r\n                arrMessage.filter((obj) => {\r\n                    if (obj.objId === objId) {\r\n                        if (\r\n                            obj.currentObj.name\r\n                                .toUpperCase()\r\n                                .toString()\r\n                                .indexOf(\r\n                                    searchMessage.toUpperCase().toString()\r\n                                ) >= 0\r\n                        ) {\r\n                            return obj;\r\n                        }\r\n                    } else {\r\n                        if (\r\n                            obj.name\r\n                                .toUpperCase()\r\n                                .toString()\r\n                                .indexOf(\r\n                                    searchMessage.toUpperCase().toString()\r\n                                ) >= 0\r\n                        ) {\r\n                            return obj;\r\n                        }\r\n                    }\r\n                })\r\n            );\r\n        } else if (viewMessenger === 1) {\r\n            setArrDisplay(\r\n                friends.filter((fr) => {\r\n                    if (\r\n                        fr.name\r\n                            .toUpperCase()\r\n                            .toString()\r\n                            .indexOf(searchMessage.toUpperCase().toString()) >=\r\n                        0\r\n                    ) {\r\n                        return fr;\r\n                    }\r\n                })\r\n            );\r\n        }\r\n    }, [searchMessage]);\r\n\r\n    const countUnreadMessage = (a) => {\r\n        const x =\r\n            mess.length > 0 &&\r\n            mess.filter(\r\n                (m) =>\r\n                    m.objIds.includes(objId) &&\r\n                    m.objIds.includes(a.objId) &&\r\n                    !m.seen &&\r\n                    m.objIds[0] !== objId &&\r\n                    a.objId === m.objIds[0] &&\r\n                    m\r\n            );\r\n\r\n        // console.log(\"countLengthUnreadMessage\", x);\r\n        // console.log(\"currentObj\", a);\r\n\r\n        return x.length;\r\n    };\r\n\r\n    const calculateTime = (time) => {\r\n        const x = moment.duration(moment().diff(moment(time))).asMinutes();\r\n        const y = moment.duration(moment().diff(moment(time)));\r\n        if (x < 1) return `${Math.round(y.asSeconds())} seconds`;\r\n        else if (x >= 1 && x < 60)\r\n            return `${Math.round(y.asMinutes())} minutes`;\r\n        else if (x >= 60 && x < 60 * 24)\r\n            return `${Math.round(y.asHours())} hours`;\r\n        else if (x >= 60 * 24 && x < 60 * 24 * 30)\r\n            return `${Math.round(y.asDays())} days`;\r\n        else if (x >= 24 * 30 * 60) return `${Math.round(y.asMonths())} months`;\r\n    };\r\n\r\n    // console.log(\"currentTarget\", currentTarget);\r\n    // console.log(\"currentTarget\", currentTarget);\r\n\r\n    return (\r\n        <div>\r\n            {/* <Button onClick={handleOpen}>Open modal</Button> */}\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                open={isOpenMessenger}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={isOpenMessenger}>\r\n                    <Box sx={style}>\r\n                        <div className={cs(classes.boxStatistic)}>\r\n                            <Typography\r\n                                id=\"transition-modal-title\"\r\n                                component=\"div\"\r\n                                sx={{\r\n                                    fontFamily: `'Roboto Condensed', sans-serif`,\r\n                                    borderBottom:\r\n                                        viewMessenger === 0 &&\r\n                                        `2px solid #1976D2`,\r\n                                    cursor: `pointer !important`,\r\n                                }}\r\n                                onClick={() => {\r\n                                    if (viewMessenger === 0) {\r\n                                        return;\r\n                                    }\r\n                                    setArrDisplay([]);\r\n\r\n                                    dp(\r\n                                        setViewMessenger.setViewMessengerSuccess(\r\n                                            0\r\n                                        )\r\n                                    );\r\n                                }}\r\n                                className={cs(classes.like)}\r\n                            >\r\n                                <IconButton\r\n                                    sx={{\r\n                                        color: viewMessenger === 0 && \"#1976D2\",\r\n                                        \"&:focus\": {\r\n                                            outline: `none !important`,\r\n                                            border: `none !important`,\r\n                                        },\r\n                                    }}\r\n                                    // onClick={likeQuestion}\r\n\r\n                                    // disabled={checkLiked() ? true : false}\r\n                                >\r\n                                    <ForumIcon\r\n                                        sx={{\r\n                                            color:\r\n                                                viewMessenger === 0 &&\r\n                                                \"#1976D2\",\r\n                                        }}\r\n                                    />\r\n                                </IconButton>\r\n                                Messenger\r\n                            </Typography>\r\n                            <Typography\r\n                                id=\"transition-modal-title\"\r\n                                component=\"div\"\r\n                                sx={{\r\n                                    fontFamily: `'Roboto Condensed', sans-serif`,\r\n\r\n                                    borderBottom:\r\n                                        viewMessenger === 1 &&\r\n                                        `2px solid #1976D2`,\r\n                                    cursor: `pointer !important`,\r\n                                }}\r\n                                onClick={() => {\r\n                                    if (viewMessenger === 1) {\r\n                                        return;\r\n                                    }\r\n                                    setArrDisplay([]);\r\n\r\n                                    dp(\r\n                                        setViewMessenger.setViewMessengerSuccess(\r\n                                            1\r\n                                        )\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <IconButton\r\n                                    sx={{\r\n                                        color: viewMessenger === 1 && \"#1976D2\",\r\n                                        \"&:focus\": {\r\n                                            outline: `none !important`,\r\n                                            border: `none !important`,\r\n                                        },\r\n                                    }}\r\n                                >\r\n                                    <GroupIcon\r\n                                        sx={{\r\n                                            color:\r\n                                                viewMessenger === 1 &&\r\n                                                \"#1976D2\",\r\n                                        }}\r\n                                    />\r\n                                </IconButton>\r\n                                Search friends\r\n                            </Typography>\r\n                        </div>\r\n                        <Typography\r\n                            sx={{\r\n                                mt: 1,\r\n                                textAlign: `left !important`,\r\n                                height: `90%`,\r\n\r\n                                overflowY: `auto`,\r\n                            }}\r\n                            component=\"div\"\r\n                        >\r\n                            <TextField\r\n                                id=\"search-message\"\r\n                                InputProps={{\r\n                                    readOnly: true,\r\n                                }}\r\n                                placeholder=\"Search\"\r\n                                value={searchMessage}\r\n                                onChange={onSearchMessage}\r\n                                variant=\"standard\"\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <RecordVoiceOverIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                className={classes.searchInput}\r\n                            />\r\n                            {viewMessenger === 0 &&\r\n                                arrDisplay.length > 0 &&\r\n                                arrDisplay.map((m) => (\r\n                                    <React.Fragment key={m._id}>\r\n                                        <Card\r\n                                            className={cs(\r\n                                                classes.cardStatistic\r\n                                            )}\r\n                                            onClick={() =>\r\n                                                m.objId === objId\r\n                                                    ? handleOpenChat(\r\n                                                          m.currentObj.objId\r\n                                                      )\r\n                                                    : handleOpenChat(m.objId)\r\n                                            }\r\n                                        >\r\n                                            <CardHeader\r\n                                                avatar={\r\n                                                    <Avatar>\r\n                                                        {\" \"}\r\n                                                        <CardMedia\r\n                                                            image={\r\n                                                                m.objId ===\r\n                                                                objId\r\n                                                                    ? m\r\n                                                                          .currentObj\r\n                                                                          .picture\r\n                                                                    : m.picture\r\n                                                            }\r\n                                                            title=\"Title\"\r\n                                                            component=\"img\"\r\n                                                            className={\r\n                                                                classes.media\r\n                                                            }\r\n                                                        />\r\n                                                    </Avatar>\r\n                                                }\r\n                                                // title={post.author}\r\n                                                title={\r\n                                                    <Typography\r\n                                                        component={\"span\"}\r\n                                                        variant={\"body2\"}\r\n                                                        sx={{\r\n                                                            position: `relative`,\r\n                                                            display: `block`,\r\n                                                            color:\r\n                                                                m.objId !==\r\n                                                                    objId &&\r\n                                                                !m.seen\r\n                                                                    ? `#000 !important`\r\n                                                                    : `#000 !important`,\r\n                                                            fontWeight:\r\n                                                                m.objId !==\r\n                                                                    objId &&\r\n                                                                !m.seen\r\n                                                                    ? `bold !important`\r\n                                                                    : `500 !important`,\r\n                                                        }}\r\n                                                    >\r\n                                                        {m.objId === objId\r\n                                                            ? m.currentObj.name\r\n                                                            : m.name}\r\n                                                        {countUnreadMessage(m) >\r\n                                                            0 && (\r\n                                                            <Typography\r\n                                                                component={\r\n                                                                    \"span\"\r\n                                                                }\r\n                                                                variant={\r\n                                                                    \"body2\"\r\n                                                                }\r\n                                                                sx={{\r\n                                                                    position: `relative !important`,\r\n                                                                    background: `#FF0000`,\r\n                                                                    color: `#FFFFFF`,\r\n                                                                    borderRadius: `15px !important`,\r\n                                                                    fontSize: `13px !important`,\r\n                                                                    left: `5px !important`,\r\n                                                                    top: `-5px !important`,\r\n                                                                    padding:\r\n                                                                        \"5px 7px !important\",\r\n                                                                }}\r\n                                                            >\r\n                                                                {countUnreadMessage(\r\n                                                                    m\r\n                                                                )}\r\n                                                            </Typography>\r\n                                                        )}\r\n                                                    </Typography>\r\n                                                }\r\n                                                // subheader={moment(post.updatedAt).format(\r\n                                                //     \"HH:MM MMM DD, YYYY\"\r\n                                                // )}\r\n                                                subheader={\r\n                                                    //     moment(\r\n                                                    //     people.updatedAt\r\n                                                    // )\r\n                                                    //     .tz(\"Asia/Ho_Chi_Minh\")\r\n                                                    //     .format(\r\n                                                    //         \"hh:m MMM DD, YYYY\"\r\n                                                    //     )\r\n                                                    <Fragment>\r\n                                                        <Typography\r\n                                                            component=\"span\"\r\n                                                            variant={\"body2\"}\r\n                                                            className={cs(\r\n                                                                classes.previewMessage\r\n                                                            )}\r\n                                                            sx={{\r\n                                                                color:\r\n                                                                    m.objId !==\r\n                                                                        objId &&\r\n                                                                    !m.seen &&\r\n                                                                    `#1976D2 !important`,\r\n                                                                fontWeight:\r\n                                                                    m.objId !==\r\n                                                                        objId &&\r\n                                                                    !m.seen &&\r\n                                                                    `bold !important`,\r\n                                                            }}\r\n                                                        >\r\n                                                            {`${\r\n                                                                m.objId ===\r\n                                                                objId\r\n                                                                    ? \"You\"\r\n                                                                    : m.name\r\n                                                            }: ${\r\n                                                                m.message\r\n                                                                    ? m.message\r\n                                                                    : `send ${m.pictures.length} images`\r\n                                                            }`}\r\n                                                        </Typography>\r\n                                                        <Typography\r\n                                                            component=\"span\"\r\n                                                            variant={\"body2\"}\r\n                                                            sx={{\r\n                                                                position: `relative !important`,\r\n                                                                top: `-2px !important`,\r\n\r\n                                                                fontWeight:\r\n                                                                    m.objId !==\r\n                                                                        objId &&\r\n                                                                    !m.seen\r\n                                                                        ? `550 !important`\r\n                                                                        : `500 !important`,\r\n                                                                display: `block !important`,\r\n                                                                marginLeft: `0px !important`,\r\n                                                            }}\r\n                                                        >{`${calculateTime(\r\n                                                            m.createdAt\r\n                                                        )}`}</Typography>\r\n                                                    </Fragment>\r\n                                                }\r\n                                                // action={<IconButton>{<MoreVertIcon />}</IconButton>}\r\n                                                action={\r\n                                                    <IconButton\r\n                                                        className={cs(\r\n                                                            classes.iconButton\r\n                                                        )}\r\n                                                        onClick={(e) => {\r\n                                                            m.objId === objId\r\n                                                                ? setCurrentTarget(\r\n                                                                      m\r\n                                                                          .currentObj\r\n                                                                          .objId\r\n                                                                  )\r\n                                                                : setCurrentTarget(\r\n                                                                      m.objId\r\n                                                                  );\r\n\r\n                                                            handleOpenMenu(e);\r\n                                                        }}\r\n                                                    >\r\n                                                        <MoreVertIcon\r\n                                                            className={cs(\r\n                                                                classes.more\r\n                                                            )}\r\n                                                        />\r\n                                                    </IconButton>\r\n                                                }\r\n                                                className={cs(\r\n                                                    classes.questionHeader\r\n                                                )}\r\n                                            />\r\n                                        </Card>\r\n                                    </React.Fragment>\r\n                                ))}\r\n\r\n                            {viewMessenger === 1 &&\r\n                                arrDisplay.length > 0 &&\r\n                                arrDisplay.map((m) => (\r\n                                    <React.Fragment key={m._id}>\r\n                                        <Card\r\n                                            className={cs(\r\n                                                classes.cardStatistic\r\n                                            )}\r\n                                            onClick={() =>\r\n                                                handleOpenChat(m.objId)\r\n                                            }\r\n                                        >\r\n                                            <CardHeader\r\n                                                avatar={\r\n                                                    <Avatar>\r\n                                                        {\" \"}\r\n                                                        <CardMedia\r\n                                                            image={m.picture}\r\n                                                            title=\"Title\"\r\n                                                            component=\"img\"\r\n                                                            className={\r\n                                                                classes.media\r\n                                                            }\r\n                                                        />\r\n                                                    </Avatar>\r\n                                                }\r\n                                                // title={post.author}\r\n                                                title={<span>{m.name}</span>}\r\n                                                // subheader={moment(post.updatedAt).format(\r\n                                                //     \"HH:MM MMM DD, YYYY\"\r\n                                                // )}\r\n                                                subheader={\r\n                                                    <span>\r\n                                                        <CircleIcon\r\n                                                            sx={{\r\n                                                                fontSize: `9px !important`,\r\n                                                                marginRight: `3px`,\r\n                                                                color: m.online\r\n                                                                    ? `green`\r\n                                                                    : \"#e0e0e0\",\r\n                                                            }}\r\n                                                        />\r\n                                                        {m.online\r\n                                                            ? `Online`\r\n                                                            : `Offline`}\r\n                                                    </span>\r\n                                                }\r\n                                                // action={<IconButton>{<MoreVertIcon />}</IconButton>}\r\n                                                action={\r\n                                                    <IconButton\r\n                                                        className={cs(\r\n                                                            classes.iconButton\r\n                                                        )}\r\n                                                        onClick={(e) => {\r\n                                                            setCurrentTarget(\r\n                                                                m.objId\r\n                                                            );\r\n\r\n                                                            handleOpenMenu(e);\r\n                                                        }}\r\n                                                    >\r\n                                                        <MoreVertIcon\r\n                                                            className={cs(\r\n                                                                classes.more\r\n                                                            )}\r\n                                                        />\r\n                                                    </IconButton>\r\n                                                }\r\n                                                className={cs(\r\n                                                    classes.questionHeader\r\n                                                )}\r\n                                            />\r\n                                        </Card>\r\n                                    </React.Fragment>\r\n                                ))}\r\n\r\n                            <Menu\r\n                                id=\"simple-menu-box-mess\"\r\n                                anchorEl={anchorEL}\r\n                                open={Boolean(anchorEL)}\r\n                                onClose={handleCloseMenu}\r\n                            >\r\n                                <MenuItem onClick={handleOpenChatByMenu}>\r\n                                    <span>\r\n                                        <QuestionAnswerIcon\r\n                                            fontSize=\"small\"\r\n                                            sx={{\r\n                                                marginRight: 0,\r\n                                                marginTop: `-5px`,\r\n                                            }}\r\n                                        />\r\n                                    </span>\r\n                                    <Button\r\n                                        sx={{\r\n                                            padding: `0 !important`,\r\n                                            \"&:focus\": {\r\n                                                outline: `none !important`,\r\n                                                border: `none !important`,\r\n                                            },\r\n                                        }}\r\n                                        disableElevation={false}\r\n                                    >\r\n                                        <Typography\r\n                                            component=\"label\"\r\n                                            htmlFor=\"file-input-upload-messenger\"\r\n                                            sx={{\r\n                                                fontWeight: `450`,\r\n                                                fontSize: `16px !important`,\r\n                                                width: `100% !important`,\r\n                                                paddingLeft: `5px !important`,\r\n                                            }}\r\n                                        >\r\n                                            Send message\r\n                                        </Typography>\r\n                                    </Button>\r\n                                </MenuItem>\r\n                            </Menu>\r\n                            {/* {rend()} */}\r\n\r\n                            {/* <Link to=\"/login\">\r\n                                <Button\r\n                                    sx={{\r\n                                        fontSize: `17px`,\r\n                                    }}\r\n                                >\r\n                                    Login\r\n                                </Button>\r\n                            </Link> */}\r\n                        </Typography>\r\n                    </Box>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React, {\r\n     Fragment,\r\n      useEffect,\r\n       useState, \r\n       useRef } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { updateCode } from \"../actions/code\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\nimport Code from \"./Code\";\r\nimport MainPage from \"./MainPage\";\r\nimport NotFound from \"./NotFound\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nimport Login from \"./AuthPage/Login\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Nav from \"./Nav.js\";\r\nimport Tutorial from \"../pages/tutorials/Tutorial\";\r\nimport TutorialLayout from \"../common/layout/TutorialLayout\";\r\nimport { HTML_TUTORIALS } from \"../common/constants/HTMLconstants\";\r\nimport { checkLogin } from \"../actions/login\";\r\nimport TutorialList from \"./TutorialList\";\r\nimport Sidebar from \"./Sidebar/Sidebar\";\r\nimport { CSS_TUTORIALS } from \"../common/constants/CSSconstants\";\r\nimport { JS_TUTORIALS } from \"../common/constants/JSconstants\";\r\nimport { Divider } from \"@mui/material\";\r\nimport Register from \"./AuthPage/Register\";\r\nimport ForgotPassword from \"./AuthPage/ForgotPassword\";\r\nimport HandleForgot from \"./AuthPage/HandleForgot\";\r\nimport RecoveryPassword from \"./AuthPage/RecoveryPassword\";\r\nimport AvatarUser from \"./Avatar/AvatarUser\";\r\nimport Profile from \"./AuthPage/Profile.js/Profile\";\r\nimport GetShareCode from \"./GetShareCode\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Forum from \"./Forum/Forum\";\r\nimport Question from \"./Forum/Question\";\r\nimport { getThreads, setLoadingForum } from \"../actions/forum\";\r\nimport ScrollHandler from \"./Forum/ScrollHandler\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport WifiOffIcon from \"@mui/icons-material/WifiOff\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { host } from \"../constant/axios\";\r\nimport Chat from \"./Messengers/Chat\";\r\nimport { setFriends, setId, setMess } from \"../actions/messenger\";\r\nimport ImageModal from \"./Messengers/ImageModal\";\r\nimport BoxMessenger from \"./Messengers/BoxMessenger\";\r\n\r\nvar createGuest = require(\"cross-domain-storage/guest\");\r\nvar createHost = require(\"cross-domain-storage/host\");\r\nvar storageHost = createHost([\r\n    {\r\n        // origin: \"http://localhost:3000\",\r\n        origin: \"https://focused-ritchie-73a1e5.netlify.app\",\r\n        allowedMethods: [\"get\", \"set\", \"remove\"],\r\n    },\r\n    {\r\n        // origin: \"http://localhost:3001\",\r\n        origin: \"https://serene-payne-13995e.netlify.app\",\r\n        allowedMethods: [\"get\", \"set\", \"remove\"],\r\n    },\r\n]);\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nfunction App({ updateCodeCreator, codeData, checkLoginCreator }) {\r\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n    let [html, setHtml] = useLocalStorage(\"html\", \"\");\r\n\r\n    // if (!html) {\r\n    //   setHtml(`<!DOCTYPE html>\r\n    //   <html lang=\"en\">\r\n    //   <head>\r\n    //       <meta charset=\"UTF-8\">\r\n    //       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    //       <title>Document</title>\r\n    //   </head>\r\n    //   <body>\r\n\r\n    //   </body>\r\n    //   </html>`)\r\n    // }\r\n\r\n    // const [css, setCss] = useLocalStorage(\"css\", \"\");\r\n    // const [js, setJs] = useLocalStorage(\"js\", \"\");\r\n    // const [srcDoc, setSrcDoc] = useState(\"\");\r\n\r\n    // const name = useSelector((state) => state.auth.account.name);\r\n\r\n    // useEffect(() => {\r\n    //     checkLoginCreator();\r\n    // }, [isAuthenticated]);\r\n\r\n    // if (!isAuthenticated) {\r\n    // checkLoginCreator();\r\n    // }\r\n\r\n    // checkLoginCreator();\r\n    const objId = useSelector((state) => state.auth.account.objId);\r\n\r\n    useEffect(() => {\r\n        if (!objId) {\r\n            checkLoginCreator();\r\n        }\r\n    }, [objId]);\r\n\r\n    // useEffect(() => {\r\n    //     const timeout = setTimeout(() => {\r\n    //         setSrcDoc(`\r\n    //     <html>\r\n    //       <body>${html}</body>\r\n    //       <style>${css}</style>\r\n    //       <script defer async>${js}</script>\r\n    //     </html>\r\n    //   `);\r\n    //     }, 250);\r\n\r\n    //     return () => clearTimeout(timeout);\r\n    // }, [html, css, js]);\r\n    // const status = useSelector((state) => state.view.status);\r\n\r\n    // const fullScreen = useSelector((state) => state.view.fullScreen);\r\n    // const largeScreen = useSelector((state) => state.view.largeScreen);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        codeContainer: {\r\n            // background: `#fff`,\r\n            display: `flex`,\r\n            flexDirection: `column`,\r\n            marginTop: `70px`,\r\n            transitionTimingFunction: `linear`,\r\n            transition: `all 2s`,\r\n            zIndex: `0 !important`,\r\n        },\r\n        \"@keyframes fadeInFromBot\": {\r\n            \"0%\": {\r\n                marginTop: \"500px\",\r\n            },\r\n            \"100%\": {\r\n                opacity: 1,\r\n                marginTop: \"0px\",\r\n            },\r\n        },\r\n        \"@keyframes fadeInFromLeft\": {\r\n            \"0%\": {\r\n                marginLeft: \"-700px\",\r\n            },\r\n            \"100%\": {\r\n                opacity: 1,\r\n                marginLeft: \"0px\",\r\n            },\r\n        },\r\n        topPane: {\r\n            width: \"42% !important\",\r\n            // width: \"50% !important\",\r\n            float: \"right\",\r\n            display: \"flex !important\",\r\n            flexDirection: \"column !important\",\r\n            height: \"min-content !important\",\r\n            transitionTimingFunction: `linear`,\r\n            transition: `all 2s`,\r\n            animation: `$fadeInFromLeft .5s ease-in-out`,\r\n        },\r\n        view: {\r\n            width: \"58% !important\",\r\n            // width: \"50% !important\",\r\n            float: \"left !important\",\r\n            zIndex: \"0\",\r\n            position: \"fixed !important\",\r\n            right: \"0\",\r\n            height: \"100%\",\r\n            transitionTimingFunction: `linear`,\r\n            transition: `all 2s`,\r\n            animation: `$fadeInFromBot .4s ease-in-out`,\r\n            [\"@media(max-width: 500px)\"]: {\r\n                marginTop: `1% !important`,\r\n            },\r\n        },\r\n        fullScreen: {\r\n            display: `none !important`,\r\n        },\r\n        fullHeight: {\r\n            height: `150vh`,\r\n            minHeight: `150vh`,\r\n            // overflowY: `hidden !important`,\r\n        },\r\n    }));\r\n\r\n    const renderHTMLTutorials = () =>\r\n        HTML_TUTORIALS.map((route) => {\r\n            return <TutorialLayout {...route} key={route.path} />;\r\n        });\r\n\r\n    const renderCSSTutorials = () =>\r\n        CSS_TUTORIALS.map((route) => {\r\n            return <TutorialLayout {...route} key={route.path} />;\r\n        });\r\n\r\n    const renderJSTutorials = () =>\r\n        JS_TUTORIALS.map((route) => {\r\n            return <TutorialLayout {...route} key={route.path} />;\r\n        });\r\n\r\n    const dp = useDispatch();\r\n    // dp(setLoadingForum.setLoadingForumRequest());\r\n    // dp(\r\n    //     getThreads.getThreadsRequest({\r\n    //         match: null,\r\n    //     })\r\n    // );\r\n\r\n    useEffect(() => {\r\n        var condition = navigator.onLine ? \"online\" : \"offline\";\r\n        if (condition === \"online\") {\r\n            // console.log(\"ONLINE\");\r\n            fetch(\"https://www.google.com/\", {\r\n                // Check for internet connectivity\r\n                mode: \"no-cors\",\r\n            })\r\n                .then(() => {\r\n                    // console.log(\"CONNECTED TO INTERNET\");\r\n                })\r\n                .catch(() => {\r\n                    toast(\"Your internet connectivity issue!\");\r\n                    // console.log(\"INTERNET CONNECTIVITY ISSUE\");\r\n                });\r\n        } else {\r\n            toast.warning(\r\n                <div>\r\n                    <WifiOffIcon sx={{ marginBottom: `3px` }} />\r\n                    <span\r\n                        style={{\r\n                            display: `inline-block`,\r\n                            margin: `0px 0px 0px 12px`,\r\n                        }}\r\n                    >\r\n                        You are now offline!\r\n                    </span>\r\n                </div>\r\n            );\r\n        }\r\n    }, []);\r\n\r\n    const socketRef = useRef();\r\n    // const display = useSelector((state) => state.messenger.display);\r\n\r\n    return (\r\n        // <Router>\r\n        <ConnectedRouter history={history}>\r\n            <Nav\r\n                locationForNav={history.location.pathname.split(\"/\")[1]}\r\n                socketRef={socketRef}\r\n            />\r\n\r\n            <div style={{ marginTop: 90 }}>\r\n                {/* <ToastContainer /> */}\r\n                <TutorialList />\r\n                <ToastContainer\r\n                    position=\"bottom-center\"\r\n                    autoClose={5000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                />\r\n                {/* <button\r\n                    style={{ position: `relative`, zIndex: `2500` }}\r\n                    onClick={() => {\r\n                        toast(\r\n                            <div>\r\n                                <WifiOffIcon sx={{ marginBottom: `3px` }} />\r\n                                <span\r\n                                    style={{\r\n                                        display: `inline-block`,\r\n                                        margin: `0px 0px 0px 12px`,\r\n                                    }}\r\n                                >\r\n                                    You are now offline!\r\n                                </span>\r\n                            </div>\r\n                        );\r\n                    }}\r\n                >\r\n                    ABC\r\n                </button> */}\r\n                {objId && <Chat socketRef={socketRef} />}\r\n                {objId && <BoxMessenger socketRef={socketRef} />}\r\n                <ImageModal />\r\n                <Switch>\r\n                    {/* <Route to=\"/Sidebar\" exact component={Sidebar}/> */}\r\n                    <Route\r\n                        path=\"/messenger\"\r\n                        exact\r\n                        component={({ match }) => (\r\n                            <Chat\r\n                                // scrollToBottom={scrollToBottom}\r\n                                // messagesEnd={messagesEnd}\r\n                                socketRef={socketRef}\r\n                                // // id={id}\r\n                                // setId={setId}\r\n                                // renderMess={renderMess}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <Route\r\n                        path=\"/questions/:title/:id/\"\r\n                        exact\r\n                        component={({ match }) => (\r\n                            <Redirect to={`${match.url}/1`}></Redirect>\r\n                        )}\r\n                    />\r\n                    <Route\r\n                        path=\"/questions/:title/:id/:page\"\r\n                        exact\r\n                        component={({ match }) => <Question match={match} />}\r\n                    />\r\n                    <Route\r\n                        path=\"/forum\"\r\n                        exact\r\n                        component={({ match }) => (\r\n                            <Redirect to=\"/forum/1\"></Redirect>\r\n                        )}\r\n                    />\r\n                    <Route\r\n                        path=\"/forum/:page\"\r\n                        exact\r\n                        component={({ match }) => <Forum match={match} />}\r\n                    />\r\n                    <Route\r\n                        path=\"/cs/share/:id\"\r\n                        exact\r\n                        component={({ match }) => (\r\n                            <GetShareCode match={match} />\r\n                        )}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/users/profile/:id\"\r\n                        exact\r\n                        component={({ match }) => <Profile match={match} />}\r\n                    />\r\n                    <Route\r\n                        path=\"/recover/user/pwd/:id\"\r\n                        exact\r\n                        component={({ match }) => (\r\n                            <RecoveryPassword match={match} />\r\n                        )}\r\n                    />\r\n                    <Route\r\n                        path=\"/identify/user\"\r\n                        exact\r\n                        component={ForgotPassword}\r\n                    />\r\n                    <Route\r\n                        path=\"/\"\r\n                        exact\r\n                        component={() => <Redirect to=\"/login\"></Redirect>}\r\n                    />\r\n                    <Route\r\n                        path=\"/register\"\r\n                        exact\r\n                        // render={() => {\r\n                        //     if (isAuthenticated) {\r\n                        //         return <Redirect to=\"/login\"></Redirect>;\r\n                        //     } else return <Register />;\r\n                        // }}\r\n                        component={Register}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/login\"\r\n                        exact\r\n                        component={({ match }) => <Login match={match} />}\r\n                    />\r\n                    {renderHTMLTutorials()}\r\n                    {renderCSSTutorials()}\r\n                    {renderJSTutorials()}\r\n                    {/* <Route\r\n                        path=\"/code\"\r\n                        exact\r\n                        component={({ match }) => <MainPage match={match} />}\r\n                    /> */}\r\n                    <Route\r\n                        path=\"/:id\"\r\n                        exact\r\n                        component={({ match }) => (\r\n                            <MainPage useStyles2={useStyles} match={match} />\r\n                        )}\r\n                    />\r\n                    <Route component={NotFound}></Route>\r\n                </Switch>\r\n                {/* // </Router> */}\r\n            </div>\r\n        </ConnectedRouter>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    codeData: state.code.codeData,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    updateCodeCreator: updateCode,\r\n    checkLoginCreator: checkLogin,\r\n};\r\n\r\nconst withConnect = connect(mapStateToProps, mapActionsToProps);\r\n\r\nexport default compose(withConnect)(App);\r\n","import axios from \"axios\";\r\nimport {\r\n    API,\r\n    API_LOGIN,\r\n    DELETE,\r\n    GET,\r\n    POST,\r\n    PUT,\r\n    API_USER,\r\n    API_FORUM,\r\n} from \"../../constant/axios\";\r\n\r\nexport const setAuth = (token) => {\r\n    if (token) {\r\n        return (axios.defaults.headers.common[\r\n            \"Authorization\"\r\n        ] = `Bearer ${token}`);\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport const thisAxios = (url, method, endPoint = \"\", body = null) => {\r\n    if (url === API_FORUM) {\r\n        if (method === GET) {\r\n            return axios.get(`${url}/${endPoint}`);\r\n        } else if (method === POST) {\r\n            return axios.post(`${url}/${endPoint}`, body);\r\n        }\r\n    }\r\n    if (url === API_USER) {\r\n        if (method === GET) {\r\n            return axios.get(`${url}/${endPoint}`);\r\n        } else if (method === POST) {\r\n            return axios.post(`${url}/${endPoint}`, body);\r\n        }\r\n    }\r\n    if (url === API) {\r\n        if (method === GET) {\r\n            return axios.get(`${url}/${endPoint}`);\r\n        } else if (method === POST) {\r\n            return axios.post(`${url}/${endPoint}`, body);\r\n        } else if (method === PUT) {\r\n            return axios.put(`${url}/${endPoint}`, body);\r\n        } else if (method === DELETE) {\r\n            return axios.delete(`${url}/${endPoint}`);\r\n        }\r\n    } else if (url === API_LOGIN) {\r\n        if (method === POST) {\r\n            return axios.post(`${url}/${endPoint}`, body);\r\n        }\r\n    }\r\n};\r\n","import { CODE } from \"../../constant/localStorage\"\r\n\r\nexport const getLocal = (key) => {\r\n    return localStorage.getItem(`${CODE}${key}`);\r\n}","import {\r\n    call,\r\n    fork,\r\n    take,\r\n    put,\r\n    takeLatest,\r\n    delay,\r\n    select,\r\n    takeEvery,\r\n} from \"redux-saga/effects\";\r\nimport {\r\n    getCode,\r\n    setAuthenticated,\r\n    setCode,\r\n    setError,\r\n    setUrl,\r\n    updateCode,\r\n    getProjects,\r\n    getProjectsSuccess,\r\n    setIsChanging,\r\n    setIsDeleting,\r\n    deleteProjectSuccess,\r\n} from \"../actions/code\";\r\nimport { setAuth, thisAxios } from \"../common/axios/axios\";\r\nimport { setLocal } from \"../common/LocalStorage/setLocal\";\r\nimport { getLocal } from \"../common/LocalStorage/getLocal\";\r\nimport {\r\n    API,\r\n    API_FORUM,\r\n    API_LOGIN,\r\n    API_USER,\r\n    DELETE,\r\n    GET,\r\n    POST,\r\n    PUT,\r\n    SHARE_CODE,\r\n} from \"../constant/axios\";\r\nimport { GET_CODE, UPDATE_CODE } from \"../constant/code\";\r\nimport { CSS, HTML, JS } from \"../constant/localStorage\";\r\nimport { toast } from \"react-toastify\";\r\nimport { OPEN_MODAL, OPEN_MODAL_SUCCESS } from \"../constant/modal\";\r\nimport {\r\n    closeModal,\r\n    openModalSuccess,\r\n    setProgress,\r\n    setLoading,\r\n} from \"../actions/modal\";\r\nimport {\r\n    loginFailed,\r\n    loginSuccess,\r\n    logoutSuccess,\r\n    setErrorLogin,\r\n    setNameCode,\r\n    GGLogin,\r\n    ggLogin,\r\n    fbLogin,\r\n    setPicture,\r\n    register,\r\n    setErrorStatus,\r\n    recoverPassword,\r\n    updateGID,\r\n    updateFID,\r\n    updateUID,\r\n    setObjId,\r\n    setAdmin,\r\n} from \"../actions/login\";\r\nimport { LOGIN } from \"../constant/login\";\r\nimport { push } from \"connected-react-router\";\r\nimport { setLocation } from \"../actions/tutorial\";\r\nimport { checkLastPwd } from \"../actions/login\";\r\nimport { direct, verifyUrlRecover } from \"../actions/direct\";\r\nimport { getProfile, updateProfile } from \"../actions/profile\";\r\nimport { openModalShare } from \"../actions/modalShareCode\";\r\nimport { getShareCode } from \"../actions/getShareCode\";\r\nimport {\r\n    ban,\r\n    createAnswer,\r\n    createThread,\r\n    deleteAnswer,\r\n    deleteThread,\r\n    dislike,\r\n    dislikeAnswer,\r\n    getThreads,\r\n    like,\r\n    likeAnswer,\r\n    setCircleProgress,\r\n    setLoadingForum,\r\n    setQuestion,\r\n    setQuestionLoadingForum,\r\n    setViewThread,\r\n    unban,\r\n    updateAnswer,\r\n    updateThread,\r\n    setBan,\r\n} from \"../actions/forum\";\r\n\r\nimport { setFriends } from \"../actions/messenger\";\r\n\r\nfunction* handleTest() {\r\n    try {\r\n        const res = yield call(() => thisAxios(API, GET, \"test\"));\r\n        const { html, css, js } = res.data.code;\r\n        if (res.data.status) {\r\n            // console.log(\"res:\", res.data.code[0].html);\r\n            // yield put(updateCode(html, css, js))\r\n            setLocal(HTML, html);\r\n            setLocal(CSS, css);\r\n            setLocal(JS, js);\r\n            // console.log(html, css, js);\r\n        }\r\n    } catch (err) {\r\n        toast.error(\"You don't have permission to access this page\");\r\n        setAuth(null);\r\n        localStorage.removeItem(\"access_token\");\r\n        yield put(push(\"/login\"));\r\n    }\r\n    yield put(push(\"/test\"));\r\n}\r\n\r\nfunction* handleCheckLogin() {\r\n    const auth = localStorage[\"access_token\"];\r\n    const url = yield select((state) => state.code.url);\r\n    // console.log(\"Handle Check Login\", url);\r\n\r\n    if (!auth) {\r\n        return;\r\n    }\r\n\r\n    if (auth) {\r\n        setAuth(auth);\r\n        try {\r\n            const res = yield call(() =>\r\n                thisAxios(API_LOGIN, POST, \"check-login\")\r\n            );\r\n            if (res.data.success) {\r\n                // console.log(\"CHECK LOGIN SAGA LINE 100\");\r\n\r\n                yield put(setFriends.setFriendsSuccess(res.data.friends));\r\n\r\n                yield put(loginSuccess(res.data.name));\r\n                yield put(setObjId.setObjIdSuccess(res.data.user.objId));\r\n                if (res.data.user.isAdmin) {\r\n                    yield put(setAdmin.setAdminSuccess(res.data.user.isAdmin));\r\n                } else {\r\n                    yield put(setAdmin.setAdminSuccess(false));\r\n                }\r\n                // yield put(setBan.setBanSuccess(res.data.user.isBanned));\r\n\r\n                // console.log(\"CheckLOGIN with objID\", res);\r\n                let picture;\r\n                if (res.data.picture) {\r\n                    picture = res.data.picture.toString();\r\n                } else picture = null;\r\n                yield put(setPicture.setPictureRequest(picture));\r\n                if (res.data.user.fid) {\r\n                    // console.log(\"Go into if FID\");\r\n                    yield put(updateFID.updateFIDRequest(res.data.user.fid));\r\n                } else if (res.data.user.gid) {\r\n                    // console.log(\"Go into if GID\");\r\n\r\n                    yield put(updateGID.updateGIDRequest(res.data.user.gid));\r\n                } else {\r\n                    yield put(updateUID.updateUIDRequest(res.data.user.objId));\r\n                }\r\n                // console.log(\"PICTURE:\", picture);\r\n\r\n                setAuth(auth);\r\n                // yield put(push(`/${url}`));\r\n                if (url !== \"code\") {\r\n                    try {\r\n                        const res1 = yield call(() => thisAxios(API, GET, url));\r\n                        // console.log(\"res1\", res1);\r\n                        const { html, css, js, name } = res1.data.code;\r\n                        if (res1.data.status) {\r\n                            yield put(push(`/${url}`));\r\n                        }\r\n                    } catch (err) {\r\n                        yield put(setProgress(false));\r\n                        yield put(push(`/code`));\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        } catch (err) {\r\n            // console.log(\"LINE 129 CHECK LOGIN SAGA\", err);\r\n            yield put(setProgress(false));\r\n            setAuth(null);\r\n            localStorage.removeItem(\"access_token\");\r\n            localStorage.removeItem(\"name\");\r\n            yield put(push(\"/login\"));\r\n        }\r\n    } else {\r\n        yield put(setProgress(false));\r\n        // console.log(\"Line 136: Else not auth\");\r\n        yield put(push(\"/login\"));\r\n    }\r\n}\r\n\r\nfunction* handleGetCode() {\r\n    while (true) {\r\n        let {\r\n            payload: { q },\r\n        } = yield take(GET_CODE);\r\n        // console.log(\"this is q in handleGetCodeSaga:\", q);\r\n        const auth = localStorage[\"access_token\"];\r\n        yield put(closeModal());\r\n        yield put(setError(null));\r\n        yield put(setProgress(false));\r\n        yield put(setLocation.setLocation(null));\r\n        q = q.split(\"/\")[1].trim();\r\n        if (q === \"code\") {\r\n            // console.log(\"DAU TIEN:\", q);\r\n            if (auth) {\r\n                setAuth(auth);\r\n                try {\r\n                    const res = yield call(() =>\r\n                        thisAxios(API_LOGIN, POST, \"check-login\")\r\n                    );\r\n                    if (res.data.success) {\r\n                        // console.log(\"Get Code with ObjId\", res);\r\n                        yield put(loginSuccess(res.data.name));\r\n                        // yield put(\r\n                        //     setObjId.setObjIdSuccess(res.data.user.objId)\r\n                        // );\r\n                        setAuth(auth);\r\n                    }\r\n                } catch (err) {\r\n                    setAuth(null);\r\n                    localStorage.removeItem(\"access_token\");\r\n                    localStorage.removeItem(\"name\");\r\n                    yield put(push(\"/login\"));\r\n                }\r\n            }\r\n            // console.log(auth);\r\n            localStorage.removeItem(\"name\");\r\n            yield put(setNameCode(null));\r\n            yield put(setUrl(\"code\"));\r\n\r\n            //! BELOW\r\n            yield put(push(\"/code\"));\r\n        } else if (auth && q !== \"code\") {\r\n            // console.log(\"auth && q !== code\");\r\n\r\n            setAuth(auth);\r\n            try {\r\n                const res = yield call(() =>\r\n                    thisAxios(API_LOGIN, POST, \"check-login\")\r\n                );\r\n                if (res.data.success) {\r\n                    // console.log(\"auth && q !== code success\");\r\n\r\n                    yield put(loginSuccess(res.data.name));\r\n                    setAuth(auth);\r\n                }\r\n            } catch (err) {\r\n                // console.log(\"auth && q !== code failed\");\r\n\r\n                setAuth(null);\r\n                localStorage.removeItem(\"access_token\");\r\n                yield put(push(\"/login\"));\r\n            }\r\n\r\n            try {\r\n                // console.log(\"auth && q !== code\");\r\n                const res = yield call(() => thisAxios(API, GET, q));\r\n                // console.log(\"q:\", q);\r\n                const { html, css, js, name } = res.data.code;\r\n                if (res.data.status && q !== \"code\") {\r\n                    // setHtml(html);\r\n                    // setCss(css);\r\n                    // setJs(js);\r\n                    setLocal(HTML, html);\r\n                    setLocal(CSS, css);\r\n                    setLocal(JS, js);\r\n                    yield put(setCode({ html, css, js, name }));\r\n                    // console.log(\"res ne\", res);\r\n                    yield put(setNameCode(name));\r\n                    localStorage.setItem(\"name\", res.data.code.name);\r\n                    // localStorage.setItem('access_token', JSON.stringify(auth));\r\n                    yield put(setUrl(q));\r\n\r\n                    //! RECOMMEND IN THIS BELOW\r\n                    yield put(push(`/${q}`));\r\n                    return;\r\n                }\r\n            } catch (err) {\r\n                // toast.error(\"You don't have permission to access this page\");\r\n                setAuth(null);\r\n                // localStorage.removeItem(\"access_token\");\r\n                // yield put(push(\"/code\")); // 1\r\n                yield put(push(\"/not-found/error\")); // 2\r\n            }\r\n        } else if (!auth && q !== \"code\") {\r\n            yield put(setUrl(q));\r\n            yield put(push(\"/login\"));\r\n        } else if (q === \"code\") {\r\n            yield put(push(\"/code\"));\r\n        } else {\r\n            // console.log(\"FINAl\");\r\n            setAuth(null);\r\n            localStorage.removeItem(\"access_token\");\r\n            yield put(push(\"/login\"));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleRegister(action) {\r\n    yield put(setErrorLogin(null));\r\n    yield put(setProgress(true));\r\n    yield delay(550);\r\n    try {\r\n        const res = yield call(() =>\r\n            thisAxios(API_LOGIN, POST, \"register\", action.payload)\r\n        );\r\n        if (res.data.success) {\r\n            // console.log(\"HERE\");\r\n            // yield put(loginSuccess(action.payload.name));\r\n            // localStorage.setItem(\"access_token\", res.data.accessToken);\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            // yield put(push(\"/login\"));\r\n            yield put(setErrorStatus.setErrorStatusRequest(false));\r\n            yield put(setErrorLogin(res.data.message));\r\n            // yield fork(handleGetCode);\r\n            return;\r\n        } else {\r\n            yield put(setProgress(false));\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            yield put(setErrorStatus.setErrorStatusRequest(true));\r\n            // console.log(err.response.data);\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            yield put(setErrorLogin(err.response.data.message));\r\n            return;\r\n        }\r\n    }\r\n    yield put(setProgress(false));\r\n}\r\n\r\nfunction* handleLogin(action) {\r\n    yield put(setProgress(true));\r\n    // console.log(\"Saga handleLogin run!\");\r\n    const account = action.payload;\r\n    const url = yield select((state) => state.code.url);\r\n    let res;\r\n    const auth = localStorage[\"access_token\"];\r\n    // console.log(\"CHECK LOGIN NEU DA CO AUTH:\", auth);\r\n    if (auth && url === \"code\") {\r\n        setAuth(auth);\r\n        // console.log(\"EHE\");\r\n        yield delay(380);\r\n        try {\r\n            const res1 = yield call(() =>\r\n                thisAxios(API_LOGIN, POST, \"check-login\")\r\n            );\r\n            if (res1.data.success) {\r\n                yield put(loginSuccess(res1.data.name));\r\n\r\n                //!\r\n                yield put(setObjId.setObjIdSuccess(res1.data.user.objId));\r\n                if (res1.data.user.isAdmin) {\r\n                    yield put(setAdmin.setAdminSuccess(res1.data.user.isAdmin));\r\n                } else {\r\n                    yield put(setAdmin.setAdminSuccess(false));\r\n                }\r\n\r\n                localStorage.removeItem(\"name\");\r\n                yield put(push(\"/code\"));\r\n            }\r\n        } catch (err) {\r\n            setAuth(null);\r\n            localStorage.removeItem(\"access_token\");\r\n            localStorage.removeItem(\"name\");\r\n            yield put(push(\"/login\"));\r\n        }\r\n    } else if (account !== null) {\r\n        yield delay(550);\r\n        try {\r\n            res = yield call(() =>\r\n                thisAxios(API_LOGIN, POST, \"login\", account)\r\n            );\r\n            if (res.data.success) {\r\n                const x = setAuth(res.data.accessToken);\r\n                // console.log(\"x:\", x);\r\n                localStorage.setItem(\"access_token\", res.data.accessToken);\r\n                // console.log(\"Check 1:\", res.data.accessToken);\r\n                yield put(loginSuccess(res.data.name));\r\n\r\n                // console.log(`res at login with account`, res);\r\n                yield put(setObjId.setObjIdSuccess(res.data.objId));\r\n                yield put(setAdmin.setAdminSuccess(false));\r\n\r\n                // console.log(\"Line 314 Login successfully and have code in url\");\r\n                if (url !== \"code\") {\r\n                    try {\r\n                        const res1 = yield call(() => thisAxios(API, GET, url));\r\n                        // console.log(\"res1\", res1);\r\n                        const { html, css, js, name } = res1.data.code;\r\n                        if (res1.data.status) {\r\n                            // console.log(\r\n                            //     \"Line 321 Login successfully and have code in url\"\r\n                            // );\r\n                            setLocal(HTML, html);\r\n                            setLocal(CSS, css);\r\n                            setLocal(JS, js);\r\n                            yield put(setCode({ html, css, js }));\r\n                            yield put(setNameCode(name));\r\n                            localStorage.setItem(\"name\", name);\r\n                            yield put(setProgress(false));\r\n                            yield put(push(`/${url}`));\r\n                        }\r\n                    } catch (err) {\r\n                        yield put(setProgress(false));\r\n                        yield put(push(`/code`));\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                // yield put(setProgress(false));\r\n                // yield put(push(`/${url}`));\r\n            }\r\n        } catch (err) {\r\n            if (err.response.data) {\r\n                // console.log(\"Line 346 Error\", err);\r\n                yield put(loginFailed(err.response.data));\r\n                // console.log(err.response.data);\r\n\r\n                yield put(setProgress(false));\r\n                return;\r\n            }\r\n            // console.log(\"Line 353 Error\", err);\r\n        }\r\n    } else {\r\n        yield delay(370);\r\n        yield put(setProgress(false));\r\n    }\r\n}\r\n\r\nfunction* handleChange() {}\r\n\r\nfunction* handleOpenModal(action) {\r\n    yield delay(150);\r\n    const access = localStorage.getItem(\"access_token\");\r\n    if (!access) {\r\n        yield put(setError(\"Looks like you are not logged in!\"));\r\n        // yield put(openModalSuccess());\r\n        yield delay(3000);\r\n        // yield put(closeModal());\r\n    } else {\r\n        yield put(setError(null));\r\n        // yield put(openModalSuccess());\r\n        // yield fork(handleChange);\r\n    }\r\n    // yield put(openModalSuccess());\r\n}\r\n\r\nfunction* handleUpdate(action) {\r\n    yield put(setProgress(true));\r\n    yield put(setError(null));\r\n    yield delay(300);\r\n    const isAuthenticated = yield select((state) => state.auth.isAuthenticated);\r\n    const name = action.payload;\r\n    // console.log(\"name:\", name);\r\n    const url = yield select((state) => state.code.url);\r\n    const html = JSON.parse(getLocal(HTML));\r\n    const css = JSON.parse(getLocal(CSS));\r\n    const js = JSON.parse(getLocal(JS));\r\n    const body = { html, css, js, name };\r\n    if (!html && !css && !js) {\r\n        yield delay(500);\r\n\r\n        yield put(setError(\"Write something before save\"));\r\n        yield put(setProgress(false));\r\n    } else if (isAuthenticated) {\r\n        if (url === \"code\") {\r\n            // console.log(\"in here:\", url);\r\n            try {\r\n                const res = yield call(() =>\r\n                    thisAxios(`${API}`, POST, \"create\", body)\r\n                );\r\n                if (res.data.success) {\r\n                    yield delay(300);\r\n                    yield put(setProgress(false));\r\n                    yield put(closeModal());\r\n                    yield put(setNameCode(name));\r\n                    yield put(getProjects());\r\n                    yield put(setUrl(`${res.data.url}`));\r\n                    yield put(push(`/${res.data.url}`));\r\n                }\r\n            } catch (err) {\r\n                if (err.response.data) {\r\n                    yield delay(300);\r\n\r\n                    yield put(setError(err.response.data.message));\r\n                    yield put(setProgress(false));\r\n                    // console.log(\"ERROR LA:\", err.response.data);\r\n                    return;\r\n                }\r\n            }\r\n        } else {\r\n            // console.log(\"in here:\", url);\r\n            try {\r\n                // console.log(\"body is:\", body);\r\n                const name = yield select((state) => state.auth.nameCode);\r\n                const res = yield call(() =>\r\n                    thisAxios(`${API}`, PUT, url, { html, css, js, name })\r\n                );\r\n                if (res.data.success) {\r\n                    yield delay(300);\r\n                    yield put(setProgress(false));\r\n                    yield put(setUrl(url));\r\n                    yield put(closeModal());\r\n                    yield put(getProjects());\r\n                    //! BELOW\r\n                    // yield put(push(`/${url}`));\r\n                }\r\n            } catch (err) {\r\n                if (err.response.data) {\r\n                    // console.log(err.response.data);\r\n                    yield put(setError(err.response.data.message));\r\n                    yield put(setProgress(false));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleDirect() {\r\n    yield put(setNameCode(null));\r\n    yield put(setUrl(\"code\"));\r\n    yield put(push(\"/code\"));\r\n}\r\n\r\nfunction* handleLogout() {\r\n    // const objId = yield select((state) => state.auth.account.objId);\r\n\r\n    // const res = yield call(() =>\r\n    //     thisAxios(API_LOGIN, POST, \"logout\", { objId })\r\n    // );\r\n    // yield put(setFriends.setFriendsSuccess(res.data.friends));\r\n    yield delay(300);\r\n    setAuth(null);\r\n    localStorage.removeItem(\"access_token\");\r\n    // window.FB.logout();\r\n    yield put(logoutSuccess());\r\n    yield put(push(\"/login\"));\r\n}\r\n\r\nfunction* handleGetProjects(action) {\r\n    const auth = localStorage[\"access_token\"];\r\n    yield setAuth(auth);\r\n    if (auth) {\r\n        setAuth(auth);\r\n        try {\r\n            const res = yield call(() =>\r\n                thisAxios(API_LOGIN, POST, \"check-login\")\r\n            );\r\n            if (res.data.success) {\r\n                yield put(loginSuccess(res.data.name));\r\n                let picture;\r\n                if (res.data.picture) {\r\n                    picture = res.data.picture.toString();\r\n                } else picture = null;\r\n                yield put(setPicture.setPictureRequest(picture));\r\n                // console.log(\"PICTURE:\", picture);\r\n                setAuth(auth);\r\n            }\r\n            try {\r\n                const res = yield call(() => thisAxios(API, GET, \"projects\"));\r\n                yield put(getProjectsSuccess(res.data.projects));\r\n            } catch (err) {\r\n                setAuth(null);\r\n                localStorage.removeItem(\"access_token\");\r\n                localStorage.removeItem(\"name\");\r\n                yield put(push(\"/login\"));\r\n            }\r\n        } catch (err) {\r\n            setAuth(null);\r\n            localStorage.removeItem(\"access_token\");\r\n            localStorage.removeItem(\"name\");\r\n            yield put(push(\"/login\"));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleChangeName(action) {\r\n    yield put(setError(null));\r\n    yield put(setProgress(true));\r\n    yield delay(300);\r\n    const name = action.payload;\r\n    const url = yield select((state) => state.code.url);\r\n    // console.log(name);\r\n    if (!name) {\r\n        yield delay(200);\r\n        yield put(setProgress(false));\r\n        yield put(setError(\"The name you want to update cannot be blank\"));\r\n        return;\r\n    }\r\n\r\n    setAuth(localStorage[\"access_token\"]);\r\n    const res = yield call(() =>\r\n        thisAxios(API, PUT, `change-name/${url}`, { name })\r\n    );\r\n    yield delay(350);\r\n\r\n    yield put(setIsChanging(false));\r\n    yield put(setNameCode(res.data.code.name));\r\n    yield put(setProgress(false));\r\n    yield delay(150);\r\n    yield put(setUrl(url));\r\n    yield put(closeModal());\r\n    yield put(push(`/${url}`));\r\n}\r\n\r\nfunction* handleDelete(action) {\r\n    yield put(setError(null));\r\n    yield put(setProgress(true));\r\n    yield delay(700);\r\n    const url = yield select((state) => state.code.url);\r\n    try {\r\n        const res = yield call(() => thisAxios(API, DELETE, url));\r\n        // console.log(\"DELETE:\", res);\r\n        yield put(getProjects());\r\n        yield put(setIsDeleting(false));\r\n        // yield put(deleteProjectSuccess(res.data.project));\r\n        yield put(setProgress(false));\r\n        yield put(setNameCode(null));\r\n        yield put(setUrl(\"code\"));\r\n        yield put(closeModal());\r\n\r\n        // setLocal(HTML, \"\");\r\n        // setLocal(CSS, \"\");\r\n        // setLocal(JS, \"\");\r\n        // delete all data project after delete\r\n        // yield put(\r\n        //     setCode({ html: \"\", css: \"\", js: \"\", nameCode: null, q: \"code\" })\r\n        // );\r\n        // yield put(setUrl(\"code\"));\r\n\r\n        // ! BELOW\r\n        // window.location.href = \"http://localhost:3000/code\";\r\n        yield put(push(\"/code\"));\r\n\r\n        return;\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            // console.log(err.response.data);\r\n            yield put(setError(err.response.data.message));\r\n            yield put(setProgress(false));\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleGGLogin(action) {\r\n    yield put(setProgress(true));\r\n    yield delay(500);\r\n    const {\r\n        profileObj: { email, name, imageUrl: picture, googleId: gid },\r\n        tokenId: access_token,\r\n    } = action.payload;\r\n    // console.log({ email, name, picture, gid, access_token });\r\n    const x = { email, name, picture, gid, access_token };\r\n    // console.log({ x });\r\n    setAuth(access_token);\r\n    try {\r\n        const res = yield call(() =>\r\n            thisAxios(API_LOGIN, POST, \"gg/verify\", { gid })\r\n        );\r\n        if (res.data.success) {\r\n            localStorage.setItem(\"access_token\", res.data.accessToken);\r\n            yield put(ggLogin.ggLoginSuccess(x));\r\n            yield put(setObjId.setObjIdSuccess(res.data.objId));\r\n            if (res.data.isAdmin) {\r\n                yield put(setAdmin.setAdminSuccess(res.data.isAdmin));\r\n            } else {\r\n                yield put(setAdmin.setAdminSuccess(false));\r\n            }\r\n\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            yield put(push(\"/code\"));\r\n        } else {\r\n            localStorage.removeItem(\"access_token\");\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            yield put(push(\"/login\"));\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            // console.log(err.response.data);\r\n        }\r\n    }\r\n    yield delay(500);\r\n    yield put(setProgress(false));\r\n}\r\n\r\nfunction* handleFBLogin(action) {\r\n    yield put(setProgress(true));\r\n    yield delay(500);\r\n    const {\r\n        id: fid,\r\n        name,\r\n        email,\r\n        picture: {\r\n            data: { url: picture },\r\n        },\r\n    } = action.payload;\r\n\r\n    // console.log({ fid, name, email, picture });\r\n    try {\r\n        const body = { fid, name, email: email ? email : \"\", picture };\r\n        const res = yield call(() =>\r\n            thisAxios(API_LOGIN, POST, \"fb/verify\", body)\r\n        );\r\n        if (res.data.success) {\r\n            // console.log(\"FB LOGIN SUCCESS\");\r\n            localStorage.setItem(\"access_token\", res.data.accessToken);\r\n            yield put(fbLogin.fbLoginSuccess(body));\r\n            yield put(setObjId.setObjIdSuccess(res.data.objId));\r\n            yield put(setAdmin.setAdminSuccess(false));\r\n\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            yield put(push(\"/code\"));\r\n        } else {\r\n            // console.log(\"FB LOGIN FAILURE\");\r\n            localStorage.removeItem(\"access_token\");\r\n            yield put(setProgress(false));\r\n            yield put(push(\"/login\"));\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            yield put(setProgress(false));\r\n            // console.log(err.response.data);\r\n        }\r\n        yield put(setProgress(false));\r\n    }\r\n    yield put(setProgress(false));\r\n}\r\n\r\nfunction* handleCheckLastPwd(action) {\r\n    yield put(setProgress(true));\r\n    yield delay(500);\r\n    const { email, recentPassword: password } = action.payload;\r\n    // console.log({ email, password });\r\n    try {\r\n        const res = yield call(() =>\r\n            thisAxios(API_LOGIN, POST, \"verify/last-pwd\", { email, password })\r\n        );\r\n        if (res.data.success && res.data.accessToken) {\r\n            localStorage.setItem(\"access_token\", res.data.accessToken);\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            yield put(loginSuccess(res.data.name));\r\n            yield put(push(\"/login\"));\r\n        } else {\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            yield put(setErrorStatus.setErrorStatusRequest(false));\r\n            yield put(setErrorLogin(res.data.message));\r\n        }\r\n    } catch (err) {\r\n        yield delay(500);\r\n        yield put(setProgress(false));\r\n        if (err.response.data) {\r\n            // console.log(err);\r\n            yield put(setErrorStatus.setErrorStatusRequest(true));\r\n            yield put(setErrorLogin(err.response.data.message));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleRecoverPassword(action) {\r\n    yield put(setProgress(true));\r\n    yield delay(500);\r\n    const { newPassword, confirmPassword, url } = action.payload;\r\n    const body = { newPassword, confirmPassword, url };\r\n    try {\r\n        const res = yield call(() => thisAxios(API_LOGIN, POST, url, body));\r\n        if (res.data.success && res.data.accessToken) {\r\n            yield delay(500);\r\n            yield put(setProgress(false));\r\n            yield put(setErrorStatus.setErrorStatusRequest(false));\r\n            yield put(setErrorLogin(res.data.message));\r\n            yield delay(2900);\r\n            yield put(setProgress(true));\r\n            yield put(direct.directSuccess(5));\r\n            yield delay(5200);\r\n            localStorage.setItem(\"access_token\", res.data.accessToken);\r\n            yield put(loginSuccess(res.data.name));\r\n            yield put(push(\"/login\"));\r\n\r\n            // console.log(body);\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            yield delay(500);\r\n            // console.log(err.response.data);\r\n            yield put(setProgress(false));\r\n            yield put(setErrorStatus.setErrorStatusRequest(true));\r\n            yield put(setErrorLogin(err.response.data.message));\r\n            yield delay(2900);\r\n            if (err.response.data.redirect) {\r\n                yield put(setProgress(true));\r\n                yield put(direct.directSuccess(5));\r\n                yield delay(5200);\r\n                yield put(setProgress(false));\r\n                yield put(direct.directFailure(false));\r\n                yield put(setErrorLogin(null));\r\n                yield put(push(\"/identify/user\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleVerifyUrl(action) {\r\n    const { url } = action.payload;\r\n    // console.log(\"Url after dispatch:\", url);\r\n    yield put(setProgress(true));\r\n    // yield put(\r\n    //     verifyUrlRecover.verifyUrlRecoverSuccess({\r\n    //         isVerify: true,\r\n    //         isWaiting: false,\r\n    //         message: \"We're setting for you! Please wait in a second\",\r\n    //     })\r\n    // );\r\n    yield delay(500);\r\n    try {\r\n        const res = yield call(() =>\r\n            thisAxios(API_LOGIN, POST, `check/${url}`)\r\n        );\r\n        if (res.data.success) {\r\n            yield delay(4000);\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: res.data.message,\r\n                })\r\n            );\r\n            yield put(direct.directSuccess(\"\"));\r\n            yield delay(2900);\r\n            yield put(direct.directFailure(false));\r\n            yield put(direct.directSuccess(5));\r\n            yield delay(5700);\r\n            yield put(setProgress(false));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: false,\r\n                    isWaiting: false,\r\n                    message: \"\",\r\n                })\r\n            );\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data && err.response.data.redirect) {\r\n            yield delay(4000);\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: \"Please wait! We're setting for you...\",\r\n                })\r\n            );\r\n            yield put(direct.directSuccess(\"\"));\r\n            yield delay(4000);\r\n            yield put(direct.directFailure(false));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    // message: err.response.data.message,\r\n                    message:\r\n                        \"This session has expired or it might be used! Auto return in 5 seconds\",\r\n                })\r\n            );\r\n            yield delay(4000);\r\n            yield put(direct.directSuccess(5));\r\n            yield delay(5700);\r\n            yield put(setProgress(false));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: \"\",\r\n                })\r\n            );\r\n            yield put(push(\"/identify/user\"));\r\n        } else {\r\n            yield delay(4000);\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: \"Please wait! We're setting for you...\",\r\n                })\r\n            );\r\n            yield put(direct.directSuccess(\"\"));\r\n            yield delay(4000);\r\n            yield put(direct.directFailure(false));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    // message: err.response.data.message,\r\n                    message:\r\n                        \"This session has expired or it might be used! Auto return in 5 seconds\",\r\n                })\r\n            );\r\n            yield delay(4000);\r\n            yield put(direct.directSuccess(5));\r\n            yield delay(5700);\r\n            yield put(setProgress(false));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: \"\",\r\n                })\r\n            );\r\n            yield put(push(\"/identify/user\"));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleGetProfile(action) {\r\n    const url = action.payload.url;\r\n    const auth = localStorage[\"access_token\"];\r\n    yield put(setProgress(true));\r\n\r\n    try {\r\n        setAuth(auth);\r\n        const res = yield call(() =>\r\n            thisAxios(API_USER, GET, `profile/${url}}`)\r\n        );\r\n        if (res.data.success) {\r\n            // console.log(\"CHECK handleGetPRofile LINE 819\");\r\n\r\n            // console.log(res);\r\n            yield delay(2000);\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: res.data.message,\r\n                })\r\n            );\r\n            yield put(direct.directSuccess(\"\"));\r\n            yield delay(2000);\r\n            yield put(direct.directFailure(false));\r\n            yield put(direct.directSuccess(2));\r\n            yield delay(2100);\r\n            yield put(setProgress(false));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: false,\r\n                    isWaiting: false,\r\n                    message: \"\",\r\n                })\r\n            );\r\n            // console.log(\"CHECK handleGetPRofile LINE 843\");\r\n\r\n            if (res.data.user.password) {\r\n                res.data.user.password = res.data.user.password.slice(0, 18);\r\n            } else\r\n                res.data.user.password =\r\n                    Math.random() * 1000000000 + res.data.user.objId;\r\n            yield put(updateProfile.updateProfileSuccess(res.data.user));\r\n            return;\r\n        }\r\n    } catch (err) {\r\n        // console.log(\"error lan 1\", err);\r\n        yield delay(4000);\r\n        yield put(\r\n            verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                isVerify: true,\r\n                isWaiting: false,\r\n                message: \"Please wait! We're setting for you...\",\r\n            })\r\n        );\r\n        yield put(direct.directSuccess(\"\"));\r\n        yield delay(4000);\r\n        yield put(direct.directFailure(false));\r\n        // console.log(\"CHECK handleGetPRofile LINE 859\");\r\n\r\n        yield put(\r\n            verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                isVerify: true,\r\n                isWaiting: false,\r\n                // message: err.response.data.message,\r\n                message: \"Sorry! Looks like something went wrong! Return in 5s\",\r\n            })\r\n        );\r\n        yield delay(4000);\r\n        yield put(direct.directSuccess(5));\r\n        yield delay(5700);\r\n        yield put(setProgress(false));\r\n        yield put(\r\n            verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                isVerify: true,\r\n                isWaiting: false,\r\n                message: \"\",\r\n            })\r\n        );\r\n        // console.log(\"Eror lan 2\", err);\r\n    }\r\n    localStorage.setItem(\"access_token\", \"\");\r\n    yield put(loginFailed(\"\"));\r\n    yield put(push(\"/login\"));\r\n}\r\n\r\nfunction* handleUpdateProfile(action) {\r\n    const {\r\n        account: { name, job, country, phone, picture, fid, gid },\r\n        url,\r\n    } = action.payload;\r\n    // console.log(\"FID la: \", fid);\r\n    // console.log(\"GID la: \", gid);\r\n    const auth = localStorage[\"access_token\"];\r\n    setAuth(auth);\r\n    yield put(setProgress(true));\r\n    yield delay(1500);\r\n    try {\r\n        const res = yield call(() =>\r\n            thisAxios(API_USER, POST, `profile/${url}`, {\r\n                name,\r\n                job,\r\n                picture,\r\n                country,\r\n                phone,\r\n                fid,\r\n                gid,\r\n            })\r\n        );\r\n        if (res.data.success) {\r\n            yield delay(250);\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: res.data.message,\r\n                })\r\n            );\r\n            yield put(direct.directSuccess(\"\"));\r\n            yield delay(2000);\r\n            yield put(direct.directFailure(false));\r\n            yield put(direct.directSuccess(2));\r\n            yield delay(2100);\r\n            yield put(setProgress(false));\r\n            yield put(updateProfile.updateProfileSuccess(res.data.user));\r\n            yield put(loginSuccess(name));\r\n            yield put(setPicture.setPictureRequest(res.data.user.picture));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: false,\r\n                    isWaiting: false,\r\n                    message: \"\",\r\n                })\r\n            );\r\n            yield put(push(`/users/profile/${url}`));\r\n        }\r\n    } catch (err) {\r\n        // console.log(err);\r\n        yield delay(1500);\r\n        yield put(\r\n            verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                isVerify: true,\r\n                isWaiting: false,\r\n                message: \"Looks like something went wrong...\",\r\n            })\r\n        );\r\n        yield put(direct.directSuccess(\"\"));\r\n        yield delay(1500);\r\n        yield put(direct.directFailure(false));\r\n\r\n        yield put(\r\n            verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                isVerify: true,\r\n                isWaiting: false,\r\n                // message: err.response.data.message,\r\n                message:\r\n                    \"Your name should be long than 5 characters! Auto Return in 5s\",\r\n            })\r\n        );\r\n        yield delay(2000);\r\n        yield put(direct.directSuccess(5));\r\n        yield delay(5200);\r\n        yield put(setProgress(false));\r\n        yield put(\r\n            verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                isVerify: false,\r\n                isWaiting: false,\r\n                message: \"\",\r\n            })\r\n        );\r\n        // yield put(push(`/code`));\r\n        yield put(push(`/users/profile/${url}`));\r\n    }\r\n    yield put(push(`/users/profile/${url}`));\r\n}\r\n\r\nfunction* handleOpenModalShare(action) {\r\n    const url = action.payload;\r\n    try {\r\n        const res = yield call(() => thisAxios(API, POST, `share/${url}`));\r\n        if (res.data.success) {\r\n            yield delay(2200);\r\n            // console.log(\"Res successfully\", res);\r\n            yield put(\r\n                openModalShare.openModalShareSuccess(\r\n                    `${SHARE_CODE}/${res.data.endLink}`\r\n                )\r\n            );\r\n            return;\r\n        }\r\n    } catch (err) {\r\n        yield put(openModalShare.openModalShareFailure());\r\n        // console.log(err);\r\n    }\r\n}\r\n\r\nfunction* handleGetShareCode(action) {\r\n    yield put(setProgress(true));\r\n    yield delay(1500);\r\n    const id = action.payload;\r\n    try {\r\n        const res = yield call(() => thisAxios(API, POST, `cs/share/${id}`));\r\n        if (res.data.success) {\r\n            const { html, css, js } = res.data.code;\r\n            // console.log({ html, css, js });\r\n            yield delay(1500);\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: res.data.message,\r\n                })\r\n            );\r\n            yield put(direct.directSuccess(\"\"));\r\n            yield delay(1000);\r\n            yield put(direct.directFailure(false));\r\n            yield put(direct.directSuccess(2));\r\n            yield delay(2100);\r\n            yield put(setProgress(false));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: false,\r\n                    isWaiting: false,\r\n                    message: \"\",\r\n                })\r\n            );\r\n            setLocal(HTML, html);\r\n            setLocal(CSS, css);\r\n            setLocal(JS, js);\r\n            yield put(setCode({ html, css, js }));\r\n            yield put(getShareCode.getShareCodeSuccess());\r\n\r\n            yield put(push(\"/code\"));\r\n            return;\r\n            // yield put(push(`/users/profile/${url}`));\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            // console.log(\"err data\", err);\r\n\r\n            yield delay(1500);\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: true,\r\n                    isWaiting: false,\r\n                    message: err.response.data.message,\r\n                })\r\n            );\r\n            yield put(direct.directSuccess(\"\"));\r\n            yield delay(2000);\r\n            yield put(direct.directFailure(false));\r\n            yield put(direct.directSuccess(2));\r\n            yield delay(2100);\r\n            yield put(setProgress(false));\r\n            yield put(\r\n                verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                    isVerify: false,\r\n                    isWaiting: false,\r\n                    message: \"\",\r\n                })\r\n            );\r\n            yield put(getShareCode.getShareCodeFailure());\r\n            yield put(push(\"/code\"));\r\n            return;\r\n        }\r\n        // else\r\n        // console.log(\"err except\", err);\r\n        yield delay(1500);\r\n        yield put(\r\n            verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                isVerify: true,\r\n                isWaiting: false,\r\n                message: err.response.data.message,\r\n            })\r\n        );\r\n        yield put(direct.directSuccess(\"\"));\r\n        yield delay(2000);\r\n        yield put(direct.directFailure(false));\r\n        yield put(direct.directSuccess(2));\r\n        yield delay(2100);\r\n        yield put(setProgress(false));\r\n        yield put(\r\n            verifyUrlRecover.verifyUrlRecoverSuccess({\r\n                isVerify: false,\r\n                isWaiting: false,\r\n                message: \"\",\r\n            })\r\n        );\r\n        yield put(getShareCode.getShareCodeFailure());\r\n        yield put(push(\"/code\"));\r\n        return;\r\n    }\r\n}\r\n\r\nfunction* handleCreateThread(action) {\r\n    const { title, content } = action.payload;\r\n    // yield put(setProgress(true));\r\n    yield put(setCircleProgress.setCircleProgressSuccess(true));\r\n    yield delay(1200);\r\n\r\n    if (!title || title.toString().trim().length <= 27) {\r\n        yield put(\r\n            createThread.createThreadFailure(\r\n                \"Title must be longer than 27 characters\"\r\n            )\r\n        );\r\n        // yield put(setProgress(false));\r\n        yield put(setCircleProgress.setCircleProgressSuccess(false));\r\n\r\n        return;\r\n    }\r\n    if (!content || content.toString().trim().length <= 37) {\r\n        yield put(\r\n            createThread.createThreadFailure(\r\n                \"Your question must be longer than 37 characters\"\r\n            )\r\n        );\r\n        yield put(setCircleProgress.setCircleProgressSuccess(false));\r\n\r\n        // yield put(setProgress(false));\r\n\r\n        return;\r\n    }\r\n    try {\r\n        const res = yield call(() =>\r\n            thisAxios(API_FORUM, POST, \"create-thread\", { title, content })\r\n        );\r\n        if (res.data.success) {\r\n            yield put(createThread.createThreadSuccess(res.data.thread));\r\n            yield put(setCircleProgress.setCircleProgressSuccess(false));\r\n            // yield put(setProgress(false));\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            // console.log(err.response.response);\r\n            yield put(setCircleProgress.setCircleProgressSuccess(false));\r\n\r\n            yield delay(1200);\r\n            yield put(\r\n                createThread.createThreadFailure(err.response.data.message)\r\n            );\r\n            // yield put(setProgress(false));\r\n            return;\r\n        }\r\n    }\r\n}\r\nfunction ChangeToSlug(title) {\r\n    var slug;\r\n\r\n    //Lấy text từ thẻ input title\r\n\r\n    //Đổi chữ hoa thành chữ thường\r\n    slug = title\r\n        .toLowerCase()\r\n        .replace(/ /g, \"-\")\r\n        .replace(/[^\\w-]+/g, \"\");\r\n    return slug;\r\n}\r\nfunction* handleGetThreads(action) {\r\n    const { match } = action.payload;\r\n    // console.log(\"match\", match);\r\n    yield put(setProgress(true));\r\n    yield put(setLoadingForum.setLoadingForumRequest());\r\n    try {\r\n        const res = yield call(() => thisAxios(API_FORUM, GET, \"\"));\r\n        if (res.data.success) {\r\n            const { threads, answers, likes, dislikes } = res.data;\r\n            // yield put(\r\n            //     getThreads.getThreadsSuccess({\r\n            //         threads,\r\n            //         answers,\r\n            //     })\r\n            // );\r\n\r\n            // yield put(setLoadingForum.setLoadingForumSuccess(false));\r\n            // yield put(\r\n            //     setQuestionLoadingForum.setQuestionLoadingForumSuccess(false)\r\n            // );\r\n\r\n            if (match !== null) {\r\n                // console.log(\"threads\", threads);\r\n                const find = threads.find(\r\n                    (thread) =>\r\n                        `/questions/${ChangeToSlug(match.params.title)}/${\r\n                            match.params.id\r\n                        }` ===\r\n                        `/questions/${ChangeToSlug(thread.title)}/${thread._id}`\r\n                );\r\n\r\n                if (find) {\r\n                    yield put(setQuestion.setQuestionSuccess(find));\r\n                    yield put(setLoadingForum.setLoadingForumSuccess(false));\r\n                    yield put(\r\n                        setQuestionLoadingForum.setQuestionLoadingForumSuccess(\r\n                            false\r\n                        )\r\n                    );\r\n                    yield put(\r\n                        getThreads.getThreadsSuccess({\r\n                            threads,\r\n                            answers,\r\n                            likes,\r\n                            dislikes,\r\n                        })\r\n                    );\r\n\r\n                    yield put(setProgress(false));\r\n                    return;\r\n                } else {\r\n                    yield put(setProgress(false));\r\n                    yield put(push(\"/not-found/error\"));\r\n                    return;\r\n                }\r\n            }\r\n            // yield put(\r\n            //     verifyUrlRecover.verifyUrlRecoverSuccess({\r\n            //         isVerify: true,\r\n            //         isWaiting: false,\r\n            //         message: \"Please wait! Almost ready...\",\r\n            //     })\r\n            // );\r\n            // yield put(direct.directSuccess(\"\"));\r\n            // yield delay(700);\r\n            // yield put(direct.directFailure(false));\r\n\r\n            yield put(setLoadingForum.setLoadingForumSuccess(false));\r\n\r\n            yield put(\r\n                getThreads.getThreadsSuccess({\r\n                    threads,\r\n                    answers,\r\n                    likes,\r\n                    dislikes,\r\n                })\r\n            );\r\n            // yield put(direct.directSuccess(0));\r\n            yield put(setProgress(false));\r\n            // yield put(\r\n            //     verifyUrlRecover.verifyUrlRecoverSuccess({\r\n            //         isVerify: false,\r\n            //         isWaiting: false,\r\n            //         message: \"\",\r\n            //     })\r\n            // );\r\n            // yield put(setProgress(false));\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            // console.log(err.response.data);\r\n            yield put(getThreads.getThreadsFailure());\r\n            yield put(setLoadingForum.setLoadingForumSuccess(false));\r\n\r\n            return;\r\n        }\r\n        // console.log(\"err\", err);\r\n    }\r\n}\r\n\r\nfunction* handleCreateAnswer(action) {\r\n    const { id: questionId, text: content } = action.payload;\r\n    yield put(setCircleProgress.setCircleProgressSuccess(true));\r\n    yield delay(1200);\r\n    if (!content || content.toString().trim().length <= 37) {\r\n        yield put(\r\n            createAnswer.createAnswerFailure(\r\n                \"Your answer must be longer than 37 characters\"\r\n            )\r\n        );\r\n        yield put(setCircleProgress.setCircleProgressSuccess(false));\r\n\r\n        return;\r\n    }\r\n    try {\r\n        setAuth(localStorage[\"access_token\"]);\r\n        const res = yield call(() =>\r\n            thisAxios(API_FORUM, POST, \"create-answer\", { questionId, content })\r\n        );\r\n        if (res.data.success) {\r\n            yield put(createAnswer.createAnswerSuccess(res.data.answer));\r\n            // console.log(res.data.answer);\r\n            yield put(setCircleProgress.setCircleProgressSuccess(false));\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            // console.log(\"err\", err);\r\n            yield put(\r\n                createAnswer.createAnswerFailure(err.response.data.message)\r\n            );\r\n            yield put(setCircleProgress.setCircleProgressSuccess(false));\r\n\r\n            return;\r\n        }\r\n        // console.log(err);\r\n    }\r\n}\r\n\r\nfunction* handleUpdateAnswer(action) {\r\n    const { currentAnswer, text: content } = action.payload;\r\n    yield put(setCircleProgress.setCircleProgressSuccess(true));\r\n    yield delay(1200);\r\n    if (!content || content.toString().trim().length <= 37) {\r\n        yield put(\r\n            updateAnswer.updateAnswerFailure(\r\n                \"Your answer must be longer than 37 characters\"\r\n            )\r\n        );\r\n        yield put(setCircleProgress.setCircleProgressSuccess(false));\r\n        // yield delay(2000);\r\n        // yield put(push(`/#section${currentAnswer._id}`));\r\n        return;\r\n    }\r\n    try {\r\n        setAuth(localStorage[\"access_token\"]);\r\n        const res = yield call(() =>\r\n            thisAxios(API_FORUM, POST, \"update-answer\", {\r\n                currentAnswer,\r\n                content,\r\n            })\r\n        );\r\n        // console.log(\"res 1378\", res);\r\n        if (res.data.success) {\r\n            yield put(updateAnswer.updateAnswerSuccess(res.data.answerUpdated));\r\n            // console.log(\"res.data.answerUpdated\", res.data.answerUpdated);\r\n            yield put(setCircleProgress.setCircleProgressSuccess(false));\r\n        }\r\n        return;\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            // console.log(\"err\", err);\r\n            yield put(\r\n                updateAnswer.updateAnswerFailure(err.response.data.message)\r\n            );\r\n            yield put(setCircleProgress.setCircleProgressSuccess(false));\r\n            return;\r\n        }\r\n        // yield put(setCircleProgress.setCircleProgressSuccess(false));\r\n        // console.log(\"err\", err);\r\n    }\r\n}\r\n\r\nfunction* handleDeleteAnswer(action) {\r\n    const { currentAnswer } = action.payload;\r\n    yield put(setProgress(true));\r\n    yield delay(1200);\r\n    try {\r\n        setAuth(localStorage[\"access_token\"]);\r\n        const res = yield call(() =>\r\n            thisAxios(API_FORUM, POST, \"delete-answer\", {\r\n                currentAnswer,\r\n            })\r\n        );\r\n        // console.log(\"res 1409\", res);\r\n        if (res.data.success) {\r\n            yield put(deleteAnswer.deleteAnswerSuccess(res.data.deletedAnswer));\r\n            // console.log(\"res.data.deletedAnswer\", res.data.deletedAnswer);\r\n            yield put(setProgress(false));\r\n        }\r\n        return;\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            yield put(\r\n                deleteAnswer.deleteAnswerFailure(err.response.data.message)\r\n            );\r\n            yield put(setProgress(false));\r\n            // console.log(\"err\", err);\r\n        }\r\n        // yield put(\r\n        //     deleteAnswer.deleteAnswerFailure(\r\n        //         \"Something went wrong! Try again later..\"\r\n        //     )\r\n        // );\r\n        // yield put(setProgress(false));\r\n        // console.log(\"err\", err);\r\n    }\r\n}\r\n\r\nfunction* handleUpdateThread(action) {\r\n    const { title, content, id } = action.payload;\r\n    // yield put(setProgress(true));\r\n    yield put(setCircleProgress.setCircleProgressSuccess(true));\r\n    yield delay(1200);\r\n\r\n    if (!title || title.toString().trim().length <= 27) {\r\n        yield put(\r\n            createThread.createThreadFailure(\r\n                \"Title must be longer than 27 characters\"\r\n            )\r\n        );\r\n        // yield put(setProgress(false));\r\n        yield put(setCircleProgress.setCircleProgressSuccess(false));\r\n\r\n        return;\r\n    }\r\n    if (!content || content.toString().trim().length <= 37) {\r\n        yield put(\r\n            createThread.createThreadFailure(\r\n                \"Your question must be longer than 37 characters\"\r\n            )\r\n        );\r\n        yield put(setCircleProgress.setCircleProgressSuccess(false));\r\n\r\n        // yield put(setProgress(false));\r\n\r\n        return;\r\n    }\r\n    try {\r\n        const res = yield call(() =>\r\n            thisAxios(API_FORUM, POST, \"update-thread\", { title, content, id })\r\n        );\r\n        if (res.data.success) {\r\n            yield put(updateThread.updateThreadSuccess(res.data.updatedThread));\r\n            yield put(setCircleProgress.setCircleProgressSuccess(false));\r\n            // yield put(setProgress(false));\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            // console.log(err.response.data);\r\n            yield put(setCircleProgress.setCircleProgressSuccess(false));\r\n\r\n            yield delay(1200);\r\n            yield put(\r\n                updateThread.updateThreadFailure(err.response.data.message)\r\n            );\r\n            // yield put(setProgress(false));\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleDeleteThread(action) {\r\n    const { id } = action.payload;\r\n    yield put(setProgress(true));\r\n    yield delay(1200);\r\n    try {\r\n        setAuth(localStorage[\"access_token\"]);\r\n        const res = yield call(() =>\r\n            thisAxios(API_FORUM, POST, \"delete-thread\", {\r\n                id,\r\n            })\r\n        );\r\n        // console.log(\"res 1495\", res);\r\n        if (res.data.success) {\r\n            // console.log(\"res.data.deletedAnswer\", res.data.deletedThread);\r\n            yield put(setProgress(false));\r\n            yield put(push(\"/forum\"));\r\n            yield put(\r\n                deleteThread.deleteThreadSuccess({\r\n                    deletedThread: res.data.deletedThread,\r\n                    deletedAnswers: res.data.deletedAnswers,\r\n                })\r\n            );\r\n        }\r\n        return;\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            yield put(\r\n                deleteThread.deleteThreadFailure(err.response.data.message)\r\n            );\r\n            yield put(setProgress(false));\r\n            // console.log(\"err\", err);\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleSetViewThread(action) {\r\n    const id = action.payload;\r\n    try {\r\n        const res = yield call(() =>\r\n            thisAxios(API_FORUM, POST, \"set/view-thread\", { id })\r\n        );\r\n        if (res.data.success) {\r\n            yield put(setViewThread.setViewThreadSuccess(id));\r\n        }\r\n    } catch (err) {\r\n        // console.log(err);\r\n    }\r\n}\r\n\r\nfunction* handleLike(action) {\r\n    // yield delay(500);\r\n    const { question, objId, answer } = action.payload;\r\n    // console.log(\"1538\", question, objId, \"answer\", answer);\r\n    try {\r\n        setAuth(localStorage[\"access_token\"]);\r\n        const res = yield call(() =>\r\n            thisAxios(API_FORUM, POST, \"like/question\", {\r\n                questionId: question._id,\r\n                answer,\r\n                objId,\r\n            })\r\n        );\r\n        if (res.data.success) {\r\n            yield put(\r\n                like.likeSuccess({\r\n                    like: res.data.like,\r\n                    cancelLike: res.data.cancelLike,\r\n                    likes: res.data.likes,\r\n                    dislikes: res.data.dislikes,\r\n                })\r\n            );\r\n            // console.log(\"Like\", res.data.like);\r\n        }\r\n    } catch (err) {\r\n        // console.log(\"err\", err);\r\n    }\r\n}\r\n\r\nfunction* handleDislike(action) {\r\n    // yield delay(500);\r\n\r\n    const { question, objId, answer } = action.payload;\r\n    // console.log(\"1538\", question, objId);\r\n    try {\r\n        setAuth(localStorage[\"access_token\"]);\r\n        const res = yield call(() =>\r\n            thisAxios(API_FORUM, POST, \"dislike/question\", {\r\n                questionId: question._id,\r\n                answer,\r\n                objId,\r\n            })\r\n        );\r\n        if (res.data.success) {\r\n            yield put(\r\n                dislike.dislikeSuccess({\r\n                    dislike: res.data.dislike,\r\n                    cancelDislike: res.data.cancelDislike,\r\n                    likes: res.data.likes,\r\n                    dislikes: res.data.dislikes,\r\n                })\r\n            );\r\n            // console.log(\"Like\", res.data.dislike);\r\n        }\r\n    } catch (err) {\r\n        // console.log(\"err\", err);\r\n    }\r\n}\r\n\r\nfunction* handleLikeAnswer(action) {\r\n    // yield delay(500);\r\n\r\n    const { questionId, objId, answerId } = action.payload;\r\n    // console.log(\"1538\", questionId, objId, \"answer\", answerId);\r\n    // return;\r\n    try {\r\n        setAuth(localStorage[\"access_token\"]);\r\n        const res = yield call(() =>\r\n            thisAxios(API_FORUM, POST, \"like/answer\", {\r\n                questionId,\r\n                answerId,\r\n                objId,\r\n            })\r\n        );\r\n        if (res.data.success) {\r\n            yield put(\r\n                likeAnswer.likeAnswerSuccess({\r\n                    like: res.data.like,\r\n                    cancelLike: res.data.cancelLike,\r\n                    likes: res.data.likes,\r\n                    dislikes: res.data.dislikes,\r\n                })\r\n            );\r\n            // console.log(\"Like\", res.data.like);\r\n        }\r\n    } catch (err) {\r\n        // console.log(\"err\", err);\r\n    }\r\n}\r\n\r\nfunction* handleDislikeAnswer(action) {\r\n    // yield delay(500);\r\n\r\n    const { questionId, objId, answerId } = action.payload;\r\n    // console.log(\"1538\", questionId, objId, answerId);\r\n    try {\r\n        setAuth(localStorage[\"access_token\"]);\r\n        const res = yield call(() =>\r\n            thisAxios(API_FORUM, POST, \"dislike/answer\", {\r\n                questionId,\r\n                answerId,\r\n                objId,\r\n            })\r\n        );\r\n        if (res.data.success) {\r\n            yield put(\r\n                dislikeAnswer.dislikeAnswerSuccess({\r\n                    dislike: res.data.dislike,\r\n                    cancelDislike: res.data.cancelDislike,\r\n                    likes: res.data.likes,\r\n                    dislikes: res.data.dislikes,\r\n                })\r\n            );\r\n            // console.log(\"Like\", res.data.dislike);\r\n        }\r\n    } catch (err) {\r\n        // console.log(\"err\", err);\r\n    }\r\n}\r\n\r\nfunction* handleBan(action) {\r\n    const question = action.payload;\r\n    const {\r\n        objId,\r\n        user: { email, name },\r\n    } = question;\r\n    yield put(setProgress(true));\r\n\r\n    yield delay(1200);\r\n    try {\r\n        const res = yield call(() =>\r\n            thisAxios(API_FORUM, POST, \"ban\", { objId, email, name })\r\n        );\r\n        if (res.data.success) {\r\n            yield put(setProgress(false));\r\n\r\n            yield put(ban.banSuccess(res.data.message));\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            yield put(setProgress(false));\r\n            yield put(ban.banFailure(err.response.data.message));\r\n            // console.log(\"err\", err);\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleUnban(action) {\r\n    const question = action.payload;\r\n    const { objId } = question;\r\n    yield put(setProgress(true));\r\n\r\n    yield delay(1200);\r\n    try {\r\n        const res = yield call(() =>\r\n            thisAxios(API_FORUM, POST, \"unban\", { objId })\r\n        );\r\n        if (res.data.success) {\r\n            yield put(setProgress(false));\r\n\r\n            yield put(unban.unbanSuccess(res.data.message));\r\n        }\r\n    } catch (err) {\r\n        if (err.response.data) {\r\n            yield put(setProgress(false));\r\n            yield put(unban.unbanFailure(err.response.data.message));\r\n            // console.log(\"err\", err);\r\n        }\r\n    }\r\n}\r\n\r\nfunction* rootSaga() {\r\n    yield fork(handleGetCode);\r\n    yield takeLatest(\r\n        openModalShare.openModalShareRequest().type,\r\n        handleOpenModalShare\r\n    );\r\n    yield takeLatest(\"CHECK_LOGIN\", handleCheckLogin);\r\n    yield takeLatest(LOGIN, handleLogin);\r\n    yield takeLatest(register.registerRequest().type, handleRegister);\r\n    yield takeLatest(UPDATE_CODE, handleUpdate);\r\n    yield takeLatest(\"DIRECT_TO_CODE\", handleDirect);\r\n    yield takeLatest(\"LOGOUT\", handleLogout);\r\n    yield takeLatest(\"GET_PROJECTS\", handleGetProjects);\r\n    yield takeLatest(\"CHANGE_NAME\", handleChangeName);\r\n    yield takeLatest(\"DELETE_PROJECT\", handleDelete);\r\n    yield takeLatest(ggLogin.ggLoginRequest().type, handleGGLogin);\r\n    yield takeLatest(fbLogin.fbLoginRequest().type, handleFBLogin);\r\n    yield takeLatest(OPEN_MODAL_SUCCESS, handleOpenModal);\r\n    yield takeLatest(\r\n        getShareCode.getShareCodeRequest().type,\r\n        handleGetShareCode\r\n    );\r\n\r\n    yield takeLatest(\r\n        updateProfile.updateProfileRequest().type,\r\n        handleUpdateProfile\r\n    );\r\n\r\n    yield takeLatest(getProfile.getProfileRequest().type, handleGetProfile);\r\n    yield takeLatest(\r\n        verifyUrlRecover.verifyUrlRecoverRequest().type,\r\n        handleVerifyUrl\r\n    );\r\n    yield takeLatest(\r\n        checkLastPwd.checkLastPwdRequest().type,\r\n        handleCheckLastPwd\r\n    );\r\n    yield takeLatest(\r\n        recoverPassword.recoverPasswordRequest().type,\r\n        handleRecoverPassword\r\n    );\r\n    yield takeLatest(\r\n        createThread.createThreadRequest().type,\r\n        handleCreateThread\r\n    );\r\n    yield takeLatest(getThreads.getThreadsRequest().type, handleGetThreads);\r\n    yield takeLatest(\r\n        createAnswer.createAnswerRequest().type,\r\n        handleCreateAnswer\r\n    );\r\n    yield takeLatest(\r\n        updateAnswer.updateAnswerRequest().type,\r\n        handleUpdateAnswer\r\n    );\r\n    yield takeLatest(\r\n        deleteAnswer.deleteAnswerRequest().type,\r\n        handleDeleteAnswer\r\n    );\r\n    yield takeLatest(\r\n        updateThread.updateThreadRequest().type,\r\n        handleUpdateThread\r\n    );\r\n    yield takeLatest(\r\n        deleteThread.deleteThreadRequest().type,\r\n        handleDeleteThread\r\n    );\r\n\r\n    yield takeLatest(\r\n        setViewThread.setViewThreadRequest().type,\r\n        handleSetViewThread\r\n    );\r\n\r\n    yield takeLatest(like.likeRequest().type, handleLike);\r\n    yield takeLatest(dislike.dislikeRequest().type, handleDislike);\r\n\r\n    yield takeLatest(likeAnswer.likeAnswerRequest().type, handleLikeAnswer);\r\n    yield takeLatest(\r\n        dislikeAnswer.dislikeAnswerRequest().type,\r\n        handleDislikeAnswer\r\n    );\r\n\r\n    yield takeLatest(ban.banRequest().type, handleBan);\r\n    yield takeLatest(unban.unbanRequest().type, handleUnban);\r\n}\r\n\r\nexport default rootSaga;\r\n","const GET_CODE = \"GET_CODE\";\r\nconst UPDATE_CODE = \"UPDATE_CODE\";\r\n\r\nexport {\r\n    GET_CODE,\r\n    UPDATE_CODE\r\n}","import { GET_CODE, UPDATE_CODE } from \"../../constant/code\";\r\n\r\nconst initialState = {\r\n    codeData: {\r\n        html: \"\",\r\n        css: \"\",\r\n        js: \"\",\r\n        q: null,\r\n        name: null,\r\n    },\r\n    projects: [],\r\n    isAuthenticated: false,\r\n    error: null,\r\n    url: \"code\",\r\n    isChanging: false,\r\n    isDeleting: false,\r\n};\r\n\r\nconst codeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_CODE: {\r\n            const { html, css, js } = action.payload;\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case \"SET_ERROR\": {\r\n            const error = action.payload;\r\n            return {\r\n                ...state,\r\n                error,\r\n            };\r\n        }\r\n\r\n        case \"SET_CODE\": {\r\n            const { name, html, css, js } = action.payload;\r\n            console.log(\"CATCHED:\", action.payload);\r\n            return {\r\n                ...state,\r\n                codeData: {\r\n                    ...state.codeData,\r\n                    html,\r\n                    css,\r\n                    js,\r\n                    name,\r\n                },\r\n            };\r\n        }\r\n\r\n        case \"GET_PROJECTS\": {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n\r\n        case \"GET_PROJECTS_SUCCESS\": {\r\n            const projects = action.payload;\r\n            return {\r\n                ...state,\r\n                projects: [...projects],\r\n            };\r\n        }\r\n\r\n        case \"SET_URL\": {\r\n            const url = action.payload;\r\n            return {\r\n                ...state,\r\n                url,\r\n            };\r\n        }\r\n\r\n        case \"SET_IS_CHANGING\": {\r\n            const isChanging = action.payload;\r\n            return {\r\n                ...state,\r\n                isChanging,\r\n            };\r\n        }\r\n\r\n        case \"CHANGE_NAME\": {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n\r\n        case \"CHANGE_NAME_SUCCESS\": {\r\n            const name = action.payload;\r\n            return {\r\n                ...state,\r\n                codeData: {\r\n                    ...state.codeData,\r\n                    name,\r\n                },\r\n                isChanging: false,\r\n            };\r\n        }\r\n\r\n        case \"SET_IS_DELETING\": {\r\n            return {\r\n                ...state,\r\n                isDeleting: action.payload,\r\n            };\r\n        }\r\n        // case \"DELETE_PROJECT\": {\r\n        //     return {\r\n        //         ...state,\r\n        //     };\r\n        // }\r\n        case \"DELETE_PROJECT_SUCCESS\": {\r\n            let projects = state.projects.map(project => project._id !== action.payload._id)\r\n            console.log(\"projects:\", projects);\r\n            return {\r\n                ...state,\r\n                projects,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default codeReducer;\r\n","import {\r\n    fbLogin,\r\n    ggLogin,\r\n    setAdmin,\r\n    setErrorStatus,\r\n    setObjId,\r\n    setPicture,\r\n    updateFID,\r\n    updateGID,\r\n    updateUID,\r\n} from \"../../actions/login\";\r\nimport {\r\n    LOGIN,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILED,\r\n    SET_ERROR_LOGIN,\r\n} from \"../../constant/login\";\r\n\r\nconst initialState = {\r\n    account: {\r\n        name: null,\r\n        picture: null,\r\n        uid: null,\r\n        objId: null,\r\n        isAdmin: false,\r\n    },\r\n    isAuthenticated: false,\r\n    error: null,\r\n    errorStatus: false,\r\n    nameCode: null,\r\n    ggAccountInfo: {\r\n        gid: null,\r\n        email: null,\r\n        picture: null,\r\n        name: null,\r\n        access_token: null,\r\n    },\r\n    fbAccountInfo: {\r\n        fid: null,\r\n        email: null,\r\n        phone: null,\r\n        name: null,\r\n    },\r\n};\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // case \"CHECK_LOGIN\": {\r\n        //     const name = action.payload;\r\n        //     return {\r\n        //         ...state,\r\n        //         account: {\r\n        //             ...state.account,\r\n        //             name,\r\n        //         },\r\n        //         isAuthenticated: true,\r\n        //         error: null,\r\n        //     };\r\n        // }\r\n        case LOGIN_SUCCESS: {\r\n            const name = action.payload;\r\n            return {\r\n                ...state,\r\n                account: {\r\n                    ...state.account,\r\n                    name,\r\n                },\r\n                isAuthenticated: true,\r\n                error: null,\r\n            };\r\n        }\r\n        case setPicture.setPictureRequest().type: {\r\n            return {\r\n                ...state,\r\n                account: {\r\n                    ...state.account,\r\n                    picture: action.payload,\r\n                },\r\n            };\r\n        }\r\n        case LOGIN_FAILED: {\r\n            const err = action.payload;\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                error: err.message,\r\n            };\r\n        }\r\n        case SET_ERROR_LOGIN: {\r\n            const err = action.payload;\r\n            return {\r\n                ...state,\r\n                error: err,\r\n            };\r\n        }\r\n        case \"SET_NAME_CODE\": {\r\n            const nameCode = action.payload;\r\n            // console.log(\"Day la nameCode:\", nameCode);\r\n            return {\r\n                ...state,\r\n                nameCode,\r\n            };\r\n        }\r\n        case \"LOGOUT_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                nameCode: null,\r\n                account: {\r\n                    ...state.account,\r\n                    name: null,\r\n                    picture: null,\r\n                    uid: null,\r\n                    objId: null,\r\n                    isAdmin: false,\r\n                },\r\n                ggAccountInfo: {\r\n                    gid: null,\r\n                    email: null,\r\n                    picture: null,\r\n                    name: null,\r\n                    access_token: null,\r\n                },\r\n                fbAccountInfo: {\r\n                    fid: null,\r\n                    email: null,\r\n                    phone: null,\r\n                    name: null,\r\n                },\r\n            };\r\n        }\r\n\r\n        case ggLogin.ggLoginSuccess().type: {\r\n            console.log(action.payload, \"ne\");\r\n            return {\r\n                ...state,\r\n                ggAccountInfo: {\r\n                    ...state.ggAccountInfo,\r\n                    ...action.payload,\r\n                },\r\n                account: {\r\n                    ...state.account,\r\n                    name: action.payload.name,\r\n                    picture: action.payload.picture,\r\n                },\r\n                isAuthenticated: true,\r\n                err: null,\r\n            };\r\n        }\r\n\r\n        case fbLogin.fbLoginSuccess().type: {\r\n            console.log(action.payload, \"ne\");\r\n            return {\r\n                ...state,\r\n                ggAccountInfo: {\r\n                    ...state.ggAccountInfo,\r\n                    ...action.payload,\r\n                },\r\n                account: {\r\n                    ...state.account,\r\n                    name: action.payload.name,\r\n                    picture: action.payload.picture,\r\n                },\r\n                fbAccountInfo: {\r\n                    ...state.fbAccountInfo,\r\n                    ...action.payload,\r\n                },\r\n                isAuthenticated: true,\r\n                err: null,\r\n            };\r\n        }\r\n\r\n        case setErrorStatus.setErrorStatusRequest().type: {\r\n            return {\r\n                ...state,\r\n                errorStatus: action.payload,\r\n            };\r\n        }\r\n\r\n        case updateFID.updateFIDRequest().type: {\r\n            return {\r\n                ...state,\r\n                fbAccountInfo: {\r\n                    ...state.fbAccountInfo,\r\n                    fid: action.payload,\r\n                },\r\n            };\r\n        }\r\n\r\n        case updateGID.updateGIDRequest().type: {\r\n            return {\r\n                ...state,\r\n                ggAccountInfo: {\r\n                    ...state.ggAccountInfo,\r\n                    gid: action.payload,\r\n                },\r\n            };\r\n        }\r\n\r\n        case updateUID.updateUIDRequest().type: {\r\n            return {\r\n                ...state,\r\n                account: {\r\n                    ...state.account,\r\n                    uid: action.payload,\r\n                },\r\n            };\r\n        }\r\n\r\n        case setObjId.setObjIdSuccess().type: {\r\n            return {\r\n                ...state,\r\n                account: {\r\n                    ...state.account,\r\n                    objId: action.payload,\r\n                },\r\n            };\r\n        }\r\n\r\n        case setAdmin.setAdminSuccess().type: {\r\n            return {\r\n                ...state,\r\n                account: {\r\n                    ...state.account,\r\n                    isAdmin: action.payload,\r\n                },\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default loginReducer;\r\n","import { OPEN_MODAL, CLOSE_MODAL, OPEN_MODAL_SUCCESS, SET_PROGRESS } from \"../../constant/modal\";\r\n\r\nconst initialState = {\r\n    modalIsOpen: false,\r\n    progress: false,\r\n    isLoading: false,\r\n};\r\n\r\nconst modalReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case OPEN_MODAL: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case OPEN_MODAL_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                modalIsOpen: true,\r\n            }\r\n        }\r\n        case CLOSE_MODAL: {\r\n            return {\r\n                ...state,\r\n                modalIsOpen: false,\r\n            };\r\n        }\r\n\r\n        case SET_PROGRESS: { \r\n            return {\r\n                ...state,\r\n                progress: action.payload\r\n            }\r\n        }\r\n        case \"SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default modalReducer;\r\n","import { openModalShare } from \"../../actions/modalShareCode\";\r\n\r\nconst initialState = {\r\n    modalShareIsOpen: false,\r\n    link: null,\r\n    progress: false,\r\n    isLoading: false,\r\n};\r\n\r\nconst modalShareReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case openModalShare.openModalShareRequest().type: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        }\r\n        case openModalShare.openModalShareSuccess().type: {\r\n            return {\r\n                ...state,\r\n                modalShareIsOpen: true,\r\n                isLoading: false,\r\n                link: action.payload,\r\n            };\r\n        }\r\n        case openModalShare.openModalShareFailure().type: {\r\n            return {\r\n                ...state,\r\n                modalShareIsOpen: false,\r\n                isLoading: false,\r\n                link: null,\r\n            };\r\n        }\r\n\r\n        // case SET_PROGRESS: {\r\n        //     return {\r\n        //         ...state,\r\n        //         progress: action.payload,\r\n        //     };\r\n        // }\r\n        // case \"SET_LOADING\": {\r\n        //     return {\r\n        //         ...state,\r\n        //         isLoading: action.payload,\r\n        //     };\r\n        // }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default modalShareReducer;\r\n","import {\r\n    setListTutorial,\r\n    setLocation,\r\n    setOpen,\r\n    setSidebar,\r\n} from \"../../actions/tutorial\";\r\n\r\nconst initialState = {\r\n    open: false,\r\n    tutorialList: null,\r\n    // location: null,\r\n    location: null,\r\n    openSidebar: false,\r\n    \r\n    locationNav: \"\",\r\n};\r\n\r\nconst tutorialReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case setOpen.setOpen().type: {\r\n            return {\r\n                ...state,\r\n                open: action.payload,\r\n            };\r\n        }\r\n        case setListTutorial.setListTutorial().type: {\r\n            return {\r\n                ...state,\r\n                tutorialList: action.payload,\r\n            };\r\n        }\r\n        case setLocation.setLocation().type: {\r\n            return {\r\n                ...state,\r\n                location: action.payload,\r\n            };\r\n        }\r\n\r\n        case setSidebar.setSidebar().type: {\r\n            return {\r\n                ...state,\r\n                openSidebar: action.payload,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default tutorialReducer;\r\n","import { direct, verifyUrlRecover } from \"../../actions/direct\";\r\nimport { getProfile, updateProfile } from \"../../actions/profile\";\r\n\r\nconst initialState = {\r\n    time: 0,\r\n    appear: false,\r\n    /** waiting */\r\n    isVerify: true,\r\n    isWaiting: true,\r\n    notify: \"Notify\",\r\n    message: \"\",\r\n};\r\n\r\nconst directReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case direct.directRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case direct.directSuccess().type: {\r\n            return {\r\n                ...state,\r\n                time: action.payload,\r\n                appear: true,\r\n            };\r\n        }\r\n        case direct.directFailure().type: {\r\n            return {\r\n                ...state,\r\n                time: 0,\r\n                appear: action.payload || false,\r\n            };\r\n        }\r\n\r\n        case verifyUrlRecover.verifyUrlRecoverRequest().type: {\r\n            return {\r\n                ...state,\r\n                isVerify: action.payload.isVerify,\r\n                isWaiting: true,\r\n            };\r\n        }\r\n\r\n        case getProfile.getProfileRequest().type: {\r\n            return {\r\n                ...state,\r\n                isVerify: action.payload.isVerify,\r\n                isWaiting: true,\r\n            };\r\n        }\r\n\r\n        case updateProfile.updateProfileRequest().type: {\r\n            return {\r\n                ...state,\r\n                isVerify: action.payload.isVerify,\r\n                isWaiting: true,\r\n            };\r\n        }\r\n\r\n        case verifyUrlRecover.verifyUrlRecoverSuccess().type: {\r\n            return {\r\n                ...state,\r\n                isVerify: action.payload.isVerify,\r\n                isWaiting: action.payload.isWaiting,\r\n                message: action.payload.message,\r\n            };\r\n        }\r\n        case verifyUrlRecover.verifyUrlRecoverFailure().type: {\r\n            return {\r\n                ...state,\r\n                isVerify: action.payload,\r\n                isWaiting: false,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default directReducer;\r\n","import { updateProfile } from \"../../actions/profile\";\r\n\r\nconst initialState = {\r\n    profile: {\r\n        email: \"\",\r\n        name: \"\",\r\n        picture: \"\",\r\n        password: \"\",\r\n        country: \"\",\r\n        phone: \"\",\r\n        job: \"\",\r\n    },\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case updateProfile.updateProfileRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case updateProfile.updateProfileSuccess().type: {\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    ...action.payload,\r\n                },\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default profileReducer;\r\n","import { getShareCode } from \"../../actions/getShareCode\";\r\nimport { openModalShare } from \"../../actions/modalShareCode\";\r\n\r\nconst initialState = {\r\n    // modalShareIsOpen: false,\r\n    isLoading: true,\r\n};\r\n\r\nconst getShareCodeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case getShareCode.getShareCodeRequest().type: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        }\r\n        case getShareCode.getShareCodeSuccess().type: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            };\r\n        }\r\n        case getShareCode.getShareCodeFailure().type: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default getShareCodeReducer;\r\n","import { setFullScreen, setLargeScreen, setView } from \"../../actions/view\";\r\n\r\nconst initialState = {\r\n    status: false,\r\n    fullScreen: false,\r\n    largeScreen: false,\r\n};\r\n\r\nconst viewReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case setView.setViewRequest().type: {\r\n            return {\r\n                ...state,\r\n                status: true,\r\n            };\r\n        }\r\n        case setView.setViewSuccess().type: {\r\n            return {\r\n                ...state,\r\n                status: action.payload,\r\n                fullScreen: false,\r\n                largeScreen: false,\r\n            };\r\n        }\r\n        case setView.setViewFailure().type: {\r\n            return {\r\n                ...state,\r\n                status: false,\r\n            };\r\n        }\r\n\r\n        case setFullScreen.setFullScreenRequest().type: {\r\n            return {\r\n                ...state,\r\n                status: true,\r\n                fullScreen: true,\r\n            };\r\n        }\r\n        case setFullScreen.setFullScreenSuccess().type: {\r\n            return {\r\n                ...state,\r\n                status: false,\r\n                fullScreen: true,\r\n                \r\n                largeScreen: false,\r\n            };\r\n        }\r\n        case setFullScreen.setFullScreenFailure().type: {\r\n            return {\r\n                ...state,\r\n                fullScreen: false,\r\n                status: true,\r\n            };\r\n        }\r\n\r\n        case setLargeScreen.setLargeScreenSuccess().type: {\r\n            return {\r\n                ...state,\r\n                status: true,\r\n                largeScreen: action.payload,\r\n                fullScreen: false,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default viewReducer;\r\n","import {\r\n    createAnswer,\r\n    createThread,\r\n    deleteAnswer,\r\n    deleteThread,\r\n    dislike,\r\n    dislikeAnswer,\r\n    getThreads,\r\n    like,\r\n    likeAnswer,\r\n    openDeleteThreadModal,\r\n    openModalDeleteAnswer,\r\n    setBan,\r\n    setBanModal,\r\n    setCircleProgress,\r\n    setDeleteSuccess,\r\n    // setLoading,\r\n    setLoadingForum,\r\n    setNotify,\r\n    setOpenAskModal,\r\n    setQuestion,\r\n    setQuestionLoadingForum,\r\n    setThread,\r\n    setUnbanModal,\r\n    // setView,\r\n    setViewThread,\r\n    updateAnswer,\r\n    updateThread,\r\n    ban,\r\n    unban,\r\n    setBanAnswerModal,\r\n} from \"../../actions/forum\";\r\nimport moment from \"moment-timezone\";\r\n\r\nconst initialState = {\r\n    // modalShareIsOpen: false,\r\n    open: false,\r\n    threads: [],\r\n    notify: \"\",\r\n    error: false,\r\n    isLoading: true,\r\n    isQuestionLoading: true,\r\n    answers: [],\r\n    question: null,\r\n    isCircleProgress: false,\r\n    deleteAnswerModal: false,\r\n    deleteSuccess: false,\r\n    isOpenDeleteThreadModal: false,\r\n    likes: [],\r\n    dislikes: [],\r\n    isBanned: false,\r\n    banModal: false,\r\n    unbanModal: false,\r\n    banAnswerModal: false,\r\n};\r\n\r\nconst forumReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case setOpenAskModal.setOpenAskModalRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case setOpenAskModal.setOpenAskModalSuccess().type: {\r\n            return {\r\n                ...state,\r\n                open: action.payload,\r\n            };\r\n        }\r\n        case setOpenAskModal.setOpenAskModalFailure().type: {\r\n            return {\r\n                ...state,\r\n                open: false,\r\n            };\r\n        }\r\n\r\n        case setNotify.setNotifyRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case setNotify.setNotifySuccess().type: {\r\n            return {\r\n                ...state,\r\n                notify: action.payload,\r\n            };\r\n        }\r\n        case setNotify.setNotifyFailure().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n\r\n        case createThread.createThreadRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case createThread.createThreadSuccess().type: {\r\n            // const x = state.threads.unshift(action.payload);\r\n            return {\r\n                ...state,\r\n                notify: \"Your question has been posted successfully\",\r\n                error: false,\r\n                threads: state.threads,\r\n            };\r\n        }\r\n        case createThread.createThreadFailure().type: {\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                notify: action.payload,\r\n            };\r\n        }\r\n\r\n        case getThreads.getThreadsRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case getThreads.getThreadsSuccess().type: {\r\n            const { threads, answers, likes, dislikes } = action.payload;\r\n            const threadsReverse = threads.reverse();\r\n            const answersDescSort = answers.sort((a, b) => {\r\n                return b.likes - a.likes;\r\n            });\r\n            return {\r\n                ...state,\r\n                threads: threadsReverse,\r\n                answers: answersDescSort,\r\n                likes,\r\n                dislikes,\r\n            };\r\n        }\r\n        case getThreads.getThreadsFailure().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n\r\n        case setLoadingForum.setLoadingForumRequest().type: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        }\r\n        case setLoadingForum.setLoadingForumSuccess().type: {\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload,\r\n            };\r\n        }\r\n        case setLoadingForum.setLoadingForumFailure().type: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            };\r\n        }\r\n\r\n        case setQuestionLoadingForum.setQuestionLoadingForumRequest().type: {\r\n            return {\r\n                ...state,\r\n                isQuestionLoading: true,\r\n            };\r\n        }\r\n        case setQuestionLoadingForum.setQuestionLoadingForumSuccess().type: {\r\n            return {\r\n                ...state,\r\n                isQuestionLoading: action.payload,\r\n            };\r\n        }\r\n        case setQuestionLoadingForum.setQuestionLoadingForumFailure().type: {\r\n            return {\r\n                ...state,\r\n                isQuestionLoading: false,\r\n            };\r\n        }\r\n\r\n        case setQuestion.setQuestionRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case setQuestion.setQuestionSuccess().type: {\r\n            return {\r\n                ...state,\r\n                question: action.payload,\r\n            };\r\n        }\r\n        case setQuestion.setQuestionFailure().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n\r\n        case createAnswer.createAnswerRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case createAnswer.createAnswerSuccess().type: {\r\n            const answer = action.payload;\r\n\r\n            const threads = state.threads.map((thread) => {\r\n                if (thread._id === answer.questionId) {\r\n                    return {\r\n                        ...thread,\r\n                        replies: thread.replies + 1,\r\n                    };\r\n                } else return thread;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                notify: \"Your answer has been posted! Check it out\",\r\n                error: false,\r\n                answers: state.answers.concat(answer),\r\n                threads,\r\n            };\r\n        }\r\n        case createAnswer.createAnswerFailure().type: {\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                notify: action.payload,\r\n            };\r\n        }\r\n\r\n        case setCircleProgress.setCircleProgressRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case setCircleProgress.setCircleProgressSuccess().type: {\r\n            return {\r\n                ...state,\r\n                isCircleProgress: action.payload,\r\n            };\r\n        }\r\n        case setCircleProgress.setCircleProgressFailure().type: {\r\n            return {\r\n                ...state,\r\n                isCircleProgress: false,\r\n            };\r\n        }\r\n\r\n        case updateAnswer.updateAnswerRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case updateAnswer.updateAnswerSuccess().type: {\r\n            const answerUpdated = action.payload;\r\n            const answers = state.answers.map((answer) =>\r\n                answer._id === answerUpdated._id ? answerUpdated : answer\r\n            );\r\n            return {\r\n                ...state,\r\n                notify: \"Your answer has been updated! Check it out\",\r\n                error: false,\r\n                answers,\r\n            };\r\n        }\r\n        case updateAnswer.updateAnswerFailure().type: {\r\n            return {\r\n                ...state,\r\n                notify: action.payload,\r\n                error: true,\r\n            };\r\n        }\r\n\r\n        case deleteAnswer.deleteAnswerRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case deleteAnswer.deleteAnswerSuccess().type: {\r\n            const deletedAnswer = action.payload;\r\n            console.log(\"In ForumReducer 259\", deletedAnswer);\r\n            const answers = state.answers.filter(\r\n                (answer) => answer._id !== deletedAnswer._id && answer\r\n            );\r\n            const threads = state.threads.map((thread) => {\r\n                if (thread._id === deletedAnswer.questionId) {\r\n                    return {\r\n                        ...thread,\r\n                        replies: thread.replies - 1,\r\n                    };\r\n                } else return thread;\r\n            });\r\n            return {\r\n                ...state,\r\n                notify: \"Your answer has been removed! Check it out\",\r\n                error: false,\r\n                answers,\r\n                deleteSuccess: true,\r\n                threads,\r\n            };\r\n        }\r\n        case deleteAnswer.deleteAnswerFailure().type: {\r\n            return {\r\n                ...state,\r\n                notify: action.payload,\r\n                error: true,\r\n                deleteSuccess: false,\r\n            };\r\n        }\r\n\r\n        case openModalDeleteAnswer.openModalDeleteAnswerSuccess().type: {\r\n            return {\r\n                ...state,\r\n                deleteAnswerModal: action.payload,\r\n            };\r\n        }\r\n\r\n        case setDeleteSuccess.setDeleteSuccessSuccess().type: {\r\n            return {\r\n                ...state,\r\n                deleteSuccess: action.payload,\r\n            };\r\n        }\r\n\r\n        case updateThread.updateThreadSuccess().type: {\r\n            const updatedThread = action.payload;\r\n            const threads = state.threads.map((thread) =>\r\n                thread._id === updatedThread._id ? updatedThread : thread\r\n            );\r\n            return {\r\n                ...state,\r\n                notify: \"Your question has been updated successfully! Check it out\",\r\n                error: false,\r\n                threads: threads,\r\n            };\r\n        }\r\n        case updateThread.updateThreadFailure().type: {\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                notify: action.payload,\r\n            };\r\n        }\r\n\r\n        case deleteThread.deleteThreadSuccess().type: {\r\n            const {\r\n                deletedThread,\r\n                //  deletedAnswers\r\n            } = action.payload;\r\n            const threads = state.threads.filter(\r\n                (thread) => thread._id !== deletedThread._id && thread\r\n            );\r\n            // const answers = state.answers.filter();\r\n            return {\r\n                ...state,\r\n                // notify: \"Your question has been removed! Check it out\",\r\n                error: false,\r\n                threads,\r\n                isOpenDeleteThreadModal: false,\r\n                // question: null,\r\n                // answers,\r\n            };\r\n        }\r\n        case deleteThread.deleteThreadFailure().type: {\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                notify: action.payload,\r\n            };\r\n        }\r\n\r\n        case openDeleteThreadModal.openDeleteThreadModalSuccess().type: {\r\n            return {\r\n                ...state,\r\n                isOpenDeleteThreadModal: action.payload,\r\n            };\r\n        }\r\n\r\n        case setViewThread.setViewThreadRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case setViewThread.setViewThreadSuccess().type: {\r\n            const id = action.payload;\r\n            const threads = state.threads.map((thread) => {\r\n                if (thread._id === id) {\r\n                    return {\r\n                        ...thread,\r\n                        views: thread.views + 1,\r\n                    };\r\n                } else {\r\n                    return thread;\r\n                }\r\n            });\r\n            return {\r\n                ...state,\r\n                threads,\r\n            };\r\n        }\r\n\r\n        case like.likeRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case like.likeSuccess().type: {\r\n            const { likes, dislikes } = action.payload;\r\n            const like = action.payload.like ? action.payload.like : null;\r\n            const cancelLike = action.payload.cancelLike\r\n                ? action.payload.cancelLike\r\n                : null;\r\n            return {\r\n                ...state,\r\n                dislikes: dislikes,\r\n                // state.dislikes.length > 0 &&\r\n                // state.dislikes.filter(\r\n                //     (dislike) =>\r\n                //         like.objId !== dislike.objId &&\r\n                //         like.questionId !== dislike.questionId &&\r\n                //         dislike.answerId === \"\" &&\r\n                //         dislike\r\n                // ),\r\n\r\n                likes: likes,\r\n                // !cancelLike\r\n                //     ? state.likes.concat(action.payload.like)\r\n                //     : state.likes.filter(\r\n                //           (like) =>\r\n                //               like.questionId !== cancelLike.questionId &&\r\n                //               like.objId !== cancelLike.objId &&\r\n                //               like.answerId === \"\" &&\r\n                //               like\r\n                //       ),\r\n                threads:\r\n                    like && !like.answerId && !cancelLike\r\n                        ? state.threads.map((thread) => {\r\n                              if (\r\n                                  like.questionId === thread._id &&\r\n                                  like.answerId === \"\"\r\n                              ) {\r\n                                  return {\r\n                                      ...thread,\r\n                                      likes: thread.likes + 1,\r\n                                      dislikes:\r\n                                          state.dislikes.findIndex(\r\n                                              (dislike) =>\r\n                                                  like.objId ===\r\n                                                      dislike.objId &&\r\n                                                  like.questionId ===\r\n                                                      dislike.questionId &&\r\n                                                  dislike.answerId === \"\"\r\n                                          ) >= 0\r\n                                              ? thread.dislikes + 1\r\n                                              : thread.dislikes,\r\n                                      //   dislikes: state.dislikes.findIndex(dislike => dislike.questionId === thread._id) >= 0 ? thread.dislikes + 1 : thread.dislikes\r\n                                  };\r\n                              } else return thread;\r\n                          })\r\n                        : cancelLike\r\n                        ? state.threads.map((thread) => {\r\n                              console.log(\"cancellike reducer\", cancelLike);\r\n                              if (cancelLike.questionId === thread._id) {\r\n                                  return {\r\n                                      ...thread,\r\n                                      likes: thread.likes - 1,\r\n                                  };\r\n                              } else return thread;\r\n                          })\r\n                        : state.threads,\r\n                // answers:\r\n                //     like && like.answerId && !cancelLike\r\n                //         ? state.answers.map((answer) => {\r\n                //               if (like.questionId === answer._id) {\r\n                //                   return {\r\n                //                       ...answer,\r\n                //                       likes: answer.likes + 1,\r\n                //                       dislikes:\r\n                //                           state.dislikes.findIndex(\r\n                //                               (dislike) =>\r\n                //                                   like.objId ===\r\n                //                                       dislike.objId &&\r\n                //                                   like.questionId ===\r\n                //                                       dislike.questionId\r\n                //                           ) >= 0\r\n                //                               ? answer.dislikes + 1\r\n                //                               : answer.dislikes,\r\n                //                       //   dislikes: state.dislikes.findIndex(dislike => dislike.questionId === answer._id) >= 0 ? answer.dislikes + 1 : answer.dislikes\r\n                //                   };\r\n                //               } else return answer;\r\n                //           })\r\n                //         : cancelLike\r\n                //         ? state.answers.map((answer) => {\r\n                //               console.log(\"cancellike reducer\", cancelLike);\r\n                //               if (cancelLike.questionId === answer._id) {\r\n                //                   return {\r\n                //                       ...answer,\r\n                //                       likes: answer.likes - 1,\r\n                //                   };\r\n                //               } else return answer;\r\n                //           })\r\n                //         : state.answers,\r\n            };\r\n        }\r\n\r\n        case dislike.dislikeRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case dislike.dislikeSuccess().type: {\r\n            const { likes, dislikes } = action.payload;\r\n            const dislike = action.payload.dislike\r\n                ? action.payload.dislike\r\n                : null;\r\n            const cancelDislike = action.payload.cancelDislike\r\n                ? action.payload.cancelDislike\r\n                : null;\r\n            return {\r\n                ...state,\r\n                likes: likes,\r\n                // state.likes.filter(\r\n                //     (like) =>\r\n                //         like.objId !== dislike.objId &&\r\n                //         like.questionId !== dislike.questionId &&\r\n                //         like.answerId === \"\" &&\r\n                //         like\r\n                // ),\r\n                dislikes: dislikes,\r\n                // !cancelDislike\r\n                //     ? state.dislikes.concat(action.payload.dislike)\r\n                //     : state.dislikes.filter(\r\n                //           (dislike) =>\r\n                //               dislike.questionId !== cancelDislike.questionId &&\r\n                //               dislike.objId !== cancelDislike.objId &&\r\n                //               dislike.answerId === \"\" &&\r\n                //               dislike\r\n                //       ),\r\n                threads:\r\n                    dislike && !dislike.answerId && !cancelDislike\r\n                        ? state.threads.map((thread) => {\r\n                              if (\r\n                                  dislike.questionId === thread._id &&\r\n                                  dislike.answerId === \"\"\r\n                              ) {\r\n                                  return {\r\n                                      ...thread,\r\n                                      dislikes: thread.dislikes - 1,\r\n                                      likes:\r\n                                          state.likes.findIndex(\r\n                                              (like) =>\r\n                                                  like.objId ===\r\n                                                      dislike.objId &&\r\n                                                  like.questionId ===\r\n                                                      dislike.questionId &&\r\n                                                  like.answerId === \"\"\r\n                                          ) >= 0\r\n                                              ? thread.likes - 1\r\n                                              : thread.likes,\r\n                                      //   likes: state.likes.findIndex(like => like.questionId === thread._id && like.objId === dislike.objId) >= 0 ? thread.likes - 1 : thread.likes\r\n                                  };\r\n                              } else return thread;\r\n                          })\r\n                        : cancelDislike\r\n                        ? state.threads.map((thread) => {\r\n                              if (cancelDislike.questionId === thread._id) {\r\n                                  return {\r\n                                      ...thread,\r\n                                      dislikes: thread.dislikes + 1,\r\n                                  };\r\n                              } else return thread;\r\n                          })\r\n                        : state.threads,\r\n                // answers:\r\n                //     dislike && dislike.answerId && !cancelDislike\r\n                //         ? state.answers.map((answer) => {\r\n                //               if (dislike.questionId === answer._id) {\r\n                //                   return {\r\n                //                       ...answer,\r\n                //                       dislikes: answer.dislikes - 1,\r\n                //                       likes:\r\n                //                           state.likes.findIndex(\r\n                //                               (like) =>\r\n                //                                   like.objId ===\r\n                //                                       dislike.objId &&\r\n                //                                   like.questionId ===\r\n                //                                       dislike.questionId\r\n                //                           ) >= 0\r\n                //                               ? answer.likes - 1\r\n                //                               : answer.likes,\r\n                //                   };\r\n                //               } else return answer;\r\n                //           })\r\n                //         : cancelDislike\r\n                //         ? state.answers.map((answer) => {\r\n                //               if (cancelDislike.questionId === answer._id) {\r\n                //                   return {\r\n                //                       ...answer,\r\n                //                       dislikes: answer.dislikes + 1,\r\n                //                   };\r\n                //               } else return answer;\r\n                //           })\r\n                //         : state.answers,\r\n            };\r\n        }\r\n\r\n        case likeAnswer.likeAnswerSuccess().type: {\r\n            const like = action.payload.like ? action.payload.like : null;\r\n            const cancelLike = action.payload.cancelLike\r\n                ? action.payload.cancelLike\r\n                : null;\r\n            return {\r\n                ...state,\r\n                dislikes: action.payload.dislikes,\r\n\r\n                likes: action.payload.likes,\r\n                answers:\r\n                    like && like.answerId && !cancelLike\r\n                        ? state.answers.map((answer) => {\r\n                              if (\r\n                                  like.questionId === answer.questionId &&\r\n                                  like.answerId === answer._id\r\n                              ) {\r\n                                  return {\r\n                                      ...answer,\r\n                                      likes: answer.likes + 1,\r\n                                      dislikes:\r\n                                          state.dislikes.findIndex(\r\n                                              (dislike) =>\r\n                                                  like.objId ===\r\n                                                      dislike.objId &&\r\n                                                  like.questionId ===\r\n                                                      dislike.questionId &&\r\n                                                  like.answerId ===\r\n                                                      dislike.answerId\r\n                                          ) >= 0\r\n                                              ? answer.dislikes + 1\r\n                                              : answer.dislikes,\r\n                                      //   dislikes: state.dislikes.findIndex(dislike => dislike.questionId === answer._id) >= 0 ? answer.dislikes + 1 : answer.dislikes\r\n                                  };\r\n                              } else return answer;\r\n                          })\r\n                        : cancelLike\r\n                        ? state.answers.map((answer) => {\r\n                              console.log(\"cancellike reducer\", cancelLike);\r\n                              if (\r\n                                  cancelLike.questionId === answer.questionId &&\r\n                                  cancelLike.answerId === answer._id\r\n                              ) {\r\n                                  return {\r\n                                      ...answer,\r\n                                      likes: answer.likes - 1,\r\n                                  };\r\n                              } else return answer;\r\n                          })\r\n                        : state.answers,\r\n            };\r\n        }\r\n\r\n        case dislikeAnswer.dislikeAnswerSuccess().type: {\r\n            const dislike = action.payload.dislike\r\n                ? action.payload.dislike\r\n                : null;\r\n            const cancelDislike = action.payload.cancelDislike\r\n                ? action.payload.cancelDislike\r\n                : null;\r\n            return {\r\n                ...state,\r\n                dislikes: action.payload.dislikes,\r\n\r\n                likes: action.payload.likes,\r\n                answers:\r\n                    dislike && dislike.answerId && !cancelDislike\r\n                        ? state.answers.map((answer) => {\r\n                              if (\r\n                                  dislike.questionId === answer.questionId &&\r\n                                  dislike.answerId === answer._id\r\n                              ) {\r\n                                  return {\r\n                                      ...answer,\r\n                                      dislikes: answer.dislikes - 1,\r\n                                      likes:\r\n                                          state.likes.findIndex(\r\n                                              (like) =>\r\n                                                  like.objId ===\r\n                                                      dislike.objId &&\r\n                                                  like.questionId ===\r\n                                                      dislike.questionId &&\r\n                                                  like.answerId ===\r\n                                                      dislike.answerId\r\n                                          ) >= 0\r\n                                              ? answer.likes - 1\r\n                                              : answer.likes,\r\n                                      //   likes: state.likes.findIndex(like => like.questionId === thread._id && like.objId === dislike.objId) >= 0 ? thread.likes - 1 : thread.likes\r\n                                  };\r\n                              } else return answer;\r\n                          })\r\n                        : cancelDislike\r\n                        ? state.answers.map((answer) => {\r\n                              if (\r\n                                  cancelDislike.answerId === answer._id &&\r\n                                  answer.questionId === cancelDislike.questionId\r\n                              ) {\r\n                                  return {\r\n                                      ...answer,\r\n                                      dislikes: answer.dislikes + 1,\r\n                                  };\r\n                              } else return answer;\r\n                          })\r\n                        : state.answers,\r\n            };\r\n        }\r\n\r\n        case setThread.setThreadSuccess().type: {\r\n            const { key } = action.payload;\r\n            var threads;\r\n            if (key === \"N\") {\r\n                threads = state.threads.sort((a, b) => {\r\n                    return moment(b.createdAt)\r\n                        .tz(\"Asia/Ho_Chi_Minh\")\r\n                        .diff(moment(a.createdAt).tz(\"Asia/Bangkok\"));\r\n                });\r\n            } else if (key === \"L\") {\r\n                threads = state.threads.sort((a, b) => {\r\n                    return a.likes === b.likes\r\n                        ? b.views + b.likes - (a.views + a.likes)\r\n                        : b.likes - a.likes;\r\n                });\r\n            } else if (key === \"U\") {\r\n                threads = state.threads.sort((a, b) => {\r\n                    return a.replies === b.replies\r\n                        ? a.replies + b.views - (b.replies + a.views)\r\n                        : a.replies - b.replies;\r\n                });\r\n            }\r\n            return {\r\n                ...state,\r\n                threads,\r\n            };\r\n        }\r\n\r\n        case setBan.setBanSuccess().type: {\r\n            return {\r\n                ...state,\r\n                isBanned: action.payload,\r\n            };\r\n        }\r\n\r\n        case setBanModal.setBanModalSuccess().type: {\r\n            return {\r\n                ...state,\r\n                banModal: action.payload,\r\n            };\r\n        }\r\n\r\n        case setBanAnswerModal.setBanAnswerModalSuccess().type: {\r\n            return {\r\n                ...state,\r\n                banAnswerModal: action.payload,\r\n            };\r\n        }\r\n\r\n        case setUnbanModal.setUnbanModalSuccess().type: {\r\n            return {\r\n                ...state,\r\n                unbanModal: action.payload,\r\n            };\r\n        }\r\n\r\n        case ban.banSuccess().type: {\r\n            return {\r\n                ...state,\r\n                notify: action.payload,\r\n                error: false,\r\n            };\r\n        }\r\n        case ban.banFailure().type: {\r\n            return {\r\n                ...state,\r\n                notify: action.payload,\r\n                error: false,\r\n            };\r\n        }\r\n\r\n        case unban.unbanSuccess().type: {\r\n            return {\r\n                ...state,\r\n                notify: action.payload,\r\n                error: false,\r\n            };\r\n        }\r\n        case unban.unbanFailure().type: {\r\n            return {\r\n                ...state,\r\n                notify: action.payload,\r\n                error: false,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default forumReducer;\r\n","import {\r\n    openMessenger,\r\n    setAllMess,\r\n    setCurrentObj,\r\n    setDisplay,\r\n    setFriends,\r\n    setId,\r\n    setImageWillBeShow,\r\n    setMess,\r\n    setMessage,\r\n    setUpdateSeen,\r\n    setViewMessenger,\r\n} from \"../../actions/messenger\";\r\n\r\nconst initialState = {\r\n    message: \"\",\r\n    mess: [],\r\n    id: \"\",\r\n    friends: [],\r\n    online: false,\r\n    currentObj: {},\r\n    currentMess: [],\r\n    display: false,\r\n    imageWillBeShow: \"\",\r\n    openImageModal: false,\r\n    blocklist: [],\r\n    myObj: {},\r\n    viewMessenger: 0,\r\n    isOpenMessenger: false,\r\n    arrDisplay: [],\r\n};\r\n\r\nconst messengerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case setMessage.setMessageRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case setMessage.setMessageSuccess().type: {\r\n            const message = action.payload;\r\n            return {\r\n                ...state,\r\n                message,\r\n            };\r\n        }\r\n\r\n        case setId.setIdRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case setId.setIdSuccess().type: {\r\n            const id = action.payload;\r\n            return {\r\n                ...state,\r\n                id,\r\n            };\r\n        }\r\n\r\n        case setMess.setMessRequest().type: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case setMess.setMessSuccess().type: {\r\n            return {\r\n                ...state,\r\n                mess: state.mess.concat(action.payload),\r\n            };\r\n        }\r\n\r\n        case setAllMess.setAllMessSuccess().type: {\r\n            return {\r\n                ...state,\r\n                mess: action.payload,\r\n            };\r\n        }\r\n\r\n        case setCurrentObj.setCurrentObjSuccess().type: {\r\n            const objId = action.payload;\r\n            const currentObj = state.friends.find((ele) => ele.objId === objId);\r\n            // const currentMess = state.mess.filter(\r\n            //     (mes) =>\r\n            //         mes.objIds.includes(state.id) && mes.objIds.includes(objId) && mes\r\n            // );\r\n            return {\r\n                ...state,\r\n                currentObj,\r\n                // currentMess,\r\n            };\r\n        }\r\n\r\n        case setFriends.setFriendsSuccess().type: {\r\n            let friends = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                friends,\r\n            };\r\n        }\r\n\r\n        case setDisplay.setDisplaySuccess().type: {\r\n            return {\r\n                ...state,\r\n                display: action.payload,\r\n            };\r\n        }\r\n\r\n        case setImageWillBeShow.setImageWillBeShowSuccess().type: {\r\n            return {\r\n                ...state,\r\n                imageWillBeShow: action.payload,\r\n                openImageModal: true,\r\n            };\r\n        }\r\n        case setImageWillBeShow.setImageWillBeShowFailure().type: {\r\n            return {\r\n                ...state,\r\n                imageWillBeShow: \"\",\r\n                openImageModal: false,\r\n            };\r\n        }\r\n\r\n        case setUpdateSeen.setUpdateSeenSuccess().type: {\r\n            return {\r\n                ...state,\r\n                mess: action.payload,\r\n            };\r\n        }\r\n\r\n        case setViewMessenger.setViewMessengerSuccess().type: {\r\n            return {\r\n                ...state,\r\n                viewMessenger: action.payload,\r\n            };\r\n        }\r\n\r\n        case openMessenger.openMessengerSuccess().type: {\r\n            return {\r\n                ...state,\r\n                isOpenMessenger: action.payload,\r\n                viewMessenger: 0,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default messengerReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../saga/rootSaga\";\r\nimport codeReducer from \"./reducers/codeReducer\";\r\nimport loginReducer from \"./reducers/loginReducer\";\r\nimport modalReducer from \"./reducers/modalReducer\";\r\nimport modalShareReducer from \"./reducers/modalShareReducer\";\r\nimport tutorialReducer from \"./reducers/tutorialReducer\";\r\nimport directReducer from \"./reducers/directReducer\";\r\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\r\nimport { history } from \"../components/App\";\r\nimport profileReducer from \"./reducers/profileReducer\";\r\nimport getShareCodeReducer from \"./reducers/getShareCodeReducer\";\r\nimport viewReducer from \"./reducers/viewReducer\";\r\nimport forumReducer from \"./reducers/forumReducer\";\r\nimport messengerReducer from \"./reducers/messengerReducer\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst reducer = combineReducers({\r\n    code: codeReducer,\r\n    modal: modalReducer,\r\n    auth: loginReducer,\r\n    tutorial: tutorialReducer,\r\n    direct: directReducer,\r\n    profile: profileReducer,\r\n    modalShare: modalShareReducer,\r\n    getShareCode: getShareCodeReducer,\r\n    view: viewReducer,\r\n    forum: forumReducer,\r\n    messenger: messengerReducer,\r\n    router: connectRouter(history),\r\n});\r\n\r\nconst config = () => {\r\n    const store = configureStore({\r\n        reducer,\r\n        middleware: [sagaMiddleware, routerMiddleware(history)],\r\n    });\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\nconst store = config();\r\n\r\nexport default store;\r\n","import { createTheme } from \"@mui/material/styles\";\r\n\r\nconst theme = createTheme({\r\n  color: {\r\n    primary: \"#D32F2F\",\r\n    secondary: \"#00BCD4\",\r\n    error: \"#E64A19\",\r\n    textColor: \"#FFFFFF\",\r\n    defaultTextColor: `#000000`,\r\n    hover: `rgba(0, 0, 0, 0.08)`,\r\n  },\r\n  typoraphy: {\r\n    fontFamily: \"Roboto\",\r\n  },\r\n  shape: {\r\n    borderRadius: 4,\r\n    background: \"#512DA8\",\r\n    color: \"#FFFFFF\",\r\n    borderColor: \"#CCCCCC\",\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { ThemeProvider } from \"@mui/styles\";\r\nimport theme from \"./common/theme/theme.js\";\r\nimport { CssBaseline } from \"@mui/material\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n    // StylesProvider,\r\n    // createGenerateClassName,\r\n} from \"@mui/styles\";\r\n// const generateClassName = createGenerateClassName({\r\n//     productionPrefix: \"cApp\",\r\n//     seed: \"ABC\",\r\n// });\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            {/* <StylesProvider generateClassName={generateClassName}> */}\r\n            <ThemeProvider theme={theme}>\r\n                <CssBaseline />\r\n                <App />\r\n            </ThemeProvider>\r\n            {/* </StylesProvider> */}\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}